// Code generated by 'internal/generators/letter'; DO NOT EDIT.
//go:generate go run ./internal/generators/letter -pkg std -name XYZWA -nameL xyzwa -cmpts X,Y,Z,W,A -cmptsL x,y,z,w,a -out xyzwa.go
package std

import (
	"core/sys/name/format"
	"core/sys/num"
	"core/sys/num/bounded"
	"core/sys/support"
	"fmt"
)

// XYZWA is a 5D vector of like-typed bounded.Number components.
//
// NOTE: If you'd like asymmetric types, please see XYZWATyped.
type XYZWA[T num.Primitive] = XYZWATyped[T, T, T, T, T]

// XYZWATyped is a 5D vector of asymmetrically typed bounded.Number components.
//
// NOTE: If you'd like symmetric types, please see XYZWA.
type XYZWATyped[TX num.Primitive, TY num.Primitive, TZ num.Primitive, TW num.Primitive, TA num.Primitive] struct {
	Entity
	X bounded.Number[TX]
	Y bounded.Number[TY]
	Z bounded.Number[TZ]
	W bounded.Number[TW]
	A bounded.Number[TA]
}

func NewXYZWA[T num.Primitive]() XYZWA[T] {
	return XYZWA[T](NewXYZWATyped[T, T, T, T, T]())
}

func NewXYZWATyped[TX num.Primitive, TY num.Primitive, TZ num.Primitive, TW num.Primitive, TA num.Primitive]() XYZWATyped[TX, TY, TZ, TW, TA] {
	minX := num.MinValue[TX]()
	maxX := num.MaxValue[TX]()
	minY := num.MinValue[TY]()
	maxY := num.MaxValue[TY]()
	minZ := num.MinValue[TZ]()
	maxZ := num.MaxValue[TZ]()
	minW := num.MinValue[TW]()
	maxW := num.MaxValue[TW]()
	minA := num.MinValue[TA]()
	maxA := num.MaxValue[TA]()

	c := XYZWATyped[TX, TY, TZ, TW, TA]{}
	c.Entity = NewEntity[format.Default]()
	c.SetBoundaries(minX, maxX, minY, maxY, minZ, maxZ, minW, maxW, minA, maxA)
	return c
}

func (_v XYZWATyped[TX, TY, TZ, TW, TA]) String() string {
	if support.AllSameTypes(TX(0), TY(0), TZ(0), TW(0), TA(0)) {
		return fmt.Sprintf("xyzwa[%T].{%v, %v, %v, %v, %v}(%v)", TX(0), _v.X.ValueString(), _v.Y.ValueString(), _v.Z.ValueString(), _v.W.ValueString(), _v.A.ValueString(), _v.GivenName.Name)
	}
	return fmt.Sprintf("xyzwa[%T, %T, %T, %T, %T].{%v, %v, %v, %v, %v}(%v)", TX(0), TY(0), TZ(0), TW(0), TA(0), _v.X.ValueString(), _v.Y.ValueString(), _v.Z.ValueString(), _v.W.ValueString(), _v.A.ValueString(), _v.GivenName.Name)
}

func (_v XYZWATyped[TX, TY, TZ, TW, TA]) Set(x TX, y TY, z TZ, w TW, a TA) XYZWATyped[TX, TY, TZ, TW, TA] {
	_ = _v.X.Set(x)
	_ = _v.Y.Set(y)
	_ = _v.Z.Set(z)
	_ = _v.W.Set(w)
	_ = _v.A.Set(a)
	return _v
}

func (_v XYZWATyped[TX, TY, TZ, TW, TA]) SetClamp(clamp bool) XYZWATyped[TX, TY, TZ, TW, TA] {
	_v.X.Clamp = clamp
	_v.Y.Clamp = clamp
	_v.Z.Clamp = clamp
	_v.W.Clamp = clamp
	_v.A.Clamp = clamp
	return _v
}

func (_v XYZWATyped[TX, TY, TZ, TW, TA]) SetBoundaries(minX, maxX TX, minY, maxY TY, minZ, maxZ TZ, minW, maxW TW, minA, maxA TA) XYZWATyped[TX, TY, TZ, TW, TA] {
	_ = _v.X.SetBoundaries(minX, maxX)
	_ = _v.Y.SetBoundaries(minY, maxY)
	_ = _v.Z.SetBoundaries(minZ, maxZ)
	_ = _v.W.SetBoundaries(minW, maxW)
	_ = _v.A.SetBoundaries(minA, maxA)
	return _v
}

/**
Swizzling

	NOTE: This is a regular expression to find and replace swizzle functions into a one-liner if the auto formatter ever kicks in

	Find -
	func \((.*?)\) ([A-Z]{2,4})\(\) \((.*?)\)[ ]*\{[\n\t ]*return(.*?)[\n\t ]*\}

	Replace -
	func ($1) $2() ($3) { return$4 }
*/

func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XX() (TX, TX) { return _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XY() (TX, TY) { return _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZ() (TX, TZ) { return _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XW() (TX, TW) { return _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XA() (TX, TA) { return _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YX() (TY, TX) { return _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YY() (TY, TY) { return _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZ() (TY, TZ) { return _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YW() (TY, TW) { return _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YA() (TY, TA) { return _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZX() (TZ, TX) { return _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZY() (TZ, TY) { return _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZ() (TZ, TZ) { return _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZW() (TZ, TW) { return _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZA() (TZ, TA) { return _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WX() (TW, TX) { return _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WY() (TW, TY) { return _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZ() (TW, TZ) { return _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WW() (TW, TW) { return _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WA() (TW, TA) { return _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AX() (TA, TX) { return _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AY() (TA, TY) { return _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZ() (TA, TZ) { return _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AW() (TA, TW) { return _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AA() (TA, TA) { return _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXX() (TX, TX, TX) { return _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXY() (TX, TX, TY) { return _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXZ() (TX, TX, TZ) { return _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXW() (TX, TX, TW) { return _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXA() (TX, TX, TA) { return _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYX() (TX, TY, TX) { return _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYY() (TX, TY, TY) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYZ() (TX, TY, TZ) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYW() (TX, TY, TW) { return _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYA() (TX, TY, TA) { return _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZX() (TX, TZ, TX) { return _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZY() (TX, TZ, TY) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZZ() (TX, TZ, TZ) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZW() (TX, TZ, TW) { return _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZA() (TX, TZ, TA) { return _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWX() (TX, TW, TX) { return _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWY() (TX, TW, TY) { return _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWZ() (TX, TW, TZ) { return _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWW() (TX, TW, TW) { return _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWA() (TX, TW, TA) { return _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAX() (TX, TA, TX) { return _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAY() (TX, TA, TY) { return _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAZ() (TX, TA, TZ) { return _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAW() (TX, TA, TW) { return _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAA() (TX, TA, TA) { return _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXX() (TY, TX, TX) { return _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXY() (TY, TX, TY) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXZ() (TY, TX, TZ) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXW() (TY, TX, TW) { return _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXA() (TY, TX, TA) { return _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYX() (TY, TY, TX) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYY() (TY, TY, TY) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYZ() (TY, TY, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYW() (TY, TY, TW) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYA() (TY, TY, TA) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZX() (TY, TZ, TX) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZY() (TY, TZ, TY) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZZ() (TY, TZ, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZW() (TY, TZ, TW) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZA() (TY, TZ, TA) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWX() (TY, TW, TX) { return _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWY() (TY, TW, TY) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWZ() (TY, TW, TZ) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWW() (TY, TW, TW) { return _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWA() (TY, TW, TA) { return _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAX() (TY, TA, TX) { return _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAY() (TY, TA, TY) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAZ() (TY, TA, TZ) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAW() (TY, TA, TW) { return _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAA() (TY, TA, TA) { return _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXX() (TZ, TX, TX) { return _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXY() (TZ, TX, TY) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXZ() (TZ, TX, TZ) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXW() (TZ, TX, TW) { return _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXA() (TZ, TX, TA) { return _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYX() (TZ, TY, TX) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYY() (TZ, TY, TY) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYZ() (TZ, TY, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYW() (TZ, TY, TW) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYA() (TZ, TY, TA) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZX() (TZ, TZ, TX) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZY() (TZ, TZ, TY) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZZ() (TZ, TZ, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZW() (TZ, TZ, TW) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZA() (TZ, TZ, TA) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWX() (TZ, TW, TX) { return _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWY() (TZ, TW, TY) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWZ() (TZ, TW, TZ) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWW() (TZ, TW, TW) { return _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWA() (TZ, TW, TA) { return _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAX() (TZ, TA, TX) { return _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAY() (TZ, TA, TY) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAZ() (TZ, TA, TZ) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAW() (TZ, TA, TW) { return _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAA() (TZ, TA, TA) { return _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXX() (TW, TX, TX) { return _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXY() (TW, TX, TY) { return _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXZ() (TW, TX, TZ) { return _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXW() (TW, TX, TW) { return _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXA() (TW, TX, TA) { return _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYX() (TW, TY, TX) { return _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYY() (TW, TY, TY) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYZ() (TW, TY, TZ) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYW() (TW, TY, TW) { return _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYA() (TW, TY, TA) { return _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZX() (TW, TZ, TX) { return _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZY() (TW, TZ, TY) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZZ() (TW, TZ, TZ) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZW() (TW, TZ, TW) { return _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZA() (TW, TZ, TA) { return _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWX() (TW, TW, TX) { return _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWY() (TW, TW, TY) { return _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWZ() (TW, TW, TZ) { return _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWW() (TW, TW, TW) { return _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWA() (TW, TW, TA) { return _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAX() (TW, TA, TX) { return _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAY() (TW, TA, TY) { return _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAZ() (TW, TA, TZ) { return _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAW() (TW, TA, TW) { return _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAA() (TW, TA, TA) { return _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXX() (TA, TX, TX) { return _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXY() (TA, TX, TY) { return _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXZ() (TA, TX, TZ) { return _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXW() (TA, TX, TW) { return _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXA() (TA, TX, TA) { return _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYX() (TA, TY, TX) { return _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYY() (TA, TY, TY) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYZ() (TA, TY, TZ) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYW() (TA, TY, TW) { return _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYA() (TA, TY, TA) { return _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZX() (TA, TZ, TX) { return _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZY() (TA, TZ, TY) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZZ() (TA, TZ, TZ) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZW() (TA, TZ, TW) { return _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZA() (TA, TZ, TA) { return _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWX() (TA, TW, TX) { return _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWY() (TA, TW, TY) { return _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWZ() (TA, TW, TZ) { return _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWW() (TA, TW, TW) { return _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWA() (TA, TW, TA) { return _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAX() (TA, TA, TX) { return _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAY() (TA, TA, TY) { return _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAZ() (TA, TA, TZ) { return _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAW() (TA, TA, TW) { return _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAA() (TA, TA, TA) { return _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXXX() (TX, TX, TX, TX) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXXY() (TX, TX, TX, TY) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXXZ() (TX, TX, TX, TZ) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXXW() (TX, TX, TX, TW) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXXA() (TX, TX, TX, TA) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXYX() (TX, TX, TY, TX) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXYY() (TX, TX, TY, TY) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXYZ() (TX, TX, TY, TZ) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXYW() (TX, TX, TY, TW) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXYA() (TX, TX, TY, TA) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXZX() (TX, TX, TZ, TX) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXZY() (TX, TX, TZ, TY) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXZZ() (TX, TX, TZ, TZ) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXZW() (TX, TX, TZ, TW) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXZA() (TX, TX, TZ, TA) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXWX() (TX, TX, TW, TX) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXWY() (TX, TX, TW, TY) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXWZ() (TX, TX, TW, TZ) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXWW() (TX, TX, TW, TW) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXWA() (TX, TX, TW, TA) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXAX() (TX, TX, TA, TX) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXAY() (TX, TX, TA, TY) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXAZ() (TX, TX, TA, TZ) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXAW() (TX, TX, TA, TW) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXAA() (TX, TX, TA, TA) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYXX() (TX, TY, TX, TX) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYXY() (TX, TY, TX, TY) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYXZ() (TX, TY, TX, TZ) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYXW() (TX, TY, TX, TW) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYXA() (TX, TY, TX, TA) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYYX() (TX, TY, TY, TX) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYYY() (TX, TY, TY, TY) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYYZ() (TX, TY, TY, TZ) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYYW() (TX, TY, TY, TW) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYYA() (TX, TY, TY, TA) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYZX() (TX, TY, TZ, TX) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYZY() (TX, TY, TZ, TY) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYZZ() (TX, TY, TZ, TZ) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYZW() (TX, TY, TZ, TW) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYZA() (TX, TY, TZ, TA) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYWX() (TX, TY, TW, TX) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYWY() (TX, TY, TW, TY) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYWZ() (TX, TY, TW, TZ) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYWW() (TX, TY, TW, TW) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYWA() (TX, TY, TW, TA) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYAX() (TX, TY, TA, TX) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYAY() (TX, TY, TA, TY) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYAZ() (TX, TY, TA, TZ) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYAW() (TX, TY, TA, TW) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYAA() (TX, TY, TA, TA) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZXX() (TX, TZ, TX, TX) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZXY() (TX, TZ, TX, TY) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZXZ() (TX, TZ, TX, TZ) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZXW() (TX, TZ, TX, TW) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZXA() (TX, TZ, TX, TA) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZYX() (TX, TZ, TY, TX) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZYY() (TX, TZ, TY, TY) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZYZ() (TX, TZ, TY, TZ) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZYW() (TX, TZ, TY, TW) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZYA() (TX, TZ, TY, TA) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZZX() (TX, TZ, TZ, TX) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZZY() (TX, TZ, TZ, TY) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZZZ() (TX, TZ, TZ, TZ) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZZW() (TX, TZ, TZ, TW) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZZA() (TX, TZ, TZ, TA) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZWX() (TX, TZ, TW, TX) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZWY() (TX, TZ, TW, TY) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZWZ() (TX, TZ, TW, TZ) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZWW() (TX, TZ, TW, TW) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZWA() (TX, TZ, TW, TA) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZAX() (TX, TZ, TA, TX) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZAY() (TX, TZ, TA, TY) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZAZ() (TX, TZ, TA, TZ) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZAW() (TX, TZ, TA, TW) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZAA() (TX, TZ, TA, TA) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWXX() (TX, TW, TX, TX) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWXY() (TX, TW, TX, TY) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWXZ() (TX, TW, TX, TZ) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWXW() (TX, TW, TX, TW) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWXA() (TX, TW, TX, TA) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWYX() (TX, TW, TY, TX) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWYY() (TX, TW, TY, TY) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWYZ() (TX, TW, TY, TZ) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWYW() (TX, TW, TY, TW) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWYA() (TX, TW, TY, TA) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWZX() (TX, TW, TZ, TX) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWZY() (TX, TW, TZ, TY) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWZZ() (TX, TW, TZ, TZ) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWZW() (TX, TW, TZ, TW) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWZA() (TX, TW, TZ, TA) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWWX() (TX, TW, TW, TX) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWWY() (TX, TW, TW, TY) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWWZ() (TX, TW, TW, TZ) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWWW() (TX, TW, TW, TW) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWWA() (TX, TW, TW, TA) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWAX() (TX, TW, TA, TX) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWAY() (TX, TW, TA, TY) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWAZ() (TX, TW, TA, TZ) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWAW() (TX, TW, TA, TW) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWAA() (TX, TW, TA, TA) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAXX() (TX, TA, TX, TX) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAXY() (TX, TA, TX, TY) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAXZ() (TX, TA, TX, TZ) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAXW() (TX, TA, TX, TW) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAXA() (TX, TA, TX, TA) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAYX() (TX, TA, TY, TX) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAYY() (TX, TA, TY, TY) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAYZ() (TX, TA, TY, TZ) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAYW() (TX, TA, TY, TW) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAYA() (TX, TA, TY, TA) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAZX() (TX, TA, TZ, TX) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAZY() (TX, TA, TZ, TY) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAZZ() (TX, TA, TZ, TZ) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAZW() (TX, TA, TZ, TW) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAZA() (TX, TA, TZ, TA) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAWX() (TX, TA, TW, TX) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAWY() (TX, TA, TW, TY) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAWZ() (TX, TA, TW, TZ) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAWW() (TX, TA, TW, TW) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAWA() (TX, TA, TW, TA) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAAX() (TX, TA, TA, TX) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAAY() (TX, TA, TA, TY) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAAZ() (TX, TA, TA, TZ) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAAW() (TX, TA, TA, TW) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAAA() (TX, TA, TA, TA) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXXX() (TY, TX, TX, TX) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXXY() (TY, TX, TX, TY) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXXZ() (TY, TX, TX, TZ) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXXW() (TY, TX, TX, TW) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXXA() (TY, TX, TX, TA) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXYX() (TY, TX, TY, TX) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXYY() (TY, TX, TY, TY) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXYZ() (TY, TX, TY, TZ) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXYW() (TY, TX, TY, TW) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXYA() (TY, TX, TY, TA) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXZX() (TY, TX, TZ, TX) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXZY() (TY, TX, TZ, TY) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXZZ() (TY, TX, TZ, TZ) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXZW() (TY, TX, TZ, TW) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXZA() (TY, TX, TZ, TA) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXWX() (TY, TX, TW, TX) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXWY() (TY, TX, TW, TY) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXWZ() (TY, TX, TW, TZ) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXWW() (TY, TX, TW, TW) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXWA() (TY, TX, TW, TA) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXAX() (TY, TX, TA, TX) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXAY() (TY, TX, TA, TY) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXAZ() (TY, TX, TA, TZ) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXAW() (TY, TX, TA, TW) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXAA() (TY, TX, TA, TA) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYXX() (TY, TY, TX, TX) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYXY() (TY, TY, TX, TY) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYXZ() (TY, TY, TX, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYXW() (TY, TY, TX, TW) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYXA() (TY, TY, TX, TA) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYYX() (TY, TY, TY, TX) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYYY() (TY, TY, TY, TY) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYYZ() (TY, TY, TY, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYYW() (TY, TY, TY, TW) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYYA() (TY, TY, TY, TA) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYZX() (TY, TY, TZ, TX) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYZY() (TY, TY, TZ, TY) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYZZ() (TY, TY, TZ, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYZW() (TY, TY, TZ, TW) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYZA() (TY, TY, TZ, TA) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYWX() (TY, TY, TW, TX) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYWY() (TY, TY, TW, TY) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYWZ() (TY, TY, TW, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYWW() (TY, TY, TW, TW) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYWA() (TY, TY, TW, TA) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYAX() (TY, TY, TA, TX) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYAY() (TY, TY, TA, TY) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYAZ() (TY, TY, TA, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYAW() (TY, TY, TA, TW) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYAA() (TY, TY, TA, TA) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZXX() (TY, TZ, TX, TX) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZXY() (TY, TZ, TX, TY) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZXZ() (TY, TZ, TX, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZXW() (TY, TZ, TX, TW) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZXA() (TY, TZ, TX, TA) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZYX() (TY, TZ, TY, TX) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZYY() (TY, TZ, TY, TY) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZYZ() (TY, TZ, TY, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZYW() (TY, TZ, TY, TW) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZYA() (TY, TZ, TY, TA) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZZX() (TY, TZ, TZ, TX) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZZY() (TY, TZ, TZ, TY) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZZZ() (TY, TZ, TZ, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZZW() (TY, TZ, TZ, TW) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZZA() (TY, TZ, TZ, TA) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZWX() (TY, TZ, TW, TX) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZWY() (TY, TZ, TW, TY) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZWZ() (TY, TZ, TW, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZWW() (TY, TZ, TW, TW) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZWA() (TY, TZ, TW, TA) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZAX() (TY, TZ, TA, TX) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZAY() (TY, TZ, TA, TY) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZAZ() (TY, TZ, TA, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZAW() (TY, TZ, TA, TW) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZAA() (TY, TZ, TA, TA) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWXX() (TY, TW, TX, TX) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWXY() (TY, TW, TX, TY) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWXZ() (TY, TW, TX, TZ) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWXW() (TY, TW, TX, TW) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWXA() (TY, TW, TX, TA) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWYX() (TY, TW, TY, TX) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWYY() (TY, TW, TY, TY) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWYZ() (TY, TW, TY, TZ) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWYW() (TY, TW, TY, TW) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWYA() (TY, TW, TY, TA) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWZX() (TY, TW, TZ, TX) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWZY() (TY, TW, TZ, TY) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWZZ() (TY, TW, TZ, TZ) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWZW() (TY, TW, TZ, TW) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWZA() (TY, TW, TZ, TA) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWWX() (TY, TW, TW, TX) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWWY() (TY, TW, TW, TY) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWWZ() (TY, TW, TW, TZ) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWWW() (TY, TW, TW, TW) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWWA() (TY, TW, TW, TA) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWAX() (TY, TW, TA, TX) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWAY() (TY, TW, TA, TY) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWAZ() (TY, TW, TA, TZ) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWAW() (TY, TW, TA, TW) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWAA() (TY, TW, TA, TA) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAXX() (TY, TA, TX, TX) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAXY() (TY, TA, TX, TY) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAXZ() (TY, TA, TX, TZ) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAXW() (TY, TA, TX, TW) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAXA() (TY, TA, TX, TA) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAYX() (TY, TA, TY, TX) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAYY() (TY, TA, TY, TY) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAYZ() (TY, TA, TY, TZ) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAYW() (TY, TA, TY, TW) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAYA() (TY, TA, TY, TA) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAZX() (TY, TA, TZ, TX) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAZY() (TY, TA, TZ, TY) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAZZ() (TY, TA, TZ, TZ) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAZW() (TY, TA, TZ, TW) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAZA() (TY, TA, TZ, TA) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAWX() (TY, TA, TW, TX) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAWY() (TY, TA, TW, TY) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAWZ() (TY, TA, TW, TZ) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAWW() (TY, TA, TW, TW) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAWA() (TY, TA, TW, TA) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAAX() (TY, TA, TA, TX) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAAY() (TY, TA, TA, TY) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAAZ() (TY, TA, TA, TZ) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAAW() (TY, TA, TA, TW) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAAA() (TY, TA, TA, TA) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXXX() (TZ, TX, TX, TX) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXXY() (TZ, TX, TX, TY) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXXZ() (TZ, TX, TX, TZ) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXXW() (TZ, TX, TX, TW) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXXA() (TZ, TX, TX, TA) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXYX() (TZ, TX, TY, TX) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXYY() (TZ, TX, TY, TY) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXYZ() (TZ, TX, TY, TZ) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXYW() (TZ, TX, TY, TW) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXYA() (TZ, TX, TY, TA) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXZX() (TZ, TX, TZ, TX) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXZY() (TZ, TX, TZ, TY) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXZZ() (TZ, TX, TZ, TZ) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXZW() (TZ, TX, TZ, TW) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXZA() (TZ, TX, TZ, TA) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXWX() (TZ, TX, TW, TX) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXWY() (TZ, TX, TW, TY) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXWZ() (TZ, TX, TW, TZ) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXWW() (TZ, TX, TW, TW) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXWA() (TZ, TX, TW, TA) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXAX() (TZ, TX, TA, TX) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXAY() (TZ, TX, TA, TY) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXAZ() (TZ, TX, TA, TZ) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXAW() (TZ, TX, TA, TW) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXAA() (TZ, TX, TA, TA) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYXX() (TZ, TY, TX, TX) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYXY() (TZ, TY, TX, TY) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYXZ() (TZ, TY, TX, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYXW() (TZ, TY, TX, TW) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYXA() (TZ, TY, TX, TA) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYYX() (TZ, TY, TY, TX) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYYY() (TZ, TY, TY, TY) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYYZ() (TZ, TY, TY, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYYW() (TZ, TY, TY, TW) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYYA() (TZ, TY, TY, TA) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYZX() (TZ, TY, TZ, TX) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYZY() (TZ, TY, TZ, TY) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYZZ() (TZ, TY, TZ, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYZW() (TZ, TY, TZ, TW) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYZA() (TZ, TY, TZ, TA) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYWX() (TZ, TY, TW, TX) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYWY() (TZ, TY, TW, TY) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYWZ() (TZ, TY, TW, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYWW() (TZ, TY, TW, TW) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYWA() (TZ, TY, TW, TA) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYAX() (TZ, TY, TA, TX) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYAY() (TZ, TY, TA, TY) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYAZ() (TZ, TY, TA, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYAW() (TZ, TY, TA, TW) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYAA() (TZ, TY, TA, TA) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZXX() (TZ, TZ, TX, TX) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZXY() (TZ, TZ, TX, TY) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZXZ() (TZ, TZ, TX, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZXW() (TZ, TZ, TX, TW) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZXA() (TZ, TZ, TX, TA) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZYX() (TZ, TZ, TY, TX) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZYY() (TZ, TZ, TY, TY) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZYZ() (TZ, TZ, TY, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZYW() (TZ, TZ, TY, TW) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZYA() (TZ, TZ, TY, TA) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZZX() (TZ, TZ, TZ, TX) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZZY() (TZ, TZ, TZ, TY) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZZZ() (TZ, TZ, TZ, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZZW() (TZ, TZ, TZ, TW) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZZA() (TZ, TZ, TZ, TA) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZWX() (TZ, TZ, TW, TX) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZWY() (TZ, TZ, TW, TY) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZWZ() (TZ, TZ, TW, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZWW() (TZ, TZ, TW, TW) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZWA() (TZ, TZ, TW, TA) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZAX() (TZ, TZ, TA, TX) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZAY() (TZ, TZ, TA, TY) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZAZ() (TZ, TZ, TA, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZAW() (TZ, TZ, TA, TW) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZAA() (TZ, TZ, TA, TA) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWXX() (TZ, TW, TX, TX) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWXY() (TZ, TW, TX, TY) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWXZ() (TZ, TW, TX, TZ) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWXW() (TZ, TW, TX, TW) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWXA() (TZ, TW, TX, TA) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWYX() (TZ, TW, TY, TX) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWYY() (TZ, TW, TY, TY) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWYZ() (TZ, TW, TY, TZ) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWYW() (TZ, TW, TY, TW) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWYA() (TZ, TW, TY, TA) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWZX() (TZ, TW, TZ, TX) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWZY() (TZ, TW, TZ, TY) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWZZ() (TZ, TW, TZ, TZ) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWZW() (TZ, TW, TZ, TW) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWZA() (TZ, TW, TZ, TA) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWWX() (TZ, TW, TW, TX) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWWY() (TZ, TW, TW, TY) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWWZ() (TZ, TW, TW, TZ) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWWW() (TZ, TW, TW, TW) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWWA() (TZ, TW, TW, TA) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWAX() (TZ, TW, TA, TX) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWAY() (TZ, TW, TA, TY) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWAZ() (TZ, TW, TA, TZ) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWAW() (TZ, TW, TA, TW) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWAA() (TZ, TW, TA, TA) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAXX() (TZ, TA, TX, TX) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAXY() (TZ, TA, TX, TY) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAXZ() (TZ, TA, TX, TZ) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAXW() (TZ, TA, TX, TW) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAXA() (TZ, TA, TX, TA) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAYX() (TZ, TA, TY, TX) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAYY() (TZ, TA, TY, TY) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAYZ() (TZ, TA, TY, TZ) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAYW() (TZ, TA, TY, TW) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAYA() (TZ, TA, TY, TA) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAZX() (TZ, TA, TZ, TX) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAZY() (TZ, TA, TZ, TY) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAZZ() (TZ, TA, TZ, TZ) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAZW() (TZ, TA, TZ, TW) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAZA() (TZ, TA, TZ, TA) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAWX() (TZ, TA, TW, TX) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAWY() (TZ, TA, TW, TY) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAWZ() (TZ, TA, TW, TZ) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAWW() (TZ, TA, TW, TW) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAWA() (TZ, TA, TW, TA) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAAX() (TZ, TA, TA, TX) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAAY() (TZ, TA, TA, TY) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAAZ() (TZ, TA, TA, TZ) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAAW() (TZ, TA, TA, TW) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAAA() (TZ, TA, TA, TA) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXXX() (TW, TX, TX, TX) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXXY() (TW, TX, TX, TY) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXXZ() (TW, TX, TX, TZ) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXXW() (TW, TX, TX, TW) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXXA() (TW, TX, TX, TA) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXYX() (TW, TX, TY, TX) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXYY() (TW, TX, TY, TY) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXYZ() (TW, TX, TY, TZ) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXYW() (TW, TX, TY, TW) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXYA() (TW, TX, TY, TA) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXZX() (TW, TX, TZ, TX) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXZY() (TW, TX, TZ, TY) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXZZ() (TW, TX, TZ, TZ) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXZW() (TW, TX, TZ, TW) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXZA() (TW, TX, TZ, TA) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXWX() (TW, TX, TW, TX) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXWY() (TW, TX, TW, TY) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXWZ() (TW, TX, TW, TZ) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXWW() (TW, TX, TW, TW) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXWA() (TW, TX, TW, TA) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXAX() (TW, TX, TA, TX) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXAY() (TW, TX, TA, TY) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXAZ() (TW, TX, TA, TZ) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXAW() (TW, TX, TA, TW) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXAA() (TW, TX, TA, TA) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYXX() (TW, TY, TX, TX) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYXY() (TW, TY, TX, TY) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYXZ() (TW, TY, TX, TZ) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYXW() (TW, TY, TX, TW) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYXA() (TW, TY, TX, TA) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYYX() (TW, TY, TY, TX) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYYY() (TW, TY, TY, TY) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYYZ() (TW, TY, TY, TZ) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYYW() (TW, TY, TY, TW) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYYA() (TW, TY, TY, TA) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYZX() (TW, TY, TZ, TX) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYZY() (TW, TY, TZ, TY) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYZZ() (TW, TY, TZ, TZ) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYZW() (TW, TY, TZ, TW) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYZA() (TW, TY, TZ, TA) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYWX() (TW, TY, TW, TX) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYWY() (TW, TY, TW, TY) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYWZ() (TW, TY, TW, TZ) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYWW() (TW, TY, TW, TW) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYWA() (TW, TY, TW, TA) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYAX() (TW, TY, TA, TX) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYAY() (TW, TY, TA, TY) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYAZ() (TW, TY, TA, TZ) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYAW() (TW, TY, TA, TW) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYAA() (TW, TY, TA, TA) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZXX() (TW, TZ, TX, TX) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZXY() (TW, TZ, TX, TY) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZXZ() (TW, TZ, TX, TZ) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZXW() (TW, TZ, TX, TW) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZXA() (TW, TZ, TX, TA) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZYX() (TW, TZ, TY, TX) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZYY() (TW, TZ, TY, TY) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZYZ() (TW, TZ, TY, TZ) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZYW() (TW, TZ, TY, TW) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZYA() (TW, TZ, TY, TA) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZZX() (TW, TZ, TZ, TX) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZZY() (TW, TZ, TZ, TY) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZZZ() (TW, TZ, TZ, TZ) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZZW() (TW, TZ, TZ, TW) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZZA() (TW, TZ, TZ, TA) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZWX() (TW, TZ, TW, TX) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZWY() (TW, TZ, TW, TY) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZWZ() (TW, TZ, TW, TZ) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZWW() (TW, TZ, TW, TW) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZWA() (TW, TZ, TW, TA) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZAX() (TW, TZ, TA, TX) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZAY() (TW, TZ, TA, TY) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZAZ() (TW, TZ, TA, TZ) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZAW() (TW, TZ, TA, TW) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZAA() (TW, TZ, TA, TA) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWXX() (TW, TW, TX, TX) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWXY() (TW, TW, TX, TY) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWXZ() (TW, TW, TX, TZ) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWXW() (TW, TW, TX, TW) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWXA() (TW, TW, TX, TA) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWYX() (TW, TW, TY, TX) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWYY() (TW, TW, TY, TY) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWYZ() (TW, TW, TY, TZ) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWYW() (TW, TW, TY, TW) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWYA() (TW, TW, TY, TA) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWZX() (TW, TW, TZ, TX) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWZY() (TW, TW, TZ, TY) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWZZ() (TW, TW, TZ, TZ) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWZW() (TW, TW, TZ, TW) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWZA() (TW, TW, TZ, TA) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWWX() (TW, TW, TW, TX) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWWY() (TW, TW, TW, TY) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWWZ() (TW, TW, TW, TZ) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWWW() (TW, TW, TW, TW) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWWA() (TW, TW, TW, TA) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWAX() (TW, TW, TA, TX) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWAY() (TW, TW, TA, TY) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWAZ() (TW, TW, TA, TZ) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWAW() (TW, TW, TA, TW) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWAA() (TW, TW, TA, TA) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAXX() (TW, TA, TX, TX) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAXY() (TW, TA, TX, TY) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAXZ() (TW, TA, TX, TZ) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAXW() (TW, TA, TX, TW) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAXA() (TW, TA, TX, TA) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAYX() (TW, TA, TY, TX) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAYY() (TW, TA, TY, TY) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAYZ() (TW, TA, TY, TZ) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAYW() (TW, TA, TY, TW) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAYA() (TW, TA, TY, TA) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAZX() (TW, TA, TZ, TX) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAZY() (TW, TA, TZ, TY) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAZZ() (TW, TA, TZ, TZ) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAZW() (TW, TA, TZ, TW) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAZA() (TW, TA, TZ, TA) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAWX() (TW, TA, TW, TX) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAWY() (TW, TA, TW, TY) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAWZ() (TW, TA, TW, TZ) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAWW() (TW, TA, TW, TW) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAWA() (TW, TA, TW, TA) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAAX() (TW, TA, TA, TX) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAAY() (TW, TA, TA, TY) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAAZ() (TW, TA, TA, TZ) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAAW() (TW, TA, TA, TW) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAAA() (TW, TA, TA, TA) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXXX() (TA, TX, TX, TX) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXXY() (TA, TX, TX, TY) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXXZ() (TA, TX, TX, TZ) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXXW() (TA, TX, TX, TW) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXXA() (TA, TX, TX, TA) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXYX() (TA, TX, TY, TX) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXYY() (TA, TX, TY, TY) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXYZ() (TA, TX, TY, TZ) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXYW() (TA, TX, TY, TW) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXYA() (TA, TX, TY, TA) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXZX() (TA, TX, TZ, TX) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXZY() (TA, TX, TZ, TY) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXZZ() (TA, TX, TZ, TZ) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXZW() (TA, TX, TZ, TW) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXZA() (TA, TX, TZ, TA) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXWX() (TA, TX, TW, TX) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXWY() (TA, TX, TW, TY) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXWZ() (TA, TX, TW, TZ) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXWW() (TA, TX, TW, TW) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXWA() (TA, TX, TW, TA) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXAX() (TA, TX, TA, TX) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXAY() (TA, TX, TA, TY) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXAZ() (TA, TX, TA, TZ) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXAW() (TA, TX, TA, TW) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXAA() (TA, TX, TA, TA) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYXX() (TA, TY, TX, TX) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYXY() (TA, TY, TX, TY) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYXZ() (TA, TY, TX, TZ) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYXW() (TA, TY, TX, TW) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYXA() (TA, TY, TX, TA) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYYX() (TA, TY, TY, TX) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYYY() (TA, TY, TY, TY) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYYZ() (TA, TY, TY, TZ) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYYW() (TA, TY, TY, TW) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYYA() (TA, TY, TY, TA) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYZX() (TA, TY, TZ, TX) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYZY() (TA, TY, TZ, TY) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYZZ() (TA, TY, TZ, TZ) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYZW() (TA, TY, TZ, TW) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYZA() (TA, TY, TZ, TA) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYWX() (TA, TY, TW, TX) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYWY() (TA, TY, TW, TY) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYWZ() (TA, TY, TW, TZ) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYWW() (TA, TY, TW, TW) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYWA() (TA, TY, TW, TA) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYAX() (TA, TY, TA, TX) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYAY() (TA, TY, TA, TY) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYAZ() (TA, TY, TA, TZ) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYAW() (TA, TY, TA, TW) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYAA() (TA, TY, TA, TA) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZXX() (TA, TZ, TX, TX) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZXY() (TA, TZ, TX, TY) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZXZ() (TA, TZ, TX, TZ) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZXW() (TA, TZ, TX, TW) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZXA() (TA, TZ, TX, TA) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZYX() (TA, TZ, TY, TX) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZYY() (TA, TZ, TY, TY) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZYZ() (TA, TZ, TY, TZ) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZYW() (TA, TZ, TY, TW) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZYA() (TA, TZ, TY, TA) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZZX() (TA, TZ, TZ, TX) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZZY() (TA, TZ, TZ, TY) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZZZ() (TA, TZ, TZ, TZ) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZZW() (TA, TZ, TZ, TW) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZZA() (TA, TZ, TZ, TA) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZWX() (TA, TZ, TW, TX) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZWY() (TA, TZ, TW, TY) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZWZ() (TA, TZ, TW, TZ) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZWW() (TA, TZ, TW, TW) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZWA() (TA, TZ, TW, TA) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZAX() (TA, TZ, TA, TX) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZAY() (TA, TZ, TA, TY) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZAZ() (TA, TZ, TA, TZ) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZAW() (TA, TZ, TA, TW) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZAA() (TA, TZ, TA, TA) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWXX() (TA, TW, TX, TX) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWXY() (TA, TW, TX, TY) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWXZ() (TA, TW, TX, TZ) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWXW() (TA, TW, TX, TW) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWXA() (TA, TW, TX, TA) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWYX() (TA, TW, TY, TX) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWYY() (TA, TW, TY, TY) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWYZ() (TA, TW, TY, TZ) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWYW() (TA, TW, TY, TW) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWYA() (TA, TW, TY, TA) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWZX() (TA, TW, TZ, TX) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWZY() (TA, TW, TZ, TY) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWZZ() (TA, TW, TZ, TZ) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWZW() (TA, TW, TZ, TW) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWZA() (TA, TW, TZ, TA) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWWX() (TA, TW, TW, TX) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWWY() (TA, TW, TW, TY) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWWZ() (TA, TW, TW, TZ) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWWW() (TA, TW, TW, TW) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWWA() (TA, TW, TW, TA) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWAX() (TA, TW, TA, TX) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWAY() (TA, TW, TA, TY) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWAZ() (TA, TW, TA, TZ) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWAW() (TA, TW, TA, TW) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWAA() (TA, TW, TA, TA) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAXX() (TA, TA, TX, TX) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAXY() (TA, TA, TX, TY) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAXZ() (TA, TA, TX, TZ) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAXW() (TA, TA, TX, TW) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAXA() (TA, TA, TX, TA) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAYX() (TA, TA, TY, TX) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAYY() (TA, TA, TY, TY) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAYZ() (TA, TA, TY, TZ) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAYW() (TA, TA, TY, TW) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAYA() (TA, TA, TY, TA) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAZX() (TA, TA, TZ, TX) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAZY() (TA, TA, TZ, TY) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAZZ() (TA, TA, TZ, TZ) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAZW() (TA, TA, TZ, TW) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAZA() (TA, TA, TZ, TA) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAWX() (TA, TA, TW, TX) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAWY() (TA, TA, TW, TY) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAWZ() (TA, TA, TW, TZ) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAWW() (TA, TA, TW, TW) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAWA() (TA, TA, TW, TA) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAAX() (TA, TA, TA, TX) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAAY() (TA, TA, TA, TY) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAAZ() (TA, TA, TA, TZ) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAAW() (TA, TA, TA, TW) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAAA() (TA, TA, TA, TA) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXXXX() (TX, TX, TX, TX, TX) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXXXY() (TX, TX, TX, TX, TY) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXXXZ() (TX, TX, TX, TX, TZ) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXXXW() (TX, TX, TX, TX, TW) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXXXA() (TX, TX, TX, TX, TA) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXXYX() (TX, TX, TX, TY, TX) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXXYY() (TX, TX, TX, TY, TY) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXXYZ() (TX, TX, TX, TY, TZ) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXXYW() (TX, TX, TX, TY, TW) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXXYA() (TX, TX, TX, TY, TA) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXXZX() (TX, TX, TX, TZ, TX) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXXZY() (TX, TX, TX, TZ, TY) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXXZZ() (TX, TX, TX, TZ, TZ) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXXZW() (TX, TX, TX, TZ, TW) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXXZA() (TX, TX, TX, TZ, TA) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXXWX() (TX, TX, TX, TW, TX) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXXWY() (TX, TX, TX, TW, TY) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXXWZ() (TX, TX, TX, TW, TZ) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXXWW() (TX, TX, TX, TW, TW) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXXWA() (TX, TX, TX, TW, TA) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXXAX() (TX, TX, TX, TA, TX) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXXAY() (TX, TX, TX, TA, TY) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXXAZ() (TX, TX, TX, TA, TZ) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXXAW() (TX, TX, TX, TA, TW) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXXAA() (TX, TX, TX, TA, TA) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXYXX() (TX, TX, TY, TX, TX) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXYXY() (TX, TX, TY, TX, TY) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXYXZ() (TX, TX, TY, TX, TZ) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXYXW() (TX, TX, TY, TX, TW) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXYXA() (TX, TX, TY, TX, TA) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXYYX() (TX, TX, TY, TY, TX) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXYYY() (TX, TX, TY, TY, TY) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXYYZ() (TX, TX, TY, TY, TZ) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXYYW() (TX, TX, TY, TY, TW) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXYYA() (TX, TX, TY, TY, TA) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXYZX() (TX, TX, TY, TZ, TX) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXYZY() (TX, TX, TY, TZ, TY) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXYZZ() (TX, TX, TY, TZ, TZ) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXYZW() (TX, TX, TY, TZ, TW) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXYZA() (TX, TX, TY, TZ, TA) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXYWX() (TX, TX, TY, TW, TX) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXYWY() (TX, TX, TY, TW, TY) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXYWZ() (TX, TX, TY, TW, TZ) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXYWW() (TX, TX, TY, TW, TW) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXYWA() (TX, TX, TY, TW, TA) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXYAX() (TX, TX, TY, TA, TX) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXYAY() (TX, TX, TY, TA, TY) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXYAZ() (TX, TX, TY, TA, TZ) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXYAW() (TX, TX, TY, TA, TW) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXYAA() (TX, TX, TY, TA, TA) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXZXX() (TX, TX, TZ, TX, TX) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXZXY() (TX, TX, TZ, TX, TY) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXZXZ() (TX, TX, TZ, TX, TZ) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXZXW() (TX, TX, TZ, TX, TW) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXZXA() (TX, TX, TZ, TX, TA) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXZYX() (TX, TX, TZ, TY, TX) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXZYY() (TX, TX, TZ, TY, TY) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXZYZ() (TX, TX, TZ, TY, TZ) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXZYW() (TX, TX, TZ, TY, TW) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXZYA() (TX, TX, TZ, TY, TA) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXZZX() (TX, TX, TZ, TZ, TX) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXZZY() (TX, TX, TZ, TZ, TY) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXZZZ() (TX, TX, TZ, TZ, TZ) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXZZW() (TX, TX, TZ, TZ, TW) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXZZA() (TX, TX, TZ, TZ, TA) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXZWX() (TX, TX, TZ, TW, TX) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXZWY() (TX, TX, TZ, TW, TY) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXZWZ() (TX, TX, TZ, TW, TZ) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXZWW() (TX, TX, TZ, TW, TW) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXZWA() (TX, TX, TZ, TW, TA) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXZAX() (TX, TX, TZ, TA, TX) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXZAY() (TX, TX, TZ, TA, TY) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXZAZ() (TX, TX, TZ, TA, TZ) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXZAW() (TX, TX, TZ, TA, TW) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXZAA() (TX, TX, TZ, TA, TA) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXWXX() (TX, TX, TW, TX, TX) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXWXY() (TX, TX, TW, TX, TY) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXWXZ() (TX, TX, TW, TX, TZ) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXWXW() (TX, TX, TW, TX, TW) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXWXA() (TX, TX, TW, TX, TA) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXWYX() (TX, TX, TW, TY, TX) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXWYY() (TX, TX, TW, TY, TY) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXWYZ() (TX, TX, TW, TY, TZ) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXWYW() (TX, TX, TW, TY, TW) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXWYA() (TX, TX, TW, TY, TA) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXWZX() (TX, TX, TW, TZ, TX) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXWZY() (TX, TX, TW, TZ, TY) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXWZZ() (TX, TX, TW, TZ, TZ) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXWZW() (TX, TX, TW, TZ, TW) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXWZA() (TX, TX, TW, TZ, TA) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXWWX() (TX, TX, TW, TW, TX) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXWWY() (TX, TX, TW, TW, TY) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXWWZ() (TX, TX, TW, TW, TZ) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXWWW() (TX, TX, TW, TW, TW) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXWWA() (TX, TX, TW, TW, TA) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXWAX() (TX, TX, TW, TA, TX) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXWAY() (TX, TX, TW, TA, TY) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXWAZ() (TX, TX, TW, TA, TZ) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXWAW() (TX, TX, TW, TA, TW) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXWAA() (TX, TX, TW, TA, TA) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXAXX() (TX, TX, TA, TX, TX) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXAXY() (TX, TX, TA, TX, TY) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXAXZ() (TX, TX, TA, TX, TZ) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXAXW() (TX, TX, TA, TX, TW) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXAXA() (TX, TX, TA, TX, TA) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXAYX() (TX, TX, TA, TY, TX) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXAYY() (TX, TX, TA, TY, TY) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXAYZ() (TX, TX, TA, TY, TZ) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXAYW() (TX, TX, TA, TY, TW) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXAYA() (TX, TX, TA, TY, TA) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXAZX() (TX, TX, TA, TZ, TX) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXAZY() (TX, TX, TA, TZ, TY) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXAZZ() (TX, TX, TA, TZ, TZ) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXAZW() (TX, TX, TA, TZ, TW) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXAZA() (TX, TX, TA, TZ, TA) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXAWX() (TX, TX, TA, TW, TX) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXAWY() (TX, TX, TA, TW, TY) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXAWZ() (TX, TX, TA, TW, TZ) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXAWW() (TX, TX, TA, TW, TW) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXAWA() (TX, TX, TA, TW, TA) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXAAX() (TX, TX, TA, TA, TX) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXAAY() (TX, TX, TA, TA, TY) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXAAZ() (TX, TX, TA, TA, TZ) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXAAW() (TX, TX, TA, TA, TW) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XXAAA() (TX, TX, TA, TA, TA) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYXXX() (TX, TY, TX, TX, TX) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYXXY() (TX, TY, TX, TX, TY) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYXXZ() (TX, TY, TX, TX, TZ) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYXXW() (TX, TY, TX, TX, TW) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYXXA() (TX, TY, TX, TX, TA) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYXYX() (TX, TY, TX, TY, TX) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYXYY() (TX, TY, TX, TY, TY) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYXYZ() (TX, TY, TX, TY, TZ) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYXYW() (TX, TY, TX, TY, TW) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYXYA() (TX, TY, TX, TY, TA) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYXZX() (TX, TY, TX, TZ, TX) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYXZY() (TX, TY, TX, TZ, TY) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYXZZ() (TX, TY, TX, TZ, TZ) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYXZW() (TX, TY, TX, TZ, TW) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYXZA() (TX, TY, TX, TZ, TA) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYXWX() (TX, TY, TX, TW, TX) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYXWY() (TX, TY, TX, TW, TY) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYXWZ() (TX, TY, TX, TW, TZ) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYXWW() (TX, TY, TX, TW, TW) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYXWA() (TX, TY, TX, TW, TA) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYXAX() (TX, TY, TX, TA, TX) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYXAY() (TX, TY, TX, TA, TY) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYXAZ() (TX, TY, TX, TA, TZ) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYXAW() (TX, TY, TX, TA, TW) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYXAA() (TX, TY, TX, TA, TA) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYYXX() (TX, TY, TY, TX, TX) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYYXY() (TX, TY, TY, TX, TY) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYYXZ() (TX, TY, TY, TX, TZ) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYYXW() (TX, TY, TY, TX, TW) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYYXA() (TX, TY, TY, TX, TA) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYYYX() (TX, TY, TY, TY, TX) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYYYY() (TX, TY, TY, TY, TY) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYYYZ() (TX, TY, TY, TY, TZ) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYYYW() (TX, TY, TY, TY, TW) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYYYA() (TX, TY, TY, TY, TA) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYYZX() (TX, TY, TY, TZ, TX) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYYZY() (TX, TY, TY, TZ, TY) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYYZZ() (TX, TY, TY, TZ, TZ) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYYZW() (TX, TY, TY, TZ, TW) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYYZA() (TX, TY, TY, TZ, TA) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYYWX() (TX, TY, TY, TW, TX) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYYWY() (TX, TY, TY, TW, TY) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYYWZ() (TX, TY, TY, TW, TZ) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYYWW() (TX, TY, TY, TW, TW) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYYWA() (TX, TY, TY, TW, TA) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYYAX() (TX, TY, TY, TA, TX) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYYAY() (TX, TY, TY, TA, TY) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYYAZ() (TX, TY, TY, TA, TZ) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYYAW() (TX, TY, TY, TA, TW) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYYAA() (TX, TY, TY, TA, TA) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYZXX() (TX, TY, TZ, TX, TX) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYZXY() (TX, TY, TZ, TX, TY) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYZXZ() (TX, TY, TZ, TX, TZ) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYZXW() (TX, TY, TZ, TX, TW) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYZXA() (TX, TY, TZ, TX, TA) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYZYX() (TX, TY, TZ, TY, TX) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYZYY() (TX, TY, TZ, TY, TY) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYZYZ() (TX, TY, TZ, TY, TZ) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYZYW() (TX, TY, TZ, TY, TW) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYZYA() (TX, TY, TZ, TY, TA) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYZZX() (TX, TY, TZ, TZ, TX) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYZZY() (TX, TY, TZ, TZ, TY) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYZZZ() (TX, TY, TZ, TZ, TZ) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYZZW() (TX, TY, TZ, TZ, TW) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYZZA() (TX, TY, TZ, TZ, TA) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYZWX() (TX, TY, TZ, TW, TX) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYZWY() (TX, TY, TZ, TW, TY) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYZWZ() (TX, TY, TZ, TW, TZ) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYZWW() (TX, TY, TZ, TW, TW) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYZWA() (TX, TY, TZ, TW, TA) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYZAX() (TX, TY, TZ, TA, TX) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYZAY() (TX, TY, TZ, TA, TY) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYZAZ() (TX, TY, TZ, TA, TZ) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYZAW() (TX, TY, TZ, TA, TW) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYZAA() (TX, TY, TZ, TA, TA) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYWXX() (TX, TY, TW, TX, TX) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYWXY() (TX, TY, TW, TX, TY) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYWXZ() (TX, TY, TW, TX, TZ) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYWXW() (TX, TY, TW, TX, TW) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYWXA() (TX, TY, TW, TX, TA) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYWYX() (TX, TY, TW, TY, TX) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYWYY() (TX, TY, TW, TY, TY) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYWYZ() (TX, TY, TW, TY, TZ) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYWYW() (TX, TY, TW, TY, TW) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYWYA() (TX, TY, TW, TY, TA) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYWZX() (TX, TY, TW, TZ, TX) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYWZY() (TX, TY, TW, TZ, TY) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYWZZ() (TX, TY, TW, TZ, TZ) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYWZW() (TX, TY, TW, TZ, TW) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYWZA() (TX, TY, TW, TZ, TA) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYWWX() (TX, TY, TW, TW, TX) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYWWY() (TX, TY, TW, TW, TY) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYWWZ() (TX, TY, TW, TW, TZ) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYWWW() (TX, TY, TW, TW, TW) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYWWA() (TX, TY, TW, TW, TA) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYWAX() (TX, TY, TW, TA, TX) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYWAY() (TX, TY, TW, TA, TY) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYWAZ() (TX, TY, TW, TA, TZ) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYWAW() (TX, TY, TW, TA, TW) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYWAA() (TX, TY, TW, TA, TA) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYAXX() (TX, TY, TA, TX, TX) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYAXY() (TX, TY, TA, TX, TY) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYAXZ() (TX, TY, TA, TX, TZ) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYAXW() (TX, TY, TA, TX, TW) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYAXA() (TX, TY, TA, TX, TA) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYAYX() (TX, TY, TA, TY, TX) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYAYY() (TX, TY, TA, TY, TY) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYAYZ() (TX, TY, TA, TY, TZ) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYAYW() (TX, TY, TA, TY, TW) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYAYA() (TX, TY, TA, TY, TA) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYAZX() (TX, TY, TA, TZ, TX) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYAZY() (TX, TY, TA, TZ, TY) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYAZZ() (TX, TY, TA, TZ, TZ) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYAZW() (TX, TY, TA, TZ, TW) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYAZA() (TX, TY, TA, TZ, TA) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYAWX() (TX, TY, TA, TW, TX) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYAWY() (TX, TY, TA, TW, TY) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYAWZ() (TX, TY, TA, TW, TZ) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYAWW() (TX, TY, TA, TW, TW) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYAWA() (TX, TY, TA, TW, TA) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYAAX() (TX, TY, TA, TA, TX) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYAAY() (TX, TY, TA, TA, TY) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYAAZ() (TX, TY, TA, TA, TZ) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYAAW() (TX, TY, TA, TA, TW) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XYAAA() (TX, TY, TA, TA, TA) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZXXX() (TX, TZ, TX, TX, TX) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZXXY() (TX, TZ, TX, TX, TY) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZXXZ() (TX, TZ, TX, TX, TZ) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZXXW() (TX, TZ, TX, TX, TW) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZXXA() (TX, TZ, TX, TX, TA) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZXYX() (TX, TZ, TX, TY, TX) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZXYY() (TX, TZ, TX, TY, TY) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZXYZ() (TX, TZ, TX, TY, TZ) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZXYW() (TX, TZ, TX, TY, TW) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZXYA() (TX, TZ, TX, TY, TA) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZXZX() (TX, TZ, TX, TZ, TX) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZXZY() (TX, TZ, TX, TZ, TY) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZXZZ() (TX, TZ, TX, TZ, TZ) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZXZW() (TX, TZ, TX, TZ, TW) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZXZA() (TX, TZ, TX, TZ, TA) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZXWX() (TX, TZ, TX, TW, TX) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZXWY() (TX, TZ, TX, TW, TY) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZXWZ() (TX, TZ, TX, TW, TZ) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZXWW() (TX, TZ, TX, TW, TW) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZXWA() (TX, TZ, TX, TW, TA) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZXAX() (TX, TZ, TX, TA, TX) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZXAY() (TX, TZ, TX, TA, TY) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZXAZ() (TX, TZ, TX, TA, TZ) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZXAW() (TX, TZ, TX, TA, TW) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZXAA() (TX, TZ, TX, TA, TA) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZYXX() (TX, TZ, TY, TX, TX) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZYXY() (TX, TZ, TY, TX, TY) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZYXZ() (TX, TZ, TY, TX, TZ) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZYXW() (TX, TZ, TY, TX, TW) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZYXA() (TX, TZ, TY, TX, TA) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZYYX() (TX, TZ, TY, TY, TX) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZYYY() (TX, TZ, TY, TY, TY) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZYYZ() (TX, TZ, TY, TY, TZ) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZYYW() (TX, TZ, TY, TY, TW) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZYYA() (TX, TZ, TY, TY, TA) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZYZX() (TX, TZ, TY, TZ, TX) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZYZY() (TX, TZ, TY, TZ, TY) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZYZZ() (TX, TZ, TY, TZ, TZ) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZYZW() (TX, TZ, TY, TZ, TW) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZYZA() (TX, TZ, TY, TZ, TA) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZYWX() (TX, TZ, TY, TW, TX) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZYWY() (TX, TZ, TY, TW, TY) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZYWZ() (TX, TZ, TY, TW, TZ) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZYWW() (TX, TZ, TY, TW, TW) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZYWA() (TX, TZ, TY, TW, TA) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZYAX() (TX, TZ, TY, TA, TX) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZYAY() (TX, TZ, TY, TA, TY) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZYAZ() (TX, TZ, TY, TA, TZ) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZYAW() (TX, TZ, TY, TA, TW) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZYAA() (TX, TZ, TY, TA, TA) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZZXX() (TX, TZ, TZ, TX, TX) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZZXY() (TX, TZ, TZ, TX, TY) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZZXZ() (TX, TZ, TZ, TX, TZ) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZZXW() (TX, TZ, TZ, TX, TW) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZZXA() (TX, TZ, TZ, TX, TA) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZZYX() (TX, TZ, TZ, TY, TX) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZZYY() (TX, TZ, TZ, TY, TY) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZZYZ() (TX, TZ, TZ, TY, TZ) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZZYW() (TX, TZ, TZ, TY, TW) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZZYA() (TX, TZ, TZ, TY, TA) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZZZX() (TX, TZ, TZ, TZ, TX) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZZZY() (TX, TZ, TZ, TZ, TY) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZZZZ() (TX, TZ, TZ, TZ, TZ) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZZZW() (TX, TZ, TZ, TZ, TW) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZZZA() (TX, TZ, TZ, TZ, TA) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZZWX() (TX, TZ, TZ, TW, TX) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZZWY() (TX, TZ, TZ, TW, TY) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZZWZ() (TX, TZ, TZ, TW, TZ) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZZWW() (TX, TZ, TZ, TW, TW) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZZWA() (TX, TZ, TZ, TW, TA) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZZAX() (TX, TZ, TZ, TA, TX) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZZAY() (TX, TZ, TZ, TA, TY) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZZAZ() (TX, TZ, TZ, TA, TZ) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZZAW() (TX, TZ, TZ, TA, TW) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZZAA() (TX, TZ, TZ, TA, TA) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZWXX() (TX, TZ, TW, TX, TX) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZWXY() (TX, TZ, TW, TX, TY) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZWXZ() (TX, TZ, TW, TX, TZ) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZWXW() (TX, TZ, TW, TX, TW) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZWXA() (TX, TZ, TW, TX, TA) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZWYX() (TX, TZ, TW, TY, TX) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZWYY() (TX, TZ, TW, TY, TY) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZWYZ() (TX, TZ, TW, TY, TZ) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZWYW() (TX, TZ, TW, TY, TW) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZWYA() (TX, TZ, TW, TY, TA) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZWZX() (TX, TZ, TW, TZ, TX) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZWZY() (TX, TZ, TW, TZ, TY) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZWZZ() (TX, TZ, TW, TZ, TZ) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZWZW() (TX, TZ, TW, TZ, TW) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZWZA() (TX, TZ, TW, TZ, TA) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZWWX() (TX, TZ, TW, TW, TX) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZWWY() (TX, TZ, TW, TW, TY) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZWWZ() (TX, TZ, TW, TW, TZ) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZWWW() (TX, TZ, TW, TW, TW) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZWWA() (TX, TZ, TW, TW, TA) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZWAX() (TX, TZ, TW, TA, TX) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZWAY() (TX, TZ, TW, TA, TY) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZWAZ() (TX, TZ, TW, TA, TZ) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZWAW() (TX, TZ, TW, TA, TW) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZWAA() (TX, TZ, TW, TA, TA) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZAXX() (TX, TZ, TA, TX, TX) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZAXY() (TX, TZ, TA, TX, TY) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZAXZ() (TX, TZ, TA, TX, TZ) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZAXW() (TX, TZ, TA, TX, TW) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZAXA() (TX, TZ, TA, TX, TA) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZAYX() (TX, TZ, TA, TY, TX) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZAYY() (TX, TZ, TA, TY, TY) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZAYZ() (TX, TZ, TA, TY, TZ) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZAYW() (TX, TZ, TA, TY, TW) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZAYA() (TX, TZ, TA, TY, TA) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZAZX() (TX, TZ, TA, TZ, TX) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZAZY() (TX, TZ, TA, TZ, TY) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZAZZ() (TX, TZ, TA, TZ, TZ) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZAZW() (TX, TZ, TA, TZ, TW) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZAZA() (TX, TZ, TA, TZ, TA) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZAWX() (TX, TZ, TA, TW, TX) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZAWY() (TX, TZ, TA, TW, TY) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZAWZ() (TX, TZ, TA, TW, TZ) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZAWW() (TX, TZ, TA, TW, TW) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZAWA() (TX, TZ, TA, TW, TA) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZAAX() (TX, TZ, TA, TA, TX) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZAAY() (TX, TZ, TA, TA, TY) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZAAZ() (TX, TZ, TA, TA, TZ) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZAAW() (TX, TZ, TA, TA, TW) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XZAAA() (TX, TZ, TA, TA, TA) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWXXX() (TX, TW, TX, TX, TX) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWXXY() (TX, TW, TX, TX, TY) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWXXZ() (TX, TW, TX, TX, TZ) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWXXW() (TX, TW, TX, TX, TW) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWXXA() (TX, TW, TX, TX, TA) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWXYX() (TX, TW, TX, TY, TX) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWXYY() (TX, TW, TX, TY, TY) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWXYZ() (TX, TW, TX, TY, TZ) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWXYW() (TX, TW, TX, TY, TW) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWXYA() (TX, TW, TX, TY, TA) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWXZX() (TX, TW, TX, TZ, TX) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWXZY() (TX, TW, TX, TZ, TY) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWXZZ() (TX, TW, TX, TZ, TZ) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWXZW() (TX, TW, TX, TZ, TW) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWXZA() (TX, TW, TX, TZ, TA) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWXWX() (TX, TW, TX, TW, TX) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWXWY() (TX, TW, TX, TW, TY) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWXWZ() (TX, TW, TX, TW, TZ) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWXWW() (TX, TW, TX, TW, TW) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWXWA() (TX, TW, TX, TW, TA) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWXAX() (TX, TW, TX, TA, TX) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWXAY() (TX, TW, TX, TA, TY) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWXAZ() (TX, TW, TX, TA, TZ) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWXAW() (TX, TW, TX, TA, TW) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWXAA() (TX, TW, TX, TA, TA) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWYXX() (TX, TW, TY, TX, TX) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWYXY() (TX, TW, TY, TX, TY) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWYXZ() (TX, TW, TY, TX, TZ) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWYXW() (TX, TW, TY, TX, TW) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWYXA() (TX, TW, TY, TX, TA) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWYYX() (TX, TW, TY, TY, TX) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWYYY() (TX, TW, TY, TY, TY) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWYYZ() (TX, TW, TY, TY, TZ) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWYYW() (TX, TW, TY, TY, TW) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWYYA() (TX, TW, TY, TY, TA) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWYZX() (TX, TW, TY, TZ, TX) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWYZY() (TX, TW, TY, TZ, TY) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWYZZ() (TX, TW, TY, TZ, TZ) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWYZW() (TX, TW, TY, TZ, TW) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWYZA() (TX, TW, TY, TZ, TA) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWYWX() (TX, TW, TY, TW, TX) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWYWY() (TX, TW, TY, TW, TY) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWYWZ() (TX, TW, TY, TW, TZ) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWYWW() (TX, TW, TY, TW, TW) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWYWA() (TX, TW, TY, TW, TA) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWYAX() (TX, TW, TY, TA, TX) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWYAY() (TX, TW, TY, TA, TY) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWYAZ() (TX, TW, TY, TA, TZ) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWYAW() (TX, TW, TY, TA, TW) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWYAA() (TX, TW, TY, TA, TA) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWZXX() (TX, TW, TZ, TX, TX) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWZXY() (TX, TW, TZ, TX, TY) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWZXZ() (TX, TW, TZ, TX, TZ) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWZXW() (TX, TW, TZ, TX, TW) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWZXA() (TX, TW, TZ, TX, TA) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWZYX() (TX, TW, TZ, TY, TX) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWZYY() (TX, TW, TZ, TY, TY) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWZYZ() (TX, TW, TZ, TY, TZ) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWZYW() (TX, TW, TZ, TY, TW) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWZYA() (TX, TW, TZ, TY, TA) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWZZX() (TX, TW, TZ, TZ, TX) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWZZY() (TX, TW, TZ, TZ, TY) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWZZZ() (TX, TW, TZ, TZ, TZ) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWZZW() (TX, TW, TZ, TZ, TW) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWZZA() (TX, TW, TZ, TZ, TA) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWZWX() (TX, TW, TZ, TW, TX) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWZWY() (TX, TW, TZ, TW, TY) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWZWZ() (TX, TW, TZ, TW, TZ) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWZWW() (TX, TW, TZ, TW, TW) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWZWA() (TX, TW, TZ, TW, TA) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWZAX() (TX, TW, TZ, TA, TX) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWZAY() (TX, TW, TZ, TA, TY) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWZAZ() (TX, TW, TZ, TA, TZ) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWZAW() (TX, TW, TZ, TA, TW) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWZAA() (TX, TW, TZ, TA, TA) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWWXX() (TX, TW, TW, TX, TX) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWWXY() (TX, TW, TW, TX, TY) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWWXZ() (TX, TW, TW, TX, TZ) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWWXW() (TX, TW, TW, TX, TW) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWWXA() (TX, TW, TW, TX, TA) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWWYX() (TX, TW, TW, TY, TX) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWWYY() (TX, TW, TW, TY, TY) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWWYZ() (TX, TW, TW, TY, TZ) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWWYW() (TX, TW, TW, TY, TW) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWWYA() (TX, TW, TW, TY, TA) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWWZX() (TX, TW, TW, TZ, TX) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWWZY() (TX, TW, TW, TZ, TY) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWWZZ() (TX, TW, TW, TZ, TZ) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWWZW() (TX, TW, TW, TZ, TW) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWWZA() (TX, TW, TW, TZ, TA) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWWWX() (TX, TW, TW, TW, TX) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWWWY() (TX, TW, TW, TW, TY) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWWWZ() (TX, TW, TW, TW, TZ) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWWWW() (TX, TW, TW, TW, TW) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWWWA() (TX, TW, TW, TW, TA) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWWAX() (TX, TW, TW, TA, TX) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWWAY() (TX, TW, TW, TA, TY) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWWAZ() (TX, TW, TW, TA, TZ) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWWAW() (TX, TW, TW, TA, TW) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWWAA() (TX, TW, TW, TA, TA) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWAXX() (TX, TW, TA, TX, TX) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWAXY() (TX, TW, TA, TX, TY) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWAXZ() (TX, TW, TA, TX, TZ) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWAXW() (TX, TW, TA, TX, TW) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWAXA() (TX, TW, TA, TX, TA) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWAYX() (TX, TW, TA, TY, TX) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWAYY() (TX, TW, TA, TY, TY) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWAYZ() (TX, TW, TA, TY, TZ) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWAYW() (TX, TW, TA, TY, TW) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWAYA() (TX, TW, TA, TY, TA) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWAZX() (TX, TW, TA, TZ, TX) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWAZY() (TX, TW, TA, TZ, TY) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWAZZ() (TX, TW, TA, TZ, TZ) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWAZW() (TX, TW, TA, TZ, TW) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWAZA() (TX, TW, TA, TZ, TA) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWAWX() (TX, TW, TA, TW, TX) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWAWY() (TX, TW, TA, TW, TY) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWAWZ() (TX, TW, TA, TW, TZ) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWAWW() (TX, TW, TA, TW, TW) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWAWA() (TX, TW, TA, TW, TA) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWAAX() (TX, TW, TA, TA, TX) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWAAY() (TX, TW, TA, TA, TY) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWAAZ() (TX, TW, TA, TA, TZ) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWAAW() (TX, TW, TA, TA, TW) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XWAAA() (TX, TW, TA, TA, TA) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAXXX() (TX, TA, TX, TX, TX) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAXXY() (TX, TA, TX, TX, TY) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAXXZ() (TX, TA, TX, TX, TZ) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAXXW() (TX, TA, TX, TX, TW) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAXXA() (TX, TA, TX, TX, TA) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAXYX() (TX, TA, TX, TY, TX) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAXYY() (TX, TA, TX, TY, TY) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAXYZ() (TX, TA, TX, TY, TZ) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAXYW() (TX, TA, TX, TY, TW) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAXYA() (TX, TA, TX, TY, TA) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAXZX() (TX, TA, TX, TZ, TX) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAXZY() (TX, TA, TX, TZ, TY) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAXZZ() (TX, TA, TX, TZ, TZ) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAXZW() (TX, TA, TX, TZ, TW) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAXZA() (TX, TA, TX, TZ, TA) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAXWX() (TX, TA, TX, TW, TX) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAXWY() (TX, TA, TX, TW, TY) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAXWZ() (TX, TA, TX, TW, TZ) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAXWW() (TX, TA, TX, TW, TW) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAXWA() (TX, TA, TX, TW, TA) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAXAX() (TX, TA, TX, TA, TX) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAXAY() (TX, TA, TX, TA, TY) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAXAZ() (TX, TA, TX, TA, TZ) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAXAW() (TX, TA, TX, TA, TW) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAXAA() (TX, TA, TX, TA, TA) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAYXX() (TX, TA, TY, TX, TX) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAYXY() (TX, TA, TY, TX, TY) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAYXZ() (TX, TA, TY, TX, TZ) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAYXW() (TX, TA, TY, TX, TW) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAYXA() (TX, TA, TY, TX, TA) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAYYX() (TX, TA, TY, TY, TX) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAYYY() (TX, TA, TY, TY, TY) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAYYZ() (TX, TA, TY, TY, TZ) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAYYW() (TX, TA, TY, TY, TW) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAYYA() (TX, TA, TY, TY, TA) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAYZX() (TX, TA, TY, TZ, TX) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAYZY() (TX, TA, TY, TZ, TY) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAYZZ() (TX, TA, TY, TZ, TZ) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAYZW() (TX, TA, TY, TZ, TW) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAYZA() (TX, TA, TY, TZ, TA) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAYWX() (TX, TA, TY, TW, TX) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAYWY() (TX, TA, TY, TW, TY) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAYWZ() (TX, TA, TY, TW, TZ) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAYWW() (TX, TA, TY, TW, TW) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAYWA() (TX, TA, TY, TW, TA) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAYAX() (TX, TA, TY, TA, TX) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAYAY() (TX, TA, TY, TA, TY) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAYAZ() (TX, TA, TY, TA, TZ) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAYAW() (TX, TA, TY, TA, TW) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAYAA() (TX, TA, TY, TA, TA) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAZXX() (TX, TA, TZ, TX, TX) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAZXY() (TX, TA, TZ, TX, TY) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAZXZ() (TX, TA, TZ, TX, TZ) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAZXW() (TX, TA, TZ, TX, TW) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAZXA() (TX, TA, TZ, TX, TA) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAZYX() (TX, TA, TZ, TY, TX) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAZYY() (TX, TA, TZ, TY, TY) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAZYZ() (TX, TA, TZ, TY, TZ) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAZYW() (TX, TA, TZ, TY, TW) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAZYA() (TX, TA, TZ, TY, TA) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAZZX() (TX, TA, TZ, TZ, TX) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAZZY() (TX, TA, TZ, TZ, TY) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAZZZ() (TX, TA, TZ, TZ, TZ) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAZZW() (TX, TA, TZ, TZ, TW) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAZZA() (TX, TA, TZ, TZ, TA) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAZWX() (TX, TA, TZ, TW, TX) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAZWY() (TX, TA, TZ, TW, TY) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAZWZ() (TX, TA, TZ, TW, TZ) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAZWW() (TX, TA, TZ, TW, TW) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAZWA() (TX, TA, TZ, TW, TA) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAZAX() (TX, TA, TZ, TA, TX) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAZAY() (TX, TA, TZ, TA, TY) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAZAZ() (TX, TA, TZ, TA, TZ) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAZAW() (TX, TA, TZ, TA, TW) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAZAA() (TX, TA, TZ, TA, TA) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAWXX() (TX, TA, TW, TX, TX) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAWXY() (TX, TA, TW, TX, TY) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAWXZ() (TX, TA, TW, TX, TZ) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAWXW() (TX, TA, TW, TX, TW) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAWXA() (TX, TA, TW, TX, TA) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAWYX() (TX, TA, TW, TY, TX) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAWYY() (TX, TA, TW, TY, TY) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAWYZ() (TX, TA, TW, TY, TZ) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAWYW() (TX, TA, TW, TY, TW) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAWYA() (TX, TA, TW, TY, TA) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAWZX() (TX, TA, TW, TZ, TX) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAWZY() (TX, TA, TW, TZ, TY) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAWZZ() (TX, TA, TW, TZ, TZ) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAWZW() (TX, TA, TW, TZ, TW) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAWZA() (TX, TA, TW, TZ, TA) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAWWX() (TX, TA, TW, TW, TX) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAWWY() (TX, TA, TW, TW, TY) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAWWZ() (TX, TA, TW, TW, TZ) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAWWW() (TX, TA, TW, TW, TW) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAWWA() (TX, TA, TW, TW, TA) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAWAX() (TX, TA, TW, TA, TX) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAWAY() (TX, TA, TW, TA, TY) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAWAZ() (TX, TA, TW, TA, TZ) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAWAW() (TX, TA, TW, TA, TW) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAWAA() (TX, TA, TW, TA, TA) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAAXX() (TX, TA, TA, TX, TX) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAAXY() (TX, TA, TA, TX, TY) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAAXZ() (TX, TA, TA, TX, TZ) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAAXW() (TX, TA, TA, TX, TW) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAAXA() (TX, TA, TA, TX, TA) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAAYX() (TX, TA, TA, TY, TX) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAAYY() (TX, TA, TA, TY, TY) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAAYZ() (TX, TA, TA, TY, TZ) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAAYW() (TX, TA, TA, TY, TW) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAAYA() (TX, TA, TA, TY, TA) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAAZX() (TX, TA, TA, TZ, TX) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAAZY() (TX, TA, TA, TZ, TY) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAAZZ() (TX, TA, TA, TZ, TZ) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAAZW() (TX, TA, TA, TZ, TW) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAAZA() (TX, TA, TA, TZ, TA) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAAWX() (TX, TA, TA, TW, TX) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAAWY() (TX, TA, TA, TW, TY) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAAWZ() (TX, TA, TA, TW, TZ) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAAWW() (TX, TA, TA, TW, TW) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAAWA() (TX, TA, TA, TW, TA) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAAAX() (TX, TA, TA, TA, TX) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAAAY() (TX, TA, TA, TA, TY) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAAAZ() (TX, TA, TA, TA, TZ) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAAAW() (TX, TA, TA, TA, TW) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) XAAAA() (TX, TA, TA, TA, TA) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXXXX() (TY, TX, TX, TX, TX) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXXXY() (TY, TX, TX, TX, TY) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXXXZ() (TY, TX, TX, TX, TZ) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXXXW() (TY, TX, TX, TX, TW) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXXXA() (TY, TX, TX, TX, TA) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXXYX() (TY, TX, TX, TY, TX) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXXYY() (TY, TX, TX, TY, TY) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXXYZ() (TY, TX, TX, TY, TZ) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXXYW() (TY, TX, TX, TY, TW) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXXYA() (TY, TX, TX, TY, TA) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXXZX() (TY, TX, TX, TZ, TX) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXXZY() (TY, TX, TX, TZ, TY) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXXZZ() (TY, TX, TX, TZ, TZ) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXXZW() (TY, TX, TX, TZ, TW) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXXZA() (TY, TX, TX, TZ, TA) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXXWX() (TY, TX, TX, TW, TX) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXXWY() (TY, TX, TX, TW, TY) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXXWZ() (TY, TX, TX, TW, TZ) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXXWW() (TY, TX, TX, TW, TW) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXXWA() (TY, TX, TX, TW, TA) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXXAX() (TY, TX, TX, TA, TX) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXXAY() (TY, TX, TX, TA, TY) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXXAZ() (TY, TX, TX, TA, TZ) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXXAW() (TY, TX, TX, TA, TW) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXXAA() (TY, TX, TX, TA, TA) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXYXX() (TY, TX, TY, TX, TX) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXYXY() (TY, TX, TY, TX, TY) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXYXZ() (TY, TX, TY, TX, TZ) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXYXW() (TY, TX, TY, TX, TW) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXYXA() (TY, TX, TY, TX, TA) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXYYX() (TY, TX, TY, TY, TX) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXYYY() (TY, TX, TY, TY, TY) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXYYZ() (TY, TX, TY, TY, TZ) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXYYW() (TY, TX, TY, TY, TW) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXYYA() (TY, TX, TY, TY, TA) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXYZX() (TY, TX, TY, TZ, TX) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXYZY() (TY, TX, TY, TZ, TY) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXYZZ() (TY, TX, TY, TZ, TZ) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXYZW() (TY, TX, TY, TZ, TW) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXYZA() (TY, TX, TY, TZ, TA) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXYWX() (TY, TX, TY, TW, TX) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXYWY() (TY, TX, TY, TW, TY) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXYWZ() (TY, TX, TY, TW, TZ) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXYWW() (TY, TX, TY, TW, TW) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXYWA() (TY, TX, TY, TW, TA) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXYAX() (TY, TX, TY, TA, TX) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXYAY() (TY, TX, TY, TA, TY) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXYAZ() (TY, TX, TY, TA, TZ) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXYAW() (TY, TX, TY, TA, TW) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXYAA() (TY, TX, TY, TA, TA) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXZXX() (TY, TX, TZ, TX, TX) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXZXY() (TY, TX, TZ, TX, TY) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXZXZ() (TY, TX, TZ, TX, TZ) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXZXW() (TY, TX, TZ, TX, TW) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXZXA() (TY, TX, TZ, TX, TA) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXZYX() (TY, TX, TZ, TY, TX) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXZYY() (TY, TX, TZ, TY, TY) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXZYZ() (TY, TX, TZ, TY, TZ) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXZYW() (TY, TX, TZ, TY, TW) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXZYA() (TY, TX, TZ, TY, TA) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXZZX() (TY, TX, TZ, TZ, TX) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXZZY() (TY, TX, TZ, TZ, TY) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXZZZ() (TY, TX, TZ, TZ, TZ) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXZZW() (TY, TX, TZ, TZ, TW) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXZZA() (TY, TX, TZ, TZ, TA) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXZWX() (TY, TX, TZ, TW, TX) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXZWY() (TY, TX, TZ, TW, TY) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXZWZ() (TY, TX, TZ, TW, TZ) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXZWW() (TY, TX, TZ, TW, TW) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXZWA() (TY, TX, TZ, TW, TA) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXZAX() (TY, TX, TZ, TA, TX) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXZAY() (TY, TX, TZ, TA, TY) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXZAZ() (TY, TX, TZ, TA, TZ) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXZAW() (TY, TX, TZ, TA, TW) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXZAA() (TY, TX, TZ, TA, TA) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXWXX() (TY, TX, TW, TX, TX) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXWXY() (TY, TX, TW, TX, TY) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXWXZ() (TY, TX, TW, TX, TZ) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXWXW() (TY, TX, TW, TX, TW) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXWXA() (TY, TX, TW, TX, TA) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXWYX() (TY, TX, TW, TY, TX) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXWYY() (TY, TX, TW, TY, TY) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXWYZ() (TY, TX, TW, TY, TZ) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXWYW() (TY, TX, TW, TY, TW) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXWYA() (TY, TX, TW, TY, TA) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXWZX() (TY, TX, TW, TZ, TX) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXWZY() (TY, TX, TW, TZ, TY) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXWZZ() (TY, TX, TW, TZ, TZ) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXWZW() (TY, TX, TW, TZ, TW) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXWZA() (TY, TX, TW, TZ, TA) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXWWX() (TY, TX, TW, TW, TX) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXWWY() (TY, TX, TW, TW, TY) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXWWZ() (TY, TX, TW, TW, TZ) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXWWW() (TY, TX, TW, TW, TW) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXWWA() (TY, TX, TW, TW, TA) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXWAX() (TY, TX, TW, TA, TX) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXWAY() (TY, TX, TW, TA, TY) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXWAZ() (TY, TX, TW, TA, TZ) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXWAW() (TY, TX, TW, TA, TW) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXWAA() (TY, TX, TW, TA, TA) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXAXX() (TY, TX, TA, TX, TX) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXAXY() (TY, TX, TA, TX, TY) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXAXZ() (TY, TX, TA, TX, TZ) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXAXW() (TY, TX, TA, TX, TW) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXAXA() (TY, TX, TA, TX, TA) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXAYX() (TY, TX, TA, TY, TX) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXAYY() (TY, TX, TA, TY, TY) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXAYZ() (TY, TX, TA, TY, TZ) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXAYW() (TY, TX, TA, TY, TW) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXAYA() (TY, TX, TA, TY, TA) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXAZX() (TY, TX, TA, TZ, TX) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXAZY() (TY, TX, TA, TZ, TY) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXAZZ() (TY, TX, TA, TZ, TZ) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXAZW() (TY, TX, TA, TZ, TW) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXAZA() (TY, TX, TA, TZ, TA) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXAWX() (TY, TX, TA, TW, TX) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXAWY() (TY, TX, TA, TW, TY) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXAWZ() (TY, TX, TA, TW, TZ) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXAWW() (TY, TX, TA, TW, TW) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXAWA() (TY, TX, TA, TW, TA) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXAAX() (TY, TX, TA, TA, TX) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXAAY() (TY, TX, TA, TA, TY) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXAAZ() (TY, TX, TA, TA, TZ) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXAAW() (TY, TX, TA, TA, TW) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YXAAA() (TY, TX, TA, TA, TA) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYXXX() (TY, TY, TX, TX, TX) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYXXY() (TY, TY, TX, TX, TY) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYXXZ() (TY, TY, TX, TX, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYXXW() (TY, TY, TX, TX, TW) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYXXA() (TY, TY, TX, TX, TA) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYXYX() (TY, TY, TX, TY, TX) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYXYY() (TY, TY, TX, TY, TY) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYXYZ() (TY, TY, TX, TY, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYXYW() (TY, TY, TX, TY, TW) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYXYA() (TY, TY, TX, TY, TA) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYXZX() (TY, TY, TX, TZ, TX) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYXZY() (TY, TY, TX, TZ, TY) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYXZZ() (TY, TY, TX, TZ, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYXZW() (TY, TY, TX, TZ, TW) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYXZA() (TY, TY, TX, TZ, TA) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYXWX() (TY, TY, TX, TW, TX) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYXWY() (TY, TY, TX, TW, TY) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYXWZ() (TY, TY, TX, TW, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYXWW() (TY, TY, TX, TW, TW) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYXWA() (TY, TY, TX, TW, TA) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYXAX() (TY, TY, TX, TA, TX) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYXAY() (TY, TY, TX, TA, TY) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYXAZ() (TY, TY, TX, TA, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYXAW() (TY, TY, TX, TA, TW) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYXAA() (TY, TY, TX, TA, TA) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYYXX() (TY, TY, TY, TX, TX) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYYXY() (TY, TY, TY, TX, TY) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYYXZ() (TY, TY, TY, TX, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYYXW() (TY, TY, TY, TX, TW) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYYXA() (TY, TY, TY, TX, TA) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYYYX() (TY, TY, TY, TY, TX) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYYYY() (TY, TY, TY, TY, TY) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYYYZ() (TY, TY, TY, TY, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYYYW() (TY, TY, TY, TY, TW) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYYYA() (TY, TY, TY, TY, TA) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYYZX() (TY, TY, TY, TZ, TX) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYYZY() (TY, TY, TY, TZ, TY) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYYZZ() (TY, TY, TY, TZ, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYYZW() (TY, TY, TY, TZ, TW) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYYZA() (TY, TY, TY, TZ, TA) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYYWX() (TY, TY, TY, TW, TX) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYYWY() (TY, TY, TY, TW, TY) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYYWZ() (TY, TY, TY, TW, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYYWW() (TY, TY, TY, TW, TW) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYYWA() (TY, TY, TY, TW, TA) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYYAX() (TY, TY, TY, TA, TX) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYYAY() (TY, TY, TY, TA, TY) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYYAZ() (TY, TY, TY, TA, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYYAW() (TY, TY, TY, TA, TW) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYYAA() (TY, TY, TY, TA, TA) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYZXX() (TY, TY, TZ, TX, TX) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYZXY() (TY, TY, TZ, TX, TY) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYZXZ() (TY, TY, TZ, TX, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYZXW() (TY, TY, TZ, TX, TW) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYZXA() (TY, TY, TZ, TX, TA) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYZYX() (TY, TY, TZ, TY, TX) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYZYY() (TY, TY, TZ, TY, TY) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYZYZ() (TY, TY, TZ, TY, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYZYW() (TY, TY, TZ, TY, TW) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYZYA() (TY, TY, TZ, TY, TA) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYZZX() (TY, TY, TZ, TZ, TX) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYZZY() (TY, TY, TZ, TZ, TY) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYZZZ() (TY, TY, TZ, TZ, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYZZW() (TY, TY, TZ, TZ, TW) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYZZA() (TY, TY, TZ, TZ, TA) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYZWX() (TY, TY, TZ, TW, TX) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYZWY() (TY, TY, TZ, TW, TY) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYZWZ() (TY, TY, TZ, TW, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYZWW() (TY, TY, TZ, TW, TW) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYZWA() (TY, TY, TZ, TW, TA) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYZAX() (TY, TY, TZ, TA, TX) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYZAY() (TY, TY, TZ, TA, TY) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYZAZ() (TY, TY, TZ, TA, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYZAW() (TY, TY, TZ, TA, TW) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYZAA() (TY, TY, TZ, TA, TA) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYWXX() (TY, TY, TW, TX, TX) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYWXY() (TY, TY, TW, TX, TY) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYWXZ() (TY, TY, TW, TX, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYWXW() (TY, TY, TW, TX, TW) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYWXA() (TY, TY, TW, TX, TA) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYWYX() (TY, TY, TW, TY, TX) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYWYY() (TY, TY, TW, TY, TY) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYWYZ() (TY, TY, TW, TY, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYWYW() (TY, TY, TW, TY, TW) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYWYA() (TY, TY, TW, TY, TA) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYWZX() (TY, TY, TW, TZ, TX) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYWZY() (TY, TY, TW, TZ, TY) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYWZZ() (TY, TY, TW, TZ, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYWZW() (TY, TY, TW, TZ, TW) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYWZA() (TY, TY, TW, TZ, TA) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYWWX() (TY, TY, TW, TW, TX) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYWWY() (TY, TY, TW, TW, TY) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYWWZ() (TY, TY, TW, TW, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYWWW() (TY, TY, TW, TW, TW) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYWWA() (TY, TY, TW, TW, TA) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYWAX() (TY, TY, TW, TA, TX) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYWAY() (TY, TY, TW, TA, TY) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYWAZ() (TY, TY, TW, TA, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYWAW() (TY, TY, TW, TA, TW) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYWAA() (TY, TY, TW, TA, TA) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYAXX() (TY, TY, TA, TX, TX) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYAXY() (TY, TY, TA, TX, TY) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYAXZ() (TY, TY, TA, TX, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYAXW() (TY, TY, TA, TX, TW) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYAXA() (TY, TY, TA, TX, TA) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYAYX() (TY, TY, TA, TY, TX) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYAYY() (TY, TY, TA, TY, TY) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYAYZ() (TY, TY, TA, TY, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYAYW() (TY, TY, TA, TY, TW) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYAYA() (TY, TY, TA, TY, TA) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYAZX() (TY, TY, TA, TZ, TX) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYAZY() (TY, TY, TA, TZ, TY) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYAZZ() (TY, TY, TA, TZ, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYAZW() (TY, TY, TA, TZ, TW) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYAZA() (TY, TY, TA, TZ, TA) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYAWX() (TY, TY, TA, TW, TX) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYAWY() (TY, TY, TA, TW, TY) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYAWZ() (TY, TY, TA, TW, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYAWW() (TY, TY, TA, TW, TW) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYAWA() (TY, TY, TA, TW, TA) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYAAX() (TY, TY, TA, TA, TX) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYAAY() (TY, TY, TA, TA, TY) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYAAZ() (TY, TY, TA, TA, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYAAW() (TY, TY, TA, TA, TW) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YYAAA() (TY, TY, TA, TA, TA) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZXXX() (TY, TZ, TX, TX, TX) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZXXY() (TY, TZ, TX, TX, TY) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZXXZ() (TY, TZ, TX, TX, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZXXW() (TY, TZ, TX, TX, TW) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZXXA() (TY, TZ, TX, TX, TA) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZXYX() (TY, TZ, TX, TY, TX) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZXYY() (TY, TZ, TX, TY, TY) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZXYZ() (TY, TZ, TX, TY, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZXYW() (TY, TZ, TX, TY, TW) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZXYA() (TY, TZ, TX, TY, TA) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZXZX() (TY, TZ, TX, TZ, TX) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZXZY() (TY, TZ, TX, TZ, TY) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZXZZ() (TY, TZ, TX, TZ, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZXZW() (TY, TZ, TX, TZ, TW) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZXZA() (TY, TZ, TX, TZ, TA) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZXWX() (TY, TZ, TX, TW, TX) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZXWY() (TY, TZ, TX, TW, TY) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZXWZ() (TY, TZ, TX, TW, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZXWW() (TY, TZ, TX, TW, TW) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZXWA() (TY, TZ, TX, TW, TA) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZXAX() (TY, TZ, TX, TA, TX) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZXAY() (TY, TZ, TX, TA, TY) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZXAZ() (TY, TZ, TX, TA, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZXAW() (TY, TZ, TX, TA, TW) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZXAA() (TY, TZ, TX, TA, TA) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZYXX() (TY, TZ, TY, TX, TX) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZYXY() (TY, TZ, TY, TX, TY) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZYXZ() (TY, TZ, TY, TX, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZYXW() (TY, TZ, TY, TX, TW) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZYXA() (TY, TZ, TY, TX, TA) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZYYX() (TY, TZ, TY, TY, TX) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZYYY() (TY, TZ, TY, TY, TY) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZYYZ() (TY, TZ, TY, TY, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZYYW() (TY, TZ, TY, TY, TW) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZYYA() (TY, TZ, TY, TY, TA) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZYZX() (TY, TZ, TY, TZ, TX) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZYZY() (TY, TZ, TY, TZ, TY) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZYZZ() (TY, TZ, TY, TZ, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZYZW() (TY, TZ, TY, TZ, TW) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZYZA() (TY, TZ, TY, TZ, TA) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZYWX() (TY, TZ, TY, TW, TX) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZYWY() (TY, TZ, TY, TW, TY) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZYWZ() (TY, TZ, TY, TW, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZYWW() (TY, TZ, TY, TW, TW) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZYWA() (TY, TZ, TY, TW, TA) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZYAX() (TY, TZ, TY, TA, TX) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZYAY() (TY, TZ, TY, TA, TY) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZYAZ() (TY, TZ, TY, TA, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZYAW() (TY, TZ, TY, TA, TW) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZYAA() (TY, TZ, TY, TA, TA) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZZXX() (TY, TZ, TZ, TX, TX) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZZXY() (TY, TZ, TZ, TX, TY) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZZXZ() (TY, TZ, TZ, TX, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZZXW() (TY, TZ, TZ, TX, TW) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZZXA() (TY, TZ, TZ, TX, TA) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZZYX() (TY, TZ, TZ, TY, TX) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZZYY() (TY, TZ, TZ, TY, TY) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZZYZ() (TY, TZ, TZ, TY, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZZYW() (TY, TZ, TZ, TY, TW) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZZYA() (TY, TZ, TZ, TY, TA) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZZZX() (TY, TZ, TZ, TZ, TX) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZZZY() (TY, TZ, TZ, TZ, TY) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZZZZ() (TY, TZ, TZ, TZ, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZZZW() (TY, TZ, TZ, TZ, TW) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZZZA() (TY, TZ, TZ, TZ, TA) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZZWX() (TY, TZ, TZ, TW, TX) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZZWY() (TY, TZ, TZ, TW, TY) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZZWZ() (TY, TZ, TZ, TW, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZZWW() (TY, TZ, TZ, TW, TW) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZZWA() (TY, TZ, TZ, TW, TA) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZZAX() (TY, TZ, TZ, TA, TX) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZZAY() (TY, TZ, TZ, TA, TY) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZZAZ() (TY, TZ, TZ, TA, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZZAW() (TY, TZ, TZ, TA, TW) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZZAA() (TY, TZ, TZ, TA, TA) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZWXX() (TY, TZ, TW, TX, TX) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZWXY() (TY, TZ, TW, TX, TY) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZWXZ() (TY, TZ, TW, TX, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZWXW() (TY, TZ, TW, TX, TW) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZWXA() (TY, TZ, TW, TX, TA) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZWYX() (TY, TZ, TW, TY, TX) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZWYY() (TY, TZ, TW, TY, TY) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZWYZ() (TY, TZ, TW, TY, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZWYW() (TY, TZ, TW, TY, TW) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZWYA() (TY, TZ, TW, TY, TA) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZWZX() (TY, TZ, TW, TZ, TX) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZWZY() (TY, TZ, TW, TZ, TY) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZWZZ() (TY, TZ, TW, TZ, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZWZW() (TY, TZ, TW, TZ, TW) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZWZA() (TY, TZ, TW, TZ, TA) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZWWX() (TY, TZ, TW, TW, TX) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZWWY() (TY, TZ, TW, TW, TY) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZWWZ() (TY, TZ, TW, TW, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZWWW() (TY, TZ, TW, TW, TW) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZWWA() (TY, TZ, TW, TW, TA) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZWAX() (TY, TZ, TW, TA, TX) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZWAY() (TY, TZ, TW, TA, TY) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZWAZ() (TY, TZ, TW, TA, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZWAW() (TY, TZ, TW, TA, TW) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZWAA() (TY, TZ, TW, TA, TA) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZAXX() (TY, TZ, TA, TX, TX) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZAXY() (TY, TZ, TA, TX, TY) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZAXZ() (TY, TZ, TA, TX, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZAXW() (TY, TZ, TA, TX, TW) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZAXA() (TY, TZ, TA, TX, TA) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZAYX() (TY, TZ, TA, TY, TX) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZAYY() (TY, TZ, TA, TY, TY) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZAYZ() (TY, TZ, TA, TY, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZAYW() (TY, TZ, TA, TY, TW) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZAYA() (TY, TZ, TA, TY, TA) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZAZX() (TY, TZ, TA, TZ, TX) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZAZY() (TY, TZ, TA, TZ, TY) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZAZZ() (TY, TZ, TA, TZ, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZAZW() (TY, TZ, TA, TZ, TW) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZAZA() (TY, TZ, TA, TZ, TA) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZAWX() (TY, TZ, TA, TW, TX) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZAWY() (TY, TZ, TA, TW, TY) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZAWZ() (TY, TZ, TA, TW, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZAWW() (TY, TZ, TA, TW, TW) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZAWA() (TY, TZ, TA, TW, TA) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZAAX() (TY, TZ, TA, TA, TX) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZAAY() (TY, TZ, TA, TA, TY) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZAAZ() (TY, TZ, TA, TA, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZAAW() (TY, TZ, TA, TA, TW) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YZAAA() (TY, TZ, TA, TA, TA) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWXXX() (TY, TW, TX, TX, TX) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWXXY() (TY, TW, TX, TX, TY) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWXXZ() (TY, TW, TX, TX, TZ) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWXXW() (TY, TW, TX, TX, TW) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWXXA() (TY, TW, TX, TX, TA) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWXYX() (TY, TW, TX, TY, TX) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWXYY() (TY, TW, TX, TY, TY) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWXYZ() (TY, TW, TX, TY, TZ) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWXYW() (TY, TW, TX, TY, TW) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWXYA() (TY, TW, TX, TY, TA) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWXZX() (TY, TW, TX, TZ, TX) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWXZY() (TY, TW, TX, TZ, TY) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWXZZ() (TY, TW, TX, TZ, TZ) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWXZW() (TY, TW, TX, TZ, TW) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWXZA() (TY, TW, TX, TZ, TA) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWXWX() (TY, TW, TX, TW, TX) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWXWY() (TY, TW, TX, TW, TY) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWXWZ() (TY, TW, TX, TW, TZ) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWXWW() (TY, TW, TX, TW, TW) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWXWA() (TY, TW, TX, TW, TA) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWXAX() (TY, TW, TX, TA, TX) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWXAY() (TY, TW, TX, TA, TY) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWXAZ() (TY, TW, TX, TA, TZ) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWXAW() (TY, TW, TX, TA, TW) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWXAA() (TY, TW, TX, TA, TA) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWYXX() (TY, TW, TY, TX, TX) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWYXY() (TY, TW, TY, TX, TY) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWYXZ() (TY, TW, TY, TX, TZ) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWYXW() (TY, TW, TY, TX, TW) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWYXA() (TY, TW, TY, TX, TA) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWYYX() (TY, TW, TY, TY, TX) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWYYY() (TY, TW, TY, TY, TY) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWYYZ() (TY, TW, TY, TY, TZ) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWYYW() (TY, TW, TY, TY, TW) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWYYA() (TY, TW, TY, TY, TA) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWYZX() (TY, TW, TY, TZ, TX) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWYZY() (TY, TW, TY, TZ, TY) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWYZZ() (TY, TW, TY, TZ, TZ) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWYZW() (TY, TW, TY, TZ, TW) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWYZA() (TY, TW, TY, TZ, TA) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWYWX() (TY, TW, TY, TW, TX) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWYWY() (TY, TW, TY, TW, TY) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWYWZ() (TY, TW, TY, TW, TZ) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWYWW() (TY, TW, TY, TW, TW) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWYWA() (TY, TW, TY, TW, TA) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWYAX() (TY, TW, TY, TA, TX) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWYAY() (TY, TW, TY, TA, TY) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWYAZ() (TY, TW, TY, TA, TZ) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWYAW() (TY, TW, TY, TA, TW) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWYAA() (TY, TW, TY, TA, TA) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWZXX() (TY, TW, TZ, TX, TX) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWZXY() (TY, TW, TZ, TX, TY) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWZXZ() (TY, TW, TZ, TX, TZ) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWZXW() (TY, TW, TZ, TX, TW) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWZXA() (TY, TW, TZ, TX, TA) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWZYX() (TY, TW, TZ, TY, TX) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWZYY() (TY, TW, TZ, TY, TY) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWZYZ() (TY, TW, TZ, TY, TZ) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWZYW() (TY, TW, TZ, TY, TW) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWZYA() (TY, TW, TZ, TY, TA) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWZZX() (TY, TW, TZ, TZ, TX) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWZZY() (TY, TW, TZ, TZ, TY) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWZZZ() (TY, TW, TZ, TZ, TZ) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWZZW() (TY, TW, TZ, TZ, TW) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWZZA() (TY, TW, TZ, TZ, TA) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWZWX() (TY, TW, TZ, TW, TX) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWZWY() (TY, TW, TZ, TW, TY) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWZWZ() (TY, TW, TZ, TW, TZ) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWZWW() (TY, TW, TZ, TW, TW) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWZWA() (TY, TW, TZ, TW, TA) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWZAX() (TY, TW, TZ, TA, TX) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWZAY() (TY, TW, TZ, TA, TY) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWZAZ() (TY, TW, TZ, TA, TZ) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWZAW() (TY, TW, TZ, TA, TW) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWZAA() (TY, TW, TZ, TA, TA) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWWXX() (TY, TW, TW, TX, TX) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWWXY() (TY, TW, TW, TX, TY) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWWXZ() (TY, TW, TW, TX, TZ) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWWXW() (TY, TW, TW, TX, TW) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWWXA() (TY, TW, TW, TX, TA) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWWYX() (TY, TW, TW, TY, TX) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWWYY() (TY, TW, TW, TY, TY) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWWYZ() (TY, TW, TW, TY, TZ) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWWYW() (TY, TW, TW, TY, TW) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWWYA() (TY, TW, TW, TY, TA) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWWZX() (TY, TW, TW, TZ, TX) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWWZY() (TY, TW, TW, TZ, TY) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWWZZ() (TY, TW, TW, TZ, TZ) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWWZW() (TY, TW, TW, TZ, TW) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWWZA() (TY, TW, TW, TZ, TA) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWWWX() (TY, TW, TW, TW, TX) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWWWY() (TY, TW, TW, TW, TY) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWWWZ() (TY, TW, TW, TW, TZ) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWWWW() (TY, TW, TW, TW, TW) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWWWA() (TY, TW, TW, TW, TA) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWWAX() (TY, TW, TW, TA, TX) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWWAY() (TY, TW, TW, TA, TY) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWWAZ() (TY, TW, TW, TA, TZ) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWWAW() (TY, TW, TW, TA, TW) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWWAA() (TY, TW, TW, TA, TA) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWAXX() (TY, TW, TA, TX, TX) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWAXY() (TY, TW, TA, TX, TY) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWAXZ() (TY, TW, TA, TX, TZ) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWAXW() (TY, TW, TA, TX, TW) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWAXA() (TY, TW, TA, TX, TA) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWAYX() (TY, TW, TA, TY, TX) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWAYY() (TY, TW, TA, TY, TY) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWAYZ() (TY, TW, TA, TY, TZ) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWAYW() (TY, TW, TA, TY, TW) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWAYA() (TY, TW, TA, TY, TA) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWAZX() (TY, TW, TA, TZ, TX) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWAZY() (TY, TW, TA, TZ, TY) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWAZZ() (TY, TW, TA, TZ, TZ) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWAZW() (TY, TW, TA, TZ, TW) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWAZA() (TY, TW, TA, TZ, TA) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWAWX() (TY, TW, TA, TW, TX) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWAWY() (TY, TW, TA, TW, TY) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWAWZ() (TY, TW, TA, TW, TZ) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWAWW() (TY, TW, TA, TW, TW) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWAWA() (TY, TW, TA, TW, TA) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWAAX() (TY, TW, TA, TA, TX) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWAAY() (TY, TW, TA, TA, TY) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWAAZ() (TY, TW, TA, TA, TZ) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWAAW() (TY, TW, TA, TA, TW) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YWAAA() (TY, TW, TA, TA, TA) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAXXX() (TY, TA, TX, TX, TX) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAXXY() (TY, TA, TX, TX, TY) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAXXZ() (TY, TA, TX, TX, TZ) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAXXW() (TY, TA, TX, TX, TW) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAXXA() (TY, TA, TX, TX, TA) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAXYX() (TY, TA, TX, TY, TX) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAXYY() (TY, TA, TX, TY, TY) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAXYZ() (TY, TA, TX, TY, TZ) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAXYW() (TY, TA, TX, TY, TW) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAXYA() (TY, TA, TX, TY, TA) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAXZX() (TY, TA, TX, TZ, TX) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAXZY() (TY, TA, TX, TZ, TY) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAXZZ() (TY, TA, TX, TZ, TZ) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAXZW() (TY, TA, TX, TZ, TW) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAXZA() (TY, TA, TX, TZ, TA) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAXWX() (TY, TA, TX, TW, TX) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAXWY() (TY, TA, TX, TW, TY) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAXWZ() (TY, TA, TX, TW, TZ) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAXWW() (TY, TA, TX, TW, TW) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAXWA() (TY, TA, TX, TW, TA) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAXAX() (TY, TA, TX, TA, TX) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAXAY() (TY, TA, TX, TA, TY) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAXAZ() (TY, TA, TX, TA, TZ) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAXAW() (TY, TA, TX, TA, TW) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAXAA() (TY, TA, TX, TA, TA) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAYXX() (TY, TA, TY, TX, TX) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAYXY() (TY, TA, TY, TX, TY) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAYXZ() (TY, TA, TY, TX, TZ) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAYXW() (TY, TA, TY, TX, TW) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAYXA() (TY, TA, TY, TX, TA) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAYYX() (TY, TA, TY, TY, TX) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAYYY() (TY, TA, TY, TY, TY) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAYYZ() (TY, TA, TY, TY, TZ) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAYYW() (TY, TA, TY, TY, TW) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAYYA() (TY, TA, TY, TY, TA) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAYZX() (TY, TA, TY, TZ, TX) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAYZY() (TY, TA, TY, TZ, TY) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAYZZ() (TY, TA, TY, TZ, TZ) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAYZW() (TY, TA, TY, TZ, TW) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAYZA() (TY, TA, TY, TZ, TA) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAYWX() (TY, TA, TY, TW, TX) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAYWY() (TY, TA, TY, TW, TY) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAYWZ() (TY, TA, TY, TW, TZ) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAYWW() (TY, TA, TY, TW, TW) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAYWA() (TY, TA, TY, TW, TA) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAYAX() (TY, TA, TY, TA, TX) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAYAY() (TY, TA, TY, TA, TY) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAYAZ() (TY, TA, TY, TA, TZ) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAYAW() (TY, TA, TY, TA, TW) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAYAA() (TY, TA, TY, TA, TA) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAZXX() (TY, TA, TZ, TX, TX) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAZXY() (TY, TA, TZ, TX, TY) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAZXZ() (TY, TA, TZ, TX, TZ) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAZXW() (TY, TA, TZ, TX, TW) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAZXA() (TY, TA, TZ, TX, TA) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAZYX() (TY, TA, TZ, TY, TX) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAZYY() (TY, TA, TZ, TY, TY) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAZYZ() (TY, TA, TZ, TY, TZ) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAZYW() (TY, TA, TZ, TY, TW) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAZYA() (TY, TA, TZ, TY, TA) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAZZX() (TY, TA, TZ, TZ, TX) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAZZY() (TY, TA, TZ, TZ, TY) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAZZZ() (TY, TA, TZ, TZ, TZ) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAZZW() (TY, TA, TZ, TZ, TW) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAZZA() (TY, TA, TZ, TZ, TA) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAZWX() (TY, TA, TZ, TW, TX) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAZWY() (TY, TA, TZ, TW, TY) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAZWZ() (TY, TA, TZ, TW, TZ) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAZWW() (TY, TA, TZ, TW, TW) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAZWA() (TY, TA, TZ, TW, TA) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAZAX() (TY, TA, TZ, TA, TX) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAZAY() (TY, TA, TZ, TA, TY) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAZAZ() (TY, TA, TZ, TA, TZ) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAZAW() (TY, TA, TZ, TA, TW) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAZAA() (TY, TA, TZ, TA, TA) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAWXX() (TY, TA, TW, TX, TX) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAWXY() (TY, TA, TW, TX, TY) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAWXZ() (TY, TA, TW, TX, TZ) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAWXW() (TY, TA, TW, TX, TW) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAWXA() (TY, TA, TW, TX, TA) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAWYX() (TY, TA, TW, TY, TX) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAWYY() (TY, TA, TW, TY, TY) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAWYZ() (TY, TA, TW, TY, TZ) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAWYW() (TY, TA, TW, TY, TW) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAWYA() (TY, TA, TW, TY, TA) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAWZX() (TY, TA, TW, TZ, TX) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAWZY() (TY, TA, TW, TZ, TY) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAWZZ() (TY, TA, TW, TZ, TZ) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAWZW() (TY, TA, TW, TZ, TW) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAWZA() (TY, TA, TW, TZ, TA) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAWWX() (TY, TA, TW, TW, TX) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAWWY() (TY, TA, TW, TW, TY) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAWWZ() (TY, TA, TW, TW, TZ) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAWWW() (TY, TA, TW, TW, TW) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAWWA() (TY, TA, TW, TW, TA) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAWAX() (TY, TA, TW, TA, TX) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAWAY() (TY, TA, TW, TA, TY) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAWAZ() (TY, TA, TW, TA, TZ) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAWAW() (TY, TA, TW, TA, TW) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAWAA() (TY, TA, TW, TA, TA) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAAXX() (TY, TA, TA, TX, TX) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAAXY() (TY, TA, TA, TX, TY) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAAXZ() (TY, TA, TA, TX, TZ) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAAXW() (TY, TA, TA, TX, TW) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAAXA() (TY, TA, TA, TX, TA) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAAYX() (TY, TA, TA, TY, TX) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAAYY() (TY, TA, TA, TY, TY) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAAYZ() (TY, TA, TA, TY, TZ) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAAYW() (TY, TA, TA, TY, TW) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAAYA() (TY, TA, TA, TY, TA) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAAZX() (TY, TA, TA, TZ, TX) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAAZY() (TY, TA, TA, TZ, TY) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAAZZ() (TY, TA, TA, TZ, TZ) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAAZW() (TY, TA, TA, TZ, TW) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAAZA() (TY, TA, TA, TZ, TA) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAAWX() (TY, TA, TA, TW, TX) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAAWY() (TY, TA, TA, TW, TY) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAAWZ() (TY, TA, TA, TW, TZ) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAAWW() (TY, TA, TA, TW, TW) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAAWA() (TY, TA, TA, TW, TA) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAAAX() (TY, TA, TA, TA, TX) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAAAY() (TY, TA, TA, TA, TY) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAAAZ() (TY, TA, TA, TA, TZ) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAAAW() (TY, TA, TA, TA, TW) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) YAAAA() (TY, TA, TA, TA, TA) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXXXX() (TZ, TX, TX, TX, TX) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXXXY() (TZ, TX, TX, TX, TY) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXXXZ() (TZ, TX, TX, TX, TZ) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXXXW() (TZ, TX, TX, TX, TW) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXXXA() (TZ, TX, TX, TX, TA) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXXYX() (TZ, TX, TX, TY, TX) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXXYY() (TZ, TX, TX, TY, TY) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXXYZ() (TZ, TX, TX, TY, TZ) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXXYW() (TZ, TX, TX, TY, TW) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXXYA() (TZ, TX, TX, TY, TA) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXXZX() (TZ, TX, TX, TZ, TX) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXXZY() (TZ, TX, TX, TZ, TY) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXXZZ() (TZ, TX, TX, TZ, TZ) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXXZW() (TZ, TX, TX, TZ, TW) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXXZA() (TZ, TX, TX, TZ, TA) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXXWX() (TZ, TX, TX, TW, TX) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXXWY() (TZ, TX, TX, TW, TY) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXXWZ() (TZ, TX, TX, TW, TZ) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXXWW() (TZ, TX, TX, TW, TW) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXXWA() (TZ, TX, TX, TW, TA) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXXAX() (TZ, TX, TX, TA, TX) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXXAY() (TZ, TX, TX, TA, TY) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXXAZ() (TZ, TX, TX, TA, TZ) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXXAW() (TZ, TX, TX, TA, TW) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXXAA() (TZ, TX, TX, TA, TA) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXYXX() (TZ, TX, TY, TX, TX) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXYXY() (TZ, TX, TY, TX, TY) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXYXZ() (TZ, TX, TY, TX, TZ) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXYXW() (TZ, TX, TY, TX, TW) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXYXA() (TZ, TX, TY, TX, TA) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXYYX() (TZ, TX, TY, TY, TX) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXYYY() (TZ, TX, TY, TY, TY) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXYYZ() (TZ, TX, TY, TY, TZ) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXYYW() (TZ, TX, TY, TY, TW) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXYYA() (TZ, TX, TY, TY, TA) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXYZX() (TZ, TX, TY, TZ, TX) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXYZY() (TZ, TX, TY, TZ, TY) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXYZZ() (TZ, TX, TY, TZ, TZ) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXYZW() (TZ, TX, TY, TZ, TW) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXYZA() (TZ, TX, TY, TZ, TA) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXYWX() (TZ, TX, TY, TW, TX) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXYWY() (TZ, TX, TY, TW, TY) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXYWZ() (TZ, TX, TY, TW, TZ) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXYWW() (TZ, TX, TY, TW, TW) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXYWA() (TZ, TX, TY, TW, TA) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXYAX() (TZ, TX, TY, TA, TX) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXYAY() (TZ, TX, TY, TA, TY) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXYAZ() (TZ, TX, TY, TA, TZ) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXYAW() (TZ, TX, TY, TA, TW) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXYAA() (TZ, TX, TY, TA, TA) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXZXX() (TZ, TX, TZ, TX, TX) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXZXY() (TZ, TX, TZ, TX, TY) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXZXZ() (TZ, TX, TZ, TX, TZ) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXZXW() (TZ, TX, TZ, TX, TW) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXZXA() (TZ, TX, TZ, TX, TA) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXZYX() (TZ, TX, TZ, TY, TX) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXZYY() (TZ, TX, TZ, TY, TY) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXZYZ() (TZ, TX, TZ, TY, TZ) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXZYW() (TZ, TX, TZ, TY, TW) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXZYA() (TZ, TX, TZ, TY, TA) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXZZX() (TZ, TX, TZ, TZ, TX) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXZZY() (TZ, TX, TZ, TZ, TY) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXZZZ() (TZ, TX, TZ, TZ, TZ) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXZZW() (TZ, TX, TZ, TZ, TW) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXZZA() (TZ, TX, TZ, TZ, TA) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXZWX() (TZ, TX, TZ, TW, TX) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXZWY() (TZ, TX, TZ, TW, TY) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXZWZ() (TZ, TX, TZ, TW, TZ) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXZWW() (TZ, TX, TZ, TW, TW) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXZWA() (TZ, TX, TZ, TW, TA) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXZAX() (TZ, TX, TZ, TA, TX) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXZAY() (TZ, TX, TZ, TA, TY) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXZAZ() (TZ, TX, TZ, TA, TZ) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXZAW() (TZ, TX, TZ, TA, TW) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXZAA() (TZ, TX, TZ, TA, TA) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXWXX() (TZ, TX, TW, TX, TX) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXWXY() (TZ, TX, TW, TX, TY) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXWXZ() (TZ, TX, TW, TX, TZ) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXWXW() (TZ, TX, TW, TX, TW) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXWXA() (TZ, TX, TW, TX, TA) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXWYX() (TZ, TX, TW, TY, TX) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXWYY() (TZ, TX, TW, TY, TY) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXWYZ() (TZ, TX, TW, TY, TZ) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXWYW() (TZ, TX, TW, TY, TW) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXWYA() (TZ, TX, TW, TY, TA) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXWZX() (TZ, TX, TW, TZ, TX) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXWZY() (TZ, TX, TW, TZ, TY) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXWZZ() (TZ, TX, TW, TZ, TZ) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXWZW() (TZ, TX, TW, TZ, TW) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXWZA() (TZ, TX, TW, TZ, TA) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXWWX() (TZ, TX, TW, TW, TX) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXWWY() (TZ, TX, TW, TW, TY) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXWWZ() (TZ, TX, TW, TW, TZ) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXWWW() (TZ, TX, TW, TW, TW) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXWWA() (TZ, TX, TW, TW, TA) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXWAX() (TZ, TX, TW, TA, TX) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXWAY() (TZ, TX, TW, TA, TY) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXWAZ() (TZ, TX, TW, TA, TZ) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXWAW() (TZ, TX, TW, TA, TW) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXWAA() (TZ, TX, TW, TA, TA) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXAXX() (TZ, TX, TA, TX, TX) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXAXY() (TZ, TX, TA, TX, TY) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXAXZ() (TZ, TX, TA, TX, TZ) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXAXW() (TZ, TX, TA, TX, TW) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXAXA() (TZ, TX, TA, TX, TA) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXAYX() (TZ, TX, TA, TY, TX) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXAYY() (TZ, TX, TA, TY, TY) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXAYZ() (TZ, TX, TA, TY, TZ) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXAYW() (TZ, TX, TA, TY, TW) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXAYA() (TZ, TX, TA, TY, TA) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXAZX() (TZ, TX, TA, TZ, TX) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXAZY() (TZ, TX, TA, TZ, TY) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXAZZ() (TZ, TX, TA, TZ, TZ) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXAZW() (TZ, TX, TA, TZ, TW) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXAZA() (TZ, TX, TA, TZ, TA) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXAWX() (TZ, TX, TA, TW, TX) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXAWY() (TZ, TX, TA, TW, TY) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXAWZ() (TZ, TX, TA, TW, TZ) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXAWW() (TZ, TX, TA, TW, TW) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXAWA() (TZ, TX, TA, TW, TA) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXAAX() (TZ, TX, TA, TA, TX) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXAAY() (TZ, TX, TA, TA, TY) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXAAZ() (TZ, TX, TA, TA, TZ) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXAAW() (TZ, TX, TA, TA, TW) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZXAAA() (TZ, TX, TA, TA, TA) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYXXX() (TZ, TY, TX, TX, TX) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYXXY() (TZ, TY, TX, TX, TY) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYXXZ() (TZ, TY, TX, TX, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYXXW() (TZ, TY, TX, TX, TW) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYXXA() (TZ, TY, TX, TX, TA) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYXYX() (TZ, TY, TX, TY, TX) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYXYY() (TZ, TY, TX, TY, TY) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYXYZ() (TZ, TY, TX, TY, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYXYW() (TZ, TY, TX, TY, TW) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYXYA() (TZ, TY, TX, TY, TA) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYXZX() (TZ, TY, TX, TZ, TX) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYXZY() (TZ, TY, TX, TZ, TY) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYXZZ() (TZ, TY, TX, TZ, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYXZW() (TZ, TY, TX, TZ, TW) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYXZA() (TZ, TY, TX, TZ, TA) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYXWX() (TZ, TY, TX, TW, TX) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYXWY() (TZ, TY, TX, TW, TY) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYXWZ() (TZ, TY, TX, TW, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYXWW() (TZ, TY, TX, TW, TW) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYXWA() (TZ, TY, TX, TW, TA) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYXAX() (TZ, TY, TX, TA, TX) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYXAY() (TZ, TY, TX, TA, TY) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYXAZ() (TZ, TY, TX, TA, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYXAW() (TZ, TY, TX, TA, TW) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYXAA() (TZ, TY, TX, TA, TA) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYYXX() (TZ, TY, TY, TX, TX) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYYXY() (TZ, TY, TY, TX, TY) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYYXZ() (TZ, TY, TY, TX, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYYXW() (TZ, TY, TY, TX, TW) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYYXA() (TZ, TY, TY, TX, TA) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYYYX() (TZ, TY, TY, TY, TX) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYYYY() (TZ, TY, TY, TY, TY) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYYYZ() (TZ, TY, TY, TY, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYYYW() (TZ, TY, TY, TY, TW) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYYYA() (TZ, TY, TY, TY, TA) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYYZX() (TZ, TY, TY, TZ, TX) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYYZY() (TZ, TY, TY, TZ, TY) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYYZZ() (TZ, TY, TY, TZ, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYYZW() (TZ, TY, TY, TZ, TW) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYYZA() (TZ, TY, TY, TZ, TA) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYYWX() (TZ, TY, TY, TW, TX) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYYWY() (TZ, TY, TY, TW, TY) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYYWZ() (TZ, TY, TY, TW, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYYWW() (TZ, TY, TY, TW, TW) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYYWA() (TZ, TY, TY, TW, TA) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYYAX() (TZ, TY, TY, TA, TX) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYYAY() (TZ, TY, TY, TA, TY) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYYAZ() (TZ, TY, TY, TA, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYYAW() (TZ, TY, TY, TA, TW) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYYAA() (TZ, TY, TY, TA, TA) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYZXX() (TZ, TY, TZ, TX, TX) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYZXY() (TZ, TY, TZ, TX, TY) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYZXZ() (TZ, TY, TZ, TX, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYZXW() (TZ, TY, TZ, TX, TW) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYZXA() (TZ, TY, TZ, TX, TA) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYZYX() (TZ, TY, TZ, TY, TX) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYZYY() (TZ, TY, TZ, TY, TY) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYZYZ() (TZ, TY, TZ, TY, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYZYW() (TZ, TY, TZ, TY, TW) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYZYA() (TZ, TY, TZ, TY, TA) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYZZX() (TZ, TY, TZ, TZ, TX) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYZZY() (TZ, TY, TZ, TZ, TY) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYZZZ() (TZ, TY, TZ, TZ, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYZZW() (TZ, TY, TZ, TZ, TW) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYZZA() (TZ, TY, TZ, TZ, TA) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYZWX() (TZ, TY, TZ, TW, TX) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYZWY() (TZ, TY, TZ, TW, TY) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYZWZ() (TZ, TY, TZ, TW, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYZWW() (TZ, TY, TZ, TW, TW) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYZWA() (TZ, TY, TZ, TW, TA) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYZAX() (TZ, TY, TZ, TA, TX) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYZAY() (TZ, TY, TZ, TA, TY) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYZAZ() (TZ, TY, TZ, TA, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYZAW() (TZ, TY, TZ, TA, TW) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYZAA() (TZ, TY, TZ, TA, TA) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYWXX() (TZ, TY, TW, TX, TX) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYWXY() (TZ, TY, TW, TX, TY) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYWXZ() (TZ, TY, TW, TX, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYWXW() (TZ, TY, TW, TX, TW) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYWXA() (TZ, TY, TW, TX, TA) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYWYX() (TZ, TY, TW, TY, TX) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYWYY() (TZ, TY, TW, TY, TY) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYWYZ() (TZ, TY, TW, TY, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYWYW() (TZ, TY, TW, TY, TW) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYWYA() (TZ, TY, TW, TY, TA) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYWZX() (TZ, TY, TW, TZ, TX) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYWZY() (TZ, TY, TW, TZ, TY) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYWZZ() (TZ, TY, TW, TZ, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYWZW() (TZ, TY, TW, TZ, TW) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYWZA() (TZ, TY, TW, TZ, TA) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYWWX() (TZ, TY, TW, TW, TX) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYWWY() (TZ, TY, TW, TW, TY) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYWWZ() (TZ, TY, TW, TW, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYWWW() (TZ, TY, TW, TW, TW) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYWWA() (TZ, TY, TW, TW, TA) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYWAX() (TZ, TY, TW, TA, TX) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYWAY() (TZ, TY, TW, TA, TY) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYWAZ() (TZ, TY, TW, TA, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYWAW() (TZ, TY, TW, TA, TW) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYWAA() (TZ, TY, TW, TA, TA) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYAXX() (TZ, TY, TA, TX, TX) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYAXY() (TZ, TY, TA, TX, TY) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYAXZ() (TZ, TY, TA, TX, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYAXW() (TZ, TY, TA, TX, TW) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYAXA() (TZ, TY, TA, TX, TA) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYAYX() (TZ, TY, TA, TY, TX) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYAYY() (TZ, TY, TA, TY, TY) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYAYZ() (TZ, TY, TA, TY, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYAYW() (TZ, TY, TA, TY, TW) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYAYA() (TZ, TY, TA, TY, TA) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYAZX() (TZ, TY, TA, TZ, TX) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYAZY() (TZ, TY, TA, TZ, TY) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYAZZ() (TZ, TY, TA, TZ, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYAZW() (TZ, TY, TA, TZ, TW) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYAZA() (TZ, TY, TA, TZ, TA) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYAWX() (TZ, TY, TA, TW, TX) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYAWY() (TZ, TY, TA, TW, TY) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYAWZ() (TZ, TY, TA, TW, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYAWW() (TZ, TY, TA, TW, TW) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYAWA() (TZ, TY, TA, TW, TA) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYAAX() (TZ, TY, TA, TA, TX) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYAAY() (TZ, TY, TA, TA, TY) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYAAZ() (TZ, TY, TA, TA, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYAAW() (TZ, TY, TA, TA, TW) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZYAAA() (TZ, TY, TA, TA, TA) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZXXX() (TZ, TZ, TX, TX, TX) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZXXY() (TZ, TZ, TX, TX, TY) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZXXZ() (TZ, TZ, TX, TX, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZXXW() (TZ, TZ, TX, TX, TW) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZXXA() (TZ, TZ, TX, TX, TA) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZXYX() (TZ, TZ, TX, TY, TX) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZXYY() (TZ, TZ, TX, TY, TY) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZXYZ() (TZ, TZ, TX, TY, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZXYW() (TZ, TZ, TX, TY, TW) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZXYA() (TZ, TZ, TX, TY, TA) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZXZX() (TZ, TZ, TX, TZ, TX) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZXZY() (TZ, TZ, TX, TZ, TY) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZXZZ() (TZ, TZ, TX, TZ, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZXZW() (TZ, TZ, TX, TZ, TW) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZXZA() (TZ, TZ, TX, TZ, TA) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZXWX() (TZ, TZ, TX, TW, TX) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZXWY() (TZ, TZ, TX, TW, TY) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZXWZ() (TZ, TZ, TX, TW, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZXWW() (TZ, TZ, TX, TW, TW) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZXWA() (TZ, TZ, TX, TW, TA) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZXAX() (TZ, TZ, TX, TA, TX) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZXAY() (TZ, TZ, TX, TA, TY) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZXAZ() (TZ, TZ, TX, TA, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZXAW() (TZ, TZ, TX, TA, TW) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZXAA() (TZ, TZ, TX, TA, TA) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZYXX() (TZ, TZ, TY, TX, TX) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZYXY() (TZ, TZ, TY, TX, TY) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZYXZ() (TZ, TZ, TY, TX, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZYXW() (TZ, TZ, TY, TX, TW) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZYXA() (TZ, TZ, TY, TX, TA) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZYYX() (TZ, TZ, TY, TY, TX) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZYYY() (TZ, TZ, TY, TY, TY) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZYYZ() (TZ, TZ, TY, TY, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZYYW() (TZ, TZ, TY, TY, TW) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZYYA() (TZ, TZ, TY, TY, TA) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZYZX() (TZ, TZ, TY, TZ, TX) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZYZY() (TZ, TZ, TY, TZ, TY) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZYZZ() (TZ, TZ, TY, TZ, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZYZW() (TZ, TZ, TY, TZ, TW) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZYZA() (TZ, TZ, TY, TZ, TA) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZYWX() (TZ, TZ, TY, TW, TX) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZYWY() (TZ, TZ, TY, TW, TY) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZYWZ() (TZ, TZ, TY, TW, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZYWW() (TZ, TZ, TY, TW, TW) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZYWA() (TZ, TZ, TY, TW, TA) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZYAX() (TZ, TZ, TY, TA, TX) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZYAY() (TZ, TZ, TY, TA, TY) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZYAZ() (TZ, TZ, TY, TA, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZYAW() (TZ, TZ, TY, TA, TW) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZYAA() (TZ, TZ, TY, TA, TA) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZZXX() (TZ, TZ, TZ, TX, TX) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZZXY() (TZ, TZ, TZ, TX, TY) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZZXZ() (TZ, TZ, TZ, TX, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZZXW() (TZ, TZ, TZ, TX, TW) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZZXA() (TZ, TZ, TZ, TX, TA) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZZYX() (TZ, TZ, TZ, TY, TX) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZZYY() (TZ, TZ, TZ, TY, TY) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZZYZ() (TZ, TZ, TZ, TY, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZZYW() (TZ, TZ, TZ, TY, TW) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZZYA() (TZ, TZ, TZ, TY, TA) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZZZX() (TZ, TZ, TZ, TZ, TX) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZZZY() (TZ, TZ, TZ, TZ, TY) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZZZZ() (TZ, TZ, TZ, TZ, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZZZW() (TZ, TZ, TZ, TZ, TW) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZZZA() (TZ, TZ, TZ, TZ, TA) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZZWX() (TZ, TZ, TZ, TW, TX) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZZWY() (TZ, TZ, TZ, TW, TY) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZZWZ() (TZ, TZ, TZ, TW, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZZWW() (TZ, TZ, TZ, TW, TW) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZZWA() (TZ, TZ, TZ, TW, TA) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZZAX() (TZ, TZ, TZ, TA, TX) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZZAY() (TZ, TZ, TZ, TA, TY) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZZAZ() (TZ, TZ, TZ, TA, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZZAW() (TZ, TZ, TZ, TA, TW) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZZAA() (TZ, TZ, TZ, TA, TA) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZWXX() (TZ, TZ, TW, TX, TX) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZWXY() (TZ, TZ, TW, TX, TY) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZWXZ() (TZ, TZ, TW, TX, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZWXW() (TZ, TZ, TW, TX, TW) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZWXA() (TZ, TZ, TW, TX, TA) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZWYX() (TZ, TZ, TW, TY, TX) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZWYY() (TZ, TZ, TW, TY, TY) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZWYZ() (TZ, TZ, TW, TY, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZWYW() (TZ, TZ, TW, TY, TW) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZWYA() (TZ, TZ, TW, TY, TA) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZWZX() (TZ, TZ, TW, TZ, TX) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZWZY() (TZ, TZ, TW, TZ, TY) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZWZZ() (TZ, TZ, TW, TZ, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZWZW() (TZ, TZ, TW, TZ, TW) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZWZA() (TZ, TZ, TW, TZ, TA) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZWWX() (TZ, TZ, TW, TW, TX) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZWWY() (TZ, TZ, TW, TW, TY) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZWWZ() (TZ, TZ, TW, TW, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZWWW() (TZ, TZ, TW, TW, TW) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZWWA() (TZ, TZ, TW, TW, TA) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZWAX() (TZ, TZ, TW, TA, TX) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZWAY() (TZ, TZ, TW, TA, TY) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZWAZ() (TZ, TZ, TW, TA, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZWAW() (TZ, TZ, TW, TA, TW) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZWAA() (TZ, TZ, TW, TA, TA) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZAXX() (TZ, TZ, TA, TX, TX) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZAXY() (TZ, TZ, TA, TX, TY) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZAXZ() (TZ, TZ, TA, TX, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZAXW() (TZ, TZ, TA, TX, TW) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZAXA() (TZ, TZ, TA, TX, TA) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZAYX() (TZ, TZ, TA, TY, TX) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZAYY() (TZ, TZ, TA, TY, TY) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZAYZ() (TZ, TZ, TA, TY, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZAYW() (TZ, TZ, TA, TY, TW) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZAYA() (TZ, TZ, TA, TY, TA) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZAZX() (TZ, TZ, TA, TZ, TX) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZAZY() (TZ, TZ, TA, TZ, TY) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZAZZ() (TZ, TZ, TA, TZ, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZAZW() (TZ, TZ, TA, TZ, TW) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZAZA() (TZ, TZ, TA, TZ, TA) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZAWX() (TZ, TZ, TA, TW, TX) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZAWY() (TZ, TZ, TA, TW, TY) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZAWZ() (TZ, TZ, TA, TW, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZAWW() (TZ, TZ, TA, TW, TW) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZAWA() (TZ, TZ, TA, TW, TA) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZAAX() (TZ, TZ, TA, TA, TX) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZAAY() (TZ, TZ, TA, TA, TY) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZAAZ() (TZ, TZ, TA, TA, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZAAW() (TZ, TZ, TA, TA, TW) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZZAAA() (TZ, TZ, TA, TA, TA) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWXXX() (TZ, TW, TX, TX, TX) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWXXY() (TZ, TW, TX, TX, TY) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWXXZ() (TZ, TW, TX, TX, TZ) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWXXW() (TZ, TW, TX, TX, TW) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWXXA() (TZ, TW, TX, TX, TA) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWXYX() (TZ, TW, TX, TY, TX) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWXYY() (TZ, TW, TX, TY, TY) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWXYZ() (TZ, TW, TX, TY, TZ) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWXYW() (TZ, TW, TX, TY, TW) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWXYA() (TZ, TW, TX, TY, TA) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWXZX() (TZ, TW, TX, TZ, TX) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWXZY() (TZ, TW, TX, TZ, TY) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWXZZ() (TZ, TW, TX, TZ, TZ) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWXZW() (TZ, TW, TX, TZ, TW) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWXZA() (TZ, TW, TX, TZ, TA) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWXWX() (TZ, TW, TX, TW, TX) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWXWY() (TZ, TW, TX, TW, TY) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWXWZ() (TZ, TW, TX, TW, TZ) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWXWW() (TZ, TW, TX, TW, TW) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWXWA() (TZ, TW, TX, TW, TA) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWXAX() (TZ, TW, TX, TA, TX) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWXAY() (TZ, TW, TX, TA, TY) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWXAZ() (TZ, TW, TX, TA, TZ) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWXAW() (TZ, TW, TX, TA, TW) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWXAA() (TZ, TW, TX, TA, TA) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWYXX() (TZ, TW, TY, TX, TX) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWYXY() (TZ, TW, TY, TX, TY) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWYXZ() (TZ, TW, TY, TX, TZ) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWYXW() (TZ, TW, TY, TX, TW) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWYXA() (TZ, TW, TY, TX, TA) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWYYX() (TZ, TW, TY, TY, TX) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWYYY() (TZ, TW, TY, TY, TY) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWYYZ() (TZ, TW, TY, TY, TZ) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWYYW() (TZ, TW, TY, TY, TW) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWYYA() (TZ, TW, TY, TY, TA) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWYZX() (TZ, TW, TY, TZ, TX) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWYZY() (TZ, TW, TY, TZ, TY) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWYZZ() (TZ, TW, TY, TZ, TZ) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWYZW() (TZ, TW, TY, TZ, TW) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWYZA() (TZ, TW, TY, TZ, TA) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWYWX() (TZ, TW, TY, TW, TX) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWYWY() (TZ, TW, TY, TW, TY) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWYWZ() (TZ, TW, TY, TW, TZ) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWYWW() (TZ, TW, TY, TW, TW) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWYWA() (TZ, TW, TY, TW, TA) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWYAX() (TZ, TW, TY, TA, TX) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWYAY() (TZ, TW, TY, TA, TY) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWYAZ() (TZ, TW, TY, TA, TZ) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWYAW() (TZ, TW, TY, TA, TW) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWYAA() (TZ, TW, TY, TA, TA) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWZXX() (TZ, TW, TZ, TX, TX) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWZXY() (TZ, TW, TZ, TX, TY) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWZXZ() (TZ, TW, TZ, TX, TZ) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWZXW() (TZ, TW, TZ, TX, TW) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWZXA() (TZ, TW, TZ, TX, TA) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWZYX() (TZ, TW, TZ, TY, TX) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWZYY() (TZ, TW, TZ, TY, TY) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWZYZ() (TZ, TW, TZ, TY, TZ) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWZYW() (TZ, TW, TZ, TY, TW) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWZYA() (TZ, TW, TZ, TY, TA) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWZZX() (TZ, TW, TZ, TZ, TX) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWZZY() (TZ, TW, TZ, TZ, TY) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWZZZ() (TZ, TW, TZ, TZ, TZ) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWZZW() (TZ, TW, TZ, TZ, TW) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWZZA() (TZ, TW, TZ, TZ, TA) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWZWX() (TZ, TW, TZ, TW, TX) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWZWY() (TZ, TW, TZ, TW, TY) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWZWZ() (TZ, TW, TZ, TW, TZ) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWZWW() (TZ, TW, TZ, TW, TW) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWZWA() (TZ, TW, TZ, TW, TA) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWZAX() (TZ, TW, TZ, TA, TX) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWZAY() (TZ, TW, TZ, TA, TY) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWZAZ() (TZ, TW, TZ, TA, TZ) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWZAW() (TZ, TW, TZ, TA, TW) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWZAA() (TZ, TW, TZ, TA, TA) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWWXX() (TZ, TW, TW, TX, TX) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWWXY() (TZ, TW, TW, TX, TY) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWWXZ() (TZ, TW, TW, TX, TZ) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWWXW() (TZ, TW, TW, TX, TW) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWWXA() (TZ, TW, TW, TX, TA) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWWYX() (TZ, TW, TW, TY, TX) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWWYY() (TZ, TW, TW, TY, TY) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWWYZ() (TZ, TW, TW, TY, TZ) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWWYW() (TZ, TW, TW, TY, TW) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWWYA() (TZ, TW, TW, TY, TA) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWWZX() (TZ, TW, TW, TZ, TX) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWWZY() (TZ, TW, TW, TZ, TY) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWWZZ() (TZ, TW, TW, TZ, TZ) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWWZW() (TZ, TW, TW, TZ, TW) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWWZA() (TZ, TW, TW, TZ, TA) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWWWX() (TZ, TW, TW, TW, TX) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWWWY() (TZ, TW, TW, TW, TY) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWWWZ() (TZ, TW, TW, TW, TZ) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWWWW() (TZ, TW, TW, TW, TW) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWWWA() (TZ, TW, TW, TW, TA) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWWAX() (TZ, TW, TW, TA, TX) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWWAY() (TZ, TW, TW, TA, TY) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWWAZ() (TZ, TW, TW, TA, TZ) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWWAW() (TZ, TW, TW, TA, TW) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWWAA() (TZ, TW, TW, TA, TA) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWAXX() (TZ, TW, TA, TX, TX) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWAXY() (TZ, TW, TA, TX, TY) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWAXZ() (TZ, TW, TA, TX, TZ) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWAXW() (TZ, TW, TA, TX, TW) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWAXA() (TZ, TW, TA, TX, TA) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWAYX() (TZ, TW, TA, TY, TX) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWAYY() (TZ, TW, TA, TY, TY) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWAYZ() (TZ, TW, TA, TY, TZ) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWAYW() (TZ, TW, TA, TY, TW) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWAYA() (TZ, TW, TA, TY, TA) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWAZX() (TZ, TW, TA, TZ, TX) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWAZY() (TZ, TW, TA, TZ, TY) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWAZZ() (TZ, TW, TA, TZ, TZ) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWAZW() (TZ, TW, TA, TZ, TW) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWAZA() (TZ, TW, TA, TZ, TA) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWAWX() (TZ, TW, TA, TW, TX) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWAWY() (TZ, TW, TA, TW, TY) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWAWZ() (TZ, TW, TA, TW, TZ) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWAWW() (TZ, TW, TA, TW, TW) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWAWA() (TZ, TW, TA, TW, TA) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWAAX() (TZ, TW, TA, TA, TX) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWAAY() (TZ, TW, TA, TA, TY) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWAAZ() (TZ, TW, TA, TA, TZ) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWAAW() (TZ, TW, TA, TA, TW) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZWAAA() (TZ, TW, TA, TA, TA) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAXXX() (TZ, TA, TX, TX, TX) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAXXY() (TZ, TA, TX, TX, TY) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAXXZ() (TZ, TA, TX, TX, TZ) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAXXW() (TZ, TA, TX, TX, TW) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAXXA() (TZ, TA, TX, TX, TA) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAXYX() (TZ, TA, TX, TY, TX) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAXYY() (TZ, TA, TX, TY, TY) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAXYZ() (TZ, TA, TX, TY, TZ) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAXYW() (TZ, TA, TX, TY, TW) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAXYA() (TZ, TA, TX, TY, TA) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAXZX() (TZ, TA, TX, TZ, TX) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAXZY() (TZ, TA, TX, TZ, TY) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAXZZ() (TZ, TA, TX, TZ, TZ) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAXZW() (TZ, TA, TX, TZ, TW) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAXZA() (TZ, TA, TX, TZ, TA) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAXWX() (TZ, TA, TX, TW, TX) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAXWY() (TZ, TA, TX, TW, TY) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAXWZ() (TZ, TA, TX, TW, TZ) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAXWW() (TZ, TA, TX, TW, TW) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAXWA() (TZ, TA, TX, TW, TA) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAXAX() (TZ, TA, TX, TA, TX) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAXAY() (TZ, TA, TX, TA, TY) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAXAZ() (TZ, TA, TX, TA, TZ) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAXAW() (TZ, TA, TX, TA, TW) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAXAA() (TZ, TA, TX, TA, TA) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAYXX() (TZ, TA, TY, TX, TX) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAYXY() (TZ, TA, TY, TX, TY) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAYXZ() (TZ, TA, TY, TX, TZ) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAYXW() (TZ, TA, TY, TX, TW) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAYXA() (TZ, TA, TY, TX, TA) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAYYX() (TZ, TA, TY, TY, TX) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAYYY() (TZ, TA, TY, TY, TY) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAYYZ() (TZ, TA, TY, TY, TZ) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAYYW() (TZ, TA, TY, TY, TW) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAYYA() (TZ, TA, TY, TY, TA) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAYZX() (TZ, TA, TY, TZ, TX) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAYZY() (TZ, TA, TY, TZ, TY) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAYZZ() (TZ, TA, TY, TZ, TZ) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAYZW() (TZ, TA, TY, TZ, TW) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAYZA() (TZ, TA, TY, TZ, TA) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAYWX() (TZ, TA, TY, TW, TX) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAYWY() (TZ, TA, TY, TW, TY) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAYWZ() (TZ, TA, TY, TW, TZ) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAYWW() (TZ, TA, TY, TW, TW) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAYWA() (TZ, TA, TY, TW, TA) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAYAX() (TZ, TA, TY, TA, TX) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAYAY() (TZ, TA, TY, TA, TY) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAYAZ() (TZ, TA, TY, TA, TZ) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAYAW() (TZ, TA, TY, TA, TW) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAYAA() (TZ, TA, TY, TA, TA) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAZXX() (TZ, TA, TZ, TX, TX) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAZXY() (TZ, TA, TZ, TX, TY) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAZXZ() (TZ, TA, TZ, TX, TZ) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAZXW() (TZ, TA, TZ, TX, TW) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAZXA() (TZ, TA, TZ, TX, TA) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAZYX() (TZ, TA, TZ, TY, TX) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAZYY() (TZ, TA, TZ, TY, TY) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAZYZ() (TZ, TA, TZ, TY, TZ) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAZYW() (TZ, TA, TZ, TY, TW) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAZYA() (TZ, TA, TZ, TY, TA) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAZZX() (TZ, TA, TZ, TZ, TX) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAZZY() (TZ, TA, TZ, TZ, TY) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAZZZ() (TZ, TA, TZ, TZ, TZ) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAZZW() (TZ, TA, TZ, TZ, TW) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAZZA() (TZ, TA, TZ, TZ, TA) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAZWX() (TZ, TA, TZ, TW, TX) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAZWY() (TZ, TA, TZ, TW, TY) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAZWZ() (TZ, TA, TZ, TW, TZ) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAZWW() (TZ, TA, TZ, TW, TW) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAZWA() (TZ, TA, TZ, TW, TA) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAZAX() (TZ, TA, TZ, TA, TX) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAZAY() (TZ, TA, TZ, TA, TY) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAZAZ() (TZ, TA, TZ, TA, TZ) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAZAW() (TZ, TA, TZ, TA, TW) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAZAA() (TZ, TA, TZ, TA, TA) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAWXX() (TZ, TA, TW, TX, TX) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAWXY() (TZ, TA, TW, TX, TY) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAWXZ() (TZ, TA, TW, TX, TZ) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAWXW() (TZ, TA, TW, TX, TW) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAWXA() (TZ, TA, TW, TX, TA) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAWYX() (TZ, TA, TW, TY, TX) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAWYY() (TZ, TA, TW, TY, TY) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAWYZ() (TZ, TA, TW, TY, TZ) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAWYW() (TZ, TA, TW, TY, TW) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAWYA() (TZ, TA, TW, TY, TA) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAWZX() (TZ, TA, TW, TZ, TX) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAWZY() (TZ, TA, TW, TZ, TY) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAWZZ() (TZ, TA, TW, TZ, TZ) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAWZW() (TZ, TA, TW, TZ, TW) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAWZA() (TZ, TA, TW, TZ, TA) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAWWX() (TZ, TA, TW, TW, TX) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAWWY() (TZ, TA, TW, TW, TY) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAWWZ() (TZ, TA, TW, TW, TZ) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAWWW() (TZ, TA, TW, TW, TW) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAWWA() (TZ, TA, TW, TW, TA) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAWAX() (TZ, TA, TW, TA, TX) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAWAY() (TZ, TA, TW, TA, TY) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAWAZ() (TZ, TA, TW, TA, TZ) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAWAW() (TZ, TA, TW, TA, TW) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAWAA() (TZ, TA, TW, TA, TA) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAAXX() (TZ, TA, TA, TX, TX) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAAXY() (TZ, TA, TA, TX, TY) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAAXZ() (TZ, TA, TA, TX, TZ) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAAXW() (TZ, TA, TA, TX, TW) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAAXA() (TZ, TA, TA, TX, TA) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAAYX() (TZ, TA, TA, TY, TX) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAAYY() (TZ, TA, TA, TY, TY) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAAYZ() (TZ, TA, TA, TY, TZ) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAAYW() (TZ, TA, TA, TY, TW) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAAYA() (TZ, TA, TA, TY, TA) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAAZX() (TZ, TA, TA, TZ, TX) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAAZY() (TZ, TA, TA, TZ, TY) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAAZZ() (TZ, TA, TA, TZ, TZ) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAAZW() (TZ, TA, TA, TZ, TW) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAAZA() (TZ, TA, TA, TZ, TA) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAAWX() (TZ, TA, TA, TW, TX) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAAWY() (TZ, TA, TA, TW, TY) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAAWZ() (TZ, TA, TA, TW, TZ) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAAWW() (TZ, TA, TA, TW, TW) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAAWA() (TZ, TA, TA, TW, TA) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAAAX() (TZ, TA, TA, TA, TX) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAAAY() (TZ, TA, TA, TA, TY) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAAAZ() (TZ, TA, TA, TA, TZ) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAAAW() (TZ, TA, TA, TA, TW) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) ZAAAA() (TZ, TA, TA, TA, TA) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXXXX() (TW, TX, TX, TX, TX) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXXXY() (TW, TX, TX, TX, TY) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXXXZ() (TW, TX, TX, TX, TZ) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXXXW() (TW, TX, TX, TX, TW) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXXXA() (TW, TX, TX, TX, TA) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXXYX() (TW, TX, TX, TY, TX) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXXYY() (TW, TX, TX, TY, TY) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXXYZ() (TW, TX, TX, TY, TZ) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXXYW() (TW, TX, TX, TY, TW) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXXYA() (TW, TX, TX, TY, TA) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXXZX() (TW, TX, TX, TZ, TX) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXXZY() (TW, TX, TX, TZ, TY) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXXZZ() (TW, TX, TX, TZ, TZ) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXXZW() (TW, TX, TX, TZ, TW) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXXZA() (TW, TX, TX, TZ, TA) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXXWX() (TW, TX, TX, TW, TX) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXXWY() (TW, TX, TX, TW, TY) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXXWZ() (TW, TX, TX, TW, TZ) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXXWW() (TW, TX, TX, TW, TW) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXXWA() (TW, TX, TX, TW, TA) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXXAX() (TW, TX, TX, TA, TX) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXXAY() (TW, TX, TX, TA, TY) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXXAZ() (TW, TX, TX, TA, TZ) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXXAW() (TW, TX, TX, TA, TW) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXXAA() (TW, TX, TX, TA, TA) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXYXX() (TW, TX, TY, TX, TX) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXYXY() (TW, TX, TY, TX, TY) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXYXZ() (TW, TX, TY, TX, TZ) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXYXW() (TW, TX, TY, TX, TW) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXYXA() (TW, TX, TY, TX, TA) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXYYX() (TW, TX, TY, TY, TX) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXYYY() (TW, TX, TY, TY, TY) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXYYZ() (TW, TX, TY, TY, TZ) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXYYW() (TW, TX, TY, TY, TW) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXYYA() (TW, TX, TY, TY, TA) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXYZX() (TW, TX, TY, TZ, TX) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXYZY() (TW, TX, TY, TZ, TY) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXYZZ() (TW, TX, TY, TZ, TZ) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXYZW() (TW, TX, TY, TZ, TW) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXYZA() (TW, TX, TY, TZ, TA) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXYWX() (TW, TX, TY, TW, TX) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXYWY() (TW, TX, TY, TW, TY) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXYWZ() (TW, TX, TY, TW, TZ) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXYWW() (TW, TX, TY, TW, TW) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXYWA() (TW, TX, TY, TW, TA) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXYAX() (TW, TX, TY, TA, TX) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXYAY() (TW, TX, TY, TA, TY) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXYAZ() (TW, TX, TY, TA, TZ) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXYAW() (TW, TX, TY, TA, TW) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXYAA() (TW, TX, TY, TA, TA) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXZXX() (TW, TX, TZ, TX, TX) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXZXY() (TW, TX, TZ, TX, TY) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXZXZ() (TW, TX, TZ, TX, TZ) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXZXW() (TW, TX, TZ, TX, TW) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXZXA() (TW, TX, TZ, TX, TA) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXZYX() (TW, TX, TZ, TY, TX) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXZYY() (TW, TX, TZ, TY, TY) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXZYZ() (TW, TX, TZ, TY, TZ) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXZYW() (TW, TX, TZ, TY, TW) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXZYA() (TW, TX, TZ, TY, TA) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXZZX() (TW, TX, TZ, TZ, TX) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXZZY() (TW, TX, TZ, TZ, TY) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXZZZ() (TW, TX, TZ, TZ, TZ) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXZZW() (TW, TX, TZ, TZ, TW) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXZZA() (TW, TX, TZ, TZ, TA) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXZWX() (TW, TX, TZ, TW, TX) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXZWY() (TW, TX, TZ, TW, TY) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXZWZ() (TW, TX, TZ, TW, TZ) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXZWW() (TW, TX, TZ, TW, TW) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXZWA() (TW, TX, TZ, TW, TA) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXZAX() (TW, TX, TZ, TA, TX) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXZAY() (TW, TX, TZ, TA, TY) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXZAZ() (TW, TX, TZ, TA, TZ) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXZAW() (TW, TX, TZ, TA, TW) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXZAA() (TW, TX, TZ, TA, TA) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXWXX() (TW, TX, TW, TX, TX) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXWXY() (TW, TX, TW, TX, TY) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXWXZ() (TW, TX, TW, TX, TZ) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXWXW() (TW, TX, TW, TX, TW) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXWXA() (TW, TX, TW, TX, TA) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXWYX() (TW, TX, TW, TY, TX) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXWYY() (TW, TX, TW, TY, TY) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXWYZ() (TW, TX, TW, TY, TZ) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXWYW() (TW, TX, TW, TY, TW) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXWYA() (TW, TX, TW, TY, TA) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXWZX() (TW, TX, TW, TZ, TX) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXWZY() (TW, TX, TW, TZ, TY) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXWZZ() (TW, TX, TW, TZ, TZ) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXWZW() (TW, TX, TW, TZ, TW) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXWZA() (TW, TX, TW, TZ, TA) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXWWX() (TW, TX, TW, TW, TX) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXWWY() (TW, TX, TW, TW, TY) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXWWZ() (TW, TX, TW, TW, TZ) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXWWW() (TW, TX, TW, TW, TW) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXWWA() (TW, TX, TW, TW, TA) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXWAX() (TW, TX, TW, TA, TX) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXWAY() (TW, TX, TW, TA, TY) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXWAZ() (TW, TX, TW, TA, TZ) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXWAW() (TW, TX, TW, TA, TW) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXWAA() (TW, TX, TW, TA, TA) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXAXX() (TW, TX, TA, TX, TX) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXAXY() (TW, TX, TA, TX, TY) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXAXZ() (TW, TX, TA, TX, TZ) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXAXW() (TW, TX, TA, TX, TW) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXAXA() (TW, TX, TA, TX, TA) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXAYX() (TW, TX, TA, TY, TX) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXAYY() (TW, TX, TA, TY, TY) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXAYZ() (TW, TX, TA, TY, TZ) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXAYW() (TW, TX, TA, TY, TW) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXAYA() (TW, TX, TA, TY, TA) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXAZX() (TW, TX, TA, TZ, TX) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXAZY() (TW, TX, TA, TZ, TY) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXAZZ() (TW, TX, TA, TZ, TZ) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXAZW() (TW, TX, TA, TZ, TW) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXAZA() (TW, TX, TA, TZ, TA) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXAWX() (TW, TX, TA, TW, TX) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXAWY() (TW, TX, TA, TW, TY) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXAWZ() (TW, TX, TA, TW, TZ) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXAWW() (TW, TX, TA, TW, TW) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXAWA() (TW, TX, TA, TW, TA) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXAAX() (TW, TX, TA, TA, TX) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXAAY() (TW, TX, TA, TA, TY) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXAAZ() (TW, TX, TA, TA, TZ) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXAAW() (TW, TX, TA, TA, TW) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WXAAA() (TW, TX, TA, TA, TA) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYXXX() (TW, TY, TX, TX, TX) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYXXY() (TW, TY, TX, TX, TY) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYXXZ() (TW, TY, TX, TX, TZ) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYXXW() (TW, TY, TX, TX, TW) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYXXA() (TW, TY, TX, TX, TA) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYXYX() (TW, TY, TX, TY, TX) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYXYY() (TW, TY, TX, TY, TY) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYXYZ() (TW, TY, TX, TY, TZ) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYXYW() (TW, TY, TX, TY, TW) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYXYA() (TW, TY, TX, TY, TA) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYXZX() (TW, TY, TX, TZ, TX) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYXZY() (TW, TY, TX, TZ, TY) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYXZZ() (TW, TY, TX, TZ, TZ) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYXZW() (TW, TY, TX, TZ, TW) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYXZA() (TW, TY, TX, TZ, TA) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYXWX() (TW, TY, TX, TW, TX) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYXWY() (TW, TY, TX, TW, TY) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYXWZ() (TW, TY, TX, TW, TZ) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYXWW() (TW, TY, TX, TW, TW) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYXWA() (TW, TY, TX, TW, TA) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYXAX() (TW, TY, TX, TA, TX) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYXAY() (TW, TY, TX, TA, TY) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYXAZ() (TW, TY, TX, TA, TZ) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYXAW() (TW, TY, TX, TA, TW) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYXAA() (TW, TY, TX, TA, TA) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYYXX() (TW, TY, TY, TX, TX) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYYXY() (TW, TY, TY, TX, TY) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYYXZ() (TW, TY, TY, TX, TZ) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYYXW() (TW, TY, TY, TX, TW) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYYXA() (TW, TY, TY, TX, TA) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYYYX() (TW, TY, TY, TY, TX) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYYYY() (TW, TY, TY, TY, TY) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYYYZ() (TW, TY, TY, TY, TZ) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYYYW() (TW, TY, TY, TY, TW) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYYYA() (TW, TY, TY, TY, TA) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYYZX() (TW, TY, TY, TZ, TX) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYYZY() (TW, TY, TY, TZ, TY) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYYZZ() (TW, TY, TY, TZ, TZ) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYYZW() (TW, TY, TY, TZ, TW) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYYZA() (TW, TY, TY, TZ, TA) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYYWX() (TW, TY, TY, TW, TX) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYYWY() (TW, TY, TY, TW, TY) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYYWZ() (TW, TY, TY, TW, TZ) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYYWW() (TW, TY, TY, TW, TW) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYYWA() (TW, TY, TY, TW, TA) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYYAX() (TW, TY, TY, TA, TX) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYYAY() (TW, TY, TY, TA, TY) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYYAZ() (TW, TY, TY, TA, TZ) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYYAW() (TW, TY, TY, TA, TW) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYYAA() (TW, TY, TY, TA, TA) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYZXX() (TW, TY, TZ, TX, TX) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYZXY() (TW, TY, TZ, TX, TY) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYZXZ() (TW, TY, TZ, TX, TZ) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYZXW() (TW, TY, TZ, TX, TW) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYZXA() (TW, TY, TZ, TX, TA) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYZYX() (TW, TY, TZ, TY, TX) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYZYY() (TW, TY, TZ, TY, TY) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYZYZ() (TW, TY, TZ, TY, TZ) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYZYW() (TW, TY, TZ, TY, TW) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYZYA() (TW, TY, TZ, TY, TA) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYZZX() (TW, TY, TZ, TZ, TX) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYZZY() (TW, TY, TZ, TZ, TY) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYZZZ() (TW, TY, TZ, TZ, TZ) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYZZW() (TW, TY, TZ, TZ, TW) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYZZA() (TW, TY, TZ, TZ, TA) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYZWX() (TW, TY, TZ, TW, TX) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYZWY() (TW, TY, TZ, TW, TY) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYZWZ() (TW, TY, TZ, TW, TZ) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYZWW() (TW, TY, TZ, TW, TW) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYZWA() (TW, TY, TZ, TW, TA) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYZAX() (TW, TY, TZ, TA, TX) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYZAY() (TW, TY, TZ, TA, TY) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYZAZ() (TW, TY, TZ, TA, TZ) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYZAW() (TW, TY, TZ, TA, TW) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYZAA() (TW, TY, TZ, TA, TA) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYWXX() (TW, TY, TW, TX, TX) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYWXY() (TW, TY, TW, TX, TY) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYWXZ() (TW, TY, TW, TX, TZ) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYWXW() (TW, TY, TW, TX, TW) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYWXA() (TW, TY, TW, TX, TA) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYWYX() (TW, TY, TW, TY, TX) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYWYY() (TW, TY, TW, TY, TY) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYWYZ() (TW, TY, TW, TY, TZ) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYWYW() (TW, TY, TW, TY, TW) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYWYA() (TW, TY, TW, TY, TA) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYWZX() (TW, TY, TW, TZ, TX) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYWZY() (TW, TY, TW, TZ, TY) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYWZZ() (TW, TY, TW, TZ, TZ) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYWZW() (TW, TY, TW, TZ, TW) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYWZA() (TW, TY, TW, TZ, TA) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYWWX() (TW, TY, TW, TW, TX) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYWWY() (TW, TY, TW, TW, TY) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYWWZ() (TW, TY, TW, TW, TZ) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYWWW() (TW, TY, TW, TW, TW) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYWWA() (TW, TY, TW, TW, TA) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYWAX() (TW, TY, TW, TA, TX) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYWAY() (TW, TY, TW, TA, TY) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYWAZ() (TW, TY, TW, TA, TZ) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYWAW() (TW, TY, TW, TA, TW) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYWAA() (TW, TY, TW, TA, TA) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYAXX() (TW, TY, TA, TX, TX) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYAXY() (TW, TY, TA, TX, TY) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYAXZ() (TW, TY, TA, TX, TZ) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYAXW() (TW, TY, TA, TX, TW) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYAXA() (TW, TY, TA, TX, TA) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYAYX() (TW, TY, TA, TY, TX) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYAYY() (TW, TY, TA, TY, TY) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYAYZ() (TW, TY, TA, TY, TZ) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYAYW() (TW, TY, TA, TY, TW) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYAYA() (TW, TY, TA, TY, TA) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYAZX() (TW, TY, TA, TZ, TX) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYAZY() (TW, TY, TA, TZ, TY) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYAZZ() (TW, TY, TA, TZ, TZ) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYAZW() (TW, TY, TA, TZ, TW) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYAZA() (TW, TY, TA, TZ, TA) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYAWX() (TW, TY, TA, TW, TX) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYAWY() (TW, TY, TA, TW, TY) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYAWZ() (TW, TY, TA, TW, TZ) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYAWW() (TW, TY, TA, TW, TW) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYAWA() (TW, TY, TA, TW, TA) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYAAX() (TW, TY, TA, TA, TX) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYAAY() (TW, TY, TA, TA, TY) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYAAZ() (TW, TY, TA, TA, TZ) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYAAW() (TW, TY, TA, TA, TW) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WYAAA() (TW, TY, TA, TA, TA) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZXXX() (TW, TZ, TX, TX, TX) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZXXY() (TW, TZ, TX, TX, TY) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZXXZ() (TW, TZ, TX, TX, TZ) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZXXW() (TW, TZ, TX, TX, TW) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZXXA() (TW, TZ, TX, TX, TA) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZXYX() (TW, TZ, TX, TY, TX) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZXYY() (TW, TZ, TX, TY, TY) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZXYZ() (TW, TZ, TX, TY, TZ) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZXYW() (TW, TZ, TX, TY, TW) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZXYA() (TW, TZ, TX, TY, TA) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZXZX() (TW, TZ, TX, TZ, TX) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZXZY() (TW, TZ, TX, TZ, TY) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZXZZ() (TW, TZ, TX, TZ, TZ) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZXZW() (TW, TZ, TX, TZ, TW) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZXZA() (TW, TZ, TX, TZ, TA) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZXWX() (TW, TZ, TX, TW, TX) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZXWY() (TW, TZ, TX, TW, TY) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZXWZ() (TW, TZ, TX, TW, TZ) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZXWW() (TW, TZ, TX, TW, TW) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZXWA() (TW, TZ, TX, TW, TA) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZXAX() (TW, TZ, TX, TA, TX) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZXAY() (TW, TZ, TX, TA, TY) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZXAZ() (TW, TZ, TX, TA, TZ) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZXAW() (TW, TZ, TX, TA, TW) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZXAA() (TW, TZ, TX, TA, TA) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZYXX() (TW, TZ, TY, TX, TX) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZYXY() (TW, TZ, TY, TX, TY) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZYXZ() (TW, TZ, TY, TX, TZ) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZYXW() (TW, TZ, TY, TX, TW) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZYXA() (TW, TZ, TY, TX, TA) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZYYX() (TW, TZ, TY, TY, TX) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZYYY() (TW, TZ, TY, TY, TY) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZYYZ() (TW, TZ, TY, TY, TZ) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZYYW() (TW, TZ, TY, TY, TW) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZYYA() (TW, TZ, TY, TY, TA) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZYZX() (TW, TZ, TY, TZ, TX) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZYZY() (TW, TZ, TY, TZ, TY) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZYZZ() (TW, TZ, TY, TZ, TZ) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZYZW() (TW, TZ, TY, TZ, TW) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZYZA() (TW, TZ, TY, TZ, TA) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZYWX() (TW, TZ, TY, TW, TX) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZYWY() (TW, TZ, TY, TW, TY) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZYWZ() (TW, TZ, TY, TW, TZ) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZYWW() (TW, TZ, TY, TW, TW) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZYWA() (TW, TZ, TY, TW, TA) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZYAX() (TW, TZ, TY, TA, TX) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZYAY() (TW, TZ, TY, TA, TY) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZYAZ() (TW, TZ, TY, TA, TZ) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZYAW() (TW, TZ, TY, TA, TW) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZYAA() (TW, TZ, TY, TA, TA) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZZXX() (TW, TZ, TZ, TX, TX) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZZXY() (TW, TZ, TZ, TX, TY) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZZXZ() (TW, TZ, TZ, TX, TZ) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZZXW() (TW, TZ, TZ, TX, TW) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZZXA() (TW, TZ, TZ, TX, TA) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZZYX() (TW, TZ, TZ, TY, TX) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZZYY() (TW, TZ, TZ, TY, TY) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZZYZ() (TW, TZ, TZ, TY, TZ) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZZYW() (TW, TZ, TZ, TY, TW) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZZYA() (TW, TZ, TZ, TY, TA) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZZZX() (TW, TZ, TZ, TZ, TX) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZZZY() (TW, TZ, TZ, TZ, TY) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZZZZ() (TW, TZ, TZ, TZ, TZ) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZZZW() (TW, TZ, TZ, TZ, TW) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZZZA() (TW, TZ, TZ, TZ, TA) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZZWX() (TW, TZ, TZ, TW, TX) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZZWY() (TW, TZ, TZ, TW, TY) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZZWZ() (TW, TZ, TZ, TW, TZ) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZZWW() (TW, TZ, TZ, TW, TW) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZZWA() (TW, TZ, TZ, TW, TA) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZZAX() (TW, TZ, TZ, TA, TX) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZZAY() (TW, TZ, TZ, TA, TY) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZZAZ() (TW, TZ, TZ, TA, TZ) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZZAW() (TW, TZ, TZ, TA, TW) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZZAA() (TW, TZ, TZ, TA, TA) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZWXX() (TW, TZ, TW, TX, TX) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZWXY() (TW, TZ, TW, TX, TY) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZWXZ() (TW, TZ, TW, TX, TZ) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZWXW() (TW, TZ, TW, TX, TW) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZWXA() (TW, TZ, TW, TX, TA) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZWYX() (TW, TZ, TW, TY, TX) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZWYY() (TW, TZ, TW, TY, TY) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZWYZ() (TW, TZ, TW, TY, TZ) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZWYW() (TW, TZ, TW, TY, TW) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZWYA() (TW, TZ, TW, TY, TA) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZWZX() (TW, TZ, TW, TZ, TX) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZWZY() (TW, TZ, TW, TZ, TY) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZWZZ() (TW, TZ, TW, TZ, TZ) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZWZW() (TW, TZ, TW, TZ, TW) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZWZA() (TW, TZ, TW, TZ, TA) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZWWX() (TW, TZ, TW, TW, TX) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZWWY() (TW, TZ, TW, TW, TY) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZWWZ() (TW, TZ, TW, TW, TZ) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZWWW() (TW, TZ, TW, TW, TW) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZWWA() (TW, TZ, TW, TW, TA) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZWAX() (TW, TZ, TW, TA, TX) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZWAY() (TW, TZ, TW, TA, TY) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZWAZ() (TW, TZ, TW, TA, TZ) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZWAW() (TW, TZ, TW, TA, TW) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZWAA() (TW, TZ, TW, TA, TA) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZAXX() (TW, TZ, TA, TX, TX) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZAXY() (TW, TZ, TA, TX, TY) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZAXZ() (TW, TZ, TA, TX, TZ) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZAXW() (TW, TZ, TA, TX, TW) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZAXA() (TW, TZ, TA, TX, TA) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZAYX() (TW, TZ, TA, TY, TX) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZAYY() (TW, TZ, TA, TY, TY) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZAYZ() (TW, TZ, TA, TY, TZ) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZAYW() (TW, TZ, TA, TY, TW) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZAYA() (TW, TZ, TA, TY, TA) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZAZX() (TW, TZ, TA, TZ, TX) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZAZY() (TW, TZ, TA, TZ, TY) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZAZZ() (TW, TZ, TA, TZ, TZ) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZAZW() (TW, TZ, TA, TZ, TW) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZAZA() (TW, TZ, TA, TZ, TA) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZAWX() (TW, TZ, TA, TW, TX) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZAWY() (TW, TZ, TA, TW, TY) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZAWZ() (TW, TZ, TA, TW, TZ) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZAWW() (TW, TZ, TA, TW, TW) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZAWA() (TW, TZ, TA, TW, TA) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZAAX() (TW, TZ, TA, TA, TX) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZAAY() (TW, TZ, TA, TA, TY) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZAAZ() (TW, TZ, TA, TA, TZ) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZAAW() (TW, TZ, TA, TA, TW) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WZAAA() (TW, TZ, TA, TA, TA) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWXXX() (TW, TW, TX, TX, TX) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWXXY() (TW, TW, TX, TX, TY) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWXXZ() (TW, TW, TX, TX, TZ) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWXXW() (TW, TW, TX, TX, TW) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWXXA() (TW, TW, TX, TX, TA) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWXYX() (TW, TW, TX, TY, TX) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWXYY() (TW, TW, TX, TY, TY) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWXYZ() (TW, TW, TX, TY, TZ) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWXYW() (TW, TW, TX, TY, TW) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWXYA() (TW, TW, TX, TY, TA) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWXZX() (TW, TW, TX, TZ, TX) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWXZY() (TW, TW, TX, TZ, TY) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWXZZ() (TW, TW, TX, TZ, TZ) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWXZW() (TW, TW, TX, TZ, TW) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWXZA() (TW, TW, TX, TZ, TA) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWXWX() (TW, TW, TX, TW, TX) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWXWY() (TW, TW, TX, TW, TY) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWXWZ() (TW, TW, TX, TW, TZ) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWXWW() (TW, TW, TX, TW, TW) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWXWA() (TW, TW, TX, TW, TA) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWXAX() (TW, TW, TX, TA, TX) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWXAY() (TW, TW, TX, TA, TY) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWXAZ() (TW, TW, TX, TA, TZ) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWXAW() (TW, TW, TX, TA, TW) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWXAA() (TW, TW, TX, TA, TA) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWYXX() (TW, TW, TY, TX, TX) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWYXY() (TW, TW, TY, TX, TY) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWYXZ() (TW, TW, TY, TX, TZ) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWYXW() (TW, TW, TY, TX, TW) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWYXA() (TW, TW, TY, TX, TA) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWYYX() (TW, TW, TY, TY, TX) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWYYY() (TW, TW, TY, TY, TY) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWYYZ() (TW, TW, TY, TY, TZ) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWYYW() (TW, TW, TY, TY, TW) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWYYA() (TW, TW, TY, TY, TA) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWYZX() (TW, TW, TY, TZ, TX) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWYZY() (TW, TW, TY, TZ, TY) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWYZZ() (TW, TW, TY, TZ, TZ) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWYZW() (TW, TW, TY, TZ, TW) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWYZA() (TW, TW, TY, TZ, TA) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWYWX() (TW, TW, TY, TW, TX) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWYWY() (TW, TW, TY, TW, TY) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWYWZ() (TW, TW, TY, TW, TZ) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWYWW() (TW, TW, TY, TW, TW) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWYWA() (TW, TW, TY, TW, TA) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWYAX() (TW, TW, TY, TA, TX) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWYAY() (TW, TW, TY, TA, TY) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWYAZ() (TW, TW, TY, TA, TZ) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWYAW() (TW, TW, TY, TA, TW) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWYAA() (TW, TW, TY, TA, TA) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWZXX() (TW, TW, TZ, TX, TX) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWZXY() (TW, TW, TZ, TX, TY) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWZXZ() (TW, TW, TZ, TX, TZ) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWZXW() (TW, TW, TZ, TX, TW) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWZXA() (TW, TW, TZ, TX, TA) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWZYX() (TW, TW, TZ, TY, TX) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWZYY() (TW, TW, TZ, TY, TY) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWZYZ() (TW, TW, TZ, TY, TZ) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWZYW() (TW, TW, TZ, TY, TW) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWZYA() (TW, TW, TZ, TY, TA) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWZZX() (TW, TW, TZ, TZ, TX) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWZZY() (TW, TW, TZ, TZ, TY) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWZZZ() (TW, TW, TZ, TZ, TZ) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWZZW() (TW, TW, TZ, TZ, TW) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWZZA() (TW, TW, TZ, TZ, TA) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWZWX() (TW, TW, TZ, TW, TX) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWZWY() (TW, TW, TZ, TW, TY) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWZWZ() (TW, TW, TZ, TW, TZ) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWZWW() (TW, TW, TZ, TW, TW) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWZWA() (TW, TW, TZ, TW, TA) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWZAX() (TW, TW, TZ, TA, TX) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWZAY() (TW, TW, TZ, TA, TY) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWZAZ() (TW, TW, TZ, TA, TZ) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWZAW() (TW, TW, TZ, TA, TW) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWZAA() (TW, TW, TZ, TA, TA) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWWXX() (TW, TW, TW, TX, TX) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWWXY() (TW, TW, TW, TX, TY) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWWXZ() (TW, TW, TW, TX, TZ) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWWXW() (TW, TW, TW, TX, TW) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWWXA() (TW, TW, TW, TX, TA) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWWYX() (TW, TW, TW, TY, TX) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWWYY() (TW, TW, TW, TY, TY) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWWYZ() (TW, TW, TW, TY, TZ) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWWYW() (TW, TW, TW, TY, TW) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWWYA() (TW, TW, TW, TY, TA) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWWZX() (TW, TW, TW, TZ, TX) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWWZY() (TW, TW, TW, TZ, TY) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWWZZ() (TW, TW, TW, TZ, TZ) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWWZW() (TW, TW, TW, TZ, TW) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWWZA() (TW, TW, TW, TZ, TA) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWWWX() (TW, TW, TW, TW, TX) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWWWY() (TW, TW, TW, TW, TY) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWWWZ() (TW, TW, TW, TW, TZ) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWWWW() (TW, TW, TW, TW, TW) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWWWA() (TW, TW, TW, TW, TA) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWWAX() (TW, TW, TW, TA, TX) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWWAY() (TW, TW, TW, TA, TY) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWWAZ() (TW, TW, TW, TA, TZ) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWWAW() (TW, TW, TW, TA, TW) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWWAA() (TW, TW, TW, TA, TA) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWAXX() (TW, TW, TA, TX, TX) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWAXY() (TW, TW, TA, TX, TY) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWAXZ() (TW, TW, TA, TX, TZ) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWAXW() (TW, TW, TA, TX, TW) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWAXA() (TW, TW, TA, TX, TA) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWAYX() (TW, TW, TA, TY, TX) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWAYY() (TW, TW, TA, TY, TY) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWAYZ() (TW, TW, TA, TY, TZ) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWAYW() (TW, TW, TA, TY, TW) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWAYA() (TW, TW, TA, TY, TA) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWAZX() (TW, TW, TA, TZ, TX) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWAZY() (TW, TW, TA, TZ, TY) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWAZZ() (TW, TW, TA, TZ, TZ) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWAZW() (TW, TW, TA, TZ, TW) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWAZA() (TW, TW, TA, TZ, TA) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWAWX() (TW, TW, TA, TW, TX) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWAWY() (TW, TW, TA, TW, TY) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWAWZ() (TW, TW, TA, TW, TZ) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWAWW() (TW, TW, TA, TW, TW) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWAWA() (TW, TW, TA, TW, TA) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWAAX() (TW, TW, TA, TA, TX) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWAAY() (TW, TW, TA, TA, TY) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWAAZ() (TW, TW, TA, TA, TZ) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWAAW() (TW, TW, TA, TA, TW) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WWAAA() (TW, TW, TA, TA, TA) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAXXX() (TW, TA, TX, TX, TX) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAXXY() (TW, TA, TX, TX, TY) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAXXZ() (TW, TA, TX, TX, TZ) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAXXW() (TW, TA, TX, TX, TW) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAXXA() (TW, TA, TX, TX, TA) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAXYX() (TW, TA, TX, TY, TX) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAXYY() (TW, TA, TX, TY, TY) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAXYZ() (TW, TA, TX, TY, TZ) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAXYW() (TW, TA, TX, TY, TW) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAXYA() (TW, TA, TX, TY, TA) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAXZX() (TW, TA, TX, TZ, TX) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAXZY() (TW, TA, TX, TZ, TY) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAXZZ() (TW, TA, TX, TZ, TZ) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAXZW() (TW, TA, TX, TZ, TW) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAXZA() (TW, TA, TX, TZ, TA) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAXWX() (TW, TA, TX, TW, TX) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAXWY() (TW, TA, TX, TW, TY) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAXWZ() (TW, TA, TX, TW, TZ) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAXWW() (TW, TA, TX, TW, TW) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAXWA() (TW, TA, TX, TW, TA) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAXAX() (TW, TA, TX, TA, TX) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAXAY() (TW, TA, TX, TA, TY) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAXAZ() (TW, TA, TX, TA, TZ) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAXAW() (TW, TA, TX, TA, TW) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAXAA() (TW, TA, TX, TA, TA) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAYXX() (TW, TA, TY, TX, TX) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAYXY() (TW, TA, TY, TX, TY) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAYXZ() (TW, TA, TY, TX, TZ) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAYXW() (TW, TA, TY, TX, TW) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAYXA() (TW, TA, TY, TX, TA) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAYYX() (TW, TA, TY, TY, TX) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAYYY() (TW, TA, TY, TY, TY) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAYYZ() (TW, TA, TY, TY, TZ) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAYYW() (TW, TA, TY, TY, TW) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAYYA() (TW, TA, TY, TY, TA) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAYZX() (TW, TA, TY, TZ, TX) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAYZY() (TW, TA, TY, TZ, TY) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAYZZ() (TW, TA, TY, TZ, TZ) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAYZW() (TW, TA, TY, TZ, TW) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAYZA() (TW, TA, TY, TZ, TA) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAYWX() (TW, TA, TY, TW, TX) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAYWY() (TW, TA, TY, TW, TY) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAYWZ() (TW, TA, TY, TW, TZ) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAYWW() (TW, TA, TY, TW, TW) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAYWA() (TW, TA, TY, TW, TA) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAYAX() (TW, TA, TY, TA, TX) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAYAY() (TW, TA, TY, TA, TY) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAYAZ() (TW, TA, TY, TA, TZ) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAYAW() (TW, TA, TY, TA, TW) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAYAA() (TW, TA, TY, TA, TA) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAZXX() (TW, TA, TZ, TX, TX) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAZXY() (TW, TA, TZ, TX, TY) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAZXZ() (TW, TA, TZ, TX, TZ) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAZXW() (TW, TA, TZ, TX, TW) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAZXA() (TW, TA, TZ, TX, TA) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAZYX() (TW, TA, TZ, TY, TX) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAZYY() (TW, TA, TZ, TY, TY) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAZYZ() (TW, TA, TZ, TY, TZ) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAZYW() (TW, TA, TZ, TY, TW) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAZYA() (TW, TA, TZ, TY, TA) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAZZX() (TW, TA, TZ, TZ, TX) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAZZY() (TW, TA, TZ, TZ, TY) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAZZZ() (TW, TA, TZ, TZ, TZ) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAZZW() (TW, TA, TZ, TZ, TW) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAZZA() (TW, TA, TZ, TZ, TA) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAZWX() (TW, TA, TZ, TW, TX) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAZWY() (TW, TA, TZ, TW, TY) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAZWZ() (TW, TA, TZ, TW, TZ) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAZWW() (TW, TA, TZ, TW, TW) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAZWA() (TW, TA, TZ, TW, TA) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAZAX() (TW, TA, TZ, TA, TX) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAZAY() (TW, TA, TZ, TA, TY) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAZAZ() (TW, TA, TZ, TA, TZ) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAZAW() (TW, TA, TZ, TA, TW) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAZAA() (TW, TA, TZ, TA, TA) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAWXX() (TW, TA, TW, TX, TX) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAWXY() (TW, TA, TW, TX, TY) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAWXZ() (TW, TA, TW, TX, TZ) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAWXW() (TW, TA, TW, TX, TW) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAWXA() (TW, TA, TW, TX, TA) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAWYX() (TW, TA, TW, TY, TX) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAWYY() (TW, TA, TW, TY, TY) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAWYZ() (TW, TA, TW, TY, TZ) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAWYW() (TW, TA, TW, TY, TW) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAWYA() (TW, TA, TW, TY, TA) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAWZX() (TW, TA, TW, TZ, TX) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAWZY() (TW, TA, TW, TZ, TY) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAWZZ() (TW, TA, TW, TZ, TZ) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAWZW() (TW, TA, TW, TZ, TW) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAWZA() (TW, TA, TW, TZ, TA) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAWWX() (TW, TA, TW, TW, TX) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAWWY() (TW, TA, TW, TW, TY) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAWWZ() (TW, TA, TW, TW, TZ) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAWWW() (TW, TA, TW, TW, TW) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAWWA() (TW, TA, TW, TW, TA) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAWAX() (TW, TA, TW, TA, TX) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAWAY() (TW, TA, TW, TA, TY) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAWAZ() (TW, TA, TW, TA, TZ) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAWAW() (TW, TA, TW, TA, TW) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAWAA() (TW, TA, TW, TA, TA) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAAXX() (TW, TA, TA, TX, TX) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAAXY() (TW, TA, TA, TX, TY) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAAXZ() (TW, TA, TA, TX, TZ) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAAXW() (TW, TA, TA, TX, TW) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAAXA() (TW, TA, TA, TX, TA) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAAYX() (TW, TA, TA, TY, TX) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAAYY() (TW, TA, TA, TY, TY) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAAYZ() (TW, TA, TA, TY, TZ) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAAYW() (TW, TA, TA, TY, TW) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAAYA() (TW, TA, TA, TY, TA) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAAZX() (TW, TA, TA, TZ, TX) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAAZY() (TW, TA, TA, TZ, TY) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAAZZ() (TW, TA, TA, TZ, TZ) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAAZW() (TW, TA, TA, TZ, TW) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAAZA() (TW, TA, TA, TZ, TA) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAAWX() (TW, TA, TA, TW, TX) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAAWY() (TW, TA, TA, TW, TY) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAAWZ() (TW, TA, TA, TW, TZ) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAAWW() (TW, TA, TA, TW, TW) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAAWA() (TW, TA, TA, TW, TA) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAAAX() (TW, TA, TA, TA, TX) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAAAY() (TW, TA, TA, TA, TY) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAAAZ() (TW, TA, TA, TA, TZ) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAAAW() (TW, TA, TA, TA, TW) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) WAAAA() (TW, TA, TA, TA, TA) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXXXX() (TA, TX, TX, TX, TX) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXXXY() (TA, TX, TX, TX, TY) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXXXZ() (TA, TX, TX, TX, TZ) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXXXW() (TA, TX, TX, TX, TW) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXXXA() (TA, TX, TX, TX, TA) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXXYX() (TA, TX, TX, TY, TX) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXXYY() (TA, TX, TX, TY, TY) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXXYZ() (TA, TX, TX, TY, TZ) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXXYW() (TA, TX, TX, TY, TW) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXXYA() (TA, TX, TX, TY, TA) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXXZX() (TA, TX, TX, TZ, TX) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXXZY() (TA, TX, TX, TZ, TY) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXXZZ() (TA, TX, TX, TZ, TZ) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXXZW() (TA, TX, TX, TZ, TW) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXXZA() (TA, TX, TX, TZ, TA) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXXWX() (TA, TX, TX, TW, TX) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXXWY() (TA, TX, TX, TW, TY) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXXWZ() (TA, TX, TX, TW, TZ) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXXWW() (TA, TX, TX, TW, TW) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXXWA() (TA, TX, TX, TW, TA) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXXAX() (TA, TX, TX, TA, TX) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXXAY() (TA, TX, TX, TA, TY) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXXAZ() (TA, TX, TX, TA, TZ) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXXAW() (TA, TX, TX, TA, TW) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXXAA() (TA, TX, TX, TA, TA) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXYXX() (TA, TX, TY, TX, TX) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXYXY() (TA, TX, TY, TX, TY) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXYXZ() (TA, TX, TY, TX, TZ) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXYXW() (TA, TX, TY, TX, TW) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXYXA() (TA, TX, TY, TX, TA) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXYYX() (TA, TX, TY, TY, TX) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXYYY() (TA, TX, TY, TY, TY) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXYYZ() (TA, TX, TY, TY, TZ) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXYYW() (TA, TX, TY, TY, TW) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXYYA() (TA, TX, TY, TY, TA) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXYZX() (TA, TX, TY, TZ, TX) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXYZY() (TA, TX, TY, TZ, TY) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXYZZ() (TA, TX, TY, TZ, TZ) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXYZW() (TA, TX, TY, TZ, TW) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXYZA() (TA, TX, TY, TZ, TA) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXYWX() (TA, TX, TY, TW, TX) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXYWY() (TA, TX, TY, TW, TY) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXYWZ() (TA, TX, TY, TW, TZ) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXYWW() (TA, TX, TY, TW, TW) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXYWA() (TA, TX, TY, TW, TA) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXYAX() (TA, TX, TY, TA, TX) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXYAY() (TA, TX, TY, TA, TY) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXYAZ() (TA, TX, TY, TA, TZ) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXYAW() (TA, TX, TY, TA, TW) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXYAA() (TA, TX, TY, TA, TA) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXZXX() (TA, TX, TZ, TX, TX) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXZXY() (TA, TX, TZ, TX, TY) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXZXZ() (TA, TX, TZ, TX, TZ) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXZXW() (TA, TX, TZ, TX, TW) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXZXA() (TA, TX, TZ, TX, TA) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXZYX() (TA, TX, TZ, TY, TX) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXZYY() (TA, TX, TZ, TY, TY) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXZYZ() (TA, TX, TZ, TY, TZ) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXZYW() (TA, TX, TZ, TY, TW) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXZYA() (TA, TX, TZ, TY, TA) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXZZX() (TA, TX, TZ, TZ, TX) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXZZY() (TA, TX, TZ, TZ, TY) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXZZZ() (TA, TX, TZ, TZ, TZ) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXZZW() (TA, TX, TZ, TZ, TW) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXZZA() (TA, TX, TZ, TZ, TA) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXZWX() (TA, TX, TZ, TW, TX) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXZWY() (TA, TX, TZ, TW, TY) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXZWZ() (TA, TX, TZ, TW, TZ) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXZWW() (TA, TX, TZ, TW, TW) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXZWA() (TA, TX, TZ, TW, TA) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXZAX() (TA, TX, TZ, TA, TX) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXZAY() (TA, TX, TZ, TA, TY) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXZAZ() (TA, TX, TZ, TA, TZ) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXZAW() (TA, TX, TZ, TA, TW) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXZAA() (TA, TX, TZ, TA, TA) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXWXX() (TA, TX, TW, TX, TX) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXWXY() (TA, TX, TW, TX, TY) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXWXZ() (TA, TX, TW, TX, TZ) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXWXW() (TA, TX, TW, TX, TW) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXWXA() (TA, TX, TW, TX, TA) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXWYX() (TA, TX, TW, TY, TX) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXWYY() (TA, TX, TW, TY, TY) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXWYZ() (TA, TX, TW, TY, TZ) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXWYW() (TA, TX, TW, TY, TW) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXWYA() (TA, TX, TW, TY, TA) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXWZX() (TA, TX, TW, TZ, TX) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXWZY() (TA, TX, TW, TZ, TY) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXWZZ() (TA, TX, TW, TZ, TZ) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXWZW() (TA, TX, TW, TZ, TW) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXWZA() (TA, TX, TW, TZ, TA) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXWWX() (TA, TX, TW, TW, TX) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXWWY() (TA, TX, TW, TW, TY) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXWWZ() (TA, TX, TW, TW, TZ) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXWWW() (TA, TX, TW, TW, TW) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXWWA() (TA, TX, TW, TW, TA) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXWAX() (TA, TX, TW, TA, TX) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXWAY() (TA, TX, TW, TA, TY) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXWAZ() (TA, TX, TW, TA, TZ) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXWAW() (TA, TX, TW, TA, TW) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXWAA() (TA, TX, TW, TA, TA) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXAXX() (TA, TX, TA, TX, TX) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXAXY() (TA, TX, TA, TX, TY) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXAXZ() (TA, TX, TA, TX, TZ) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXAXW() (TA, TX, TA, TX, TW) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXAXA() (TA, TX, TA, TX, TA) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXAYX() (TA, TX, TA, TY, TX) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXAYY() (TA, TX, TA, TY, TY) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXAYZ() (TA, TX, TA, TY, TZ) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXAYW() (TA, TX, TA, TY, TW) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXAYA() (TA, TX, TA, TY, TA) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXAZX() (TA, TX, TA, TZ, TX) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXAZY() (TA, TX, TA, TZ, TY) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXAZZ() (TA, TX, TA, TZ, TZ) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXAZW() (TA, TX, TA, TZ, TW) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXAZA() (TA, TX, TA, TZ, TA) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXAWX() (TA, TX, TA, TW, TX) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXAWY() (TA, TX, TA, TW, TY) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXAWZ() (TA, TX, TA, TW, TZ) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXAWW() (TA, TX, TA, TW, TW) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXAWA() (TA, TX, TA, TW, TA) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXAAX() (TA, TX, TA, TA, TX) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXAAY() (TA, TX, TA, TA, TY) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXAAZ() (TA, TX, TA, TA, TZ) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXAAW() (TA, TX, TA, TA, TW) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AXAAA() (TA, TX, TA, TA, TA) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYXXX() (TA, TY, TX, TX, TX) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYXXY() (TA, TY, TX, TX, TY) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYXXZ() (TA, TY, TX, TX, TZ) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYXXW() (TA, TY, TX, TX, TW) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYXXA() (TA, TY, TX, TX, TA) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYXYX() (TA, TY, TX, TY, TX) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYXYY() (TA, TY, TX, TY, TY) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYXYZ() (TA, TY, TX, TY, TZ) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYXYW() (TA, TY, TX, TY, TW) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYXYA() (TA, TY, TX, TY, TA) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYXZX() (TA, TY, TX, TZ, TX) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYXZY() (TA, TY, TX, TZ, TY) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYXZZ() (TA, TY, TX, TZ, TZ) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYXZW() (TA, TY, TX, TZ, TW) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYXZA() (TA, TY, TX, TZ, TA) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYXWX() (TA, TY, TX, TW, TX) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYXWY() (TA, TY, TX, TW, TY) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYXWZ() (TA, TY, TX, TW, TZ) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYXWW() (TA, TY, TX, TW, TW) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYXWA() (TA, TY, TX, TW, TA) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYXAX() (TA, TY, TX, TA, TX) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYXAY() (TA, TY, TX, TA, TY) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYXAZ() (TA, TY, TX, TA, TZ) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYXAW() (TA, TY, TX, TA, TW) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYXAA() (TA, TY, TX, TA, TA) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYYXX() (TA, TY, TY, TX, TX) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYYXY() (TA, TY, TY, TX, TY) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYYXZ() (TA, TY, TY, TX, TZ) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYYXW() (TA, TY, TY, TX, TW) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYYXA() (TA, TY, TY, TX, TA) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYYYX() (TA, TY, TY, TY, TX) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYYYY() (TA, TY, TY, TY, TY) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYYYZ() (TA, TY, TY, TY, TZ) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYYYW() (TA, TY, TY, TY, TW) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYYYA() (TA, TY, TY, TY, TA) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYYZX() (TA, TY, TY, TZ, TX) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYYZY() (TA, TY, TY, TZ, TY) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYYZZ() (TA, TY, TY, TZ, TZ) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYYZW() (TA, TY, TY, TZ, TW) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYYZA() (TA, TY, TY, TZ, TA) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYYWX() (TA, TY, TY, TW, TX) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYYWY() (TA, TY, TY, TW, TY) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYYWZ() (TA, TY, TY, TW, TZ) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYYWW() (TA, TY, TY, TW, TW) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYYWA() (TA, TY, TY, TW, TA) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYYAX() (TA, TY, TY, TA, TX) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYYAY() (TA, TY, TY, TA, TY) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYYAZ() (TA, TY, TY, TA, TZ) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYYAW() (TA, TY, TY, TA, TW) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYYAA() (TA, TY, TY, TA, TA) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYZXX() (TA, TY, TZ, TX, TX) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYZXY() (TA, TY, TZ, TX, TY) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYZXZ() (TA, TY, TZ, TX, TZ) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYZXW() (TA, TY, TZ, TX, TW) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYZXA() (TA, TY, TZ, TX, TA) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYZYX() (TA, TY, TZ, TY, TX) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYZYY() (TA, TY, TZ, TY, TY) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYZYZ() (TA, TY, TZ, TY, TZ) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYZYW() (TA, TY, TZ, TY, TW) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYZYA() (TA, TY, TZ, TY, TA) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYZZX() (TA, TY, TZ, TZ, TX) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYZZY() (TA, TY, TZ, TZ, TY) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYZZZ() (TA, TY, TZ, TZ, TZ) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYZZW() (TA, TY, TZ, TZ, TW) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYZZA() (TA, TY, TZ, TZ, TA) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYZWX() (TA, TY, TZ, TW, TX) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYZWY() (TA, TY, TZ, TW, TY) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYZWZ() (TA, TY, TZ, TW, TZ) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYZWW() (TA, TY, TZ, TW, TW) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYZWA() (TA, TY, TZ, TW, TA) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYZAX() (TA, TY, TZ, TA, TX) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYZAY() (TA, TY, TZ, TA, TY) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYZAZ() (TA, TY, TZ, TA, TZ) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYZAW() (TA, TY, TZ, TA, TW) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYZAA() (TA, TY, TZ, TA, TA) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYWXX() (TA, TY, TW, TX, TX) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYWXY() (TA, TY, TW, TX, TY) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYWXZ() (TA, TY, TW, TX, TZ) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYWXW() (TA, TY, TW, TX, TW) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYWXA() (TA, TY, TW, TX, TA) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYWYX() (TA, TY, TW, TY, TX) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYWYY() (TA, TY, TW, TY, TY) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYWYZ() (TA, TY, TW, TY, TZ) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYWYW() (TA, TY, TW, TY, TW) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYWYA() (TA, TY, TW, TY, TA) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYWZX() (TA, TY, TW, TZ, TX) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYWZY() (TA, TY, TW, TZ, TY) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYWZZ() (TA, TY, TW, TZ, TZ) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYWZW() (TA, TY, TW, TZ, TW) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYWZA() (TA, TY, TW, TZ, TA) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYWWX() (TA, TY, TW, TW, TX) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYWWY() (TA, TY, TW, TW, TY) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYWWZ() (TA, TY, TW, TW, TZ) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYWWW() (TA, TY, TW, TW, TW) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYWWA() (TA, TY, TW, TW, TA) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYWAX() (TA, TY, TW, TA, TX) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYWAY() (TA, TY, TW, TA, TY) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYWAZ() (TA, TY, TW, TA, TZ) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYWAW() (TA, TY, TW, TA, TW) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYWAA() (TA, TY, TW, TA, TA) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYAXX() (TA, TY, TA, TX, TX) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYAXY() (TA, TY, TA, TX, TY) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYAXZ() (TA, TY, TA, TX, TZ) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYAXW() (TA, TY, TA, TX, TW) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYAXA() (TA, TY, TA, TX, TA) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYAYX() (TA, TY, TA, TY, TX) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYAYY() (TA, TY, TA, TY, TY) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYAYZ() (TA, TY, TA, TY, TZ) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYAYW() (TA, TY, TA, TY, TW) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYAYA() (TA, TY, TA, TY, TA) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYAZX() (TA, TY, TA, TZ, TX) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYAZY() (TA, TY, TA, TZ, TY) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYAZZ() (TA, TY, TA, TZ, TZ) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYAZW() (TA, TY, TA, TZ, TW) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYAZA() (TA, TY, TA, TZ, TA) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYAWX() (TA, TY, TA, TW, TX) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYAWY() (TA, TY, TA, TW, TY) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYAWZ() (TA, TY, TA, TW, TZ) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYAWW() (TA, TY, TA, TW, TW) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYAWA() (TA, TY, TA, TW, TA) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYAAX() (TA, TY, TA, TA, TX) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYAAY() (TA, TY, TA, TA, TY) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYAAZ() (TA, TY, TA, TA, TZ) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYAAW() (TA, TY, TA, TA, TW) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AYAAA() (TA, TY, TA, TA, TA) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZXXX() (TA, TZ, TX, TX, TX) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZXXY() (TA, TZ, TX, TX, TY) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZXXZ() (TA, TZ, TX, TX, TZ) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZXXW() (TA, TZ, TX, TX, TW) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZXXA() (TA, TZ, TX, TX, TA) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZXYX() (TA, TZ, TX, TY, TX) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZXYY() (TA, TZ, TX, TY, TY) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZXYZ() (TA, TZ, TX, TY, TZ) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZXYW() (TA, TZ, TX, TY, TW) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZXYA() (TA, TZ, TX, TY, TA) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZXZX() (TA, TZ, TX, TZ, TX) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZXZY() (TA, TZ, TX, TZ, TY) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZXZZ() (TA, TZ, TX, TZ, TZ) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZXZW() (TA, TZ, TX, TZ, TW) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZXZA() (TA, TZ, TX, TZ, TA) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZXWX() (TA, TZ, TX, TW, TX) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZXWY() (TA, TZ, TX, TW, TY) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZXWZ() (TA, TZ, TX, TW, TZ) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZXWW() (TA, TZ, TX, TW, TW) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZXWA() (TA, TZ, TX, TW, TA) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZXAX() (TA, TZ, TX, TA, TX) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZXAY() (TA, TZ, TX, TA, TY) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZXAZ() (TA, TZ, TX, TA, TZ) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZXAW() (TA, TZ, TX, TA, TW) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZXAA() (TA, TZ, TX, TA, TA) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZYXX() (TA, TZ, TY, TX, TX) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZYXY() (TA, TZ, TY, TX, TY) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZYXZ() (TA, TZ, TY, TX, TZ) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZYXW() (TA, TZ, TY, TX, TW) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZYXA() (TA, TZ, TY, TX, TA) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZYYX() (TA, TZ, TY, TY, TX) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZYYY() (TA, TZ, TY, TY, TY) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZYYZ() (TA, TZ, TY, TY, TZ) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZYYW() (TA, TZ, TY, TY, TW) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZYYA() (TA, TZ, TY, TY, TA) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZYZX() (TA, TZ, TY, TZ, TX) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZYZY() (TA, TZ, TY, TZ, TY) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZYZZ() (TA, TZ, TY, TZ, TZ) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZYZW() (TA, TZ, TY, TZ, TW) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZYZA() (TA, TZ, TY, TZ, TA) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZYWX() (TA, TZ, TY, TW, TX) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZYWY() (TA, TZ, TY, TW, TY) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZYWZ() (TA, TZ, TY, TW, TZ) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZYWW() (TA, TZ, TY, TW, TW) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZYWA() (TA, TZ, TY, TW, TA) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZYAX() (TA, TZ, TY, TA, TX) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZYAY() (TA, TZ, TY, TA, TY) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZYAZ() (TA, TZ, TY, TA, TZ) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZYAW() (TA, TZ, TY, TA, TW) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZYAA() (TA, TZ, TY, TA, TA) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZZXX() (TA, TZ, TZ, TX, TX) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZZXY() (TA, TZ, TZ, TX, TY) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZZXZ() (TA, TZ, TZ, TX, TZ) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZZXW() (TA, TZ, TZ, TX, TW) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZZXA() (TA, TZ, TZ, TX, TA) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZZYX() (TA, TZ, TZ, TY, TX) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZZYY() (TA, TZ, TZ, TY, TY) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZZYZ() (TA, TZ, TZ, TY, TZ) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZZYW() (TA, TZ, TZ, TY, TW) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZZYA() (TA, TZ, TZ, TY, TA) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZZZX() (TA, TZ, TZ, TZ, TX) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZZZY() (TA, TZ, TZ, TZ, TY) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZZZZ() (TA, TZ, TZ, TZ, TZ) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZZZW() (TA, TZ, TZ, TZ, TW) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZZZA() (TA, TZ, TZ, TZ, TA) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZZWX() (TA, TZ, TZ, TW, TX) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZZWY() (TA, TZ, TZ, TW, TY) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZZWZ() (TA, TZ, TZ, TW, TZ) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZZWW() (TA, TZ, TZ, TW, TW) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZZWA() (TA, TZ, TZ, TW, TA) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZZAX() (TA, TZ, TZ, TA, TX) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZZAY() (TA, TZ, TZ, TA, TY) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZZAZ() (TA, TZ, TZ, TA, TZ) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZZAW() (TA, TZ, TZ, TA, TW) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZZAA() (TA, TZ, TZ, TA, TA) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZWXX() (TA, TZ, TW, TX, TX) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZWXY() (TA, TZ, TW, TX, TY) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZWXZ() (TA, TZ, TW, TX, TZ) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZWXW() (TA, TZ, TW, TX, TW) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZWXA() (TA, TZ, TW, TX, TA) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZWYX() (TA, TZ, TW, TY, TX) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZWYY() (TA, TZ, TW, TY, TY) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZWYZ() (TA, TZ, TW, TY, TZ) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZWYW() (TA, TZ, TW, TY, TW) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZWYA() (TA, TZ, TW, TY, TA) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZWZX() (TA, TZ, TW, TZ, TX) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZWZY() (TA, TZ, TW, TZ, TY) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZWZZ() (TA, TZ, TW, TZ, TZ) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZWZW() (TA, TZ, TW, TZ, TW) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZWZA() (TA, TZ, TW, TZ, TA) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZWWX() (TA, TZ, TW, TW, TX) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZWWY() (TA, TZ, TW, TW, TY) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZWWZ() (TA, TZ, TW, TW, TZ) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZWWW() (TA, TZ, TW, TW, TW) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZWWA() (TA, TZ, TW, TW, TA) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZWAX() (TA, TZ, TW, TA, TX) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZWAY() (TA, TZ, TW, TA, TY) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZWAZ() (TA, TZ, TW, TA, TZ) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZWAW() (TA, TZ, TW, TA, TW) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZWAA() (TA, TZ, TW, TA, TA) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZAXX() (TA, TZ, TA, TX, TX) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZAXY() (TA, TZ, TA, TX, TY) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZAXZ() (TA, TZ, TA, TX, TZ) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZAXW() (TA, TZ, TA, TX, TW) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZAXA() (TA, TZ, TA, TX, TA) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZAYX() (TA, TZ, TA, TY, TX) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZAYY() (TA, TZ, TA, TY, TY) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZAYZ() (TA, TZ, TA, TY, TZ) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZAYW() (TA, TZ, TA, TY, TW) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZAYA() (TA, TZ, TA, TY, TA) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZAZX() (TA, TZ, TA, TZ, TX) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZAZY() (TA, TZ, TA, TZ, TY) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZAZZ() (TA, TZ, TA, TZ, TZ) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZAZW() (TA, TZ, TA, TZ, TW) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZAZA() (TA, TZ, TA, TZ, TA) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZAWX() (TA, TZ, TA, TW, TX) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZAWY() (TA, TZ, TA, TW, TY) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZAWZ() (TA, TZ, TA, TW, TZ) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZAWW() (TA, TZ, TA, TW, TW) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZAWA() (TA, TZ, TA, TW, TA) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZAAX() (TA, TZ, TA, TA, TX) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZAAY() (TA, TZ, TA, TA, TY) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZAAZ() (TA, TZ, TA, TA, TZ) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZAAW() (TA, TZ, TA, TA, TW) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AZAAA() (TA, TZ, TA, TA, TA) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWXXX() (TA, TW, TX, TX, TX) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWXXY() (TA, TW, TX, TX, TY) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWXXZ() (TA, TW, TX, TX, TZ) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWXXW() (TA, TW, TX, TX, TW) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWXXA() (TA, TW, TX, TX, TA) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWXYX() (TA, TW, TX, TY, TX) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWXYY() (TA, TW, TX, TY, TY) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWXYZ() (TA, TW, TX, TY, TZ) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWXYW() (TA, TW, TX, TY, TW) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWXYA() (TA, TW, TX, TY, TA) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWXZX() (TA, TW, TX, TZ, TX) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWXZY() (TA, TW, TX, TZ, TY) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWXZZ() (TA, TW, TX, TZ, TZ) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWXZW() (TA, TW, TX, TZ, TW) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWXZA() (TA, TW, TX, TZ, TA) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWXWX() (TA, TW, TX, TW, TX) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWXWY() (TA, TW, TX, TW, TY) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWXWZ() (TA, TW, TX, TW, TZ) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWXWW() (TA, TW, TX, TW, TW) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWXWA() (TA, TW, TX, TW, TA) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWXAX() (TA, TW, TX, TA, TX) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWXAY() (TA, TW, TX, TA, TY) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWXAZ() (TA, TW, TX, TA, TZ) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWXAW() (TA, TW, TX, TA, TW) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWXAA() (TA, TW, TX, TA, TA) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWYXX() (TA, TW, TY, TX, TX) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWYXY() (TA, TW, TY, TX, TY) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWYXZ() (TA, TW, TY, TX, TZ) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWYXW() (TA, TW, TY, TX, TW) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWYXA() (TA, TW, TY, TX, TA) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWYYX() (TA, TW, TY, TY, TX) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWYYY() (TA, TW, TY, TY, TY) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWYYZ() (TA, TW, TY, TY, TZ) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWYYW() (TA, TW, TY, TY, TW) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWYYA() (TA, TW, TY, TY, TA) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWYZX() (TA, TW, TY, TZ, TX) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWYZY() (TA, TW, TY, TZ, TY) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWYZZ() (TA, TW, TY, TZ, TZ) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWYZW() (TA, TW, TY, TZ, TW) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWYZA() (TA, TW, TY, TZ, TA) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWYWX() (TA, TW, TY, TW, TX) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWYWY() (TA, TW, TY, TW, TY) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWYWZ() (TA, TW, TY, TW, TZ) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWYWW() (TA, TW, TY, TW, TW) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWYWA() (TA, TW, TY, TW, TA) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWYAX() (TA, TW, TY, TA, TX) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWYAY() (TA, TW, TY, TA, TY) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWYAZ() (TA, TW, TY, TA, TZ) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWYAW() (TA, TW, TY, TA, TW) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWYAA() (TA, TW, TY, TA, TA) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWZXX() (TA, TW, TZ, TX, TX) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWZXY() (TA, TW, TZ, TX, TY) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWZXZ() (TA, TW, TZ, TX, TZ) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWZXW() (TA, TW, TZ, TX, TW) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWZXA() (TA, TW, TZ, TX, TA) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWZYX() (TA, TW, TZ, TY, TX) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWZYY() (TA, TW, TZ, TY, TY) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWZYZ() (TA, TW, TZ, TY, TZ) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWZYW() (TA, TW, TZ, TY, TW) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWZYA() (TA, TW, TZ, TY, TA) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWZZX() (TA, TW, TZ, TZ, TX) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWZZY() (TA, TW, TZ, TZ, TY) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWZZZ() (TA, TW, TZ, TZ, TZ) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWZZW() (TA, TW, TZ, TZ, TW) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWZZA() (TA, TW, TZ, TZ, TA) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWZWX() (TA, TW, TZ, TW, TX) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWZWY() (TA, TW, TZ, TW, TY) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWZWZ() (TA, TW, TZ, TW, TZ) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWZWW() (TA, TW, TZ, TW, TW) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWZWA() (TA, TW, TZ, TW, TA) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWZAX() (TA, TW, TZ, TA, TX) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWZAY() (TA, TW, TZ, TA, TY) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWZAZ() (TA, TW, TZ, TA, TZ) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWZAW() (TA, TW, TZ, TA, TW) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWZAA() (TA, TW, TZ, TA, TA) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWWXX() (TA, TW, TW, TX, TX) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWWXY() (TA, TW, TW, TX, TY) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWWXZ() (TA, TW, TW, TX, TZ) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWWXW() (TA, TW, TW, TX, TW) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWWXA() (TA, TW, TW, TX, TA) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWWYX() (TA, TW, TW, TY, TX) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWWYY() (TA, TW, TW, TY, TY) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWWYZ() (TA, TW, TW, TY, TZ) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWWYW() (TA, TW, TW, TY, TW) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWWYA() (TA, TW, TW, TY, TA) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWWZX() (TA, TW, TW, TZ, TX) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWWZY() (TA, TW, TW, TZ, TY) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWWZZ() (TA, TW, TW, TZ, TZ) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWWZW() (TA, TW, TW, TZ, TW) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWWZA() (TA, TW, TW, TZ, TA) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWWWX() (TA, TW, TW, TW, TX) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWWWY() (TA, TW, TW, TW, TY) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWWWZ() (TA, TW, TW, TW, TZ) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWWWW() (TA, TW, TW, TW, TW) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWWWA() (TA, TW, TW, TW, TA) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWWAX() (TA, TW, TW, TA, TX) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWWAY() (TA, TW, TW, TA, TY) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWWAZ() (TA, TW, TW, TA, TZ) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWWAW() (TA, TW, TW, TA, TW) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWWAA() (TA, TW, TW, TA, TA) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWAXX() (TA, TW, TA, TX, TX) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWAXY() (TA, TW, TA, TX, TY) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWAXZ() (TA, TW, TA, TX, TZ) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWAXW() (TA, TW, TA, TX, TW) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWAXA() (TA, TW, TA, TX, TA) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWAYX() (TA, TW, TA, TY, TX) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWAYY() (TA, TW, TA, TY, TY) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWAYZ() (TA, TW, TA, TY, TZ) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWAYW() (TA, TW, TA, TY, TW) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWAYA() (TA, TW, TA, TY, TA) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWAZX() (TA, TW, TA, TZ, TX) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWAZY() (TA, TW, TA, TZ, TY) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWAZZ() (TA, TW, TA, TZ, TZ) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWAZW() (TA, TW, TA, TZ, TW) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWAZA() (TA, TW, TA, TZ, TA) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWAWX() (TA, TW, TA, TW, TX) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWAWY() (TA, TW, TA, TW, TY) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWAWZ() (TA, TW, TA, TW, TZ) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWAWW() (TA, TW, TA, TW, TW) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWAWA() (TA, TW, TA, TW, TA) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWAAX() (TA, TW, TA, TA, TX) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWAAY() (TA, TW, TA, TA, TY) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWAAZ() (TA, TW, TA, TA, TZ) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWAAW() (TA, TW, TA, TA, TW) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AWAAA() (TA, TW, TA, TA, TA) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAXXX() (TA, TA, TX, TX, TX) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAXXY() (TA, TA, TX, TX, TY) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAXXZ() (TA, TA, TX, TX, TZ) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAXXW() (TA, TA, TX, TX, TW) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAXXA() (TA, TA, TX, TX, TA) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAXYX() (TA, TA, TX, TY, TX) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAXYY() (TA, TA, TX, TY, TY) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAXYZ() (TA, TA, TX, TY, TZ) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAXYW() (TA, TA, TX, TY, TW) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAXYA() (TA, TA, TX, TY, TA) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAXZX() (TA, TA, TX, TZ, TX) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAXZY() (TA, TA, TX, TZ, TY) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAXZZ() (TA, TA, TX, TZ, TZ) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAXZW() (TA, TA, TX, TZ, TW) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAXZA() (TA, TA, TX, TZ, TA) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAXWX() (TA, TA, TX, TW, TX) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAXWY() (TA, TA, TX, TW, TY) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAXWZ() (TA, TA, TX, TW, TZ) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAXWW() (TA, TA, TX, TW, TW) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAXWA() (TA, TA, TX, TW, TA) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAXAX() (TA, TA, TX, TA, TX) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAXAY() (TA, TA, TX, TA, TY) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAXAZ() (TA, TA, TX, TA, TZ) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAXAW() (TA, TA, TX, TA, TW) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAXAA() (TA, TA, TX, TA, TA) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAYXX() (TA, TA, TY, TX, TX) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAYXY() (TA, TA, TY, TX, TY) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAYXZ() (TA, TA, TY, TX, TZ) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAYXW() (TA, TA, TY, TX, TW) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAYXA() (TA, TA, TY, TX, TA) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAYYX() (TA, TA, TY, TY, TX) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAYYY() (TA, TA, TY, TY, TY) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAYYZ() (TA, TA, TY, TY, TZ) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAYYW() (TA, TA, TY, TY, TW) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAYYA() (TA, TA, TY, TY, TA) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAYZX() (TA, TA, TY, TZ, TX) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAYZY() (TA, TA, TY, TZ, TY) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAYZZ() (TA, TA, TY, TZ, TZ) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAYZW() (TA, TA, TY, TZ, TW) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAYZA() (TA, TA, TY, TZ, TA) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAYWX() (TA, TA, TY, TW, TX) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAYWY() (TA, TA, TY, TW, TY) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAYWZ() (TA, TA, TY, TW, TZ) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAYWW() (TA, TA, TY, TW, TW) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAYWA() (TA, TA, TY, TW, TA) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAYAX() (TA, TA, TY, TA, TX) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAYAY() (TA, TA, TY, TA, TY) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAYAZ() (TA, TA, TY, TA, TZ) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAYAW() (TA, TA, TY, TA, TW) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAYAA() (TA, TA, TY, TA, TA) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAZXX() (TA, TA, TZ, TX, TX) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAZXY() (TA, TA, TZ, TX, TY) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAZXZ() (TA, TA, TZ, TX, TZ) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAZXW() (TA, TA, TZ, TX, TW) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAZXA() (TA, TA, TZ, TX, TA) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAZYX() (TA, TA, TZ, TY, TX) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAZYY() (TA, TA, TZ, TY, TY) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAZYZ() (TA, TA, TZ, TY, TZ) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAZYW() (TA, TA, TZ, TY, TW) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAZYA() (TA, TA, TZ, TY, TA) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAZZX() (TA, TA, TZ, TZ, TX) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAZZY() (TA, TA, TZ, TZ, TY) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAZZZ() (TA, TA, TZ, TZ, TZ) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAZZW() (TA, TA, TZ, TZ, TW) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAZZA() (TA, TA, TZ, TZ, TA) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAZWX() (TA, TA, TZ, TW, TX) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAZWY() (TA, TA, TZ, TW, TY) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAZWZ() (TA, TA, TZ, TW, TZ) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAZWW() (TA, TA, TZ, TW, TW) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAZWA() (TA, TA, TZ, TW, TA) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAZAX() (TA, TA, TZ, TA, TX) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAZAY() (TA, TA, TZ, TA, TY) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAZAZ() (TA, TA, TZ, TA, TZ) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAZAW() (TA, TA, TZ, TA, TW) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAZAA() (TA, TA, TZ, TA, TA) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAWXX() (TA, TA, TW, TX, TX) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAWXY() (TA, TA, TW, TX, TY) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAWXZ() (TA, TA, TW, TX, TZ) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAWXW() (TA, TA, TW, TX, TW) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAWXA() (TA, TA, TW, TX, TA) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAWYX() (TA, TA, TW, TY, TX) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAWYY() (TA, TA, TW, TY, TY) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAWYZ() (TA, TA, TW, TY, TZ) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAWYW() (TA, TA, TW, TY, TW) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAWYA() (TA, TA, TW, TY, TA) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAWZX() (TA, TA, TW, TZ, TX) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAWZY() (TA, TA, TW, TZ, TY) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAWZZ() (TA, TA, TW, TZ, TZ) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAWZW() (TA, TA, TW, TZ, TW) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAWZA() (TA, TA, TW, TZ, TA) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAWWX() (TA, TA, TW, TW, TX) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAWWY() (TA, TA, TW, TW, TY) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAWWZ() (TA, TA, TW, TW, TZ) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAWWW() (TA, TA, TW, TW, TW) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAWWA() (TA, TA, TW, TW, TA) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAWAX() (TA, TA, TW, TA, TX) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAWAY() (TA, TA, TW, TA, TY) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAWAZ() (TA, TA, TW, TA, TZ) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAWAW() (TA, TA, TW, TA, TW) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAWAA() (TA, TA, TW, TA, TA) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAAXX() (TA, TA, TA, TX, TX) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAAXY() (TA, TA, TA, TX, TY) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAAXZ() (TA, TA, TA, TX, TZ) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAAXW() (TA, TA, TA, TX, TW) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAAXA() (TA, TA, TA, TX, TA) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAAYX() (TA, TA, TA, TY, TX) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAAYY() (TA, TA, TA, TY, TY) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAAYZ() (TA, TA, TA, TY, TZ) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAAYW() (TA, TA, TA, TY, TW) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAAYA() (TA, TA, TA, TY, TA) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAAZX() (TA, TA, TA, TZ, TX) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAAZY() (TA, TA, TA, TZ, TY) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAAZZ() (TA, TA, TA, TZ, TZ) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAAZW() (TA, TA, TA, TZ, TW) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAAZA() (TA, TA, TA, TZ, TA) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAAWX() (TA, TA, TA, TW, TX) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAAWY() (TA, TA, TA, TW, TY) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAAWZ() (TA, TA, TA, TW, TZ) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAAWW() (TA, TA, TA, TW, TW) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAAWA() (TA, TA, TA, TW, TA) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAAAX() (TA, TA, TA, TA, TX) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAAAY() (TA, TA, TA, TA, TY) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAAAZ() (TA, TA, TA, TA, TZ) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAAAW() (TA, TA, TA, TA, TW) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWATyped[TX, TY, TZ, TW, TA]) AAAAA() (TA, TA, TA, TA, TA) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
