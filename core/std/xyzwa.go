// Code generated by 'gen/letters/main'; DO NOT EDIT.
//go:generate go run ../gen/letters/main -pkg std -name XYZWA -nameL xyzwa -cmpts X,Y,Z,W,A -cmptsL x,y,z,w,a -out ../std/xyzwa.go
package std

import (
	"core/sys/atlas"
	"core/sys/name/format"
	"core/sys/num"
	"core/sys/num/bounded"
	"core/sys/support"
	"fmt"
	"strings"
)

// XYZWA is a 5D vector of like-typed bounded.Numeric components.
//
// NOTE: If you'd like asymmetric types, please see XYZWATyped.
type XYZWA[T num.Primitive] = XYZWATyped[T, T, T, T, T]

// XYZWATyped is a 5D vector of asymmetrically typed bounded.Numeric components.
//
// NOTE: If you'd like symmetric types, please see XYZWA.
type XYZWATyped[TX num.Primitive, TY num.Primitive, TZ num.Primitive, TW num.Primitive, TA num.Primitive] struct {
	Entity
	X bounded.Numeric[TX]
	Y bounded.Numeric[TY]
	Z bounded.Numeric[TZ]
	W bounded.Numeric[TW]
	A bounded.Numeric[TA]
}

func NewXYZWA[T num.Primitive](x T, y T, z T, w T, a T, name ...string) *XYZWA[T] {
	typed := XYZWA[T](*NewXYZWATyped[T, T, T, T, T](x, y, z, w, a, name...))
	return &typed
}

func NewXYZWATyped[TX num.Primitive, TY num.Primitive, TZ num.Primitive, TW num.Primitive, TA num.Primitive](x TX, y TY, z TZ, w TW, a TA, name ...string) *XYZWATyped[TX, TY, TZ, TW, TA] {
	minX := num.MinValue[TX]()
	maxX := num.MaxValue[TX]()
	if num.IsFloat[TX]() {
		minX = 0
		maxX = 1
	}
	minY := num.MinValue[TY]()
	maxY := num.MaxValue[TY]()
	if num.IsFloat[TY]() {
		minY = 0
		maxY = 1
	}
	minZ := num.MinValue[TZ]()
	maxZ := num.MaxValue[TZ]()
	if num.IsFloat[TZ]() {
		minZ = 0
		maxZ = 1
	}
	minW := num.MinValue[TW]()
	maxW := num.MaxValue[TW]()
	if num.IsFloat[TW]() {
		minW = 0
		maxW = 1
	}
	minA := num.MinValue[TA]()
	maxA := num.MaxValue[TA]()
	if num.IsFloat[TA]() {
		minA = 0
		maxA = 1
	}

	_v := &XYZWATyped[TX, TY, TZ, TW, TA]{}
	_v.Entity = NewEntity[format.Default]()
	_v.SetBoundaries(minX, maxX, minY, maxY, minZ, maxZ, minW, maxW, minA, maxA)
	_v.Set(x, y, z, w, a)
	if len(name) > 0 {
		_v.SetName(name[0])
	}
	return _v
}

func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) Name() string {
	return _v.GivenName.Name
}

func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) SetName(name string) *XYZWATyped[TX, TY, TZ, TW, TA] {
	_v.GivenName.Name = name
	return _v
}

func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) Set(x TX, y TY, z TZ, w TW, a TA) *XYZWATyped[TX, TY, TZ, TW, TA] {
	_ = _v.X.Set(x)
	_ = _v.Y.Set(y)
	_ = _v.Z.Set(z)
	_ = _v.W.Set(w)
	_ = _v.A.Set(a)
	return _v
}

func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) SetClamp(clamp bool) *XYZWATyped[TX, TY, TZ, TW, TA] {
	_v.X.Clamp = clamp
	_v.Y.Clamp = clamp
	_v.Z.Clamp = clamp
	_v.W.Clamp = clamp
	_v.A.Clamp = clamp
	return _v
}

func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) SetBoundaries(minX, maxX TX, minY, maxY TY, minZ, maxZ TZ, minW, maxW TW, minA, maxA TA) *XYZWATyped[TX, TY, TZ, TW, TA] {
	_ = _v.X.SetBoundaries(minX, maxX)
	_ = _v.Y.SetBoundaries(minY, maxY)
	_ = _v.Z.SetBoundaries(minZ, maxZ)
	_ = _v.W.SetBoundaries(minW, maxW)
	_ = _v.A.SetBoundaries(minA, maxA)
	return _v
}

func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) Component(index uint) (bounded.INumeric, error) {
	switch index {
	case 0:
		return &_v.X, nil
	case 1:
		return &_v.Y, nil
	case 2:
		return &_v.Z, nil
	case 3:
		return &_v.W, nil
	case 4:
		return &_v.A, nil
	default:
		return nil, fmt.Errorf("cannot get component index %d of an XYZWA vector", index)
	}
}

func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) Components() []bounded.INumeric {
	return []bounded.INumeric{&_v.X, &_v.Y, &_v.Z, &_v.W, &_v.A}
}

func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ComponentByName(name string) (bounded.INumeric, error) {
	switch strings.ToLower(name) {
	case "x":
		return &_v.X, nil
	case "y":
		return &_v.Y, nil
	case "z":
		return &_v.Z, nil
	case "w":
		return &_v.W, nil
	case "a":
		return &_v.A, nil
	default:
		return nil, fmt.Errorf("cannot get component \"%s\" of an XYZWA vector", name)
	}
}

func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ComponentLen() uint {
	return 5
}

func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) SetComponent(index uint, value any) error {
	switch index {
	case 0:
		 _v.X.Set(value.(TX))
	case 1:
		 _v.Y.Set(value.(TY))
	case 2:
		 _v.Z.Set(value.(TZ))
	case 3:
		 _v.W.Set(value.(TW))
	case 4:
		 _v.A.Set(value.(TA))
	default:
		return fmt.Errorf("cannot set component index %d of an XYZWA vector", index)
	}
	return nil
}

func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) SetComponents(values []any) error {
	if len(values) != 5 {
		return fmt.Errorf("cannot set %d components of 5D vector XYZWA", len(values), )
	}
	if _, ok := values[0].(TX); !ok {
		return fmt.Errorf("expected type %T for component X, got type %T", TX(0), values[0])	}
	if _, ok := values[1].(TY); !ok {
		return fmt.Errorf("expected type %T for component Y, got type %T", TY(0), values[1])	}
	if _, ok := values[2].(TZ); !ok {
		return fmt.Errorf("expected type %T for component Z, got type %T", TZ(0), values[2])	}
	if _, ok := values[3].(TW); !ok {
		return fmt.Errorf("expected type %T for component W, got type %T", TW(0), values[3])	}
	if _, ok := values[4].(TA); !ok {
		return fmt.Errorf("expected type %T for component A, got type %T", TA(0), values[4])	}
	_v.X.Set(values[0].(TX))
	_v.Y.Set(values[1].(TY))
	_v.Z.Set(values[2].(TZ))
	_v.W.Set(values[3].(TW))
	_v.A.Set(values[4].(TA))
	return nil
}

func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) SetComponentByName(name string, value any) error {
	switch strings.ToLower(name) {
	case "x":
		 _v.X.Set(value.(TX))
	case "y":
		 _v.Y.Set(value.(TY))
	case "z":
		 _v.Z.Set(value.(TZ))
	case "w":
		 _v.W.Set(value.(TW))
	case "a":
		 _v.A.Set(value.(TA))
	default:
		return fmt.Errorf("cannot set component \"%s\" of an XYZWA vector", name)
	}
	return nil
}

func (_v XYZWATyped[TX, TY, TZ, TW, TA]) String() string {
	if atlas.CompactVectors {
		return fmt.Sprintf("{x: %v, y: %v, z: %v, w: %v, a: %v}", _v.X.String(), _v.Y.String(), _v.Z.String(), _v.W.String(), _v.A.String())
	}
	 if support.AllSameTypes(TX(0), TY(0), TZ(0), TW(0), TA(0)) {
		return fmt.Sprintf("xyzwa[%T]{%v, %v, %v, %v, %v}(\"%v\")", TX(0), _v.X.String(), _v.Y.String(), _v.Z.String(), _v.W.String(), _v.A.String(), _v.GivenName.Name)
	}
	return fmt.Sprintf("xyzwa[%T, %T, %T, %T, %T]{%v, %v, %v, %v, %v}(\"%v\")", TX(0), TY(0), TZ(0), TW(0), TA(0), _v.X.String(), _v.Y.String(), _v.Z.String(), _v.W.String(), _v.A.String(), _v.GivenName.Name)
}

func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XX() (TX, TX) { return _v.X.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XY() (TX, TY) { return _v.X.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XZ() (TX, TZ) { return _v.X.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XW() (TX, TW) { return _v.X.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XA() (TX, TA) { return _v.X.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YX() (TY, TX) { return _v.Y.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YY() (TY, TY) { return _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YZ() (TY, TZ) { return _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YW() (TY, TW) { return _v.Y.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YA() (TY, TA) { return _v.Y.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZX() (TZ, TX) { return _v.Z.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZY() (TZ, TY) { return _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZZ() (TZ, TZ) { return _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZW() (TZ, TW) { return _v.Z.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZA() (TZ, TA) { return _v.Z.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WX() (TW, TX) { return _v.W.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WY() (TW, TY) { return _v.W.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WZ() (TW, TZ) { return _v.W.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WW() (TW, TW) { return _v.W.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WA() (TW, TA) { return _v.W.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AX() (TA, TX) { return _v.A.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AY() (TA, TY) { return _v.A.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AZ() (TA, TZ) { return _v.A.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AW() (TA, TW) { return _v.A.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AA() (TA, TA) { return _v.A.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XXX() (TX, TX, TX) { return _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XXY() (TX, TX, TY) { return _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XXZ() (TX, TX, TZ) { return _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XXW() (TX, TX, TW) { return _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XXA() (TX, TX, TA) { return _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XYX() (TX, TY, TX) { return _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XYY() (TX, TY, TY) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XYZ() (TX, TY, TZ) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XYW() (TX, TY, TW) { return _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XYA() (TX, TY, TA) { return _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XZX() (TX, TZ, TX) { return _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XZY() (TX, TZ, TY) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XZZ() (TX, TZ, TZ) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XZW() (TX, TZ, TW) { return _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XZA() (TX, TZ, TA) { return _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XWX() (TX, TW, TX) { return _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XWY() (TX, TW, TY) { return _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XWZ() (TX, TW, TZ) { return _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XWW() (TX, TW, TW) { return _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XWA() (TX, TW, TA) { return _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XAX() (TX, TA, TX) { return _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XAY() (TX, TA, TY) { return _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XAZ() (TX, TA, TZ) { return _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XAW() (TX, TA, TW) { return _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XAA() (TX, TA, TA) { return _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YXX() (TY, TX, TX) { return _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YXY() (TY, TX, TY) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YXZ() (TY, TX, TZ) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YXW() (TY, TX, TW) { return _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YXA() (TY, TX, TA) { return _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YYX() (TY, TY, TX) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YYY() (TY, TY, TY) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YYZ() (TY, TY, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YYW() (TY, TY, TW) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YYA() (TY, TY, TA) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YZX() (TY, TZ, TX) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YZY() (TY, TZ, TY) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YZZ() (TY, TZ, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YZW() (TY, TZ, TW) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YZA() (TY, TZ, TA) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YWX() (TY, TW, TX) { return _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YWY() (TY, TW, TY) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YWZ() (TY, TW, TZ) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YWW() (TY, TW, TW) { return _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YWA() (TY, TW, TA) { return _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YAX() (TY, TA, TX) { return _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YAY() (TY, TA, TY) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YAZ() (TY, TA, TZ) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YAW() (TY, TA, TW) { return _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YAA() (TY, TA, TA) { return _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZXX() (TZ, TX, TX) { return _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZXY() (TZ, TX, TY) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZXZ() (TZ, TX, TZ) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZXW() (TZ, TX, TW) { return _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZXA() (TZ, TX, TA) { return _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZYX() (TZ, TY, TX) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZYY() (TZ, TY, TY) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZYZ() (TZ, TY, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZYW() (TZ, TY, TW) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZYA() (TZ, TY, TA) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZZX() (TZ, TZ, TX) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZZY() (TZ, TZ, TY) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZZZ() (TZ, TZ, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZZW() (TZ, TZ, TW) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZZA() (TZ, TZ, TA) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZWX() (TZ, TW, TX) { return _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZWY() (TZ, TW, TY) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZWZ() (TZ, TW, TZ) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZWW() (TZ, TW, TW) { return _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZWA() (TZ, TW, TA) { return _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZAX() (TZ, TA, TX) { return _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZAY() (TZ, TA, TY) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZAZ() (TZ, TA, TZ) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZAW() (TZ, TA, TW) { return _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZAA() (TZ, TA, TA) { return _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WXX() (TW, TX, TX) { return _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WXY() (TW, TX, TY) { return _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WXZ() (TW, TX, TZ) { return _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WXW() (TW, TX, TW) { return _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WXA() (TW, TX, TA) { return _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WYX() (TW, TY, TX) { return _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WYY() (TW, TY, TY) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WYZ() (TW, TY, TZ) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WYW() (TW, TY, TW) { return _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WYA() (TW, TY, TA) { return _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WZX() (TW, TZ, TX) { return _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WZY() (TW, TZ, TY) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WZZ() (TW, TZ, TZ) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WZW() (TW, TZ, TW) { return _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WZA() (TW, TZ, TA) { return _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WWX() (TW, TW, TX) { return _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WWY() (TW, TW, TY) { return _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WWZ() (TW, TW, TZ) { return _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WWW() (TW, TW, TW) { return _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WWA() (TW, TW, TA) { return _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WAX() (TW, TA, TX) { return _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WAY() (TW, TA, TY) { return _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WAZ() (TW, TA, TZ) { return _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WAW() (TW, TA, TW) { return _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WAA() (TW, TA, TA) { return _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AXX() (TA, TX, TX) { return _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AXY() (TA, TX, TY) { return _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AXZ() (TA, TX, TZ) { return _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AXW() (TA, TX, TW) { return _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AXA() (TA, TX, TA) { return _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AYX() (TA, TY, TX) { return _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AYY() (TA, TY, TY) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AYZ() (TA, TY, TZ) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AYW() (TA, TY, TW) { return _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AYA() (TA, TY, TA) { return _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AZX() (TA, TZ, TX) { return _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AZY() (TA, TZ, TY) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AZZ() (TA, TZ, TZ) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AZW() (TA, TZ, TW) { return _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AZA() (TA, TZ, TA) { return _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AWX() (TA, TW, TX) { return _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AWY() (TA, TW, TY) { return _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AWZ() (TA, TW, TZ) { return _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AWW() (TA, TW, TW) { return _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AWA() (TA, TW, TA) { return _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AAX() (TA, TA, TX) { return _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AAY() (TA, TA, TY) { return _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AAZ() (TA, TA, TZ) { return _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AAW() (TA, TA, TW) { return _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AAA() (TA, TA, TA) { return _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XXXX() (TX, TX, TX, TX) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XXXY() (TX, TX, TX, TY) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XXXZ() (TX, TX, TX, TZ) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XXXW() (TX, TX, TX, TW) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XXXA() (TX, TX, TX, TA) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XXYX() (TX, TX, TY, TX) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XXYY() (TX, TX, TY, TY) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XXYZ() (TX, TX, TY, TZ) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XXYW() (TX, TX, TY, TW) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XXYA() (TX, TX, TY, TA) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XXZX() (TX, TX, TZ, TX) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XXZY() (TX, TX, TZ, TY) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XXZZ() (TX, TX, TZ, TZ) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XXZW() (TX, TX, TZ, TW) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XXZA() (TX, TX, TZ, TA) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XXWX() (TX, TX, TW, TX) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XXWY() (TX, TX, TW, TY) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XXWZ() (TX, TX, TW, TZ) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XXWW() (TX, TX, TW, TW) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XXWA() (TX, TX, TW, TA) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XXAX() (TX, TX, TA, TX) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XXAY() (TX, TX, TA, TY) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XXAZ() (TX, TX, TA, TZ) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XXAW() (TX, TX, TA, TW) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XXAA() (TX, TX, TA, TA) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XYXX() (TX, TY, TX, TX) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XYXY() (TX, TY, TX, TY) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XYXZ() (TX, TY, TX, TZ) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XYXW() (TX, TY, TX, TW) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XYXA() (TX, TY, TX, TA) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XYYX() (TX, TY, TY, TX) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XYYY() (TX, TY, TY, TY) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XYYZ() (TX, TY, TY, TZ) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XYYW() (TX, TY, TY, TW) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XYYA() (TX, TY, TY, TA) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XYZX() (TX, TY, TZ, TX) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XYZY() (TX, TY, TZ, TY) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XYZZ() (TX, TY, TZ, TZ) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XYZW() (TX, TY, TZ, TW) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XYZA() (TX, TY, TZ, TA) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XYWX() (TX, TY, TW, TX) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XYWY() (TX, TY, TW, TY) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XYWZ() (TX, TY, TW, TZ) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XYWW() (TX, TY, TW, TW) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XYWA() (TX, TY, TW, TA) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XYAX() (TX, TY, TA, TX) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XYAY() (TX, TY, TA, TY) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XYAZ() (TX, TY, TA, TZ) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XYAW() (TX, TY, TA, TW) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XYAA() (TX, TY, TA, TA) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XZXX() (TX, TZ, TX, TX) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XZXY() (TX, TZ, TX, TY) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XZXZ() (TX, TZ, TX, TZ) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XZXW() (TX, TZ, TX, TW) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XZXA() (TX, TZ, TX, TA) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XZYX() (TX, TZ, TY, TX) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XZYY() (TX, TZ, TY, TY) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XZYZ() (TX, TZ, TY, TZ) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XZYW() (TX, TZ, TY, TW) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XZYA() (TX, TZ, TY, TA) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XZZX() (TX, TZ, TZ, TX) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XZZY() (TX, TZ, TZ, TY) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XZZZ() (TX, TZ, TZ, TZ) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XZZW() (TX, TZ, TZ, TW) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XZZA() (TX, TZ, TZ, TA) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XZWX() (TX, TZ, TW, TX) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XZWY() (TX, TZ, TW, TY) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XZWZ() (TX, TZ, TW, TZ) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XZWW() (TX, TZ, TW, TW) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XZWA() (TX, TZ, TW, TA) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XZAX() (TX, TZ, TA, TX) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XZAY() (TX, TZ, TA, TY) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XZAZ() (TX, TZ, TA, TZ) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XZAW() (TX, TZ, TA, TW) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XZAA() (TX, TZ, TA, TA) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XWXX() (TX, TW, TX, TX) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XWXY() (TX, TW, TX, TY) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XWXZ() (TX, TW, TX, TZ) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XWXW() (TX, TW, TX, TW) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XWXA() (TX, TW, TX, TA) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XWYX() (TX, TW, TY, TX) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XWYY() (TX, TW, TY, TY) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XWYZ() (TX, TW, TY, TZ) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XWYW() (TX, TW, TY, TW) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XWYA() (TX, TW, TY, TA) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XWZX() (TX, TW, TZ, TX) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XWZY() (TX, TW, TZ, TY) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XWZZ() (TX, TW, TZ, TZ) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XWZW() (TX, TW, TZ, TW) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XWZA() (TX, TW, TZ, TA) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XWWX() (TX, TW, TW, TX) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XWWY() (TX, TW, TW, TY) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XWWZ() (TX, TW, TW, TZ) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XWWW() (TX, TW, TW, TW) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XWWA() (TX, TW, TW, TA) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XWAX() (TX, TW, TA, TX) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XWAY() (TX, TW, TA, TY) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XWAZ() (TX, TW, TA, TZ) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XWAW() (TX, TW, TA, TW) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XWAA() (TX, TW, TA, TA) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XAXX() (TX, TA, TX, TX) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XAXY() (TX, TA, TX, TY) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XAXZ() (TX, TA, TX, TZ) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XAXW() (TX, TA, TX, TW) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XAXA() (TX, TA, TX, TA) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XAYX() (TX, TA, TY, TX) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XAYY() (TX, TA, TY, TY) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XAYZ() (TX, TA, TY, TZ) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XAYW() (TX, TA, TY, TW) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XAYA() (TX, TA, TY, TA) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XAZX() (TX, TA, TZ, TX) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XAZY() (TX, TA, TZ, TY) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XAZZ() (TX, TA, TZ, TZ) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XAZW() (TX, TA, TZ, TW) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XAZA() (TX, TA, TZ, TA) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XAWX() (TX, TA, TW, TX) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XAWY() (TX, TA, TW, TY) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XAWZ() (TX, TA, TW, TZ) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XAWW() (TX, TA, TW, TW) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XAWA() (TX, TA, TW, TA) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XAAX() (TX, TA, TA, TX) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XAAY() (TX, TA, TA, TY) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XAAZ() (TX, TA, TA, TZ) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XAAW() (TX, TA, TA, TW) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) XAAA() (TX, TA, TA, TA) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YXXX() (TY, TX, TX, TX) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YXXY() (TY, TX, TX, TY) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YXXZ() (TY, TX, TX, TZ) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YXXW() (TY, TX, TX, TW) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YXXA() (TY, TX, TX, TA) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YXYX() (TY, TX, TY, TX) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YXYY() (TY, TX, TY, TY) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YXYZ() (TY, TX, TY, TZ) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YXYW() (TY, TX, TY, TW) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YXYA() (TY, TX, TY, TA) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YXZX() (TY, TX, TZ, TX) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YXZY() (TY, TX, TZ, TY) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YXZZ() (TY, TX, TZ, TZ) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YXZW() (TY, TX, TZ, TW) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YXZA() (TY, TX, TZ, TA) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YXWX() (TY, TX, TW, TX) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YXWY() (TY, TX, TW, TY) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YXWZ() (TY, TX, TW, TZ) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YXWW() (TY, TX, TW, TW) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YXWA() (TY, TX, TW, TA) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YXAX() (TY, TX, TA, TX) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YXAY() (TY, TX, TA, TY) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YXAZ() (TY, TX, TA, TZ) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YXAW() (TY, TX, TA, TW) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YXAA() (TY, TX, TA, TA) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YYXX() (TY, TY, TX, TX) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YYXY() (TY, TY, TX, TY) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YYXZ() (TY, TY, TX, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YYXW() (TY, TY, TX, TW) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YYXA() (TY, TY, TX, TA) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YYYX() (TY, TY, TY, TX) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YYYY() (TY, TY, TY, TY) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YYYZ() (TY, TY, TY, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YYYW() (TY, TY, TY, TW) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YYYA() (TY, TY, TY, TA) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YYZX() (TY, TY, TZ, TX) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YYZY() (TY, TY, TZ, TY) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YYZZ() (TY, TY, TZ, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YYZW() (TY, TY, TZ, TW) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YYZA() (TY, TY, TZ, TA) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YYWX() (TY, TY, TW, TX) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YYWY() (TY, TY, TW, TY) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YYWZ() (TY, TY, TW, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YYWW() (TY, TY, TW, TW) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YYWA() (TY, TY, TW, TA) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YYAX() (TY, TY, TA, TX) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YYAY() (TY, TY, TA, TY) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YYAZ() (TY, TY, TA, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YYAW() (TY, TY, TA, TW) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YYAA() (TY, TY, TA, TA) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YZXX() (TY, TZ, TX, TX) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YZXY() (TY, TZ, TX, TY) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YZXZ() (TY, TZ, TX, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YZXW() (TY, TZ, TX, TW) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YZXA() (TY, TZ, TX, TA) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YZYX() (TY, TZ, TY, TX) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YZYY() (TY, TZ, TY, TY) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YZYZ() (TY, TZ, TY, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YZYW() (TY, TZ, TY, TW) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YZYA() (TY, TZ, TY, TA) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YZZX() (TY, TZ, TZ, TX) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YZZY() (TY, TZ, TZ, TY) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YZZZ() (TY, TZ, TZ, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YZZW() (TY, TZ, TZ, TW) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YZZA() (TY, TZ, TZ, TA) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YZWX() (TY, TZ, TW, TX) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YZWY() (TY, TZ, TW, TY) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YZWZ() (TY, TZ, TW, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YZWW() (TY, TZ, TW, TW) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YZWA() (TY, TZ, TW, TA) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YZAX() (TY, TZ, TA, TX) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YZAY() (TY, TZ, TA, TY) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YZAZ() (TY, TZ, TA, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YZAW() (TY, TZ, TA, TW) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YZAA() (TY, TZ, TA, TA) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YWXX() (TY, TW, TX, TX) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YWXY() (TY, TW, TX, TY) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YWXZ() (TY, TW, TX, TZ) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YWXW() (TY, TW, TX, TW) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YWXA() (TY, TW, TX, TA) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YWYX() (TY, TW, TY, TX) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YWYY() (TY, TW, TY, TY) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YWYZ() (TY, TW, TY, TZ) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YWYW() (TY, TW, TY, TW) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YWYA() (TY, TW, TY, TA) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YWZX() (TY, TW, TZ, TX) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YWZY() (TY, TW, TZ, TY) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YWZZ() (TY, TW, TZ, TZ) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YWZW() (TY, TW, TZ, TW) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YWZA() (TY, TW, TZ, TA) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YWWX() (TY, TW, TW, TX) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YWWY() (TY, TW, TW, TY) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YWWZ() (TY, TW, TW, TZ) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YWWW() (TY, TW, TW, TW) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YWWA() (TY, TW, TW, TA) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YWAX() (TY, TW, TA, TX) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YWAY() (TY, TW, TA, TY) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YWAZ() (TY, TW, TA, TZ) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YWAW() (TY, TW, TA, TW) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YWAA() (TY, TW, TA, TA) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YAXX() (TY, TA, TX, TX) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YAXY() (TY, TA, TX, TY) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YAXZ() (TY, TA, TX, TZ) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YAXW() (TY, TA, TX, TW) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YAXA() (TY, TA, TX, TA) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YAYX() (TY, TA, TY, TX) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YAYY() (TY, TA, TY, TY) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YAYZ() (TY, TA, TY, TZ) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YAYW() (TY, TA, TY, TW) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YAYA() (TY, TA, TY, TA) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YAZX() (TY, TA, TZ, TX) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YAZY() (TY, TA, TZ, TY) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YAZZ() (TY, TA, TZ, TZ) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YAZW() (TY, TA, TZ, TW) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YAZA() (TY, TA, TZ, TA) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YAWX() (TY, TA, TW, TX) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YAWY() (TY, TA, TW, TY) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YAWZ() (TY, TA, TW, TZ) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YAWW() (TY, TA, TW, TW) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YAWA() (TY, TA, TW, TA) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YAAX() (TY, TA, TA, TX) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YAAY() (TY, TA, TA, TY) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YAAZ() (TY, TA, TA, TZ) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YAAW() (TY, TA, TA, TW) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) YAAA() (TY, TA, TA, TA) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZXXX() (TZ, TX, TX, TX) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZXXY() (TZ, TX, TX, TY) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZXXZ() (TZ, TX, TX, TZ) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZXXW() (TZ, TX, TX, TW) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZXXA() (TZ, TX, TX, TA) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZXYX() (TZ, TX, TY, TX) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZXYY() (TZ, TX, TY, TY) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZXYZ() (TZ, TX, TY, TZ) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZXYW() (TZ, TX, TY, TW) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZXYA() (TZ, TX, TY, TA) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZXZX() (TZ, TX, TZ, TX) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZXZY() (TZ, TX, TZ, TY) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZXZZ() (TZ, TX, TZ, TZ) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZXZW() (TZ, TX, TZ, TW) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZXZA() (TZ, TX, TZ, TA) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZXWX() (TZ, TX, TW, TX) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZXWY() (TZ, TX, TW, TY) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZXWZ() (TZ, TX, TW, TZ) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZXWW() (TZ, TX, TW, TW) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZXWA() (TZ, TX, TW, TA) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZXAX() (TZ, TX, TA, TX) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZXAY() (TZ, TX, TA, TY) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZXAZ() (TZ, TX, TA, TZ) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZXAW() (TZ, TX, TA, TW) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZXAA() (TZ, TX, TA, TA) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZYXX() (TZ, TY, TX, TX) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZYXY() (TZ, TY, TX, TY) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZYXZ() (TZ, TY, TX, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZYXW() (TZ, TY, TX, TW) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZYXA() (TZ, TY, TX, TA) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZYYX() (TZ, TY, TY, TX) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZYYY() (TZ, TY, TY, TY) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZYYZ() (TZ, TY, TY, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZYYW() (TZ, TY, TY, TW) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZYYA() (TZ, TY, TY, TA) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZYZX() (TZ, TY, TZ, TX) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZYZY() (TZ, TY, TZ, TY) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZYZZ() (TZ, TY, TZ, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZYZW() (TZ, TY, TZ, TW) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZYZA() (TZ, TY, TZ, TA) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZYWX() (TZ, TY, TW, TX) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZYWY() (TZ, TY, TW, TY) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZYWZ() (TZ, TY, TW, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZYWW() (TZ, TY, TW, TW) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZYWA() (TZ, TY, TW, TA) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZYAX() (TZ, TY, TA, TX) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZYAY() (TZ, TY, TA, TY) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZYAZ() (TZ, TY, TA, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZYAW() (TZ, TY, TA, TW) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZYAA() (TZ, TY, TA, TA) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZZXX() (TZ, TZ, TX, TX) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZZXY() (TZ, TZ, TX, TY) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZZXZ() (TZ, TZ, TX, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZZXW() (TZ, TZ, TX, TW) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZZXA() (TZ, TZ, TX, TA) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZZYX() (TZ, TZ, TY, TX) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZZYY() (TZ, TZ, TY, TY) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZZYZ() (TZ, TZ, TY, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZZYW() (TZ, TZ, TY, TW) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZZYA() (TZ, TZ, TY, TA) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZZZX() (TZ, TZ, TZ, TX) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZZZY() (TZ, TZ, TZ, TY) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZZZZ() (TZ, TZ, TZ, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZZZW() (TZ, TZ, TZ, TW) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZZZA() (TZ, TZ, TZ, TA) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZZWX() (TZ, TZ, TW, TX) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZZWY() (TZ, TZ, TW, TY) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZZWZ() (TZ, TZ, TW, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZZWW() (TZ, TZ, TW, TW) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZZWA() (TZ, TZ, TW, TA) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZZAX() (TZ, TZ, TA, TX) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZZAY() (TZ, TZ, TA, TY) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZZAZ() (TZ, TZ, TA, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZZAW() (TZ, TZ, TA, TW) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZZAA() (TZ, TZ, TA, TA) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZWXX() (TZ, TW, TX, TX) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZWXY() (TZ, TW, TX, TY) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZWXZ() (TZ, TW, TX, TZ) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZWXW() (TZ, TW, TX, TW) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZWXA() (TZ, TW, TX, TA) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZWYX() (TZ, TW, TY, TX) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZWYY() (TZ, TW, TY, TY) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZWYZ() (TZ, TW, TY, TZ) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZWYW() (TZ, TW, TY, TW) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZWYA() (TZ, TW, TY, TA) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZWZX() (TZ, TW, TZ, TX) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZWZY() (TZ, TW, TZ, TY) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZWZZ() (TZ, TW, TZ, TZ) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZWZW() (TZ, TW, TZ, TW) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZWZA() (TZ, TW, TZ, TA) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZWWX() (TZ, TW, TW, TX) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZWWY() (TZ, TW, TW, TY) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZWWZ() (TZ, TW, TW, TZ) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZWWW() (TZ, TW, TW, TW) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZWWA() (TZ, TW, TW, TA) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZWAX() (TZ, TW, TA, TX) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZWAY() (TZ, TW, TA, TY) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZWAZ() (TZ, TW, TA, TZ) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZWAW() (TZ, TW, TA, TW) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZWAA() (TZ, TW, TA, TA) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZAXX() (TZ, TA, TX, TX) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZAXY() (TZ, TA, TX, TY) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZAXZ() (TZ, TA, TX, TZ) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZAXW() (TZ, TA, TX, TW) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZAXA() (TZ, TA, TX, TA) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZAYX() (TZ, TA, TY, TX) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZAYY() (TZ, TA, TY, TY) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZAYZ() (TZ, TA, TY, TZ) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZAYW() (TZ, TA, TY, TW) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZAYA() (TZ, TA, TY, TA) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZAZX() (TZ, TA, TZ, TX) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZAZY() (TZ, TA, TZ, TY) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZAZZ() (TZ, TA, TZ, TZ) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZAZW() (TZ, TA, TZ, TW) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZAZA() (TZ, TA, TZ, TA) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZAWX() (TZ, TA, TW, TX) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZAWY() (TZ, TA, TW, TY) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZAWZ() (TZ, TA, TW, TZ) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZAWW() (TZ, TA, TW, TW) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZAWA() (TZ, TA, TW, TA) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZAAX() (TZ, TA, TA, TX) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZAAY() (TZ, TA, TA, TY) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZAAZ() (TZ, TA, TA, TZ) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZAAW() (TZ, TA, TA, TW) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) ZAAA() (TZ, TA, TA, TA) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WXXX() (TW, TX, TX, TX) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WXXY() (TW, TX, TX, TY) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WXXZ() (TW, TX, TX, TZ) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WXXW() (TW, TX, TX, TW) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WXXA() (TW, TX, TX, TA) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WXYX() (TW, TX, TY, TX) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WXYY() (TW, TX, TY, TY) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WXYZ() (TW, TX, TY, TZ) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WXYW() (TW, TX, TY, TW) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WXYA() (TW, TX, TY, TA) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WXZX() (TW, TX, TZ, TX) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WXZY() (TW, TX, TZ, TY) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WXZZ() (TW, TX, TZ, TZ) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WXZW() (TW, TX, TZ, TW) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WXZA() (TW, TX, TZ, TA) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WXWX() (TW, TX, TW, TX) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WXWY() (TW, TX, TW, TY) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WXWZ() (TW, TX, TW, TZ) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WXWW() (TW, TX, TW, TW) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WXWA() (TW, TX, TW, TA) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WXAX() (TW, TX, TA, TX) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WXAY() (TW, TX, TA, TY) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WXAZ() (TW, TX, TA, TZ) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WXAW() (TW, TX, TA, TW) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WXAA() (TW, TX, TA, TA) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WYXX() (TW, TY, TX, TX) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WYXY() (TW, TY, TX, TY) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WYXZ() (TW, TY, TX, TZ) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WYXW() (TW, TY, TX, TW) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WYXA() (TW, TY, TX, TA) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WYYX() (TW, TY, TY, TX) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WYYY() (TW, TY, TY, TY) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WYYZ() (TW, TY, TY, TZ) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WYYW() (TW, TY, TY, TW) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WYYA() (TW, TY, TY, TA) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WYZX() (TW, TY, TZ, TX) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WYZY() (TW, TY, TZ, TY) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WYZZ() (TW, TY, TZ, TZ) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WYZW() (TW, TY, TZ, TW) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WYZA() (TW, TY, TZ, TA) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WYWX() (TW, TY, TW, TX) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WYWY() (TW, TY, TW, TY) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WYWZ() (TW, TY, TW, TZ) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WYWW() (TW, TY, TW, TW) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WYWA() (TW, TY, TW, TA) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WYAX() (TW, TY, TA, TX) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WYAY() (TW, TY, TA, TY) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WYAZ() (TW, TY, TA, TZ) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WYAW() (TW, TY, TA, TW) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WYAA() (TW, TY, TA, TA) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WZXX() (TW, TZ, TX, TX) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WZXY() (TW, TZ, TX, TY) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WZXZ() (TW, TZ, TX, TZ) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WZXW() (TW, TZ, TX, TW) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WZXA() (TW, TZ, TX, TA) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WZYX() (TW, TZ, TY, TX) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WZYY() (TW, TZ, TY, TY) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WZYZ() (TW, TZ, TY, TZ) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WZYW() (TW, TZ, TY, TW) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WZYA() (TW, TZ, TY, TA) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WZZX() (TW, TZ, TZ, TX) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WZZY() (TW, TZ, TZ, TY) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WZZZ() (TW, TZ, TZ, TZ) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WZZW() (TW, TZ, TZ, TW) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WZZA() (TW, TZ, TZ, TA) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WZWX() (TW, TZ, TW, TX) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WZWY() (TW, TZ, TW, TY) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WZWZ() (TW, TZ, TW, TZ) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WZWW() (TW, TZ, TW, TW) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WZWA() (TW, TZ, TW, TA) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WZAX() (TW, TZ, TA, TX) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WZAY() (TW, TZ, TA, TY) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WZAZ() (TW, TZ, TA, TZ) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WZAW() (TW, TZ, TA, TW) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WZAA() (TW, TZ, TA, TA) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WWXX() (TW, TW, TX, TX) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WWXY() (TW, TW, TX, TY) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WWXZ() (TW, TW, TX, TZ) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WWXW() (TW, TW, TX, TW) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WWXA() (TW, TW, TX, TA) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WWYX() (TW, TW, TY, TX) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WWYY() (TW, TW, TY, TY) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WWYZ() (TW, TW, TY, TZ) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WWYW() (TW, TW, TY, TW) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WWYA() (TW, TW, TY, TA) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WWZX() (TW, TW, TZ, TX) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WWZY() (TW, TW, TZ, TY) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WWZZ() (TW, TW, TZ, TZ) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WWZW() (TW, TW, TZ, TW) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WWZA() (TW, TW, TZ, TA) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WWWX() (TW, TW, TW, TX) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WWWY() (TW, TW, TW, TY) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WWWZ() (TW, TW, TW, TZ) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WWWW() (TW, TW, TW, TW) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WWWA() (TW, TW, TW, TA) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WWAX() (TW, TW, TA, TX) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WWAY() (TW, TW, TA, TY) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WWAZ() (TW, TW, TA, TZ) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WWAW() (TW, TW, TA, TW) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WWAA() (TW, TW, TA, TA) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WAXX() (TW, TA, TX, TX) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WAXY() (TW, TA, TX, TY) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WAXZ() (TW, TA, TX, TZ) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WAXW() (TW, TA, TX, TW) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WAXA() (TW, TA, TX, TA) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WAYX() (TW, TA, TY, TX) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WAYY() (TW, TA, TY, TY) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WAYZ() (TW, TA, TY, TZ) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WAYW() (TW, TA, TY, TW) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WAYA() (TW, TA, TY, TA) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WAZX() (TW, TA, TZ, TX) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WAZY() (TW, TA, TZ, TY) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WAZZ() (TW, TA, TZ, TZ) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WAZW() (TW, TA, TZ, TW) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WAZA() (TW, TA, TZ, TA) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WAWX() (TW, TA, TW, TX) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WAWY() (TW, TA, TW, TY) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WAWZ() (TW, TA, TW, TZ) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WAWW() (TW, TA, TW, TW) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WAWA() (TW, TA, TW, TA) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WAAX() (TW, TA, TA, TX) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WAAY() (TW, TA, TA, TY) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WAAZ() (TW, TA, TA, TZ) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WAAW() (TW, TA, TA, TW) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) WAAA() (TW, TA, TA, TA) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AXXX() (TA, TX, TX, TX) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AXXY() (TA, TX, TX, TY) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AXXZ() (TA, TX, TX, TZ) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AXXW() (TA, TX, TX, TW) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AXXA() (TA, TX, TX, TA) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AXYX() (TA, TX, TY, TX) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AXYY() (TA, TX, TY, TY) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AXYZ() (TA, TX, TY, TZ) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AXYW() (TA, TX, TY, TW) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AXYA() (TA, TX, TY, TA) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AXZX() (TA, TX, TZ, TX) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AXZY() (TA, TX, TZ, TY) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AXZZ() (TA, TX, TZ, TZ) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AXZW() (TA, TX, TZ, TW) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AXZA() (TA, TX, TZ, TA) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AXWX() (TA, TX, TW, TX) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AXWY() (TA, TX, TW, TY) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AXWZ() (TA, TX, TW, TZ) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AXWW() (TA, TX, TW, TW) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AXWA() (TA, TX, TW, TA) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AXAX() (TA, TX, TA, TX) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AXAY() (TA, TX, TA, TY) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AXAZ() (TA, TX, TA, TZ) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AXAW() (TA, TX, TA, TW) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AXAA() (TA, TX, TA, TA) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AYXX() (TA, TY, TX, TX) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AYXY() (TA, TY, TX, TY) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AYXZ() (TA, TY, TX, TZ) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AYXW() (TA, TY, TX, TW) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AYXA() (TA, TY, TX, TA) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AYYX() (TA, TY, TY, TX) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AYYY() (TA, TY, TY, TY) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AYYZ() (TA, TY, TY, TZ) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AYYW() (TA, TY, TY, TW) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AYYA() (TA, TY, TY, TA) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AYZX() (TA, TY, TZ, TX) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AYZY() (TA, TY, TZ, TY) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AYZZ() (TA, TY, TZ, TZ) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AYZW() (TA, TY, TZ, TW) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AYZA() (TA, TY, TZ, TA) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AYWX() (TA, TY, TW, TX) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AYWY() (TA, TY, TW, TY) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AYWZ() (TA, TY, TW, TZ) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AYWW() (TA, TY, TW, TW) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AYWA() (TA, TY, TW, TA) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AYAX() (TA, TY, TA, TX) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AYAY() (TA, TY, TA, TY) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AYAZ() (TA, TY, TA, TZ) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AYAW() (TA, TY, TA, TW) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AYAA() (TA, TY, TA, TA) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AZXX() (TA, TZ, TX, TX) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AZXY() (TA, TZ, TX, TY) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AZXZ() (TA, TZ, TX, TZ) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AZXW() (TA, TZ, TX, TW) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AZXA() (TA, TZ, TX, TA) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AZYX() (TA, TZ, TY, TX) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AZYY() (TA, TZ, TY, TY) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AZYZ() (TA, TZ, TY, TZ) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AZYW() (TA, TZ, TY, TW) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AZYA() (TA, TZ, TY, TA) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AZZX() (TA, TZ, TZ, TX) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AZZY() (TA, TZ, TZ, TY) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AZZZ() (TA, TZ, TZ, TZ) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AZZW() (TA, TZ, TZ, TW) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AZZA() (TA, TZ, TZ, TA) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AZWX() (TA, TZ, TW, TX) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AZWY() (TA, TZ, TW, TY) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AZWZ() (TA, TZ, TW, TZ) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AZWW() (TA, TZ, TW, TW) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AZWA() (TA, TZ, TW, TA) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AZAX() (TA, TZ, TA, TX) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AZAY() (TA, TZ, TA, TY) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AZAZ() (TA, TZ, TA, TZ) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AZAW() (TA, TZ, TA, TW) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AZAA() (TA, TZ, TA, TA) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AWXX() (TA, TW, TX, TX) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AWXY() (TA, TW, TX, TY) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AWXZ() (TA, TW, TX, TZ) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AWXW() (TA, TW, TX, TW) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AWXA() (TA, TW, TX, TA) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AWYX() (TA, TW, TY, TX) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AWYY() (TA, TW, TY, TY) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AWYZ() (TA, TW, TY, TZ) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AWYW() (TA, TW, TY, TW) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AWYA() (TA, TW, TY, TA) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AWZX() (TA, TW, TZ, TX) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AWZY() (TA, TW, TZ, TY) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AWZZ() (TA, TW, TZ, TZ) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AWZW() (TA, TW, TZ, TW) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AWZA() (TA, TW, TZ, TA) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AWWX() (TA, TW, TW, TX) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AWWY() (TA, TW, TW, TY) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AWWZ() (TA, TW, TW, TZ) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AWWW() (TA, TW, TW, TW) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AWWA() (TA, TW, TW, TA) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AWAX() (TA, TW, TA, TX) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AWAY() (TA, TW, TA, TY) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AWAZ() (TA, TW, TA, TZ) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AWAW() (TA, TW, TA, TW) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AWAA() (TA, TW, TA, TA) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AAXX() (TA, TA, TX, TX) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AAXY() (TA, TA, TX, TY) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AAXZ() (TA, TA, TX, TZ) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AAXW() (TA, TA, TX, TW) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AAXA() (TA, TA, TX, TA) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AAYX() (TA, TA, TY, TX) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AAYY() (TA, TA, TY, TY) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AAYZ() (TA, TA, TY, TZ) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AAYW() (TA, TA, TY, TW) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AAYA() (TA, TA, TY, TA) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AAZX() (TA, TA, TZ, TX) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AAZY() (TA, TA, TZ, TY) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AAZZ() (TA, TA, TZ, TZ) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AAZW() (TA, TA, TZ, TW) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AAZA() (TA, TA, TZ, TA) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AAWX() (TA, TA, TW, TX) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AAWY() (TA, TA, TW, TY) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AAWZ() (TA, TA, TW, TZ) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AAWW() (TA, TA, TW, TW) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AAWA() (TA, TA, TW, TA) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AAAX() (TA, TA, TA, TX) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AAAY() (TA, TA, TA, TY) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AAAZ() (TA, TA, TA, TZ) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AAAW() (TA, TA, TA, TW) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWATyped[TX, TY, TZ, TW, TA]) AAAA() (TA, TA, TA, TA) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
