// Code generated by 'gen/letters/main'; DO NOT EDIT.
//go:generate go run ../gen/letters/main -pkg std -name FMA -nameL fma -cmpts Force,Mass,Acceleration -cmptsL Force,Mass,Acceleration -out ../std/fma.go
package std

import (
	"core/sys/atlas"
	"core/sys/name/format"
	"core/sys/num"
	"core/sys/support"
	"fmt"
	"strings"
)

// FMA is a 3D vector of like-typed bounded.Numeric components.
//
// NOTE: If you'd like asymmetric types, please see FMATyped.
type FMA[T num.Primitive] = FMATyped[T, T, T]

// FMATyped is a 3D vector of asymmetrically typed bounded.Numeric components.
//
// NOTE: If you'd like symmetric types, please see FMA.
type FMATyped[TForce num.Primitive, TMass num.Primitive, TAcceleration num.Primitive] struct {
	Entity
	Force        num.Numeric[TForce]
	Mass         num.Numeric[TMass]
	Acceleration num.Numeric[TAcceleration]
}

func NewFMA[T num.Primitive](Force T, Mass T, Acceleration T, name ...string) *FMA[T] {
	typed := FMA[T](*NewFMATyped[T, T, T](Force, Mass, Acceleration, name...))
	return &typed
}

func NewFMATyped[TForce num.Primitive, TMass num.Primitive, TAcceleration num.Primitive](Force TForce, Mass TMass, Acceleration TAcceleration, name ...string) *FMATyped[TForce, TMass, TAcceleration] {
	minForce := num.MinValue[TForce]()
	maxForce := num.MaxValue[TForce]()
	if num.IsFloat[TForce]() {
		minForce = 0
		maxForce = 1
	}
	minMass := num.MinValue[TMass]()
	maxMass := num.MaxValue[TMass]()
	if num.IsFloat[TMass]() {
		minMass = 0
		maxMass = 1
	}
	minAcceleration := num.MinValue[TAcceleration]()
	maxAcceleration := num.MaxValue[TAcceleration]()
	if num.IsFloat[TAcceleration]() {
		minAcceleration = 0
		maxAcceleration = 1
	}

	_v := &FMATyped[TForce, TMass, TAcceleration]{}
	_v.Entity = NewEntity[format.Default]()
	_v.SetBoundaries(minForce, maxForce, minMass, maxMass, minAcceleration, maxAcceleration)
	_v.Set(Force, Mass, Acceleration)
	if len(name) > 0 {
		_v.SetName(name[0])
	}
	return _v
}

func (_v *FMATyped[TForce, TMass, TAcceleration]) Name() string {
	return _v.GivenName.Name
}

func (_v *FMATyped[TForce, TMass, TAcceleration]) SetName(name string) *FMATyped[TForce, TMass, TAcceleration] {
	_v.GivenName.Name = name
	return _v
}

func (_v *FMATyped[TForce, TMass, TAcceleration]) Set(Force TForce, Mass TMass, Acceleration TAcceleration) *FMATyped[TForce, TMass, TAcceleration] {
	_ = _v.Force.Set(Force)
	_ = _v.Mass.Set(Mass)
	_ = _v.Acceleration.Set(Acceleration)
	return _v
}

func (_v *FMATyped[TForce, TMass, TAcceleration]) SetClamp(clamp bool) *FMATyped[TForce, TMass, TAcceleration] {
	_v.Force.Clamp = clamp
	_v.Mass.Clamp = clamp
	_v.Acceleration.Clamp = clamp
	return _v
}

func (_v *FMATyped[TForce, TMass, TAcceleration]) SetBoundaries(minForce, maxForce TForce, minMass, maxMass TMass, minAcceleration, maxAcceleration TAcceleration) *FMATyped[TForce, TMass, TAcceleration] {
	_ = _v.Force.SetBoundaries(minForce, maxForce)
	_ = _v.Mass.SetBoundaries(minMass, maxMass)
	_ = _v.Acceleration.SetBoundaries(minAcceleration, maxAcceleration)
	return _v
}

func (_v *FMATyped[TForce, TMass, TAcceleration]) Component(index uint) (num.INumeric, error) {
	switch index {
	case 0:
		return &_v.Force, nil
	case 1:
		return &_v.Mass, nil
	case 2:
		return &_v.Acceleration, nil
	default:
		return nil, fmt.Errorf("cannot get component index %d of an FMA vector", index)
	}
}

func (_v *FMATyped[TForce, TMass, TAcceleration]) Components() []num.INumeric {
	return []num.INumeric{&_v.Force, &_v.Mass, &_v.Acceleration}
}

func (_v *FMATyped[TForce, TMass, TAcceleration]) ComponentByName(name string) (num.INumeric, error) {
	switch strings.ToLower(name) {
	case "force":
		return &_v.Force, nil
	case "mass":
		return &_v.Mass, nil
	case "acceleration":
		return &_v.Acceleration, nil
	default:
		return nil, fmt.Errorf("cannot get component \"%s\" of an FMA vector", name)
	}
}

func (_v *FMATyped[TForce, TMass, TAcceleration]) ComponentLen() uint {
	return 3
}

func (_v *FMATyped[TForce, TMass, TAcceleration]) SetComponent(index uint, value any) error {
	switch index {
	case 0:
		 _v.Force.Set(value.(TForce))
	case 1:
		 _v.Mass.Set(value.(TMass))
	case 2:
		 _v.Acceleration.Set(value.(TAcceleration))
	default:
		return fmt.Errorf("cannot set component index %d of an FMA vector", index)
	}
	return nil
}

func (_v *FMATyped[TForce, TMass, TAcceleration]) SetComponents(values []any) error {
	if len(values) != 3 {
		return fmt.Errorf("cannot set %d components of 3D vector FMA", len(values), )
	}
	if _, ok := values[0].(TForce); !ok {
		return fmt.Errorf("expected type %T for component Force, got type %T", TForce(0), values[0])	}
	if _, ok := values[1].(TMass); !ok {
		return fmt.Errorf("expected type %T for component Mass, got type %T", TMass(0), values[1])	}
	if _, ok := values[2].(TAcceleration); !ok {
		return fmt.Errorf("expected type %T for component Acceleration, got type %T", TAcceleration(0), values[2])	}
	_v.Force.Set(values[0].(TForce))
	_v.Mass.Set(values[1].(TMass))
	_v.Acceleration.Set(values[2].(TAcceleration))
	return nil
}

func (_v *FMATyped[TForce, TMass, TAcceleration]) SetComponentByName(name string, value any) error {
	switch strings.ToLower(name) {
	case "force":
		 _v.Force.Set(value.(TForce))
	case "mass":
		 _v.Mass.Set(value.(TMass))
	case "acceleration":
		 _v.Acceleration.Set(value.(TAcceleration))
	default:
		return fmt.Errorf("cannot set component \"%s\" of an FMA vector", name)
	}
	return nil
}

func (_v FMATyped[TForce, TMass, TAcceleration]) String() string {
	if atlas.CompactVectors {
		return fmt.Sprintf("{Force: %v, Mass: %v, Acceleration: %v}", _v.Force.String(), _v.Mass.String(), _v.Acceleration.String())
	}
	 if support.AllSameTypes(TForce(0), TMass(0), TAcceleration(0)) {
		return fmt.Sprintf("fma[%T]{%v, %v, %v}(\"%v\")", TForce(0), _v.Force.String(), _v.Mass.String(), _v.Acceleration.String(), _v.GivenName.Name)
	}
	return fmt.Sprintf("fma[%T, %T, %T]{%v, %v, %v}(\"%v\")", TForce(0), TMass(0), TAcceleration(0), _v.Force.String(), _v.Mass.String(), _v.Acceleration.String(), _v.GivenName.Name)
}

func (_v *FMATyped[TForce, TMass, TAcceleration]) ForceForce() (TForce, TForce) { return _v.Force.Value(), _v.Force.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) ForceMass() (TForce, TMass) { return _v.Force.Value(), _v.Mass.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) ForceAcceleration() (TForce, TAcceleration) { return _v.Force.Value(), _v.Acceleration.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) MassForce() (TMass, TForce) { return _v.Mass.Value(), _v.Force.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) MassMass() (TMass, TMass) { return _v.Mass.Value(), _v.Mass.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) MassAcceleration() (TMass, TAcceleration) { return _v.Mass.Value(), _v.Acceleration.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) AccelerationForce() (TAcceleration, TForce) { return _v.Acceleration.Value(), _v.Force.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) AccelerationMass() (TAcceleration, TMass) { return _v.Acceleration.Value(), _v.Mass.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) AccelerationAcceleration() (TAcceleration, TAcceleration) { return _v.Acceleration.Value(), _v.Acceleration.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) ForceForceForce() (TForce, TForce, TForce) { return _v.Force.Value(), _v.Force.Value(), _v.Force.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) ForceForceMass() (TForce, TForce, TMass) { return _v.Force.Value(), _v.Force.Value(), _v.Mass.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) ForceForceAcceleration() (TForce, TForce, TAcceleration) { return _v.Force.Value(), _v.Force.Value(), _v.Acceleration.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) ForceMassForce() (TForce, TMass, TForce) { return _v.Force.Value(), _v.Mass.Value(), _v.Force.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) ForceMassMass() (TForce, TMass, TMass) { return _v.Force.Value(), _v.Mass.Value(), _v.Mass.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) ForceMassAcceleration() (TForce, TMass, TAcceleration) { return _v.Force.Value(), _v.Mass.Value(), _v.Acceleration.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) ForceAccelerationForce() (TForce, TAcceleration, TForce) { return _v.Force.Value(), _v.Acceleration.Value(), _v.Force.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) ForceAccelerationMass() (TForce, TAcceleration, TMass) { return _v.Force.Value(), _v.Acceleration.Value(), _v.Mass.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) ForceAccelerationAcceleration() (TForce, TAcceleration, TAcceleration) { return _v.Force.Value(), _v.Acceleration.Value(), _v.Acceleration.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) MassForceForce() (TMass, TForce, TForce) { return _v.Mass.Value(), _v.Force.Value(), _v.Force.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) MassForceMass() (TMass, TForce, TMass) { return _v.Mass.Value(), _v.Force.Value(), _v.Mass.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) MassForceAcceleration() (TMass, TForce, TAcceleration) { return _v.Mass.Value(), _v.Force.Value(), _v.Acceleration.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) MassMassForce() (TMass, TMass, TForce) { return _v.Mass.Value(), _v.Mass.Value(), _v.Force.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) MassMassMass() (TMass, TMass, TMass) { return _v.Mass.Value(), _v.Mass.Value(), _v.Mass.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) MassMassAcceleration() (TMass, TMass, TAcceleration) { return _v.Mass.Value(), _v.Mass.Value(), _v.Acceleration.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) MassAccelerationForce() (TMass, TAcceleration, TForce) { return _v.Mass.Value(), _v.Acceleration.Value(), _v.Force.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) MassAccelerationMass() (TMass, TAcceleration, TMass) { return _v.Mass.Value(), _v.Acceleration.Value(), _v.Mass.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) MassAccelerationAcceleration() (TMass, TAcceleration, TAcceleration) { return _v.Mass.Value(), _v.Acceleration.Value(), _v.Acceleration.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) AccelerationForceForce() (TAcceleration, TForce, TForce) { return _v.Acceleration.Value(), _v.Force.Value(), _v.Force.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) AccelerationForceMass() (TAcceleration, TForce, TMass) { return _v.Acceleration.Value(), _v.Force.Value(), _v.Mass.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) AccelerationForceAcceleration() (TAcceleration, TForce, TAcceleration) { return _v.Acceleration.Value(), _v.Force.Value(), _v.Acceleration.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) AccelerationMassForce() (TAcceleration, TMass, TForce) { return _v.Acceleration.Value(), _v.Mass.Value(), _v.Force.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) AccelerationMassMass() (TAcceleration, TMass, TMass) { return _v.Acceleration.Value(), _v.Mass.Value(), _v.Mass.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) AccelerationMassAcceleration() (TAcceleration, TMass, TAcceleration) { return _v.Acceleration.Value(), _v.Mass.Value(), _v.Acceleration.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) AccelerationAccelerationForce() (TAcceleration, TAcceleration, TForce) { return _v.Acceleration.Value(), _v.Acceleration.Value(), _v.Force.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) AccelerationAccelerationMass() (TAcceleration, TAcceleration, TMass) { return _v.Acceleration.Value(), _v.Acceleration.Value(), _v.Mass.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) AccelerationAccelerationAcceleration() (TAcceleration, TAcceleration, TAcceleration) { return _v.Acceleration.Value(), _v.Acceleration.Value(), _v.Acceleration.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) ForceForceForceForce() (TForce, TForce, TForce, TForce) { return _v.Force.Value(), _v.Force.Value(), _v.Force.Value(), _v.Force.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) ForceForceForceMass() (TForce, TForce, TForce, TMass) { return _v.Force.Value(), _v.Force.Value(), _v.Force.Value(), _v.Mass.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) ForceForceForceAcceleration() (TForce, TForce, TForce, TAcceleration) { return _v.Force.Value(), _v.Force.Value(), _v.Force.Value(), _v.Acceleration.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) ForceForceMassForce() (TForce, TForce, TMass, TForce) { return _v.Force.Value(), _v.Force.Value(), _v.Mass.Value(), _v.Force.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) ForceForceMassMass() (TForce, TForce, TMass, TMass) { return _v.Force.Value(), _v.Force.Value(), _v.Mass.Value(), _v.Mass.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) ForceForceMassAcceleration() (TForce, TForce, TMass, TAcceleration) { return _v.Force.Value(), _v.Force.Value(), _v.Mass.Value(), _v.Acceleration.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) ForceForceAccelerationForce() (TForce, TForce, TAcceleration, TForce) { return _v.Force.Value(), _v.Force.Value(), _v.Acceleration.Value(), _v.Force.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) ForceForceAccelerationMass() (TForce, TForce, TAcceleration, TMass) { return _v.Force.Value(), _v.Force.Value(), _v.Acceleration.Value(), _v.Mass.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) ForceForceAccelerationAcceleration() (TForce, TForce, TAcceleration, TAcceleration) { return _v.Force.Value(), _v.Force.Value(), _v.Acceleration.Value(), _v.Acceleration.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) ForceMassForceForce() (TForce, TMass, TForce, TForce) { return _v.Force.Value(), _v.Mass.Value(), _v.Force.Value(), _v.Force.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) ForceMassForceMass() (TForce, TMass, TForce, TMass) { return _v.Force.Value(), _v.Mass.Value(), _v.Force.Value(), _v.Mass.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) ForceMassForceAcceleration() (TForce, TMass, TForce, TAcceleration) { return _v.Force.Value(), _v.Mass.Value(), _v.Force.Value(), _v.Acceleration.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) ForceMassMassForce() (TForce, TMass, TMass, TForce) { return _v.Force.Value(), _v.Mass.Value(), _v.Mass.Value(), _v.Force.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) ForceMassMassMass() (TForce, TMass, TMass, TMass) { return _v.Force.Value(), _v.Mass.Value(), _v.Mass.Value(), _v.Mass.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) ForceMassMassAcceleration() (TForce, TMass, TMass, TAcceleration) { return _v.Force.Value(), _v.Mass.Value(), _v.Mass.Value(), _v.Acceleration.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) ForceMassAccelerationForce() (TForce, TMass, TAcceleration, TForce) { return _v.Force.Value(), _v.Mass.Value(), _v.Acceleration.Value(), _v.Force.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) ForceMassAccelerationMass() (TForce, TMass, TAcceleration, TMass) { return _v.Force.Value(), _v.Mass.Value(), _v.Acceleration.Value(), _v.Mass.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) ForceMassAccelerationAcceleration() (TForce, TMass, TAcceleration, TAcceleration) { return _v.Force.Value(), _v.Mass.Value(), _v.Acceleration.Value(), _v.Acceleration.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) ForceAccelerationForceForce() (TForce, TAcceleration, TForce, TForce) { return _v.Force.Value(), _v.Acceleration.Value(), _v.Force.Value(), _v.Force.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) ForceAccelerationForceMass() (TForce, TAcceleration, TForce, TMass) { return _v.Force.Value(), _v.Acceleration.Value(), _v.Force.Value(), _v.Mass.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) ForceAccelerationForceAcceleration() (TForce, TAcceleration, TForce, TAcceleration) { return _v.Force.Value(), _v.Acceleration.Value(), _v.Force.Value(), _v.Acceleration.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) ForceAccelerationMassForce() (TForce, TAcceleration, TMass, TForce) { return _v.Force.Value(), _v.Acceleration.Value(), _v.Mass.Value(), _v.Force.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) ForceAccelerationMassMass() (TForce, TAcceleration, TMass, TMass) { return _v.Force.Value(), _v.Acceleration.Value(), _v.Mass.Value(), _v.Mass.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) ForceAccelerationMassAcceleration() (TForce, TAcceleration, TMass, TAcceleration) { return _v.Force.Value(), _v.Acceleration.Value(), _v.Mass.Value(), _v.Acceleration.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) ForceAccelerationAccelerationForce() (TForce, TAcceleration, TAcceleration, TForce) { return _v.Force.Value(), _v.Acceleration.Value(), _v.Acceleration.Value(), _v.Force.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) ForceAccelerationAccelerationMass() (TForce, TAcceleration, TAcceleration, TMass) { return _v.Force.Value(), _v.Acceleration.Value(), _v.Acceleration.Value(), _v.Mass.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) ForceAccelerationAccelerationAcceleration() (TForce, TAcceleration, TAcceleration, TAcceleration) { return _v.Force.Value(), _v.Acceleration.Value(), _v.Acceleration.Value(), _v.Acceleration.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) MassForceForceForce() (TMass, TForce, TForce, TForce) { return _v.Mass.Value(), _v.Force.Value(), _v.Force.Value(), _v.Force.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) MassForceForceMass() (TMass, TForce, TForce, TMass) { return _v.Mass.Value(), _v.Force.Value(), _v.Force.Value(), _v.Mass.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) MassForceForceAcceleration() (TMass, TForce, TForce, TAcceleration) { return _v.Mass.Value(), _v.Force.Value(), _v.Force.Value(), _v.Acceleration.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) MassForceMassForce() (TMass, TForce, TMass, TForce) { return _v.Mass.Value(), _v.Force.Value(), _v.Mass.Value(), _v.Force.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) MassForceMassMass() (TMass, TForce, TMass, TMass) { return _v.Mass.Value(), _v.Force.Value(), _v.Mass.Value(), _v.Mass.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) MassForceMassAcceleration() (TMass, TForce, TMass, TAcceleration) { return _v.Mass.Value(), _v.Force.Value(), _v.Mass.Value(), _v.Acceleration.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) MassForceAccelerationForce() (TMass, TForce, TAcceleration, TForce) { return _v.Mass.Value(), _v.Force.Value(), _v.Acceleration.Value(), _v.Force.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) MassForceAccelerationMass() (TMass, TForce, TAcceleration, TMass) { return _v.Mass.Value(), _v.Force.Value(), _v.Acceleration.Value(), _v.Mass.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) MassForceAccelerationAcceleration() (TMass, TForce, TAcceleration, TAcceleration) { return _v.Mass.Value(), _v.Force.Value(), _v.Acceleration.Value(), _v.Acceleration.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) MassMassForceForce() (TMass, TMass, TForce, TForce) { return _v.Mass.Value(), _v.Mass.Value(), _v.Force.Value(), _v.Force.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) MassMassForceMass() (TMass, TMass, TForce, TMass) { return _v.Mass.Value(), _v.Mass.Value(), _v.Force.Value(), _v.Mass.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) MassMassForceAcceleration() (TMass, TMass, TForce, TAcceleration) { return _v.Mass.Value(), _v.Mass.Value(), _v.Force.Value(), _v.Acceleration.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) MassMassMassForce() (TMass, TMass, TMass, TForce) { return _v.Mass.Value(), _v.Mass.Value(), _v.Mass.Value(), _v.Force.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) MassMassMassMass() (TMass, TMass, TMass, TMass) { return _v.Mass.Value(), _v.Mass.Value(), _v.Mass.Value(), _v.Mass.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) MassMassMassAcceleration() (TMass, TMass, TMass, TAcceleration) { return _v.Mass.Value(), _v.Mass.Value(), _v.Mass.Value(), _v.Acceleration.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) MassMassAccelerationForce() (TMass, TMass, TAcceleration, TForce) { return _v.Mass.Value(), _v.Mass.Value(), _v.Acceleration.Value(), _v.Force.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) MassMassAccelerationMass() (TMass, TMass, TAcceleration, TMass) { return _v.Mass.Value(), _v.Mass.Value(), _v.Acceleration.Value(), _v.Mass.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) MassMassAccelerationAcceleration() (TMass, TMass, TAcceleration, TAcceleration) { return _v.Mass.Value(), _v.Mass.Value(), _v.Acceleration.Value(), _v.Acceleration.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) MassAccelerationForceForce() (TMass, TAcceleration, TForce, TForce) { return _v.Mass.Value(), _v.Acceleration.Value(), _v.Force.Value(), _v.Force.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) MassAccelerationForceMass() (TMass, TAcceleration, TForce, TMass) { return _v.Mass.Value(), _v.Acceleration.Value(), _v.Force.Value(), _v.Mass.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) MassAccelerationForceAcceleration() (TMass, TAcceleration, TForce, TAcceleration) { return _v.Mass.Value(), _v.Acceleration.Value(), _v.Force.Value(), _v.Acceleration.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) MassAccelerationMassForce() (TMass, TAcceleration, TMass, TForce) { return _v.Mass.Value(), _v.Acceleration.Value(), _v.Mass.Value(), _v.Force.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) MassAccelerationMassMass() (TMass, TAcceleration, TMass, TMass) { return _v.Mass.Value(), _v.Acceleration.Value(), _v.Mass.Value(), _v.Mass.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) MassAccelerationMassAcceleration() (TMass, TAcceleration, TMass, TAcceleration) { return _v.Mass.Value(), _v.Acceleration.Value(), _v.Mass.Value(), _v.Acceleration.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) MassAccelerationAccelerationForce() (TMass, TAcceleration, TAcceleration, TForce) { return _v.Mass.Value(), _v.Acceleration.Value(), _v.Acceleration.Value(), _v.Force.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) MassAccelerationAccelerationMass() (TMass, TAcceleration, TAcceleration, TMass) { return _v.Mass.Value(), _v.Acceleration.Value(), _v.Acceleration.Value(), _v.Mass.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) MassAccelerationAccelerationAcceleration() (TMass, TAcceleration, TAcceleration, TAcceleration) { return _v.Mass.Value(), _v.Acceleration.Value(), _v.Acceleration.Value(), _v.Acceleration.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) AccelerationForceForceForce() (TAcceleration, TForce, TForce, TForce) { return _v.Acceleration.Value(), _v.Force.Value(), _v.Force.Value(), _v.Force.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) AccelerationForceForceMass() (TAcceleration, TForce, TForce, TMass) { return _v.Acceleration.Value(), _v.Force.Value(), _v.Force.Value(), _v.Mass.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) AccelerationForceForceAcceleration() (TAcceleration, TForce, TForce, TAcceleration) { return _v.Acceleration.Value(), _v.Force.Value(), _v.Force.Value(), _v.Acceleration.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) AccelerationForceMassForce() (TAcceleration, TForce, TMass, TForce) { return _v.Acceleration.Value(), _v.Force.Value(), _v.Mass.Value(), _v.Force.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) AccelerationForceMassMass() (TAcceleration, TForce, TMass, TMass) { return _v.Acceleration.Value(), _v.Force.Value(), _v.Mass.Value(), _v.Mass.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) AccelerationForceMassAcceleration() (TAcceleration, TForce, TMass, TAcceleration) { return _v.Acceleration.Value(), _v.Force.Value(), _v.Mass.Value(), _v.Acceleration.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) AccelerationForceAccelerationForce() (TAcceleration, TForce, TAcceleration, TForce) { return _v.Acceleration.Value(), _v.Force.Value(), _v.Acceleration.Value(), _v.Force.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) AccelerationForceAccelerationMass() (TAcceleration, TForce, TAcceleration, TMass) { return _v.Acceleration.Value(), _v.Force.Value(), _v.Acceleration.Value(), _v.Mass.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) AccelerationForceAccelerationAcceleration() (TAcceleration, TForce, TAcceleration, TAcceleration) { return _v.Acceleration.Value(), _v.Force.Value(), _v.Acceleration.Value(), _v.Acceleration.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) AccelerationMassForceForce() (TAcceleration, TMass, TForce, TForce) { return _v.Acceleration.Value(), _v.Mass.Value(), _v.Force.Value(), _v.Force.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) AccelerationMassForceMass() (TAcceleration, TMass, TForce, TMass) { return _v.Acceleration.Value(), _v.Mass.Value(), _v.Force.Value(), _v.Mass.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) AccelerationMassForceAcceleration() (TAcceleration, TMass, TForce, TAcceleration) { return _v.Acceleration.Value(), _v.Mass.Value(), _v.Force.Value(), _v.Acceleration.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) AccelerationMassMassForce() (TAcceleration, TMass, TMass, TForce) { return _v.Acceleration.Value(), _v.Mass.Value(), _v.Mass.Value(), _v.Force.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) AccelerationMassMassMass() (TAcceleration, TMass, TMass, TMass) { return _v.Acceleration.Value(), _v.Mass.Value(), _v.Mass.Value(), _v.Mass.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) AccelerationMassMassAcceleration() (TAcceleration, TMass, TMass, TAcceleration) { return _v.Acceleration.Value(), _v.Mass.Value(), _v.Mass.Value(), _v.Acceleration.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) AccelerationMassAccelerationForce() (TAcceleration, TMass, TAcceleration, TForce) { return _v.Acceleration.Value(), _v.Mass.Value(), _v.Acceleration.Value(), _v.Force.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) AccelerationMassAccelerationMass() (TAcceleration, TMass, TAcceleration, TMass) { return _v.Acceleration.Value(), _v.Mass.Value(), _v.Acceleration.Value(), _v.Mass.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) AccelerationMassAccelerationAcceleration() (TAcceleration, TMass, TAcceleration, TAcceleration) { return _v.Acceleration.Value(), _v.Mass.Value(), _v.Acceleration.Value(), _v.Acceleration.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) AccelerationAccelerationForceForce() (TAcceleration, TAcceleration, TForce, TForce) { return _v.Acceleration.Value(), _v.Acceleration.Value(), _v.Force.Value(), _v.Force.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) AccelerationAccelerationForceMass() (TAcceleration, TAcceleration, TForce, TMass) { return _v.Acceleration.Value(), _v.Acceleration.Value(), _v.Force.Value(), _v.Mass.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) AccelerationAccelerationForceAcceleration() (TAcceleration, TAcceleration, TForce, TAcceleration) { return _v.Acceleration.Value(), _v.Acceleration.Value(), _v.Force.Value(), _v.Acceleration.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) AccelerationAccelerationMassForce() (TAcceleration, TAcceleration, TMass, TForce) { return _v.Acceleration.Value(), _v.Acceleration.Value(), _v.Mass.Value(), _v.Force.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) AccelerationAccelerationMassMass() (TAcceleration, TAcceleration, TMass, TMass) { return _v.Acceleration.Value(), _v.Acceleration.Value(), _v.Mass.Value(), _v.Mass.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) AccelerationAccelerationMassAcceleration() (TAcceleration, TAcceleration, TMass, TAcceleration) { return _v.Acceleration.Value(), _v.Acceleration.Value(), _v.Mass.Value(), _v.Acceleration.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) AccelerationAccelerationAccelerationForce() (TAcceleration, TAcceleration, TAcceleration, TForce) { return _v.Acceleration.Value(), _v.Acceleration.Value(), _v.Acceleration.Value(), _v.Force.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) AccelerationAccelerationAccelerationMass() (TAcceleration, TAcceleration, TAcceleration, TMass) { return _v.Acceleration.Value(), _v.Acceleration.Value(), _v.Acceleration.Value(), _v.Mass.Value() }
func (_v *FMATyped[TForce, TMass, TAcceleration]) AccelerationAccelerationAccelerationAcceleration() (TAcceleration, TAcceleration, TAcceleration, TAcceleration) { return _v.Acceleration.Value(), _v.Acceleration.Value(), _v.Acceleration.Value(), _v.Acceleration.Value() }
