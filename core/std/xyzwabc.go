// Code generated by 'gen/letters/main'; DO NOT EDIT.
//go:generate go run ../gen/letters/main -pkg std -name XYZWABC -nameL xyzwabc -cmpts X,Y,Z,W,A,B,C -cmptsL x,y,z,w,a,b,c -out ../std/xyzwabc.go
package std

import (
	"core/sys/atlas"
	"core/sys/name/format"
	"core/sys/num"
	"core/sys/num/bounded"
	"core/sys/support"
	"fmt"
	"strings"
)

// XYZWABC is a 7D vector of like-typed bounded.Numeric components.
//
// NOTE: If you'd like asymmetric types, please see XYZWABCTyped.
type XYZWABC[T num.Primitive] = XYZWABCTyped[T, T, T, T, T, T, T]

// XYZWABCTyped is a 7D vector of asymmetrically typed bounded.Numeric components.
//
// NOTE: If you'd like symmetric types, please see XYZWABC.
type XYZWABCTyped[TX num.Primitive, TY num.Primitive, TZ num.Primitive, TW num.Primitive, TA num.Primitive, TB num.Primitive, TC num.Primitive] struct {
	Entity
	X bounded.Numeric[TX]
	Y bounded.Numeric[TY]
	Z bounded.Numeric[TZ]
	W bounded.Numeric[TW]
	A bounded.Numeric[TA]
	B bounded.Numeric[TB]
	C bounded.Numeric[TC]
}

func NewXYZWABC[T num.Primitive](x T, y T, z T, w T, a T, b T, c T, name ...string) *XYZWABC[T] {
	typed := XYZWABC[T](*NewXYZWABCTyped[T, T, T, T, T, T, T](x, y, z, w, a, b, c, name...))
	return &typed
}

func NewXYZWABCTyped[TX num.Primitive, TY num.Primitive, TZ num.Primitive, TW num.Primitive, TA num.Primitive, TB num.Primitive, TC num.Primitive](x TX, y TY, z TZ, w TW, a TA, b TB, c TC, name ...string) *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC] {
	minX := num.MinValue[TX]()
	maxX := num.MaxValue[TX]()
	if num.IsFloat[TX]() {
		minX = 0
		maxX = 1
	}
	minY := num.MinValue[TY]()
	maxY := num.MaxValue[TY]()
	if num.IsFloat[TY]() {
		minY = 0
		maxY = 1
	}
	minZ := num.MinValue[TZ]()
	maxZ := num.MaxValue[TZ]()
	if num.IsFloat[TZ]() {
		minZ = 0
		maxZ = 1
	}
	minW := num.MinValue[TW]()
	maxW := num.MaxValue[TW]()
	if num.IsFloat[TW]() {
		minW = 0
		maxW = 1
	}
	minA := num.MinValue[TA]()
	maxA := num.MaxValue[TA]()
	if num.IsFloat[TA]() {
		minA = 0
		maxA = 1
	}
	minB := num.MinValue[TB]()
	maxB := num.MaxValue[TB]()
	if num.IsFloat[TB]() {
		minB = 0
		maxB = 1
	}
	minC := num.MinValue[TC]()
	maxC := num.MaxValue[TC]()
	if num.IsFloat[TC]() {
		minC = 0
		maxC = 1
	}

	_v := &XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]{}
	_v.Entity = NewEntity[format.Default]()
	_v.SetBoundaries(minX, maxX, minY, maxY, minZ, maxZ, minW, maxW, minA, maxA, minB, maxB, minC, maxC)
	_v.Set(x, y, z, w, a, b, c)
	if len(name) > 0 {
		_v.SetName(name[0])
	}
	return _v
}

func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) Name() string {
	return _v.GivenName.Name
}

func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) SetName(name string) *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC] {
	_v.GivenName.Name = name
	return _v
}

func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) Set(x TX, y TY, z TZ, w TW, a TA, b TB, c TC) *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC] {
	_ = _v.X.Set(x)
	_ = _v.Y.Set(y)
	_ = _v.Z.Set(z)
	_ = _v.W.Set(w)
	_ = _v.A.Set(a)
	_ = _v.B.Set(b)
	_ = _v.C.Set(c)
	return _v
}

func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) SetClamp(clamp bool) *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC] {
	_v.X.Clamp = clamp
	_v.Y.Clamp = clamp
	_v.Z.Clamp = clamp
	_v.W.Clamp = clamp
	_v.A.Clamp = clamp
	_v.B.Clamp = clamp
	_v.C.Clamp = clamp
	return _v
}

func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) SetBoundaries(minX, maxX TX, minY, maxY TY, minZ, maxZ TZ, minW, maxW TW, minA, maxA TA, minB, maxB TB, minC, maxC TC) *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC] {
	_ = _v.X.SetBoundaries(minX, maxX)
	_ = _v.Y.SetBoundaries(minY, maxY)
	_ = _v.Z.SetBoundaries(minZ, maxZ)
	_ = _v.W.SetBoundaries(minW, maxW)
	_ = _v.A.SetBoundaries(minA, maxA)
	_ = _v.B.SetBoundaries(minB, maxB)
	_ = _v.C.SetBoundaries(minC, maxC)
	return _v
}

func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) Component(index uint) (bounded.INumeric, error) {
	switch index {
	case 0:
		return &_v.X, nil
	case 1:
		return &_v.Y, nil
	case 2:
		return &_v.Z, nil
	case 3:
		return &_v.W, nil
	case 4:
		return &_v.A, nil
	case 5:
		return &_v.B, nil
	case 6:
		return &_v.C, nil
	default:
		return nil, fmt.Errorf("cannot get component index %d of an XYZWABC vector", index)
	}
}

func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) Components() []bounded.INumeric {
	return []bounded.INumeric{&_v.X, &_v.Y, &_v.Z, &_v.W, &_v.A, &_v.B, &_v.C}
}

func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ComponentByName(name string) (bounded.INumeric, error) {
	switch strings.ToLower(name) {
	case "x":
		return &_v.X, nil
	case "y":
		return &_v.Y, nil
	case "z":
		return &_v.Z, nil
	case "w":
		return &_v.W, nil
	case "a":
		return &_v.A, nil
	case "b":
		return &_v.B, nil
	case "c":
		return &_v.C, nil
	default:
		return nil, fmt.Errorf("cannot get component \"%s\" of an XYZWABC vector", name)
	}
}

func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ComponentLen() uint {
	return 7
}

func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) SetComponent(index uint, value any) error {
	switch index {
	case 0:
		 _v.X.Set(value.(TX))
	case 1:
		 _v.Y.Set(value.(TY))
	case 2:
		 _v.Z.Set(value.(TZ))
	case 3:
		 _v.W.Set(value.(TW))
	case 4:
		 _v.A.Set(value.(TA))
	case 5:
		 _v.B.Set(value.(TB))
	case 6:
		 _v.C.Set(value.(TC))
	default:
		return fmt.Errorf("cannot set component index %d of an XYZWABC vector", index)
	}
	return nil
}

func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) SetComponents(values []any) error {
	if len(values) != 7 {
		return fmt.Errorf("cannot set %d components of 7D vector XYZWABC", len(values), )
	}
	if _, ok := values[0].(TX); !ok {
		return fmt.Errorf("expected type %T for component X, got type %T", TX(0), values[0])	}
	if _, ok := values[1].(TY); !ok {
		return fmt.Errorf("expected type %T for component Y, got type %T", TY(0), values[1])	}
	if _, ok := values[2].(TZ); !ok {
		return fmt.Errorf("expected type %T for component Z, got type %T", TZ(0), values[2])	}
	if _, ok := values[3].(TW); !ok {
		return fmt.Errorf("expected type %T for component W, got type %T", TW(0), values[3])	}
	if _, ok := values[4].(TA); !ok {
		return fmt.Errorf("expected type %T for component A, got type %T", TA(0), values[4])	}
	if _, ok := values[5].(TB); !ok {
		return fmt.Errorf("expected type %T for component B, got type %T", TB(0), values[5])	}
	if _, ok := values[6].(TC); !ok {
		return fmt.Errorf("expected type %T for component C, got type %T", TC(0), values[6])	}
	_v.X.Set(values[0].(TX))
	_v.Y.Set(values[1].(TY))
	_v.Z.Set(values[2].(TZ))
	_v.W.Set(values[3].(TW))
	_v.A.Set(values[4].(TA))
	_v.B.Set(values[5].(TB))
	_v.C.Set(values[6].(TC))
	return nil
}

func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) SetComponentByName(name string, value any) error {
	switch strings.ToLower(name) {
	case "x":
		 _v.X.Set(value.(TX))
	case "y":
		 _v.Y.Set(value.(TY))
	case "z":
		 _v.Z.Set(value.(TZ))
	case "w":
		 _v.W.Set(value.(TW))
	case "a":
		 _v.A.Set(value.(TA))
	case "b":
		 _v.B.Set(value.(TB))
	case "c":
		 _v.C.Set(value.(TC))
	default:
		return fmt.Errorf("cannot set component \"%s\" of an XYZWABC vector", name)
	}
	return nil
}

func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) String() string {
	if atlas.CompactVectors {
		return fmt.Sprintf("{x: %v, y: %v, z: %v, w: %v, a: %v, b: %v, c: %v}", _v.X.String(), _v.Y.String(), _v.Z.String(), _v.W.String(), _v.A.String(), _v.B.String(), _v.C.String())
	}
	 if support.AllSameTypes(TX(0), TY(0), TZ(0), TW(0), TA(0), TB(0), TC(0)) {
		return fmt.Sprintf("xyzwabc[%T]{%v, %v, %v, %v, %v, %v, %v}(\"%v\")", TX(0), _v.X.String(), _v.Y.String(), _v.Z.String(), _v.W.String(), _v.A.String(), _v.B.String(), _v.C.String(), _v.GivenName.Name)
	}
	return fmt.Sprintf("xyzwabc[%T, %T, %T, %T, %T, %T, %T]{%v, %v, %v, %v, %v, %v, %v}(\"%v\")", TX(0), TY(0), TZ(0), TW(0), TA(0), TB(0), TC(0), _v.X.String(), _v.Y.String(), _v.Z.String(), _v.W.String(), _v.A.String(), _v.B.String(), _v.C.String(), _v.GivenName.Name)
}

func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XX() (TX, TX) { return _v.X.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XY() (TX, TY) { return _v.X.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZ() (TX, TZ) { return _v.X.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XW() (TX, TW) { return _v.X.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XA() (TX, TA) { return _v.X.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XB() (TX, TB) { return _v.X.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XC() (TX, TC) { return _v.X.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YX() (TY, TX) { return _v.Y.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YY() (TY, TY) { return _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZ() (TY, TZ) { return _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YW() (TY, TW) { return _v.Y.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YA() (TY, TA) { return _v.Y.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YB() (TY, TB) { return _v.Y.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YC() (TY, TC) { return _v.Y.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZX() (TZ, TX) { return _v.Z.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZY() (TZ, TY) { return _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZ() (TZ, TZ) { return _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZW() (TZ, TW) { return _v.Z.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZA() (TZ, TA) { return _v.Z.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZB() (TZ, TB) { return _v.Z.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZC() (TZ, TC) { return _v.Z.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WX() (TW, TX) { return _v.W.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WY() (TW, TY) { return _v.W.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZ() (TW, TZ) { return _v.W.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WW() (TW, TW) { return _v.W.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WA() (TW, TA) { return _v.W.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WB() (TW, TB) { return _v.W.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WC() (TW, TC) { return _v.W.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AX() (TA, TX) { return _v.A.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AY() (TA, TY) { return _v.A.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZ() (TA, TZ) { return _v.A.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AW() (TA, TW) { return _v.A.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AA() (TA, TA) { return _v.A.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AB() (TA, TB) { return _v.A.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AC() (TA, TC) { return _v.A.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BX() (TB, TX) { return _v.B.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BY() (TB, TY) { return _v.B.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZ() (TB, TZ) { return _v.B.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BW() (TB, TW) { return _v.B.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BA() (TB, TA) { return _v.B.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BB() (TB, TB) { return _v.B.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BC() (TB, TC) { return _v.B.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CX() (TC, TX) { return _v.C.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CY() (TC, TY) { return _v.C.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZ() (TC, TZ) { return _v.C.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CW() (TC, TW) { return _v.C.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CA() (TC, TA) { return _v.C.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CB() (TC, TB) { return _v.C.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CC() (TC, TC) { return _v.C.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXX() (TX, TX, TX) { return _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXY() (TX, TX, TY) { return _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXZ() (TX, TX, TZ) { return _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXW() (TX, TX, TW) { return _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXA() (TX, TX, TA) { return _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXB() (TX, TX, TB) { return _v.X.Value(), _v.X.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXC() (TX, TX, TC) { return _v.X.Value(), _v.X.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYX() (TX, TY, TX) { return _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYY() (TX, TY, TY) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYZ() (TX, TY, TZ) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYW() (TX, TY, TW) { return _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYA() (TX, TY, TA) { return _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYB() (TX, TY, TB) { return _v.X.Value(), _v.Y.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYC() (TX, TY, TC) { return _v.X.Value(), _v.Y.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZX() (TX, TZ, TX) { return _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZY() (TX, TZ, TY) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZZ() (TX, TZ, TZ) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZW() (TX, TZ, TW) { return _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZA() (TX, TZ, TA) { return _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZB() (TX, TZ, TB) { return _v.X.Value(), _v.Z.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZC() (TX, TZ, TC) { return _v.X.Value(), _v.Z.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWX() (TX, TW, TX) { return _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWY() (TX, TW, TY) { return _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWZ() (TX, TW, TZ) { return _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWW() (TX, TW, TW) { return _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWA() (TX, TW, TA) { return _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWB() (TX, TW, TB) { return _v.X.Value(), _v.W.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWC() (TX, TW, TC) { return _v.X.Value(), _v.W.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAX() (TX, TA, TX) { return _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAY() (TX, TA, TY) { return _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAZ() (TX, TA, TZ) { return _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAW() (TX, TA, TW) { return _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAA() (TX, TA, TA) { return _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAB() (TX, TA, TB) { return _v.X.Value(), _v.A.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAC() (TX, TA, TC) { return _v.X.Value(), _v.A.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBX() (TX, TB, TX) { return _v.X.Value(), _v.B.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBY() (TX, TB, TY) { return _v.X.Value(), _v.B.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBZ() (TX, TB, TZ) { return _v.X.Value(), _v.B.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBW() (TX, TB, TW) { return _v.X.Value(), _v.B.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBA() (TX, TB, TA) { return _v.X.Value(), _v.B.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBB() (TX, TB, TB) { return _v.X.Value(), _v.B.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBC() (TX, TB, TC) { return _v.X.Value(), _v.B.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCX() (TX, TC, TX) { return _v.X.Value(), _v.C.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCY() (TX, TC, TY) { return _v.X.Value(), _v.C.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCZ() (TX, TC, TZ) { return _v.X.Value(), _v.C.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCW() (TX, TC, TW) { return _v.X.Value(), _v.C.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCA() (TX, TC, TA) { return _v.X.Value(), _v.C.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCB() (TX, TC, TB) { return _v.X.Value(), _v.C.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCC() (TX, TC, TC) { return _v.X.Value(), _v.C.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXX() (TY, TX, TX) { return _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXY() (TY, TX, TY) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXZ() (TY, TX, TZ) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXW() (TY, TX, TW) { return _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXA() (TY, TX, TA) { return _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXB() (TY, TX, TB) { return _v.Y.Value(), _v.X.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXC() (TY, TX, TC) { return _v.Y.Value(), _v.X.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYX() (TY, TY, TX) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYY() (TY, TY, TY) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYZ() (TY, TY, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYW() (TY, TY, TW) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYA() (TY, TY, TA) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYB() (TY, TY, TB) { return _v.Y.Value(), _v.Y.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYC() (TY, TY, TC) { return _v.Y.Value(), _v.Y.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZX() (TY, TZ, TX) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZY() (TY, TZ, TY) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZZ() (TY, TZ, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZW() (TY, TZ, TW) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZA() (TY, TZ, TA) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZB() (TY, TZ, TB) { return _v.Y.Value(), _v.Z.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZC() (TY, TZ, TC) { return _v.Y.Value(), _v.Z.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWX() (TY, TW, TX) { return _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWY() (TY, TW, TY) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWZ() (TY, TW, TZ) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWW() (TY, TW, TW) { return _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWA() (TY, TW, TA) { return _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWB() (TY, TW, TB) { return _v.Y.Value(), _v.W.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWC() (TY, TW, TC) { return _v.Y.Value(), _v.W.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAX() (TY, TA, TX) { return _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAY() (TY, TA, TY) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAZ() (TY, TA, TZ) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAW() (TY, TA, TW) { return _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAA() (TY, TA, TA) { return _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAB() (TY, TA, TB) { return _v.Y.Value(), _v.A.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAC() (TY, TA, TC) { return _v.Y.Value(), _v.A.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBX() (TY, TB, TX) { return _v.Y.Value(), _v.B.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBY() (TY, TB, TY) { return _v.Y.Value(), _v.B.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBZ() (TY, TB, TZ) { return _v.Y.Value(), _v.B.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBW() (TY, TB, TW) { return _v.Y.Value(), _v.B.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBA() (TY, TB, TA) { return _v.Y.Value(), _v.B.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBB() (TY, TB, TB) { return _v.Y.Value(), _v.B.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBC() (TY, TB, TC) { return _v.Y.Value(), _v.B.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCX() (TY, TC, TX) { return _v.Y.Value(), _v.C.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCY() (TY, TC, TY) { return _v.Y.Value(), _v.C.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCZ() (TY, TC, TZ) { return _v.Y.Value(), _v.C.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCW() (TY, TC, TW) { return _v.Y.Value(), _v.C.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCA() (TY, TC, TA) { return _v.Y.Value(), _v.C.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCB() (TY, TC, TB) { return _v.Y.Value(), _v.C.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCC() (TY, TC, TC) { return _v.Y.Value(), _v.C.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXX() (TZ, TX, TX) { return _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXY() (TZ, TX, TY) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXZ() (TZ, TX, TZ) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXW() (TZ, TX, TW) { return _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXA() (TZ, TX, TA) { return _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXB() (TZ, TX, TB) { return _v.Z.Value(), _v.X.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXC() (TZ, TX, TC) { return _v.Z.Value(), _v.X.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYX() (TZ, TY, TX) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYY() (TZ, TY, TY) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYZ() (TZ, TY, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYW() (TZ, TY, TW) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYA() (TZ, TY, TA) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYB() (TZ, TY, TB) { return _v.Z.Value(), _v.Y.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYC() (TZ, TY, TC) { return _v.Z.Value(), _v.Y.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZX() (TZ, TZ, TX) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZY() (TZ, TZ, TY) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZZ() (TZ, TZ, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZW() (TZ, TZ, TW) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZA() (TZ, TZ, TA) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZB() (TZ, TZ, TB) { return _v.Z.Value(), _v.Z.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZC() (TZ, TZ, TC) { return _v.Z.Value(), _v.Z.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWX() (TZ, TW, TX) { return _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWY() (TZ, TW, TY) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWZ() (TZ, TW, TZ) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWW() (TZ, TW, TW) { return _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWA() (TZ, TW, TA) { return _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWB() (TZ, TW, TB) { return _v.Z.Value(), _v.W.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWC() (TZ, TW, TC) { return _v.Z.Value(), _v.W.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAX() (TZ, TA, TX) { return _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAY() (TZ, TA, TY) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAZ() (TZ, TA, TZ) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAW() (TZ, TA, TW) { return _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAA() (TZ, TA, TA) { return _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAB() (TZ, TA, TB) { return _v.Z.Value(), _v.A.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAC() (TZ, TA, TC) { return _v.Z.Value(), _v.A.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBX() (TZ, TB, TX) { return _v.Z.Value(), _v.B.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBY() (TZ, TB, TY) { return _v.Z.Value(), _v.B.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBZ() (TZ, TB, TZ) { return _v.Z.Value(), _v.B.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBW() (TZ, TB, TW) { return _v.Z.Value(), _v.B.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBA() (TZ, TB, TA) { return _v.Z.Value(), _v.B.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBB() (TZ, TB, TB) { return _v.Z.Value(), _v.B.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBC() (TZ, TB, TC) { return _v.Z.Value(), _v.B.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCX() (TZ, TC, TX) { return _v.Z.Value(), _v.C.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCY() (TZ, TC, TY) { return _v.Z.Value(), _v.C.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCZ() (TZ, TC, TZ) { return _v.Z.Value(), _v.C.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCW() (TZ, TC, TW) { return _v.Z.Value(), _v.C.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCA() (TZ, TC, TA) { return _v.Z.Value(), _v.C.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCB() (TZ, TC, TB) { return _v.Z.Value(), _v.C.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCC() (TZ, TC, TC) { return _v.Z.Value(), _v.C.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXX() (TW, TX, TX) { return _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXY() (TW, TX, TY) { return _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXZ() (TW, TX, TZ) { return _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXW() (TW, TX, TW) { return _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXA() (TW, TX, TA) { return _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXB() (TW, TX, TB) { return _v.W.Value(), _v.X.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXC() (TW, TX, TC) { return _v.W.Value(), _v.X.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYX() (TW, TY, TX) { return _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYY() (TW, TY, TY) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYZ() (TW, TY, TZ) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYW() (TW, TY, TW) { return _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYA() (TW, TY, TA) { return _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYB() (TW, TY, TB) { return _v.W.Value(), _v.Y.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYC() (TW, TY, TC) { return _v.W.Value(), _v.Y.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZX() (TW, TZ, TX) { return _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZY() (TW, TZ, TY) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZZ() (TW, TZ, TZ) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZW() (TW, TZ, TW) { return _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZA() (TW, TZ, TA) { return _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZB() (TW, TZ, TB) { return _v.W.Value(), _v.Z.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZC() (TW, TZ, TC) { return _v.W.Value(), _v.Z.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWX() (TW, TW, TX) { return _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWY() (TW, TW, TY) { return _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWZ() (TW, TW, TZ) { return _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWW() (TW, TW, TW) { return _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWA() (TW, TW, TA) { return _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWB() (TW, TW, TB) { return _v.W.Value(), _v.W.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWC() (TW, TW, TC) { return _v.W.Value(), _v.W.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAX() (TW, TA, TX) { return _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAY() (TW, TA, TY) { return _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAZ() (TW, TA, TZ) { return _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAW() (TW, TA, TW) { return _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAA() (TW, TA, TA) { return _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAB() (TW, TA, TB) { return _v.W.Value(), _v.A.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAC() (TW, TA, TC) { return _v.W.Value(), _v.A.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBX() (TW, TB, TX) { return _v.W.Value(), _v.B.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBY() (TW, TB, TY) { return _v.W.Value(), _v.B.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBZ() (TW, TB, TZ) { return _v.W.Value(), _v.B.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBW() (TW, TB, TW) { return _v.W.Value(), _v.B.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBA() (TW, TB, TA) { return _v.W.Value(), _v.B.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBB() (TW, TB, TB) { return _v.W.Value(), _v.B.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBC() (TW, TB, TC) { return _v.W.Value(), _v.B.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCX() (TW, TC, TX) { return _v.W.Value(), _v.C.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCY() (TW, TC, TY) { return _v.W.Value(), _v.C.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCZ() (TW, TC, TZ) { return _v.W.Value(), _v.C.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCW() (TW, TC, TW) { return _v.W.Value(), _v.C.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCA() (TW, TC, TA) { return _v.W.Value(), _v.C.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCB() (TW, TC, TB) { return _v.W.Value(), _v.C.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCC() (TW, TC, TC) { return _v.W.Value(), _v.C.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXX() (TA, TX, TX) { return _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXY() (TA, TX, TY) { return _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXZ() (TA, TX, TZ) { return _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXW() (TA, TX, TW) { return _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXA() (TA, TX, TA) { return _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXB() (TA, TX, TB) { return _v.A.Value(), _v.X.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXC() (TA, TX, TC) { return _v.A.Value(), _v.X.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYX() (TA, TY, TX) { return _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYY() (TA, TY, TY) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYZ() (TA, TY, TZ) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYW() (TA, TY, TW) { return _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYA() (TA, TY, TA) { return _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYB() (TA, TY, TB) { return _v.A.Value(), _v.Y.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYC() (TA, TY, TC) { return _v.A.Value(), _v.Y.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZX() (TA, TZ, TX) { return _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZY() (TA, TZ, TY) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZZ() (TA, TZ, TZ) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZW() (TA, TZ, TW) { return _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZA() (TA, TZ, TA) { return _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZB() (TA, TZ, TB) { return _v.A.Value(), _v.Z.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZC() (TA, TZ, TC) { return _v.A.Value(), _v.Z.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWX() (TA, TW, TX) { return _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWY() (TA, TW, TY) { return _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWZ() (TA, TW, TZ) { return _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWW() (TA, TW, TW) { return _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWA() (TA, TW, TA) { return _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWB() (TA, TW, TB) { return _v.A.Value(), _v.W.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWC() (TA, TW, TC) { return _v.A.Value(), _v.W.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAX() (TA, TA, TX) { return _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAY() (TA, TA, TY) { return _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAZ() (TA, TA, TZ) { return _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAW() (TA, TA, TW) { return _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAA() (TA, TA, TA) { return _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAB() (TA, TA, TB) { return _v.A.Value(), _v.A.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAC() (TA, TA, TC) { return _v.A.Value(), _v.A.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABX() (TA, TB, TX) { return _v.A.Value(), _v.B.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABY() (TA, TB, TY) { return _v.A.Value(), _v.B.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABZ() (TA, TB, TZ) { return _v.A.Value(), _v.B.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABW() (TA, TB, TW) { return _v.A.Value(), _v.B.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABA() (TA, TB, TA) { return _v.A.Value(), _v.B.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABB() (TA, TB, TB) { return _v.A.Value(), _v.B.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABC() (TA, TB, TC) { return _v.A.Value(), _v.B.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACX() (TA, TC, TX) { return _v.A.Value(), _v.C.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACY() (TA, TC, TY) { return _v.A.Value(), _v.C.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACZ() (TA, TC, TZ) { return _v.A.Value(), _v.C.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACW() (TA, TC, TW) { return _v.A.Value(), _v.C.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACA() (TA, TC, TA) { return _v.A.Value(), _v.C.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACB() (TA, TC, TB) { return _v.A.Value(), _v.C.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACC() (TA, TC, TC) { return _v.A.Value(), _v.C.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXX() (TB, TX, TX) { return _v.B.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXY() (TB, TX, TY) { return _v.B.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXZ() (TB, TX, TZ) { return _v.B.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXW() (TB, TX, TW) { return _v.B.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXA() (TB, TX, TA) { return _v.B.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXB() (TB, TX, TB) { return _v.B.Value(), _v.X.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXC() (TB, TX, TC) { return _v.B.Value(), _v.X.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYX() (TB, TY, TX) { return _v.B.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYY() (TB, TY, TY) { return _v.B.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYZ() (TB, TY, TZ) { return _v.B.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYW() (TB, TY, TW) { return _v.B.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYA() (TB, TY, TA) { return _v.B.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYB() (TB, TY, TB) { return _v.B.Value(), _v.Y.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYC() (TB, TY, TC) { return _v.B.Value(), _v.Y.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZX() (TB, TZ, TX) { return _v.B.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZY() (TB, TZ, TY) { return _v.B.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZZ() (TB, TZ, TZ) { return _v.B.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZW() (TB, TZ, TW) { return _v.B.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZA() (TB, TZ, TA) { return _v.B.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZB() (TB, TZ, TB) { return _v.B.Value(), _v.Z.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZC() (TB, TZ, TC) { return _v.B.Value(), _v.Z.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWX() (TB, TW, TX) { return _v.B.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWY() (TB, TW, TY) { return _v.B.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWZ() (TB, TW, TZ) { return _v.B.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWW() (TB, TW, TW) { return _v.B.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWA() (TB, TW, TA) { return _v.B.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWB() (TB, TW, TB) { return _v.B.Value(), _v.W.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWC() (TB, TW, TC) { return _v.B.Value(), _v.W.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAX() (TB, TA, TX) { return _v.B.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAY() (TB, TA, TY) { return _v.B.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAZ() (TB, TA, TZ) { return _v.B.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAW() (TB, TA, TW) { return _v.B.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAA() (TB, TA, TA) { return _v.B.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAB() (TB, TA, TB) { return _v.B.Value(), _v.A.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAC() (TB, TA, TC) { return _v.B.Value(), _v.A.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBX() (TB, TB, TX) { return _v.B.Value(), _v.B.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBY() (TB, TB, TY) { return _v.B.Value(), _v.B.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBZ() (TB, TB, TZ) { return _v.B.Value(), _v.B.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBW() (TB, TB, TW) { return _v.B.Value(), _v.B.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBA() (TB, TB, TA) { return _v.B.Value(), _v.B.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBB() (TB, TB, TB) { return _v.B.Value(), _v.B.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBC() (TB, TB, TC) { return _v.B.Value(), _v.B.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCX() (TB, TC, TX) { return _v.B.Value(), _v.C.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCY() (TB, TC, TY) { return _v.B.Value(), _v.C.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCZ() (TB, TC, TZ) { return _v.B.Value(), _v.C.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCW() (TB, TC, TW) { return _v.B.Value(), _v.C.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCA() (TB, TC, TA) { return _v.B.Value(), _v.C.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCB() (TB, TC, TB) { return _v.B.Value(), _v.C.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCC() (TB, TC, TC) { return _v.B.Value(), _v.C.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXX() (TC, TX, TX) { return _v.C.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXY() (TC, TX, TY) { return _v.C.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXZ() (TC, TX, TZ) { return _v.C.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXW() (TC, TX, TW) { return _v.C.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXA() (TC, TX, TA) { return _v.C.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXB() (TC, TX, TB) { return _v.C.Value(), _v.X.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXC() (TC, TX, TC) { return _v.C.Value(), _v.X.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYX() (TC, TY, TX) { return _v.C.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYY() (TC, TY, TY) { return _v.C.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYZ() (TC, TY, TZ) { return _v.C.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYW() (TC, TY, TW) { return _v.C.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYA() (TC, TY, TA) { return _v.C.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYB() (TC, TY, TB) { return _v.C.Value(), _v.Y.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYC() (TC, TY, TC) { return _v.C.Value(), _v.Y.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZX() (TC, TZ, TX) { return _v.C.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZY() (TC, TZ, TY) { return _v.C.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZZ() (TC, TZ, TZ) { return _v.C.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZW() (TC, TZ, TW) { return _v.C.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZA() (TC, TZ, TA) { return _v.C.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZB() (TC, TZ, TB) { return _v.C.Value(), _v.Z.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZC() (TC, TZ, TC) { return _v.C.Value(), _v.Z.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWX() (TC, TW, TX) { return _v.C.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWY() (TC, TW, TY) { return _v.C.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWZ() (TC, TW, TZ) { return _v.C.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWW() (TC, TW, TW) { return _v.C.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWA() (TC, TW, TA) { return _v.C.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWB() (TC, TW, TB) { return _v.C.Value(), _v.W.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWC() (TC, TW, TC) { return _v.C.Value(), _v.W.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAX() (TC, TA, TX) { return _v.C.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAY() (TC, TA, TY) { return _v.C.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAZ() (TC, TA, TZ) { return _v.C.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAW() (TC, TA, TW) { return _v.C.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAA() (TC, TA, TA) { return _v.C.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAB() (TC, TA, TB) { return _v.C.Value(), _v.A.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAC() (TC, TA, TC) { return _v.C.Value(), _v.A.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBX() (TC, TB, TX) { return _v.C.Value(), _v.B.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBY() (TC, TB, TY) { return _v.C.Value(), _v.B.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBZ() (TC, TB, TZ) { return _v.C.Value(), _v.B.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBW() (TC, TB, TW) { return _v.C.Value(), _v.B.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBA() (TC, TB, TA) { return _v.C.Value(), _v.B.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBB() (TC, TB, TB) { return _v.C.Value(), _v.B.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBC() (TC, TB, TC) { return _v.C.Value(), _v.B.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCX() (TC, TC, TX) { return _v.C.Value(), _v.C.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCY() (TC, TC, TY) { return _v.C.Value(), _v.C.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCZ() (TC, TC, TZ) { return _v.C.Value(), _v.C.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCW() (TC, TC, TW) { return _v.C.Value(), _v.C.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCA() (TC, TC, TA) { return _v.C.Value(), _v.C.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCB() (TC, TC, TB) { return _v.C.Value(), _v.C.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCC() (TC, TC, TC) { return _v.C.Value(), _v.C.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXXX() (TX, TX, TX, TX) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXXY() (TX, TX, TX, TY) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXXZ() (TX, TX, TX, TZ) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXXW() (TX, TX, TX, TW) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXXA() (TX, TX, TX, TA) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXXB() (TX, TX, TX, TB) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXXC() (TX, TX, TX, TC) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXYX() (TX, TX, TY, TX) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXYY() (TX, TX, TY, TY) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXYZ() (TX, TX, TY, TZ) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXYW() (TX, TX, TY, TW) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXYA() (TX, TX, TY, TA) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXYB() (TX, TX, TY, TB) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXYC() (TX, TX, TY, TC) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXZX() (TX, TX, TZ, TX) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXZY() (TX, TX, TZ, TY) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXZZ() (TX, TX, TZ, TZ) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXZW() (TX, TX, TZ, TW) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXZA() (TX, TX, TZ, TA) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXZB() (TX, TX, TZ, TB) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXZC() (TX, TX, TZ, TC) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXWX() (TX, TX, TW, TX) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXWY() (TX, TX, TW, TY) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXWZ() (TX, TX, TW, TZ) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXWW() (TX, TX, TW, TW) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXWA() (TX, TX, TW, TA) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXWB() (TX, TX, TW, TB) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXWC() (TX, TX, TW, TC) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXAX() (TX, TX, TA, TX) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXAY() (TX, TX, TA, TY) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXAZ() (TX, TX, TA, TZ) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXAW() (TX, TX, TA, TW) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXAA() (TX, TX, TA, TA) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXAB() (TX, TX, TA, TB) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXAC() (TX, TX, TA, TC) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXBX() (TX, TX, TB, TX) { return _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXBY() (TX, TX, TB, TY) { return _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXBZ() (TX, TX, TB, TZ) { return _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXBW() (TX, TX, TB, TW) { return _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXBA() (TX, TX, TB, TA) { return _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXBB() (TX, TX, TB, TB) { return _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXBC() (TX, TX, TB, TC) { return _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXCX() (TX, TX, TC, TX) { return _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXCY() (TX, TX, TC, TY) { return _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXCZ() (TX, TX, TC, TZ) { return _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXCW() (TX, TX, TC, TW) { return _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXCA() (TX, TX, TC, TA) { return _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXCB() (TX, TX, TC, TB) { return _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXCC() (TX, TX, TC, TC) { return _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYXX() (TX, TY, TX, TX) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYXY() (TX, TY, TX, TY) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYXZ() (TX, TY, TX, TZ) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYXW() (TX, TY, TX, TW) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYXA() (TX, TY, TX, TA) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYXB() (TX, TY, TX, TB) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYXC() (TX, TY, TX, TC) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYYX() (TX, TY, TY, TX) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYYY() (TX, TY, TY, TY) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYYZ() (TX, TY, TY, TZ) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYYW() (TX, TY, TY, TW) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYYA() (TX, TY, TY, TA) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYYB() (TX, TY, TY, TB) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYYC() (TX, TY, TY, TC) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYZX() (TX, TY, TZ, TX) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYZY() (TX, TY, TZ, TY) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYZZ() (TX, TY, TZ, TZ) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYZW() (TX, TY, TZ, TW) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYZA() (TX, TY, TZ, TA) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYZB() (TX, TY, TZ, TB) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYZC() (TX, TY, TZ, TC) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYWX() (TX, TY, TW, TX) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYWY() (TX, TY, TW, TY) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYWZ() (TX, TY, TW, TZ) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYWW() (TX, TY, TW, TW) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYWA() (TX, TY, TW, TA) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYWB() (TX, TY, TW, TB) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYWC() (TX, TY, TW, TC) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYAX() (TX, TY, TA, TX) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYAY() (TX, TY, TA, TY) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYAZ() (TX, TY, TA, TZ) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYAW() (TX, TY, TA, TW) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYAA() (TX, TY, TA, TA) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYAB() (TX, TY, TA, TB) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYAC() (TX, TY, TA, TC) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYBX() (TX, TY, TB, TX) { return _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYBY() (TX, TY, TB, TY) { return _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYBZ() (TX, TY, TB, TZ) { return _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYBW() (TX, TY, TB, TW) { return _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYBA() (TX, TY, TB, TA) { return _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYBB() (TX, TY, TB, TB) { return _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYBC() (TX, TY, TB, TC) { return _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYCX() (TX, TY, TC, TX) { return _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYCY() (TX, TY, TC, TY) { return _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYCZ() (TX, TY, TC, TZ) { return _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYCW() (TX, TY, TC, TW) { return _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYCA() (TX, TY, TC, TA) { return _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYCB() (TX, TY, TC, TB) { return _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYCC() (TX, TY, TC, TC) { return _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZXX() (TX, TZ, TX, TX) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZXY() (TX, TZ, TX, TY) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZXZ() (TX, TZ, TX, TZ) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZXW() (TX, TZ, TX, TW) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZXA() (TX, TZ, TX, TA) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZXB() (TX, TZ, TX, TB) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZXC() (TX, TZ, TX, TC) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZYX() (TX, TZ, TY, TX) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZYY() (TX, TZ, TY, TY) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZYZ() (TX, TZ, TY, TZ) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZYW() (TX, TZ, TY, TW) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZYA() (TX, TZ, TY, TA) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZYB() (TX, TZ, TY, TB) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZYC() (TX, TZ, TY, TC) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZZX() (TX, TZ, TZ, TX) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZZY() (TX, TZ, TZ, TY) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZZZ() (TX, TZ, TZ, TZ) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZZW() (TX, TZ, TZ, TW) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZZA() (TX, TZ, TZ, TA) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZZB() (TX, TZ, TZ, TB) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZZC() (TX, TZ, TZ, TC) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZWX() (TX, TZ, TW, TX) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZWY() (TX, TZ, TW, TY) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZWZ() (TX, TZ, TW, TZ) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZWW() (TX, TZ, TW, TW) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZWA() (TX, TZ, TW, TA) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZWB() (TX, TZ, TW, TB) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZWC() (TX, TZ, TW, TC) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZAX() (TX, TZ, TA, TX) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZAY() (TX, TZ, TA, TY) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZAZ() (TX, TZ, TA, TZ) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZAW() (TX, TZ, TA, TW) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZAA() (TX, TZ, TA, TA) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZAB() (TX, TZ, TA, TB) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZAC() (TX, TZ, TA, TC) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZBX() (TX, TZ, TB, TX) { return _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZBY() (TX, TZ, TB, TY) { return _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZBZ() (TX, TZ, TB, TZ) { return _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZBW() (TX, TZ, TB, TW) { return _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZBA() (TX, TZ, TB, TA) { return _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZBB() (TX, TZ, TB, TB) { return _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZBC() (TX, TZ, TB, TC) { return _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZCX() (TX, TZ, TC, TX) { return _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZCY() (TX, TZ, TC, TY) { return _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZCZ() (TX, TZ, TC, TZ) { return _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZCW() (TX, TZ, TC, TW) { return _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZCA() (TX, TZ, TC, TA) { return _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZCB() (TX, TZ, TC, TB) { return _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZCC() (TX, TZ, TC, TC) { return _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWXX() (TX, TW, TX, TX) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWXY() (TX, TW, TX, TY) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWXZ() (TX, TW, TX, TZ) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWXW() (TX, TW, TX, TW) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWXA() (TX, TW, TX, TA) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWXB() (TX, TW, TX, TB) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWXC() (TX, TW, TX, TC) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWYX() (TX, TW, TY, TX) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWYY() (TX, TW, TY, TY) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWYZ() (TX, TW, TY, TZ) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWYW() (TX, TW, TY, TW) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWYA() (TX, TW, TY, TA) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWYB() (TX, TW, TY, TB) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWYC() (TX, TW, TY, TC) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWZX() (TX, TW, TZ, TX) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWZY() (TX, TW, TZ, TY) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWZZ() (TX, TW, TZ, TZ) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWZW() (TX, TW, TZ, TW) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWZA() (TX, TW, TZ, TA) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWZB() (TX, TW, TZ, TB) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWZC() (TX, TW, TZ, TC) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWWX() (TX, TW, TW, TX) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWWY() (TX, TW, TW, TY) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWWZ() (TX, TW, TW, TZ) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWWW() (TX, TW, TW, TW) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWWA() (TX, TW, TW, TA) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWWB() (TX, TW, TW, TB) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWWC() (TX, TW, TW, TC) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWAX() (TX, TW, TA, TX) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWAY() (TX, TW, TA, TY) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWAZ() (TX, TW, TA, TZ) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWAW() (TX, TW, TA, TW) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWAA() (TX, TW, TA, TA) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWAB() (TX, TW, TA, TB) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWAC() (TX, TW, TA, TC) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWBX() (TX, TW, TB, TX) { return _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWBY() (TX, TW, TB, TY) { return _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWBZ() (TX, TW, TB, TZ) { return _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWBW() (TX, TW, TB, TW) { return _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWBA() (TX, TW, TB, TA) { return _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWBB() (TX, TW, TB, TB) { return _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWBC() (TX, TW, TB, TC) { return _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWCX() (TX, TW, TC, TX) { return _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWCY() (TX, TW, TC, TY) { return _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWCZ() (TX, TW, TC, TZ) { return _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWCW() (TX, TW, TC, TW) { return _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWCA() (TX, TW, TC, TA) { return _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWCB() (TX, TW, TC, TB) { return _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWCC() (TX, TW, TC, TC) { return _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAXX() (TX, TA, TX, TX) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAXY() (TX, TA, TX, TY) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAXZ() (TX, TA, TX, TZ) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAXW() (TX, TA, TX, TW) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAXA() (TX, TA, TX, TA) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAXB() (TX, TA, TX, TB) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAXC() (TX, TA, TX, TC) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAYX() (TX, TA, TY, TX) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAYY() (TX, TA, TY, TY) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAYZ() (TX, TA, TY, TZ) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAYW() (TX, TA, TY, TW) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAYA() (TX, TA, TY, TA) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAYB() (TX, TA, TY, TB) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAYC() (TX, TA, TY, TC) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAZX() (TX, TA, TZ, TX) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAZY() (TX, TA, TZ, TY) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAZZ() (TX, TA, TZ, TZ) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAZW() (TX, TA, TZ, TW) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAZA() (TX, TA, TZ, TA) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAZB() (TX, TA, TZ, TB) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAZC() (TX, TA, TZ, TC) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAWX() (TX, TA, TW, TX) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAWY() (TX, TA, TW, TY) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAWZ() (TX, TA, TW, TZ) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAWW() (TX, TA, TW, TW) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAWA() (TX, TA, TW, TA) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAWB() (TX, TA, TW, TB) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAWC() (TX, TA, TW, TC) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAAX() (TX, TA, TA, TX) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAAY() (TX, TA, TA, TY) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAAZ() (TX, TA, TA, TZ) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAAW() (TX, TA, TA, TW) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAAA() (TX, TA, TA, TA) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAAB() (TX, TA, TA, TB) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAAC() (TX, TA, TA, TC) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XABX() (TX, TA, TB, TX) { return _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XABY() (TX, TA, TB, TY) { return _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XABZ() (TX, TA, TB, TZ) { return _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XABW() (TX, TA, TB, TW) { return _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XABA() (TX, TA, TB, TA) { return _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XABB() (TX, TA, TB, TB) { return _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XABC() (TX, TA, TB, TC) { return _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XACX() (TX, TA, TC, TX) { return _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XACY() (TX, TA, TC, TY) { return _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XACZ() (TX, TA, TC, TZ) { return _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XACW() (TX, TA, TC, TW) { return _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XACA() (TX, TA, TC, TA) { return _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XACB() (TX, TA, TC, TB) { return _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XACC() (TX, TA, TC, TC) { return _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBXX() (TX, TB, TX, TX) { return _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBXY() (TX, TB, TX, TY) { return _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBXZ() (TX, TB, TX, TZ) { return _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBXW() (TX, TB, TX, TW) { return _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBXA() (TX, TB, TX, TA) { return _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBXB() (TX, TB, TX, TB) { return _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBXC() (TX, TB, TX, TC) { return _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBYX() (TX, TB, TY, TX) { return _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBYY() (TX, TB, TY, TY) { return _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBYZ() (TX, TB, TY, TZ) { return _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBYW() (TX, TB, TY, TW) { return _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBYA() (TX, TB, TY, TA) { return _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBYB() (TX, TB, TY, TB) { return _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBYC() (TX, TB, TY, TC) { return _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBZX() (TX, TB, TZ, TX) { return _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBZY() (TX, TB, TZ, TY) { return _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBZZ() (TX, TB, TZ, TZ) { return _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBZW() (TX, TB, TZ, TW) { return _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBZA() (TX, TB, TZ, TA) { return _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBZB() (TX, TB, TZ, TB) { return _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBZC() (TX, TB, TZ, TC) { return _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBWX() (TX, TB, TW, TX) { return _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBWY() (TX, TB, TW, TY) { return _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBWZ() (TX, TB, TW, TZ) { return _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBWW() (TX, TB, TW, TW) { return _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBWA() (TX, TB, TW, TA) { return _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBWB() (TX, TB, TW, TB) { return _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBWC() (TX, TB, TW, TC) { return _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBAX() (TX, TB, TA, TX) { return _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBAY() (TX, TB, TA, TY) { return _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBAZ() (TX, TB, TA, TZ) { return _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBAW() (TX, TB, TA, TW) { return _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBAA() (TX, TB, TA, TA) { return _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBAB() (TX, TB, TA, TB) { return _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBAC() (TX, TB, TA, TC) { return _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBBX() (TX, TB, TB, TX) { return _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBBY() (TX, TB, TB, TY) { return _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBBZ() (TX, TB, TB, TZ) { return _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBBW() (TX, TB, TB, TW) { return _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBBA() (TX, TB, TB, TA) { return _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBBB() (TX, TB, TB, TB) { return _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBBC() (TX, TB, TB, TC) { return _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBCX() (TX, TB, TC, TX) { return _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBCY() (TX, TB, TC, TY) { return _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBCZ() (TX, TB, TC, TZ) { return _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBCW() (TX, TB, TC, TW) { return _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBCA() (TX, TB, TC, TA) { return _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBCB() (TX, TB, TC, TB) { return _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBCC() (TX, TB, TC, TC) { return _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCXX() (TX, TC, TX, TX) { return _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCXY() (TX, TC, TX, TY) { return _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCXZ() (TX, TC, TX, TZ) { return _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCXW() (TX, TC, TX, TW) { return _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCXA() (TX, TC, TX, TA) { return _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCXB() (TX, TC, TX, TB) { return _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCXC() (TX, TC, TX, TC) { return _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCYX() (TX, TC, TY, TX) { return _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCYY() (TX, TC, TY, TY) { return _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCYZ() (TX, TC, TY, TZ) { return _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCYW() (TX, TC, TY, TW) { return _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCYA() (TX, TC, TY, TA) { return _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCYB() (TX, TC, TY, TB) { return _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCYC() (TX, TC, TY, TC) { return _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCZX() (TX, TC, TZ, TX) { return _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCZY() (TX, TC, TZ, TY) { return _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCZZ() (TX, TC, TZ, TZ) { return _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCZW() (TX, TC, TZ, TW) { return _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCZA() (TX, TC, TZ, TA) { return _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCZB() (TX, TC, TZ, TB) { return _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCZC() (TX, TC, TZ, TC) { return _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCWX() (TX, TC, TW, TX) { return _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCWY() (TX, TC, TW, TY) { return _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCWZ() (TX, TC, TW, TZ) { return _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCWW() (TX, TC, TW, TW) { return _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCWA() (TX, TC, TW, TA) { return _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCWB() (TX, TC, TW, TB) { return _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCWC() (TX, TC, TW, TC) { return _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCAX() (TX, TC, TA, TX) { return _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCAY() (TX, TC, TA, TY) { return _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCAZ() (TX, TC, TA, TZ) { return _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCAW() (TX, TC, TA, TW) { return _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCAA() (TX, TC, TA, TA) { return _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCAB() (TX, TC, TA, TB) { return _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCAC() (TX, TC, TA, TC) { return _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCBX() (TX, TC, TB, TX) { return _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCBY() (TX, TC, TB, TY) { return _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCBZ() (TX, TC, TB, TZ) { return _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCBW() (TX, TC, TB, TW) { return _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCBA() (TX, TC, TB, TA) { return _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCBB() (TX, TC, TB, TB) { return _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCBC() (TX, TC, TB, TC) { return _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCCX() (TX, TC, TC, TX) { return _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCCY() (TX, TC, TC, TY) { return _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCCZ() (TX, TC, TC, TZ) { return _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCCW() (TX, TC, TC, TW) { return _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCCA() (TX, TC, TC, TA) { return _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCCB() (TX, TC, TC, TB) { return _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCCC() (TX, TC, TC, TC) { return _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXXX() (TY, TX, TX, TX) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXXY() (TY, TX, TX, TY) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXXZ() (TY, TX, TX, TZ) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXXW() (TY, TX, TX, TW) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXXA() (TY, TX, TX, TA) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXXB() (TY, TX, TX, TB) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXXC() (TY, TX, TX, TC) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXYX() (TY, TX, TY, TX) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXYY() (TY, TX, TY, TY) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXYZ() (TY, TX, TY, TZ) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXYW() (TY, TX, TY, TW) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXYA() (TY, TX, TY, TA) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXYB() (TY, TX, TY, TB) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXYC() (TY, TX, TY, TC) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXZX() (TY, TX, TZ, TX) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXZY() (TY, TX, TZ, TY) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXZZ() (TY, TX, TZ, TZ) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXZW() (TY, TX, TZ, TW) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXZA() (TY, TX, TZ, TA) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXZB() (TY, TX, TZ, TB) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXZC() (TY, TX, TZ, TC) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXWX() (TY, TX, TW, TX) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXWY() (TY, TX, TW, TY) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXWZ() (TY, TX, TW, TZ) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXWW() (TY, TX, TW, TW) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXWA() (TY, TX, TW, TA) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXWB() (TY, TX, TW, TB) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXWC() (TY, TX, TW, TC) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXAX() (TY, TX, TA, TX) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXAY() (TY, TX, TA, TY) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXAZ() (TY, TX, TA, TZ) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXAW() (TY, TX, TA, TW) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXAA() (TY, TX, TA, TA) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXAB() (TY, TX, TA, TB) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXAC() (TY, TX, TA, TC) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXBX() (TY, TX, TB, TX) { return _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXBY() (TY, TX, TB, TY) { return _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXBZ() (TY, TX, TB, TZ) { return _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXBW() (TY, TX, TB, TW) { return _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXBA() (TY, TX, TB, TA) { return _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXBB() (TY, TX, TB, TB) { return _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXBC() (TY, TX, TB, TC) { return _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXCX() (TY, TX, TC, TX) { return _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXCY() (TY, TX, TC, TY) { return _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXCZ() (TY, TX, TC, TZ) { return _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXCW() (TY, TX, TC, TW) { return _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXCA() (TY, TX, TC, TA) { return _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXCB() (TY, TX, TC, TB) { return _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXCC() (TY, TX, TC, TC) { return _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYXX() (TY, TY, TX, TX) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYXY() (TY, TY, TX, TY) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYXZ() (TY, TY, TX, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYXW() (TY, TY, TX, TW) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYXA() (TY, TY, TX, TA) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYXB() (TY, TY, TX, TB) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYXC() (TY, TY, TX, TC) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYYX() (TY, TY, TY, TX) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYYY() (TY, TY, TY, TY) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYYZ() (TY, TY, TY, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYYW() (TY, TY, TY, TW) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYYA() (TY, TY, TY, TA) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYYB() (TY, TY, TY, TB) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYYC() (TY, TY, TY, TC) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYZX() (TY, TY, TZ, TX) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYZY() (TY, TY, TZ, TY) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYZZ() (TY, TY, TZ, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYZW() (TY, TY, TZ, TW) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYZA() (TY, TY, TZ, TA) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYZB() (TY, TY, TZ, TB) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYZC() (TY, TY, TZ, TC) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYWX() (TY, TY, TW, TX) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYWY() (TY, TY, TW, TY) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYWZ() (TY, TY, TW, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYWW() (TY, TY, TW, TW) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYWA() (TY, TY, TW, TA) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYWB() (TY, TY, TW, TB) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYWC() (TY, TY, TW, TC) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYAX() (TY, TY, TA, TX) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYAY() (TY, TY, TA, TY) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYAZ() (TY, TY, TA, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYAW() (TY, TY, TA, TW) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYAA() (TY, TY, TA, TA) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYAB() (TY, TY, TA, TB) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYAC() (TY, TY, TA, TC) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYBX() (TY, TY, TB, TX) { return _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYBY() (TY, TY, TB, TY) { return _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYBZ() (TY, TY, TB, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYBW() (TY, TY, TB, TW) { return _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYBA() (TY, TY, TB, TA) { return _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYBB() (TY, TY, TB, TB) { return _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYBC() (TY, TY, TB, TC) { return _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYCX() (TY, TY, TC, TX) { return _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYCY() (TY, TY, TC, TY) { return _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYCZ() (TY, TY, TC, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYCW() (TY, TY, TC, TW) { return _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYCA() (TY, TY, TC, TA) { return _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYCB() (TY, TY, TC, TB) { return _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYCC() (TY, TY, TC, TC) { return _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZXX() (TY, TZ, TX, TX) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZXY() (TY, TZ, TX, TY) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZXZ() (TY, TZ, TX, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZXW() (TY, TZ, TX, TW) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZXA() (TY, TZ, TX, TA) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZXB() (TY, TZ, TX, TB) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZXC() (TY, TZ, TX, TC) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZYX() (TY, TZ, TY, TX) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZYY() (TY, TZ, TY, TY) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZYZ() (TY, TZ, TY, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZYW() (TY, TZ, TY, TW) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZYA() (TY, TZ, TY, TA) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZYB() (TY, TZ, TY, TB) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZYC() (TY, TZ, TY, TC) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZZX() (TY, TZ, TZ, TX) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZZY() (TY, TZ, TZ, TY) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZZZ() (TY, TZ, TZ, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZZW() (TY, TZ, TZ, TW) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZZA() (TY, TZ, TZ, TA) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZZB() (TY, TZ, TZ, TB) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZZC() (TY, TZ, TZ, TC) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZWX() (TY, TZ, TW, TX) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZWY() (TY, TZ, TW, TY) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZWZ() (TY, TZ, TW, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZWW() (TY, TZ, TW, TW) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZWA() (TY, TZ, TW, TA) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZWB() (TY, TZ, TW, TB) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZWC() (TY, TZ, TW, TC) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZAX() (TY, TZ, TA, TX) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZAY() (TY, TZ, TA, TY) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZAZ() (TY, TZ, TA, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZAW() (TY, TZ, TA, TW) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZAA() (TY, TZ, TA, TA) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZAB() (TY, TZ, TA, TB) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZAC() (TY, TZ, TA, TC) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZBX() (TY, TZ, TB, TX) { return _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZBY() (TY, TZ, TB, TY) { return _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZBZ() (TY, TZ, TB, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZBW() (TY, TZ, TB, TW) { return _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZBA() (TY, TZ, TB, TA) { return _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZBB() (TY, TZ, TB, TB) { return _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZBC() (TY, TZ, TB, TC) { return _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZCX() (TY, TZ, TC, TX) { return _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZCY() (TY, TZ, TC, TY) { return _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZCZ() (TY, TZ, TC, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZCW() (TY, TZ, TC, TW) { return _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZCA() (TY, TZ, TC, TA) { return _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZCB() (TY, TZ, TC, TB) { return _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZCC() (TY, TZ, TC, TC) { return _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWXX() (TY, TW, TX, TX) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWXY() (TY, TW, TX, TY) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWXZ() (TY, TW, TX, TZ) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWXW() (TY, TW, TX, TW) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWXA() (TY, TW, TX, TA) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWXB() (TY, TW, TX, TB) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWXC() (TY, TW, TX, TC) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWYX() (TY, TW, TY, TX) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWYY() (TY, TW, TY, TY) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWYZ() (TY, TW, TY, TZ) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWYW() (TY, TW, TY, TW) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWYA() (TY, TW, TY, TA) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWYB() (TY, TW, TY, TB) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWYC() (TY, TW, TY, TC) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWZX() (TY, TW, TZ, TX) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWZY() (TY, TW, TZ, TY) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWZZ() (TY, TW, TZ, TZ) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWZW() (TY, TW, TZ, TW) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWZA() (TY, TW, TZ, TA) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWZB() (TY, TW, TZ, TB) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWZC() (TY, TW, TZ, TC) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWWX() (TY, TW, TW, TX) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWWY() (TY, TW, TW, TY) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWWZ() (TY, TW, TW, TZ) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWWW() (TY, TW, TW, TW) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWWA() (TY, TW, TW, TA) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWWB() (TY, TW, TW, TB) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWWC() (TY, TW, TW, TC) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWAX() (TY, TW, TA, TX) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWAY() (TY, TW, TA, TY) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWAZ() (TY, TW, TA, TZ) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWAW() (TY, TW, TA, TW) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWAA() (TY, TW, TA, TA) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWAB() (TY, TW, TA, TB) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWAC() (TY, TW, TA, TC) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWBX() (TY, TW, TB, TX) { return _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWBY() (TY, TW, TB, TY) { return _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWBZ() (TY, TW, TB, TZ) { return _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWBW() (TY, TW, TB, TW) { return _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWBA() (TY, TW, TB, TA) { return _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWBB() (TY, TW, TB, TB) { return _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWBC() (TY, TW, TB, TC) { return _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWCX() (TY, TW, TC, TX) { return _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWCY() (TY, TW, TC, TY) { return _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWCZ() (TY, TW, TC, TZ) { return _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWCW() (TY, TW, TC, TW) { return _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWCA() (TY, TW, TC, TA) { return _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWCB() (TY, TW, TC, TB) { return _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWCC() (TY, TW, TC, TC) { return _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAXX() (TY, TA, TX, TX) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAXY() (TY, TA, TX, TY) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAXZ() (TY, TA, TX, TZ) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAXW() (TY, TA, TX, TW) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAXA() (TY, TA, TX, TA) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAXB() (TY, TA, TX, TB) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAXC() (TY, TA, TX, TC) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAYX() (TY, TA, TY, TX) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAYY() (TY, TA, TY, TY) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAYZ() (TY, TA, TY, TZ) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAYW() (TY, TA, TY, TW) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAYA() (TY, TA, TY, TA) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAYB() (TY, TA, TY, TB) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAYC() (TY, TA, TY, TC) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAZX() (TY, TA, TZ, TX) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAZY() (TY, TA, TZ, TY) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAZZ() (TY, TA, TZ, TZ) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAZW() (TY, TA, TZ, TW) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAZA() (TY, TA, TZ, TA) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAZB() (TY, TA, TZ, TB) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAZC() (TY, TA, TZ, TC) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAWX() (TY, TA, TW, TX) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAWY() (TY, TA, TW, TY) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAWZ() (TY, TA, TW, TZ) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAWW() (TY, TA, TW, TW) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAWA() (TY, TA, TW, TA) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAWB() (TY, TA, TW, TB) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAWC() (TY, TA, TW, TC) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAAX() (TY, TA, TA, TX) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAAY() (TY, TA, TA, TY) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAAZ() (TY, TA, TA, TZ) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAAW() (TY, TA, TA, TW) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAAA() (TY, TA, TA, TA) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAAB() (TY, TA, TA, TB) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAAC() (TY, TA, TA, TC) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YABX() (TY, TA, TB, TX) { return _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YABY() (TY, TA, TB, TY) { return _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YABZ() (TY, TA, TB, TZ) { return _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YABW() (TY, TA, TB, TW) { return _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YABA() (TY, TA, TB, TA) { return _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YABB() (TY, TA, TB, TB) { return _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YABC() (TY, TA, TB, TC) { return _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YACX() (TY, TA, TC, TX) { return _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YACY() (TY, TA, TC, TY) { return _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YACZ() (TY, TA, TC, TZ) { return _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YACW() (TY, TA, TC, TW) { return _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YACA() (TY, TA, TC, TA) { return _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YACB() (TY, TA, TC, TB) { return _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YACC() (TY, TA, TC, TC) { return _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBXX() (TY, TB, TX, TX) { return _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBXY() (TY, TB, TX, TY) { return _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBXZ() (TY, TB, TX, TZ) { return _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBXW() (TY, TB, TX, TW) { return _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBXA() (TY, TB, TX, TA) { return _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBXB() (TY, TB, TX, TB) { return _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBXC() (TY, TB, TX, TC) { return _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBYX() (TY, TB, TY, TX) { return _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBYY() (TY, TB, TY, TY) { return _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBYZ() (TY, TB, TY, TZ) { return _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBYW() (TY, TB, TY, TW) { return _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBYA() (TY, TB, TY, TA) { return _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBYB() (TY, TB, TY, TB) { return _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBYC() (TY, TB, TY, TC) { return _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBZX() (TY, TB, TZ, TX) { return _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBZY() (TY, TB, TZ, TY) { return _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBZZ() (TY, TB, TZ, TZ) { return _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBZW() (TY, TB, TZ, TW) { return _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBZA() (TY, TB, TZ, TA) { return _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBZB() (TY, TB, TZ, TB) { return _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBZC() (TY, TB, TZ, TC) { return _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBWX() (TY, TB, TW, TX) { return _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBWY() (TY, TB, TW, TY) { return _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBWZ() (TY, TB, TW, TZ) { return _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBWW() (TY, TB, TW, TW) { return _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBWA() (TY, TB, TW, TA) { return _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBWB() (TY, TB, TW, TB) { return _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBWC() (TY, TB, TW, TC) { return _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBAX() (TY, TB, TA, TX) { return _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBAY() (TY, TB, TA, TY) { return _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBAZ() (TY, TB, TA, TZ) { return _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBAW() (TY, TB, TA, TW) { return _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBAA() (TY, TB, TA, TA) { return _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBAB() (TY, TB, TA, TB) { return _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBAC() (TY, TB, TA, TC) { return _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBBX() (TY, TB, TB, TX) { return _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBBY() (TY, TB, TB, TY) { return _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBBZ() (TY, TB, TB, TZ) { return _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBBW() (TY, TB, TB, TW) { return _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBBA() (TY, TB, TB, TA) { return _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBBB() (TY, TB, TB, TB) { return _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBBC() (TY, TB, TB, TC) { return _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBCX() (TY, TB, TC, TX) { return _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBCY() (TY, TB, TC, TY) { return _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBCZ() (TY, TB, TC, TZ) { return _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBCW() (TY, TB, TC, TW) { return _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBCA() (TY, TB, TC, TA) { return _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBCB() (TY, TB, TC, TB) { return _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBCC() (TY, TB, TC, TC) { return _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCXX() (TY, TC, TX, TX) { return _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCXY() (TY, TC, TX, TY) { return _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCXZ() (TY, TC, TX, TZ) { return _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCXW() (TY, TC, TX, TW) { return _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCXA() (TY, TC, TX, TA) { return _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCXB() (TY, TC, TX, TB) { return _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCXC() (TY, TC, TX, TC) { return _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCYX() (TY, TC, TY, TX) { return _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCYY() (TY, TC, TY, TY) { return _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCYZ() (TY, TC, TY, TZ) { return _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCYW() (TY, TC, TY, TW) { return _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCYA() (TY, TC, TY, TA) { return _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCYB() (TY, TC, TY, TB) { return _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCYC() (TY, TC, TY, TC) { return _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCZX() (TY, TC, TZ, TX) { return _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCZY() (TY, TC, TZ, TY) { return _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCZZ() (TY, TC, TZ, TZ) { return _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCZW() (TY, TC, TZ, TW) { return _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCZA() (TY, TC, TZ, TA) { return _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCZB() (TY, TC, TZ, TB) { return _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCZC() (TY, TC, TZ, TC) { return _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCWX() (TY, TC, TW, TX) { return _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCWY() (TY, TC, TW, TY) { return _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCWZ() (TY, TC, TW, TZ) { return _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCWW() (TY, TC, TW, TW) { return _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCWA() (TY, TC, TW, TA) { return _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCWB() (TY, TC, TW, TB) { return _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCWC() (TY, TC, TW, TC) { return _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCAX() (TY, TC, TA, TX) { return _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCAY() (TY, TC, TA, TY) { return _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCAZ() (TY, TC, TA, TZ) { return _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCAW() (TY, TC, TA, TW) { return _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCAA() (TY, TC, TA, TA) { return _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCAB() (TY, TC, TA, TB) { return _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCAC() (TY, TC, TA, TC) { return _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCBX() (TY, TC, TB, TX) { return _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCBY() (TY, TC, TB, TY) { return _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCBZ() (TY, TC, TB, TZ) { return _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCBW() (TY, TC, TB, TW) { return _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCBA() (TY, TC, TB, TA) { return _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCBB() (TY, TC, TB, TB) { return _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCBC() (TY, TC, TB, TC) { return _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCCX() (TY, TC, TC, TX) { return _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCCY() (TY, TC, TC, TY) { return _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCCZ() (TY, TC, TC, TZ) { return _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCCW() (TY, TC, TC, TW) { return _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCCA() (TY, TC, TC, TA) { return _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCCB() (TY, TC, TC, TB) { return _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCCC() (TY, TC, TC, TC) { return _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXXX() (TZ, TX, TX, TX) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXXY() (TZ, TX, TX, TY) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXXZ() (TZ, TX, TX, TZ) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXXW() (TZ, TX, TX, TW) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXXA() (TZ, TX, TX, TA) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXXB() (TZ, TX, TX, TB) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXXC() (TZ, TX, TX, TC) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXYX() (TZ, TX, TY, TX) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXYY() (TZ, TX, TY, TY) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXYZ() (TZ, TX, TY, TZ) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXYW() (TZ, TX, TY, TW) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXYA() (TZ, TX, TY, TA) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXYB() (TZ, TX, TY, TB) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXYC() (TZ, TX, TY, TC) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXZX() (TZ, TX, TZ, TX) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXZY() (TZ, TX, TZ, TY) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXZZ() (TZ, TX, TZ, TZ) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXZW() (TZ, TX, TZ, TW) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXZA() (TZ, TX, TZ, TA) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXZB() (TZ, TX, TZ, TB) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXZC() (TZ, TX, TZ, TC) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXWX() (TZ, TX, TW, TX) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXWY() (TZ, TX, TW, TY) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXWZ() (TZ, TX, TW, TZ) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXWW() (TZ, TX, TW, TW) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXWA() (TZ, TX, TW, TA) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXWB() (TZ, TX, TW, TB) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXWC() (TZ, TX, TW, TC) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXAX() (TZ, TX, TA, TX) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXAY() (TZ, TX, TA, TY) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXAZ() (TZ, TX, TA, TZ) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXAW() (TZ, TX, TA, TW) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXAA() (TZ, TX, TA, TA) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXAB() (TZ, TX, TA, TB) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXAC() (TZ, TX, TA, TC) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXBX() (TZ, TX, TB, TX) { return _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXBY() (TZ, TX, TB, TY) { return _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXBZ() (TZ, TX, TB, TZ) { return _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXBW() (TZ, TX, TB, TW) { return _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXBA() (TZ, TX, TB, TA) { return _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXBB() (TZ, TX, TB, TB) { return _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXBC() (TZ, TX, TB, TC) { return _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXCX() (TZ, TX, TC, TX) { return _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXCY() (TZ, TX, TC, TY) { return _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXCZ() (TZ, TX, TC, TZ) { return _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXCW() (TZ, TX, TC, TW) { return _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXCA() (TZ, TX, TC, TA) { return _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXCB() (TZ, TX, TC, TB) { return _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXCC() (TZ, TX, TC, TC) { return _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYXX() (TZ, TY, TX, TX) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYXY() (TZ, TY, TX, TY) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYXZ() (TZ, TY, TX, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYXW() (TZ, TY, TX, TW) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYXA() (TZ, TY, TX, TA) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYXB() (TZ, TY, TX, TB) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYXC() (TZ, TY, TX, TC) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYYX() (TZ, TY, TY, TX) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYYY() (TZ, TY, TY, TY) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYYZ() (TZ, TY, TY, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYYW() (TZ, TY, TY, TW) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYYA() (TZ, TY, TY, TA) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYYB() (TZ, TY, TY, TB) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYYC() (TZ, TY, TY, TC) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYZX() (TZ, TY, TZ, TX) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYZY() (TZ, TY, TZ, TY) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYZZ() (TZ, TY, TZ, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYZW() (TZ, TY, TZ, TW) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYZA() (TZ, TY, TZ, TA) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYZB() (TZ, TY, TZ, TB) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYZC() (TZ, TY, TZ, TC) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYWX() (TZ, TY, TW, TX) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYWY() (TZ, TY, TW, TY) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYWZ() (TZ, TY, TW, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYWW() (TZ, TY, TW, TW) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYWA() (TZ, TY, TW, TA) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYWB() (TZ, TY, TW, TB) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYWC() (TZ, TY, TW, TC) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYAX() (TZ, TY, TA, TX) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYAY() (TZ, TY, TA, TY) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYAZ() (TZ, TY, TA, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYAW() (TZ, TY, TA, TW) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYAA() (TZ, TY, TA, TA) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYAB() (TZ, TY, TA, TB) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYAC() (TZ, TY, TA, TC) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYBX() (TZ, TY, TB, TX) { return _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYBY() (TZ, TY, TB, TY) { return _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYBZ() (TZ, TY, TB, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYBW() (TZ, TY, TB, TW) { return _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYBA() (TZ, TY, TB, TA) { return _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYBB() (TZ, TY, TB, TB) { return _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYBC() (TZ, TY, TB, TC) { return _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYCX() (TZ, TY, TC, TX) { return _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYCY() (TZ, TY, TC, TY) { return _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYCZ() (TZ, TY, TC, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYCW() (TZ, TY, TC, TW) { return _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYCA() (TZ, TY, TC, TA) { return _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYCB() (TZ, TY, TC, TB) { return _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYCC() (TZ, TY, TC, TC) { return _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZXX() (TZ, TZ, TX, TX) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZXY() (TZ, TZ, TX, TY) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZXZ() (TZ, TZ, TX, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZXW() (TZ, TZ, TX, TW) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZXA() (TZ, TZ, TX, TA) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZXB() (TZ, TZ, TX, TB) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZXC() (TZ, TZ, TX, TC) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZYX() (TZ, TZ, TY, TX) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZYY() (TZ, TZ, TY, TY) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZYZ() (TZ, TZ, TY, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZYW() (TZ, TZ, TY, TW) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZYA() (TZ, TZ, TY, TA) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZYB() (TZ, TZ, TY, TB) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZYC() (TZ, TZ, TY, TC) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZZX() (TZ, TZ, TZ, TX) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZZY() (TZ, TZ, TZ, TY) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZZZ() (TZ, TZ, TZ, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZZW() (TZ, TZ, TZ, TW) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZZA() (TZ, TZ, TZ, TA) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZZB() (TZ, TZ, TZ, TB) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZZC() (TZ, TZ, TZ, TC) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZWX() (TZ, TZ, TW, TX) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZWY() (TZ, TZ, TW, TY) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZWZ() (TZ, TZ, TW, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZWW() (TZ, TZ, TW, TW) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZWA() (TZ, TZ, TW, TA) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZWB() (TZ, TZ, TW, TB) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZWC() (TZ, TZ, TW, TC) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZAX() (TZ, TZ, TA, TX) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZAY() (TZ, TZ, TA, TY) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZAZ() (TZ, TZ, TA, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZAW() (TZ, TZ, TA, TW) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZAA() (TZ, TZ, TA, TA) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZAB() (TZ, TZ, TA, TB) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZAC() (TZ, TZ, TA, TC) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZBX() (TZ, TZ, TB, TX) { return _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZBY() (TZ, TZ, TB, TY) { return _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZBZ() (TZ, TZ, TB, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZBW() (TZ, TZ, TB, TW) { return _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZBA() (TZ, TZ, TB, TA) { return _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZBB() (TZ, TZ, TB, TB) { return _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZBC() (TZ, TZ, TB, TC) { return _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZCX() (TZ, TZ, TC, TX) { return _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZCY() (TZ, TZ, TC, TY) { return _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZCZ() (TZ, TZ, TC, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZCW() (TZ, TZ, TC, TW) { return _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZCA() (TZ, TZ, TC, TA) { return _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZCB() (TZ, TZ, TC, TB) { return _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZCC() (TZ, TZ, TC, TC) { return _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWXX() (TZ, TW, TX, TX) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWXY() (TZ, TW, TX, TY) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWXZ() (TZ, TW, TX, TZ) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWXW() (TZ, TW, TX, TW) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWXA() (TZ, TW, TX, TA) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWXB() (TZ, TW, TX, TB) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWXC() (TZ, TW, TX, TC) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWYX() (TZ, TW, TY, TX) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWYY() (TZ, TW, TY, TY) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWYZ() (TZ, TW, TY, TZ) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWYW() (TZ, TW, TY, TW) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWYA() (TZ, TW, TY, TA) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWYB() (TZ, TW, TY, TB) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWYC() (TZ, TW, TY, TC) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWZX() (TZ, TW, TZ, TX) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWZY() (TZ, TW, TZ, TY) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWZZ() (TZ, TW, TZ, TZ) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWZW() (TZ, TW, TZ, TW) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWZA() (TZ, TW, TZ, TA) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWZB() (TZ, TW, TZ, TB) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWZC() (TZ, TW, TZ, TC) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWWX() (TZ, TW, TW, TX) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWWY() (TZ, TW, TW, TY) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWWZ() (TZ, TW, TW, TZ) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWWW() (TZ, TW, TW, TW) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWWA() (TZ, TW, TW, TA) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWWB() (TZ, TW, TW, TB) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWWC() (TZ, TW, TW, TC) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWAX() (TZ, TW, TA, TX) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWAY() (TZ, TW, TA, TY) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWAZ() (TZ, TW, TA, TZ) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWAW() (TZ, TW, TA, TW) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWAA() (TZ, TW, TA, TA) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWAB() (TZ, TW, TA, TB) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWAC() (TZ, TW, TA, TC) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWBX() (TZ, TW, TB, TX) { return _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWBY() (TZ, TW, TB, TY) { return _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWBZ() (TZ, TW, TB, TZ) { return _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWBW() (TZ, TW, TB, TW) { return _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWBA() (TZ, TW, TB, TA) { return _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWBB() (TZ, TW, TB, TB) { return _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWBC() (TZ, TW, TB, TC) { return _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWCX() (TZ, TW, TC, TX) { return _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWCY() (TZ, TW, TC, TY) { return _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWCZ() (TZ, TW, TC, TZ) { return _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWCW() (TZ, TW, TC, TW) { return _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWCA() (TZ, TW, TC, TA) { return _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWCB() (TZ, TW, TC, TB) { return _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWCC() (TZ, TW, TC, TC) { return _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAXX() (TZ, TA, TX, TX) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAXY() (TZ, TA, TX, TY) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAXZ() (TZ, TA, TX, TZ) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAXW() (TZ, TA, TX, TW) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAXA() (TZ, TA, TX, TA) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAXB() (TZ, TA, TX, TB) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAXC() (TZ, TA, TX, TC) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAYX() (TZ, TA, TY, TX) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAYY() (TZ, TA, TY, TY) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAYZ() (TZ, TA, TY, TZ) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAYW() (TZ, TA, TY, TW) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAYA() (TZ, TA, TY, TA) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAYB() (TZ, TA, TY, TB) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAYC() (TZ, TA, TY, TC) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAZX() (TZ, TA, TZ, TX) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAZY() (TZ, TA, TZ, TY) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAZZ() (TZ, TA, TZ, TZ) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAZW() (TZ, TA, TZ, TW) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAZA() (TZ, TA, TZ, TA) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAZB() (TZ, TA, TZ, TB) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAZC() (TZ, TA, TZ, TC) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAWX() (TZ, TA, TW, TX) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAWY() (TZ, TA, TW, TY) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAWZ() (TZ, TA, TW, TZ) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAWW() (TZ, TA, TW, TW) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAWA() (TZ, TA, TW, TA) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAWB() (TZ, TA, TW, TB) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAWC() (TZ, TA, TW, TC) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAAX() (TZ, TA, TA, TX) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAAY() (TZ, TA, TA, TY) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAAZ() (TZ, TA, TA, TZ) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAAW() (TZ, TA, TA, TW) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAAA() (TZ, TA, TA, TA) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAAB() (TZ, TA, TA, TB) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAAC() (TZ, TA, TA, TC) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZABX() (TZ, TA, TB, TX) { return _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZABY() (TZ, TA, TB, TY) { return _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZABZ() (TZ, TA, TB, TZ) { return _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZABW() (TZ, TA, TB, TW) { return _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZABA() (TZ, TA, TB, TA) { return _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZABB() (TZ, TA, TB, TB) { return _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZABC() (TZ, TA, TB, TC) { return _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZACX() (TZ, TA, TC, TX) { return _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZACY() (TZ, TA, TC, TY) { return _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZACZ() (TZ, TA, TC, TZ) { return _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZACW() (TZ, TA, TC, TW) { return _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZACA() (TZ, TA, TC, TA) { return _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZACB() (TZ, TA, TC, TB) { return _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZACC() (TZ, TA, TC, TC) { return _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBXX() (TZ, TB, TX, TX) { return _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBXY() (TZ, TB, TX, TY) { return _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBXZ() (TZ, TB, TX, TZ) { return _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBXW() (TZ, TB, TX, TW) { return _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBXA() (TZ, TB, TX, TA) { return _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBXB() (TZ, TB, TX, TB) { return _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBXC() (TZ, TB, TX, TC) { return _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBYX() (TZ, TB, TY, TX) { return _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBYY() (TZ, TB, TY, TY) { return _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBYZ() (TZ, TB, TY, TZ) { return _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBYW() (TZ, TB, TY, TW) { return _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBYA() (TZ, TB, TY, TA) { return _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBYB() (TZ, TB, TY, TB) { return _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBYC() (TZ, TB, TY, TC) { return _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBZX() (TZ, TB, TZ, TX) { return _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBZY() (TZ, TB, TZ, TY) { return _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBZZ() (TZ, TB, TZ, TZ) { return _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBZW() (TZ, TB, TZ, TW) { return _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBZA() (TZ, TB, TZ, TA) { return _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBZB() (TZ, TB, TZ, TB) { return _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBZC() (TZ, TB, TZ, TC) { return _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBWX() (TZ, TB, TW, TX) { return _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBWY() (TZ, TB, TW, TY) { return _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBWZ() (TZ, TB, TW, TZ) { return _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBWW() (TZ, TB, TW, TW) { return _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBWA() (TZ, TB, TW, TA) { return _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBWB() (TZ, TB, TW, TB) { return _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBWC() (TZ, TB, TW, TC) { return _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBAX() (TZ, TB, TA, TX) { return _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBAY() (TZ, TB, TA, TY) { return _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBAZ() (TZ, TB, TA, TZ) { return _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBAW() (TZ, TB, TA, TW) { return _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBAA() (TZ, TB, TA, TA) { return _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBAB() (TZ, TB, TA, TB) { return _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBAC() (TZ, TB, TA, TC) { return _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBBX() (TZ, TB, TB, TX) { return _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBBY() (TZ, TB, TB, TY) { return _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBBZ() (TZ, TB, TB, TZ) { return _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBBW() (TZ, TB, TB, TW) { return _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBBA() (TZ, TB, TB, TA) { return _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBBB() (TZ, TB, TB, TB) { return _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBBC() (TZ, TB, TB, TC) { return _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBCX() (TZ, TB, TC, TX) { return _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBCY() (TZ, TB, TC, TY) { return _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBCZ() (TZ, TB, TC, TZ) { return _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBCW() (TZ, TB, TC, TW) { return _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBCA() (TZ, TB, TC, TA) { return _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBCB() (TZ, TB, TC, TB) { return _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBCC() (TZ, TB, TC, TC) { return _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCXX() (TZ, TC, TX, TX) { return _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCXY() (TZ, TC, TX, TY) { return _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCXZ() (TZ, TC, TX, TZ) { return _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCXW() (TZ, TC, TX, TW) { return _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCXA() (TZ, TC, TX, TA) { return _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCXB() (TZ, TC, TX, TB) { return _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCXC() (TZ, TC, TX, TC) { return _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCYX() (TZ, TC, TY, TX) { return _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCYY() (TZ, TC, TY, TY) { return _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCYZ() (TZ, TC, TY, TZ) { return _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCYW() (TZ, TC, TY, TW) { return _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCYA() (TZ, TC, TY, TA) { return _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCYB() (TZ, TC, TY, TB) { return _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCYC() (TZ, TC, TY, TC) { return _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCZX() (TZ, TC, TZ, TX) { return _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCZY() (TZ, TC, TZ, TY) { return _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCZZ() (TZ, TC, TZ, TZ) { return _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCZW() (TZ, TC, TZ, TW) { return _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCZA() (TZ, TC, TZ, TA) { return _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCZB() (TZ, TC, TZ, TB) { return _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCZC() (TZ, TC, TZ, TC) { return _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCWX() (TZ, TC, TW, TX) { return _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCWY() (TZ, TC, TW, TY) { return _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCWZ() (TZ, TC, TW, TZ) { return _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCWW() (TZ, TC, TW, TW) { return _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCWA() (TZ, TC, TW, TA) { return _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCWB() (TZ, TC, TW, TB) { return _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCWC() (TZ, TC, TW, TC) { return _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCAX() (TZ, TC, TA, TX) { return _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCAY() (TZ, TC, TA, TY) { return _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCAZ() (TZ, TC, TA, TZ) { return _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCAW() (TZ, TC, TA, TW) { return _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCAA() (TZ, TC, TA, TA) { return _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCAB() (TZ, TC, TA, TB) { return _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCAC() (TZ, TC, TA, TC) { return _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCBX() (TZ, TC, TB, TX) { return _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCBY() (TZ, TC, TB, TY) { return _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCBZ() (TZ, TC, TB, TZ) { return _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCBW() (TZ, TC, TB, TW) { return _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCBA() (TZ, TC, TB, TA) { return _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCBB() (TZ, TC, TB, TB) { return _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCBC() (TZ, TC, TB, TC) { return _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCCX() (TZ, TC, TC, TX) { return _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCCY() (TZ, TC, TC, TY) { return _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCCZ() (TZ, TC, TC, TZ) { return _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCCW() (TZ, TC, TC, TW) { return _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCCA() (TZ, TC, TC, TA) { return _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCCB() (TZ, TC, TC, TB) { return _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCCC() (TZ, TC, TC, TC) { return _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXXX() (TW, TX, TX, TX) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXXY() (TW, TX, TX, TY) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXXZ() (TW, TX, TX, TZ) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXXW() (TW, TX, TX, TW) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXXA() (TW, TX, TX, TA) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXXB() (TW, TX, TX, TB) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXXC() (TW, TX, TX, TC) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXYX() (TW, TX, TY, TX) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXYY() (TW, TX, TY, TY) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXYZ() (TW, TX, TY, TZ) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXYW() (TW, TX, TY, TW) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXYA() (TW, TX, TY, TA) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXYB() (TW, TX, TY, TB) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXYC() (TW, TX, TY, TC) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXZX() (TW, TX, TZ, TX) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXZY() (TW, TX, TZ, TY) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXZZ() (TW, TX, TZ, TZ) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXZW() (TW, TX, TZ, TW) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXZA() (TW, TX, TZ, TA) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXZB() (TW, TX, TZ, TB) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXZC() (TW, TX, TZ, TC) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXWX() (TW, TX, TW, TX) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXWY() (TW, TX, TW, TY) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXWZ() (TW, TX, TW, TZ) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXWW() (TW, TX, TW, TW) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXWA() (TW, TX, TW, TA) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXWB() (TW, TX, TW, TB) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXWC() (TW, TX, TW, TC) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXAX() (TW, TX, TA, TX) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXAY() (TW, TX, TA, TY) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXAZ() (TW, TX, TA, TZ) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXAW() (TW, TX, TA, TW) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXAA() (TW, TX, TA, TA) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXAB() (TW, TX, TA, TB) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXAC() (TW, TX, TA, TC) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXBX() (TW, TX, TB, TX) { return _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXBY() (TW, TX, TB, TY) { return _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXBZ() (TW, TX, TB, TZ) { return _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXBW() (TW, TX, TB, TW) { return _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXBA() (TW, TX, TB, TA) { return _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXBB() (TW, TX, TB, TB) { return _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXBC() (TW, TX, TB, TC) { return _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXCX() (TW, TX, TC, TX) { return _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXCY() (TW, TX, TC, TY) { return _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXCZ() (TW, TX, TC, TZ) { return _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXCW() (TW, TX, TC, TW) { return _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXCA() (TW, TX, TC, TA) { return _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXCB() (TW, TX, TC, TB) { return _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXCC() (TW, TX, TC, TC) { return _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYXX() (TW, TY, TX, TX) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYXY() (TW, TY, TX, TY) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYXZ() (TW, TY, TX, TZ) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYXW() (TW, TY, TX, TW) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYXA() (TW, TY, TX, TA) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYXB() (TW, TY, TX, TB) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYXC() (TW, TY, TX, TC) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYYX() (TW, TY, TY, TX) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYYY() (TW, TY, TY, TY) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYYZ() (TW, TY, TY, TZ) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYYW() (TW, TY, TY, TW) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYYA() (TW, TY, TY, TA) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYYB() (TW, TY, TY, TB) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYYC() (TW, TY, TY, TC) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYZX() (TW, TY, TZ, TX) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYZY() (TW, TY, TZ, TY) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYZZ() (TW, TY, TZ, TZ) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYZW() (TW, TY, TZ, TW) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYZA() (TW, TY, TZ, TA) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYZB() (TW, TY, TZ, TB) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYZC() (TW, TY, TZ, TC) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYWX() (TW, TY, TW, TX) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYWY() (TW, TY, TW, TY) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYWZ() (TW, TY, TW, TZ) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYWW() (TW, TY, TW, TW) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYWA() (TW, TY, TW, TA) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYWB() (TW, TY, TW, TB) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYWC() (TW, TY, TW, TC) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYAX() (TW, TY, TA, TX) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYAY() (TW, TY, TA, TY) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYAZ() (TW, TY, TA, TZ) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYAW() (TW, TY, TA, TW) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYAA() (TW, TY, TA, TA) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYAB() (TW, TY, TA, TB) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYAC() (TW, TY, TA, TC) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYBX() (TW, TY, TB, TX) { return _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYBY() (TW, TY, TB, TY) { return _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYBZ() (TW, TY, TB, TZ) { return _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYBW() (TW, TY, TB, TW) { return _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYBA() (TW, TY, TB, TA) { return _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYBB() (TW, TY, TB, TB) { return _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYBC() (TW, TY, TB, TC) { return _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYCX() (TW, TY, TC, TX) { return _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYCY() (TW, TY, TC, TY) { return _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYCZ() (TW, TY, TC, TZ) { return _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYCW() (TW, TY, TC, TW) { return _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYCA() (TW, TY, TC, TA) { return _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYCB() (TW, TY, TC, TB) { return _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYCC() (TW, TY, TC, TC) { return _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZXX() (TW, TZ, TX, TX) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZXY() (TW, TZ, TX, TY) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZXZ() (TW, TZ, TX, TZ) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZXW() (TW, TZ, TX, TW) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZXA() (TW, TZ, TX, TA) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZXB() (TW, TZ, TX, TB) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZXC() (TW, TZ, TX, TC) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZYX() (TW, TZ, TY, TX) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZYY() (TW, TZ, TY, TY) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZYZ() (TW, TZ, TY, TZ) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZYW() (TW, TZ, TY, TW) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZYA() (TW, TZ, TY, TA) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZYB() (TW, TZ, TY, TB) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZYC() (TW, TZ, TY, TC) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZZX() (TW, TZ, TZ, TX) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZZY() (TW, TZ, TZ, TY) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZZZ() (TW, TZ, TZ, TZ) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZZW() (TW, TZ, TZ, TW) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZZA() (TW, TZ, TZ, TA) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZZB() (TW, TZ, TZ, TB) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZZC() (TW, TZ, TZ, TC) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZWX() (TW, TZ, TW, TX) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZWY() (TW, TZ, TW, TY) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZWZ() (TW, TZ, TW, TZ) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZWW() (TW, TZ, TW, TW) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZWA() (TW, TZ, TW, TA) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZWB() (TW, TZ, TW, TB) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZWC() (TW, TZ, TW, TC) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZAX() (TW, TZ, TA, TX) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZAY() (TW, TZ, TA, TY) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZAZ() (TW, TZ, TA, TZ) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZAW() (TW, TZ, TA, TW) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZAA() (TW, TZ, TA, TA) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZAB() (TW, TZ, TA, TB) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZAC() (TW, TZ, TA, TC) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZBX() (TW, TZ, TB, TX) { return _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZBY() (TW, TZ, TB, TY) { return _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZBZ() (TW, TZ, TB, TZ) { return _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZBW() (TW, TZ, TB, TW) { return _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZBA() (TW, TZ, TB, TA) { return _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZBB() (TW, TZ, TB, TB) { return _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZBC() (TW, TZ, TB, TC) { return _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZCX() (TW, TZ, TC, TX) { return _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZCY() (TW, TZ, TC, TY) { return _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZCZ() (TW, TZ, TC, TZ) { return _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZCW() (TW, TZ, TC, TW) { return _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZCA() (TW, TZ, TC, TA) { return _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZCB() (TW, TZ, TC, TB) { return _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZCC() (TW, TZ, TC, TC) { return _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWXX() (TW, TW, TX, TX) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWXY() (TW, TW, TX, TY) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWXZ() (TW, TW, TX, TZ) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWXW() (TW, TW, TX, TW) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWXA() (TW, TW, TX, TA) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWXB() (TW, TW, TX, TB) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWXC() (TW, TW, TX, TC) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWYX() (TW, TW, TY, TX) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWYY() (TW, TW, TY, TY) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWYZ() (TW, TW, TY, TZ) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWYW() (TW, TW, TY, TW) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWYA() (TW, TW, TY, TA) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWYB() (TW, TW, TY, TB) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWYC() (TW, TW, TY, TC) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWZX() (TW, TW, TZ, TX) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWZY() (TW, TW, TZ, TY) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWZZ() (TW, TW, TZ, TZ) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWZW() (TW, TW, TZ, TW) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWZA() (TW, TW, TZ, TA) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWZB() (TW, TW, TZ, TB) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWZC() (TW, TW, TZ, TC) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWWX() (TW, TW, TW, TX) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWWY() (TW, TW, TW, TY) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWWZ() (TW, TW, TW, TZ) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWWW() (TW, TW, TW, TW) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWWA() (TW, TW, TW, TA) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWWB() (TW, TW, TW, TB) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWWC() (TW, TW, TW, TC) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWAX() (TW, TW, TA, TX) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWAY() (TW, TW, TA, TY) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWAZ() (TW, TW, TA, TZ) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWAW() (TW, TW, TA, TW) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWAA() (TW, TW, TA, TA) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWAB() (TW, TW, TA, TB) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWAC() (TW, TW, TA, TC) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWBX() (TW, TW, TB, TX) { return _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWBY() (TW, TW, TB, TY) { return _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWBZ() (TW, TW, TB, TZ) { return _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWBW() (TW, TW, TB, TW) { return _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWBA() (TW, TW, TB, TA) { return _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWBB() (TW, TW, TB, TB) { return _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWBC() (TW, TW, TB, TC) { return _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWCX() (TW, TW, TC, TX) { return _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWCY() (TW, TW, TC, TY) { return _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWCZ() (TW, TW, TC, TZ) { return _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWCW() (TW, TW, TC, TW) { return _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWCA() (TW, TW, TC, TA) { return _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWCB() (TW, TW, TC, TB) { return _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWCC() (TW, TW, TC, TC) { return _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAXX() (TW, TA, TX, TX) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAXY() (TW, TA, TX, TY) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAXZ() (TW, TA, TX, TZ) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAXW() (TW, TA, TX, TW) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAXA() (TW, TA, TX, TA) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAXB() (TW, TA, TX, TB) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAXC() (TW, TA, TX, TC) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAYX() (TW, TA, TY, TX) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAYY() (TW, TA, TY, TY) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAYZ() (TW, TA, TY, TZ) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAYW() (TW, TA, TY, TW) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAYA() (TW, TA, TY, TA) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAYB() (TW, TA, TY, TB) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAYC() (TW, TA, TY, TC) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAZX() (TW, TA, TZ, TX) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAZY() (TW, TA, TZ, TY) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAZZ() (TW, TA, TZ, TZ) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAZW() (TW, TA, TZ, TW) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAZA() (TW, TA, TZ, TA) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAZB() (TW, TA, TZ, TB) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAZC() (TW, TA, TZ, TC) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAWX() (TW, TA, TW, TX) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAWY() (TW, TA, TW, TY) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAWZ() (TW, TA, TW, TZ) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAWW() (TW, TA, TW, TW) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAWA() (TW, TA, TW, TA) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAWB() (TW, TA, TW, TB) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAWC() (TW, TA, TW, TC) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAAX() (TW, TA, TA, TX) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAAY() (TW, TA, TA, TY) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAAZ() (TW, TA, TA, TZ) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAAW() (TW, TA, TA, TW) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAAA() (TW, TA, TA, TA) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAAB() (TW, TA, TA, TB) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAAC() (TW, TA, TA, TC) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WABX() (TW, TA, TB, TX) { return _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WABY() (TW, TA, TB, TY) { return _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WABZ() (TW, TA, TB, TZ) { return _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WABW() (TW, TA, TB, TW) { return _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WABA() (TW, TA, TB, TA) { return _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WABB() (TW, TA, TB, TB) { return _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WABC() (TW, TA, TB, TC) { return _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WACX() (TW, TA, TC, TX) { return _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WACY() (TW, TA, TC, TY) { return _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WACZ() (TW, TA, TC, TZ) { return _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WACW() (TW, TA, TC, TW) { return _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WACA() (TW, TA, TC, TA) { return _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WACB() (TW, TA, TC, TB) { return _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WACC() (TW, TA, TC, TC) { return _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBXX() (TW, TB, TX, TX) { return _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBXY() (TW, TB, TX, TY) { return _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBXZ() (TW, TB, TX, TZ) { return _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBXW() (TW, TB, TX, TW) { return _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBXA() (TW, TB, TX, TA) { return _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBXB() (TW, TB, TX, TB) { return _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBXC() (TW, TB, TX, TC) { return _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBYX() (TW, TB, TY, TX) { return _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBYY() (TW, TB, TY, TY) { return _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBYZ() (TW, TB, TY, TZ) { return _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBYW() (TW, TB, TY, TW) { return _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBYA() (TW, TB, TY, TA) { return _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBYB() (TW, TB, TY, TB) { return _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBYC() (TW, TB, TY, TC) { return _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBZX() (TW, TB, TZ, TX) { return _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBZY() (TW, TB, TZ, TY) { return _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBZZ() (TW, TB, TZ, TZ) { return _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBZW() (TW, TB, TZ, TW) { return _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBZA() (TW, TB, TZ, TA) { return _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBZB() (TW, TB, TZ, TB) { return _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBZC() (TW, TB, TZ, TC) { return _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBWX() (TW, TB, TW, TX) { return _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBWY() (TW, TB, TW, TY) { return _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBWZ() (TW, TB, TW, TZ) { return _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBWW() (TW, TB, TW, TW) { return _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBWA() (TW, TB, TW, TA) { return _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBWB() (TW, TB, TW, TB) { return _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBWC() (TW, TB, TW, TC) { return _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBAX() (TW, TB, TA, TX) { return _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBAY() (TW, TB, TA, TY) { return _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBAZ() (TW, TB, TA, TZ) { return _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBAW() (TW, TB, TA, TW) { return _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBAA() (TW, TB, TA, TA) { return _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBAB() (TW, TB, TA, TB) { return _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBAC() (TW, TB, TA, TC) { return _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBBX() (TW, TB, TB, TX) { return _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBBY() (TW, TB, TB, TY) { return _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBBZ() (TW, TB, TB, TZ) { return _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBBW() (TW, TB, TB, TW) { return _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBBA() (TW, TB, TB, TA) { return _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBBB() (TW, TB, TB, TB) { return _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBBC() (TW, TB, TB, TC) { return _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBCX() (TW, TB, TC, TX) { return _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBCY() (TW, TB, TC, TY) { return _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBCZ() (TW, TB, TC, TZ) { return _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBCW() (TW, TB, TC, TW) { return _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBCA() (TW, TB, TC, TA) { return _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBCB() (TW, TB, TC, TB) { return _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBCC() (TW, TB, TC, TC) { return _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCXX() (TW, TC, TX, TX) { return _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCXY() (TW, TC, TX, TY) { return _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCXZ() (TW, TC, TX, TZ) { return _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCXW() (TW, TC, TX, TW) { return _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCXA() (TW, TC, TX, TA) { return _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCXB() (TW, TC, TX, TB) { return _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCXC() (TW, TC, TX, TC) { return _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCYX() (TW, TC, TY, TX) { return _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCYY() (TW, TC, TY, TY) { return _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCYZ() (TW, TC, TY, TZ) { return _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCYW() (TW, TC, TY, TW) { return _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCYA() (TW, TC, TY, TA) { return _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCYB() (TW, TC, TY, TB) { return _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCYC() (TW, TC, TY, TC) { return _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCZX() (TW, TC, TZ, TX) { return _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCZY() (TW, TC, TZ, TY) { return _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCZZ() (TW, TC, TZ, TZ) { return _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCZW() (TW, TC, TZ, TW) { return _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCZA() (TW, TC, TZ, TA) { return _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCZB() (TW, TC, TZ, TB) { return _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCZC() (TW, TC, TZ, TC) { return _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCWX() (TW, TC, TW, TX) { return _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCWY() (TW, TC, TW, TY) { return _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCWZ() (TW, TC, TW, TZ) { return _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCWW() (TW, TC, TW, TW) { return _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCWA() (TW, TC, TW, TA) { return _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCWB() (TW, TC, TW, TB) { return _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCWC() (TW, TC, TW, TC) { return _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCAX() (TW, TC, TA, TX) { return _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCAY() (TW, TC, TA, TY) { return _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCAZ() (TW, TC, TA, TZ) { return _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCAW() (TW, TC, TA, TW) { return _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCAA() (TW, TC, TA, TA) { return _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCAB() (TW, TC, TA, TB) { return _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCAC() (TW, TC, TA, TC) { return _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCBX() (TW, TC, TB, TX) { return _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCBY() (TW, TC, TB, TY) { return _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCBZ() (TW, TC, TB, TZ) { return _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCBW() (TW, TC, TB, TW) { return _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCBA() (TW, TC, TB, TA) { return _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCBB() (TW, TC, TB, TB) { return _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCBC() (TW, TC, TB, TC) { return _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCCX() (TW, TC, TC, TX) { return _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCCY() (TW, TC, TC, TY) { return _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCCZ() (TW, TC, TC, TZ) { return _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCCW() (TW, TC, TC, TW) { return _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCCA() (TW, TC, TC, TA) { return _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCCB() (TW, TC, TC, TB) { return _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCCC() (TW, TC, TC, TC) { return _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXXX() (TA, TX, TX, TX) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXXY() (TA, TX, TX, TY) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXXZ() (TA, TX, TX, TZ) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXXW() (TA, TX, TX, TW) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXXA() (TA, TX, TX, TA) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXXB() (TA, TX, TX, TB) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXXC() (TA, TX, TX, TC) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXYX() (TA, TX, TY, TX) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXYY() (TA, TX, TY, TY) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXYZ() (TA, TX, TY, TZ) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXYW() (TA, TX, TY, TW) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXYA() (TA, TX, TY, TA) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXYB() (TA, TX, TY, TB) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXYC() (TA, TX, TY, TC) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXZX() (TA, TX, TZ, TX) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXZY() (TA, TX, TZ, TY) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXZZ() (TA, TX, TZ, TZ) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXZW() (TA, TX, TZ, TW) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXZA() (TA, TX, TZ, TA) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXZB() (TA, TX, TZ, TB) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXZC() (TA, TX, TZ, TC) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXWX() (TA, TX, TW, TX) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXWY() (TA, TX, TW, TY) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXWZ() (TA, TX, TW, TZ) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXWW() (TA, TX, TW, TW) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXWA() (TA, TX, TW, TA) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXWB() (TA, TX, TW, TB) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXWC() (TA, TX, TW, TC) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXAX() (TA, TX, TA, TX) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXAY() (TA, TX, TA, TY) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXAZ() (TA, TX, TA, TZ) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXAW() (TA, TX, TA, TW) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXAA() (TA, TX, TA, TA) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXAB() (TA, TX, TA, TB) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXAC() (TA, TX, TA, TC) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXBX() (TA, TX, TB, TX) { return _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXBY() (TA, TX, TB, TY) { return _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXBZ() (TA, TX, TB, TZ) { return _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXBW() (TA, TX, TB, TW) { return _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXBA() (TA, TX, TB, TA) { return _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXBB() (TA, TX, TB, TB) { return _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXBC() (TA, TX, TB, TC) { return _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXCX() (TA, TX, TC, TX) { return _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXCY() (TA, TX, TC, TY) { return _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXCZ() (TA, TX, TC, TZ) { return _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXCW() (TA, TX, TC, TW) { return _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXCA() (TA, TX, TC, TA) { return _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXCB() (TA, TX, TC, TB) { return _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXCC() (TA, TX, TC, TC) { return _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYXX() (TA, TY, TX, TX) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYXY() (TA, TY, TX, TY) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYXZ() (TA, TY, TX, TZ) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYXW() (TA, TY, TX, TW) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYXA() (TA, TY, TX, TA) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYXB() (TA, TY, TX, TB) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYXC() (TA, TY, TX, TC) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYYX() (TA, TY, TY, TX) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYYY() (TA, TY, TY, TY) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYYZ() (TA, TY, TY, TZ) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYYW() (TA, TY, TY, TW) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYYA() (TA, TY, TY, TA) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYYB() (TA, TY, TY, TB) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYYC() (TA, TY, TY, TC) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYZX() (TA, TY, TZ, TX) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYZY() (TA, TY, TZ, TY) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYZZ() (TA, TY, TZ, TZ) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYZW() (TA, TY, TZ, TW) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYZA() (TA, TY, TZ, TA) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYZB() (TA, TY, TZ, TB) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYZC() (TA, TY, TZ, TC) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYWX() (TA, TY, TW, TX) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYWY() (TA, TY, TW, TY) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYWZ() (TA, TY, TW, TZ) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYWW() (TA, TY, TW, TW) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYWA() (TA, TY, TW, TA) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYWB() (TA, TY, TW, TB) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYWC() (TA, TY, TW, TC) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYAX() (TA, TY, TA, TX) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYAY() (TA, TY, TA, TY) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYAZ() (TA, TY, TA, TZ) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYAW() (TA, TY, TA, TW) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYAA() (TA, TY, TA, TA) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYAB() (TA, TY, TA, TB) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYAC() (TA, TY, TA, TC) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYBX() (TA, TY, TB, TX) { return _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYBY() (TA, TY, TB, TY) { return _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYBZ() (TA, TY, TB, TZ) { return _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYBW() (TA, TY, TB, TW) { return _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYBA() (TA, TY, TB, TA) { return _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYBB() (TA, TY, TB, TB) { return _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYBC() (TA, TY, TB, TC) { return _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYCX() (TA, TY, TC, TX) { return _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYCY() (TA, TY, TC, TY) { return _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYCZ() (TA, TY, TC, TZ) { return _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYCW() (TA, TY, TC, TW) { return _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYCA() (TA, TY, TC, TA) { return _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYCB() (TA, TY, TC, TB) { return _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYCC() (TA, TY, TC, TC) { return _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZXX() (TA, TZ, TX, TX) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZXY() (TA, TZ, TX, TY) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZXZ() (TA, TZ, TX, TZ) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZXW() (TA, TZ, TX, TW) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZXA() (TA, TZ, TX, TA) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZXB() (TA, TZ, TX, TB) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZXC() (TA, TZ, TX, TC) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZYX() (TA, TZ, TY, TX) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZYY() (TA, TZ, TY, TY) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZYZ() (TA, TZ, TY, TZ) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZYW() (TA, TZ, TY, TW) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZYA() (TA, TZ, TY, TA) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZYB() (TA, TZ, TY, TB) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZYC() (TA, TZ, TY, TC) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZZX() (TA, TZ, TZ, TX) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZZY() (TA, TZ, TZ, TY) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZZZ() (TA, TZ, TZ, TZ) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZZW() (TA, TZ, TZ, TW) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZZA() (TA, TZ, TZ, TA) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZZB() (TA, TZ, TZ, TB) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZZC() (TA, TZ, TZ, TC) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZWX() (TA, TZ, TW, TX) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZWY() (TA, TZ, TW, TY) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZWZ() (TA, TZ, TW, TZ) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZWW() (TA, TZ, TW, TW) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZWA() (TA, TZ, TW, TA) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZWB() (TA, TZ, TW, TB) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZWC() (TA, TZ, TW, TC) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZAX() (TA, TZ, TA, TX) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZAY() (TA, TZ, TA, TY) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZAZ() (TA, TZ, TA, TZ) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZAW() (TA, TZ, TA, TW) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZAA() (TA, TZ, TA, TA) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZAB() (TA, TZ, TA, TB) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZAC() (TA, TZ, TA, TC) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZBX() (TA, TZ, TB, TX) { return _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZBY() (TA, TZ, TB, TY) { return _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZBZ() (TA, TZ, TB, TZ) { return _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZBW() (TA, TZ, TB, TW) { return _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZBA() (TA, TZ, TB, TA) { return _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZBB() (TA, TZ, TB, TB) { return _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZBC() (TA, TZ, TB, TC) { return _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZCX() (TA, TZ, TC, TX) { return _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZCY() (TA, TZ, TC, TY) { return _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZCZ() (TA, TZ, TC, TZ) { return _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZCW() (TA, TZ, TC, TW) { return _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZCA() (TA, TZ, TC, TA) { return _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZCB() (TA, TZ, TC, TB) { return _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZCC() (TA, TZ, TC, TC) { return _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWXX() (TA, TW, TX, TX) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWXY() (TA, TW, TX, TY) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWXZ() (TA, TW, TX, TZ) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWXW() (TA, TW, TX, TW) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWXA() (TA, TW, TX, TA) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWXB() (TA, TW, TX, TB) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWXC() (TA, TW, TX, TC) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWYX() (TA, TW, TY, TX) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWYY() (TA, TW, TY, TY) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWYZ() (TA, TW, TY, TZ) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWYW() (TA, TW, TY, TW) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWYA() (TA, TW, TY, TA) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWYB() (TA, TW, TY, TB) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWYC() (TA, TW, TY, TC) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWZX() (TA, TW, TZ, TX) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWZY() (TA, TW, TZ, TY) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWZZ() (TA, TW, TZ, TZ) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWZW() (TA, TW, TZ, TW) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWZA() (TA, TW, TZ, TA) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWZB() (TA, TW, TZ, TB) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWZC() (TA, TW, TZ, TC) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWWX() (TA, TW, TW, TX) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWWY() (TA, TW, TW, TY) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWWZ() (TA, TW, TW, TZ) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWWW() (TA, TW, TW, TW) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWWA() (TA, TW, TW, TA) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWWB() (TA, TW, TW, TB) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWWC() (TA, TW, TW, TC) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWAX() (TA, TW, TA, TX) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWAY() (TA, TW, TA, TY) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWAZ() (TA, TW, TA, TZ) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWAW() (TA, TW, TA, TW) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWAA() (TA, TW, TA, TA) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWAB() (TA, TW, TA, TB) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWAC() (TA, TW, TA, TC) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWBX() (TA, TW, TB, TX) { return _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWBY() (TA, TW, TB, TY) { return _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWBZ() (TA, TW, TB, TZ) { return _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWBW() (TA, TW, TB, TW) { return _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWBA() (TA, TW, TB, TA) { return _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWBB() (TA, TW, TB, TB) { return _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWBC() (TA, TW, TB, TC) { return _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWCX() (TA, TW, TC, TX) { return _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWCY() (TA, TW, TC, TY) { return _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWCZ() (TA, TW, TC, TZ) { return _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWCW() (TA, TW, TC, TW) { return _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWCA() (TA, TW, TC, TA) { return _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWCB() (TA, TW, TC, TB) { return _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWCC() (TA, TW, TC, TC) { return _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAXX() (TA, TA, TX, TX) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAXY() (TA, TA, TX, TY) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAXZ() (TA, TA, TX, TZ) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAXW() (TA, TA, TX, TW) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAXA() (TA, TA, TX, TA) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAXB() (TA, TA, TX, TB) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAXC() (TA, TA, TX, TC) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAYX() (TA, TA, TY, TX) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAYY() (TA, TA, TY, TY) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAYZ() (TA, TA, TY, TZ) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAYW() (TA, TA, TY, TW) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAYA() (TA, TA, TY, TA) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAYB() (TA, TA, TY, TB) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAYC() (TA, TA, TY, TC) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAZX() (TA, TA, TZ, TX) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAZY() (TA, TA, TZ, TY) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAZZ() (TA, TA, TZ, TZ) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAZW() (TA, TA, TZ, TW) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAZA() (TA, TA, TZ, TA) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAZB() (TA, TA, TZ, TB) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAZC() (TA, TA, TZ, TC) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAWX() (TA, TA, TW, TX) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAWY() (TA, TA, TW, TY) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAWZ() (TA, TA, TW, TZ) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAWW() (TA, TA, TW, TW) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAWA() (TA, TA, TW, TA) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAWB() (TA, TA, TW, TB) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAWC() (TA, TA, TW, TC) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAAX() (TA, TA, TA, TX) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAAY() (TA, TA, TA, TY) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAAZ() (TA, TA, TA, TZ) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAAW() (TA, TA, TA, TW) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAAA() (TA, TA, TA, TA) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAAB() (TA, TA, TA, TB) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAAC() (TA, TA, TA, TC) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AABX() (TA, TA, TB, TX) { return _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AABY() (TA, TA, TB, TY) { return _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AABZ() (TA, TA, TB, TZ) { return _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AABW() (TA, TA, TB, TW) { return _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AABA() (TA, TA, TB, TA) { return _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AABB() (TA, TA, TB, TB) { return _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AABC() (TA, TA, TB, TC) { return _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AACX() (TA, TA, TC, TX) { return _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AACY() (TA, TA, TC, TY) { return _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AACZ() (TA, TA, TC, TZ) { return _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AACW() (TA, TA, TC, TW) { return _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AACA() (TA, TA, TC, TA) { return _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AACB() (TA, TA, TC, TB) { return _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AACC() (TA, TA, TC, TC) { return _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABXX() (TA, TB, TX, TX) { return _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABXY() (TA, TB, TX, TY) { return _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABXZ() (TA, TB, TX, TZ) { return _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABXW() (TA, TB, TX, TW) { return _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABXA() (TA, TB, TX, TA) { return _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABXB() (TA, TB, TX, TB) { return _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABXC() (TA, TB, TX, TC) { return _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABYX() (TA, TB, TY, TX) { return _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABYY() (TA, TB, TY, TY) { return _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABYZ() (TA, TB, TY, TZ) { return _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABYW() (TA, TB, TY, TW) { return _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABYA() (TA, TB, TY, TA) { return _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABYB() (TA, TB, TY, TB) { return _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABYC() (TA, TB, TY, TC) { return _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABZX() (TA, TB, TZ, TX) { return _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABZY() (TA, TB, TZ, TY) { return _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABZZ() (TA, TB, TZ, TZ) { return _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABZW() (TA, TB, TZ, TW) { return _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABZA() (TA, TB, TZ, TA) { return _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABZB() (TA, TB, TZ, TB) { return _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABZC() (TA, TB, TZ, TC) { return _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABWX() (TA, TB, TW, TX) { return _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABWY() (TA, TB, TW, TY) { return _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABWZ() (TA, TB, TW, TZ) { return _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABWW() (TA, TB, TW, TW) { return _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABWA() (TA, TB, TW, TA) { return _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABWB() (TA, TB, TW, TB) { return _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABWC() (TA, TB, TW, TC) { return _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABAX() (TA, TB, TA, TX) { return _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABAY() (TA, TB, TA, TY) { return _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABAZ() (TA, TB, TA, TZ) { return _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABAW() (TA, TB, TA, TW) { return _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABAA() (TA, TB, TA, TA) { return _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABAB() (TA, TB, TA, TB) { return _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABAC() (TA, TB, TA, TC) { return _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABBX() (TA, TB, TB, TX) { return _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABBY() (TA, TB, TB, TY) { return _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABBZ() (TA, TB, TB, TZ) { return _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABBW() (TA, TB, TB, TW) { return _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABBA() (TA, TB, TB, TA) { return _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABBB() (TA, TB, TB, TB) { return _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABBC() (TA, TB, TB, TC) { return _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABCX() (TA, TB, TC, TX) { return _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABCY() (TA, TB, TC, TY) { return _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABCZ() (TA, TB, TC, TZ) { return _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABCW() (TA, TB, TC, TW) { return _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABCA() (TA, TB, TC, TA) { return _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABCB() (TA, TB, TC, TB) { return _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABCC() (TA, TB, TC, TC) { return _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACXX() (TA, TC, TX, TX) { return _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACXY() (TA, TC, TX, TY) { return _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACXZ() (TA, TC, TX, TZ) { return _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACXW() (TA, TC, TX, TW) { return _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACXA() (TA, TC, TX, TA) { return _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACXB() (TA, TC, TX, TB) { return _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACXC() (TA, TC, TX, TC) { return _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACYX() (TA, TC, TY, TX) { return _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACYY() (TA, TC, TY, TY) { return _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACYZ() (TA, TC, TY, TZ) { return _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACYW() (TA, TC, TY, TW) { return _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACYA() (TA, TC, TY, TA) { return _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACYB() (TA, TC, TY, TB) { return _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACYC() (TA, TC, TY, TC) { return _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACZX() (TA, TC, TZ, TX) { return _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACZY() (TA, TC, TZ, TY) { return _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACZZ() (TA, TC, TZ, TZ) { return _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACZW() (TA, TC, TZ, TW) { return _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACZA() (TA, TC, TZ, TA) { return _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACZB() (TA, TC, TZ, TB) { return _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACZC() (TA, TC, TZ, TC) { return _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACWX() (TA, TC, TW, TX) { return _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACWY() (TA, TC, TW, TY) { return _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACWZ() (TA, TC, TW, TZ) { return _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACWW() (TA, TC, TW, TW) { return _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACWA() (TA, TC, TW, TA) { return _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACWB() (TA, TC, TW, TB) { return _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACWC() (TA, TC, TW, TC) { return _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACAX() (TA, TC, TA, TX) { return _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACAY() (TA, TC, TA, TY) { return _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACAZ() (TA, TC, TA, TZ) { return _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACAW() (TA, TC, TA, TW) { return _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACAA() (TA, TC, TA, TA) { return _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACAB() (TA, TC, TA, TB) { return _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACAC() (TA, TC, TA, TC) { return _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACBX() (TA, TC, TB, TX) { return _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACBY() (TA, TC, TB, TY) { return _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACBZ() (TA, TC, TB, TZ) { return _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACBW() (TA, TC, TB, TW) { return _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACBA() (TA, TC, TB, TA) { return _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACBB() (TA, TC, TB, TB) { return _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACBC() (TA, TC, TB, TC) { return _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACCX() (TA, TC, TC, TX) { return _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACCY() (TA, TC, TC, TY) { return _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACCZ() (TA, TC, TC, TZ) { return _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACCW() (TA, TC, TC, TW) { return _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACCA() (TA, TC, TC, TA) { return _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACCB() (TA, TC, TC, TB) { return _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACCC() (TA, TC, TC, TC) { return _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXXX() (TB, TX, TX, TX) { return _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXXY() (TB, TX, TX, TY) { return _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXXZ() (TB, TX, TX, TZ) { return _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXXW() (TB, TX, TX, TW) { return _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXXA() (TB, TX, TX, TA) { return _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXXB() (TB, TX, TX, TB) { return _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXXC() (TB, TX, TX, TC) { return _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXYX() (TB, TX, TY, TX) { return _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXYY() (TB, TX, TY, TY) { return _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXYZ() (TB, TX, TY, TZ) { return _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXYW() (TB, TX, TY, TW) { return _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXYA() (TB, TX, TY, TA) { return _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXYB() (TB, TX, TY, TB) { return _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXYC() (TB, TX, TY, TC) { return _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXZX() (TB, TX, TZ, TX) { return _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXZY() (TB, TX, TZ, TY) { return _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXZZ() (TB, TX, TZ, TZ) { return _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXZW() (TB, TX, TZ, TW) { return _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXZA() (TB, TX, TZ, TA) { return _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXZB() (TB, TX, TZ, TB) { return _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXZC() (TB, TX, TZ, TC) { return _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXWX() (TB, TX, TW, TX) { return _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXWY() (TB, TX, TW, TY) { return _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXWZ() (TB, TX, TW, TZ) { return _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXWW() (TB, TX, TW, TW) { return _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXWA() (TB, TX, TW, TA) { return _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXWB() (TB, TX, TW, TB) { return _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXWC() (TB, TX, TW, TC) { return _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXAX() (TB, TX, TA, TX) { return _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXAY() (TB, TX, TA, TY) { return _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXAZ() (TB, TX, TA, TZ) { return _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXAW() (TB, TX, TA, TW) { return _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXAA() (TB, TX, TA, TA) { return _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXAB() (TB, TX, TA, TB) { return _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXAC() (TB, TX, TA, TC) { return _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXBX() (TB, TX, TB, TX) { return _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXBY() (TB, TX, TB, TY) { return _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXBZ() (TB, TX, TB, TZ) { return _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXBW() (TB, TX, TB, TW) { return _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXBA() (TB, TX, TB, TA) { return _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXBB() (TB, TX, TB, TB) { return _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXBC() (TB, TX, TB, TC) { return _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXCX() (TB, TX, TC, TX) { return _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXCY() (TB, TX, TC, TY) { return _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXCZ() (TB, TX, TC, TZ) { return _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXCW() (TB, TX, TC, TW) { return _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXCA() (TB, TX, TC, TA) { return _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXCB() (TB, TX, TC, TB) { return _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXCC() (TB, TX, TC, TC) { return _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYXX() (TB, TY, TX, TX) { return _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYXY() (TB, TY, TX, TY) { return _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYXZ() (TB, TY, TX, TZ) { return _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYXW() (TB, TY, TX, TW) { return _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYXA() (TB, TY, TX, TA) { return _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYXB() (TB, TY, TX, TB) { return _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYXC() (TB, TY, TX, TC) { return _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYYX() (TB, TY, TY, TX) { return _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYYY() (TB, TY, TY, TY) { return _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYYZ() (TB, TY, TY, TZ) { return _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYYW() (TB, TY, TY, TW) { return _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYYA() (TB, TY, TY, TA) { return _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYYB() (TB, TY, TY, TB) { return _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYYC() (TB, TY, TY, TC) { return _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYZX() (TB, TY, TZ, TX) { return _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYZY() (TB, TY, TZ, TY) { return _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYZZ() (TB, TY, TZ, TZ) { return _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYZW() (TB, TY, TZ, TW) { return _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYZA() (TB, TY, TZ, TA) { return _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYZB() (TB, TY, TZ, TB) { return _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYZC() (TB, TY, TZ, TC) { return _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYWX() (TB, TY, TW, TX) { return _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYWY() (TB, TY, TW, TY) { return _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYWZ() (TB, TY, TW, TZ) { return _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYWW() (TB, TY, TW, TW) { return _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYWA() (TB, TY, TW, TA) { return _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYWB() (TB, TY, TW, TB) { return _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYWC() (TB, TY, TW, TC) { return _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYAX() (TB, TY, TA, TX) { return _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYAY() (TB, TY, TA, TY) { return _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYAZ() (TB, TY, TA, TZ) { return _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYAW() (TB, TY, TA, TW) { return _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYAA() (TB, TY, TA, TA) { return _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYAB() (TB, TY, TA, TB) { return _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYAC() (TB, TY, TA, TC) { return _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYBX() (TB, TY, TB, TX) { return _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYBY() (TB, TY, TB, TY) { return _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYBZ() (TB, TY, TB, TZ) { return _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYBW() (TB, TY, TB, TW) { return _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYBA() (TB, TY, TB, TA) { return _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYBB() (TB, TY, TB, TB) { return _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYBC() (TB, TY, TB, TC) { return _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYCX() (TB, TY, TC, TX) { return _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYCY() (TB, TY, TC, TY) { return _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYCZ() (TB, TY, TC, TZ) { return _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYCW() (TB, TY, TC, TW) { return _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYCA() (TB, TY, TC, TA) { return _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYCB() (TB, TY, TC, TB) { return _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYCC() (TB, TY, TC, TC) { return _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZXX() (TB, TZ, TX, TX) { return _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZXY() (TB, TZ, TX, TY) { return _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZXZ() (TB, TZ, TX, TZ) { return _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZXW() (TB, TZ, TX, TW) { return _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZXA() (TB, TZ, TX, TA) { return _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZXB() (TB, TZ, TX, TB) { return _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZXC() (TB, TZ, TX, TC) { return _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZYX() (TB, TZ, TY, TX) { return _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZYY() (TB, TZ, TY, TY) { return _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZYZ() (TB, TZ, TY, TZ) { return _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZYW() (TB, TZ, TY, TW) { return _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZYA() (TB, TZ, TY, TA) { return _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZYB() (TB, TZ, TY, TB) { return _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZYC() (TB, TZ, TY, TC) { return _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZZX() (TB, TZ, TZ, TX) { return _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZZY() (TB, TZ, TZ, TY) { return _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZZZ() (TB, TZ, TZ, TZ) { return _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZZW() (TB, TZ, TZ, TW) { return _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZZA() (TB, TZ, TZ, TA) { return _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZZB() (TB, TZ, TZ, TB) { return _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZZC() (TB, TZ, TZ, TC) { return _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZWX() (TB, TZ, TW, TX) { return _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZWY() (TB, TZ, TW, TY) { return _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZWZ() (TB, TZ, TW, TZ) { return _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZWW() (TB, TZ, TW, TW) { return _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZWA() (TB, TZ, TW, TA) { return _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZWB() (TB, TZ, TW, TB) { return _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZWC() (TB, TZ, TW, TC) { return _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZAX() (TB, TZ, TA, TX) { return _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZAY() (TB, TZ, TA, TY) { return _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZAZ() (TB, TZ, TA, TZ) { return _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZAW() (TB, TZ, TA, TW) { return _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZAA() (TB, TZ, TA, TA) { return _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZAB() (TB, TZ, TA, TB) { return _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZAC() (TB, TZ, TA, TC) { return _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZBX() (TB, TZ, TB, TX) { return _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZBY() (TB, TZ, TB, TY) { return _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZBZ() (TB, TZ, TB, TZ) { return _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZBW() (TB, TZ, TB, TW) { return _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZBA() (TB, TZ, TB, TA) { return _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZBB() (TB, TZ, TB, TB) { return _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZBC() (TB, TZ, TB, TC) { return _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZCX() (TB, TZ, TC, TX) { return _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZCY() (TB, TZ, TC, TY) { return _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZCZ() (TB, TZ, TC, TZ) { return _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZCW() (TB, TZ, TC, TW) { return _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZCA() (TB, TZ, TC, TA) { return _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZCB() (TB, TZ, TC, TB) { return _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZCC() (TB, TZ, TC, TC) { return _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWXX() (TB, TW, TX, TX) { return _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWXY() (TB, TW, TX, TY) { return _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWXZ() (TB, TW, TX, TZ) { return _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWXW() (TB, TW, TX, TW) { return _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWXA() (TB, TW, TX, TA) { return _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWXB() (TB, TW, TX, TB) { return _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWXC() (TB, TW, TX, TC) { return _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWYX() (TB, TW, TY, TX) { return _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWYY() (TB, TW, TY, TY) { return _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWYZ() (TB, TW, TY, TZ) { return _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWYW() (TB, TW, TY, TW) { return _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWYA() (TB, TW, TY, TA) { return _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWYB() (TB, TW, TY, TB) { return _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWYC() (TB, TW, TY, TC) { return _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWZX() (TB, TW, TZ, TX) { return _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWZY() (TB, TW, TZ, TY) { return _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWZZ() (TB, TW, TZ, TZ) { return _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWZW() (TB, TW, TZ, TW) { return _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWZA() (TB, TW, TZ, TA) { return _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWZB() (TB, TW, TZ, TB) { return _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWZC() (TB, TW, TZ, TC) { return _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWWX() (TB, TW, TW, TX) { return _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWWY() (TB, TW, TW, TY) { return _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWWZ() (TB, TW, TW, TZ) { return _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWWW() (TB, TW, TW, TW) { return _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWWA() (TB, TW, TW, TA) { return _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWWB() (TB, TW, TW, TB) { return _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWWC() (TB, TW, TW, TC) { return _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWAX() (TB, TW, TA, TX) { return _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWAY() (TB, TW, TA, TY) { return _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWAZ() (TB, TW, TA, TZ) { return _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWAW() (TB, TW, TA, TW) { return _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWAA() (TB, TW, TA, TA) { return _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWAB() (TB, TW, TA, TB) { return _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWAC() (TB, TW, TA, TC) { return _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWBX() (TB, TW, TB, TX) { return _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWBY() (TB, TW, TB, TY) { return _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWBZ() (TB, TW, TB, TZ) { return _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWBW() (TB, TW, TB, TW) { return _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWBA() (TB, TW, TB, TA) { return _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWBB() (TB, TW, TB, TB) { return _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWBC() (TB, TW, TB, TC) { return _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWCX() (TB, TW, TC, TX) { return _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWCY() (TB, TW, TC, TY) { return _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWCZ() (TB, TW, TC, TZ) { return _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWCW() (TB, TW, TC, TW) { return _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWCA() (TB, TW, TC, TA) { return _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWCB() (TB, TW, TC, TB) { return _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWCC() (TB, TW, TC, TC) { return _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAXX() (TB, TA, TX, TX) { return _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAXY() (TB, TA, TX, TY) { return _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAXZ() (TB, TA, TX, TZ) { return _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAXW() (TB, TA, TX, TW) { return _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAXA() (TB, TA, TX, TA) { return _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAXB() (TB, TA, TX, TB) { return _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAXC() (TB, TA, TX, TC) { return _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAYX() (TB, TA, TY, TX) { return _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAYY() (TB, TA, TY, TY) { return _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAYZ() (TB, TA, TY, TZ) { return _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAYW() (TB, TA, TY, TW) { return _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAYA() (TB, TA, TY, TA) { return _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAYB() (TB, TA, TY, TB) { return _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAYC() (TB, TA, TY, TC) { return _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAZX() (TB, TA, TZ, TX) { return _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAZY() (TB, TA, TZ, TY) { return _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAZZ() (TB, TA, TZ, TZ) { return _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAZW() (TB, TA, TZ, TW) { return _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAZA() (TB, TA, TZ, TA) { return _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAZB() (TB, TA, TZ, TB) { return _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAZC() (TB, TA, TZ, TC) { return _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAWX() (TB, TA, TW, TX) { return _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAWY() (TB, TA, TW, TY) { return _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAWZ() (TB, TA, TW, TZ) { return _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAWW() (TB, TA, TW, TW) { return _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAWA() (TB, TA, TW, TA) { return _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAWB() (TB, TA, TW, TB) { return _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAWC() (TB, TA, TW, TC) { return _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAAX() (TB, TA, TA, TX) { return _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAAY() (TB, TA, TA, TY) { return _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAAZ() (TB, TA, TA, TZ) { return _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAAW() (TB, TA, TA, TW) { return _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAAA() (TB, TA, TA, TA) { return _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAAB() (TB, TA, TA, TB) { return _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAAC() (TB, TA, TA, TC) { return _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BABX() (TB, TA, TB, TX) { return _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BABY() (TB, TA, TB, TY) { return _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BABZ() (TB, TA, TB, TZ) { return _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BABW() (TB, TA, TB, TW) { return _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BABA() (TB, TA, TB, TA) { return _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BABB() (TB, TA, TB, TB) { return _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BABC() (TB, TA, TB, TC) { return _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BACX() (TB, TA, TC, TX) { return _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BACY() (TB, TA, TC, TY) { return _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BACZ() (TB, TA, TC, TZ) { return _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BACW() (TB, TA, TC, TW) { return _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BACA() (TB, TA, TC, TA) { return _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BACB() (TB, TA, TC, TB) { return _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BACC() (TB, TA, TC, TC) { return _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBXX() (TB, TB, TX, TX) { return _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBXY() (TB, TB, TX, TY) { return _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBXZ() (TB, TB, TX, TZ) { return _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBXW() (TB, TB, TX, TW) { return _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBXA() (TB, TB, TX, TA) { return _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBXB() (TB, TB, TX, TB) { return _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBXC() (TB, TB, TX, TC) { return _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBYX() (TB, TB, TY, TX) { return _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBYY() (TB, TB, TY, TY) { return _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBYZ() (TB, TB, TY, TZ) { return _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBYW() (TB, TB, TY, TW) { return _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBYA() (TB, TB, TY, TA) { return _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBYB() (TB, TB, TY, TB) { return _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBYC() (TB, TB, TY, TC) { return _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBZX() (TB, TB, TZ, TX) { return _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBZY() (TB, TB, TZ, TY) { return _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBZZ() (TB, TB, TZ, TZ) { return _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBZW() (TB, TB, TZ, TW) { return _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBZA() (TB, TB, TZ, TA) { return _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBZB() (TB, TB, TZ, TB) { return _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBZC() (TB, TB, TZ, TC) { return _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBWX() (TB, TB, TW, TX) { return _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBWY() (TB, TB, TW, TY) { return _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBWZ() (TB, TB, TW, TZ) { return _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBWW() (TB, TB, TW, TW) { return _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBWA() (TB, TB, TW, TA) { return _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBWB() (TB, TB, TW, TB) { return _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBWC() (TB, TB, TW, TC) { return _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBAX() (TB, TB, TA, TX) { return _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBAY() (TB, TB, TA, TY) { return _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBAZ() (TB, TB, TA, TZ) { return _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBAW() (TB, TB, TA, TW) { return _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBAA() (TB, TB, TA, TA) { return _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBAB() (TB, TB, TA, TB) { return _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBAC() (TB, TB, TA, TC) { return _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBBX() (TB, TB, TB, TX) { return _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBBY() (TB, TB, TB, TY) { return _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBBZ() (TB, TB, TB, TZ) { return _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBBW() (TB, TB, TB, TW) { return _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBBA() (TB, TB, TB, TA) { return _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBBB() (TB, TB, TB, TB) { return _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBBC() (TB, TB, TB, TC) { return _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBCX() (TB, TB, TC, TX) { return _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBCY() (TB, TB, TC, TY) { return _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBCZ() (TB, TB, TC, TZ) { return _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBCW() (TB, TB, TC, TW) { return _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBCA() (TB, TB, TC, TA) { return _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBCB() (TB, TB, TC, TB) { return _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBCC() (TB, TB, TC, TC) { return _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCXX() (TB, TC, TX, TX) { return _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCXY() (TB, TC, TX, TY) { return _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCXZ() (TB, TC, TX, TZ) { return _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCXW() (TB, TC, TX, TW) { return _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCXA() (TB, TC, TX, TA) { return _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCXB() (TB, TC, TX, TB) { return _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCXC() (TB, TC, TX, TC) { return _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCYX() (TB, TC, TY, TX) { return _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCYY() (TB, TC, TY, TY) { return _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCYZ() (TB, TC, TY, TZ) { return _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCYW() (TB, TC, TY, TW) { return _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCYA() (TB, TC, TY, TA) { return _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCYB() (TB, TC, TY, TB) { return _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCYC() (TB, TC, TY, TC) { return _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCZX() (TB, TC, TZ, TX) { return _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCZY() (TB, TC, TZ, TY) { return _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCZZ() (TB, TC, TZ, TZ) { return _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCZW() (TB, TC, TZ, TW) { return _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCZA() (TB, TC, TZ, TA) { return _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCZB() (TB, TC, TZ, TB) { return _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCZC() (TB, TC, TZ, TC) { return _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCWX() (TB, TC, TW, TX) { return _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCWY() (TB, TC, TW, TY) { return _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCWZ() (TB, TC, TW, TZ) { return _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCWW() (TB, TC, TW, TW) { return _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCWA() (TB, TC, TW, TA) { return _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCWB() (TB, TC, TW, TB) { return _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCWC() (TB, TC, TW, TC) { return _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCAX() (TB, TC, TA, TX) { return _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCAY() (TB, TC, TA, TY) { return _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCAZ() (TB, TC, TA, TZ) { return _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCAW() (TB, TC, TA, TW) { return _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCAA() (TB, TC, TA, TA) { return _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCAB() (TB, TC, TA, TB) { return _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCAC() (TB, TC, TA, TC) { return _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCBX() (TB, TC, TB, TX) { return _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCBY() (TB, TC, TB, TY) { return _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCBZ() (TB, TC, TB, TZ) { return _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCBW() (TB, TC, TB, TW) { return _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCBA() (TB, TC, TB, TA) { return _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCBB() (TB, TC, TB, TB) { return _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCBC() (TB, TC, TB, TC) { return _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCCX() (TB, TC, TC, TX) { return _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCCY() (TB, TC, TC, TY) { return _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCCZ() (TB, TC, TC, TZ) { return _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCCW() (TB, TC, TC, TW) { return _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCCA() (TB, TC, TC, TA) { return _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCCB() (TB, TC, TC, TB) { return _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCCC() (TB, TC, TC, TC) { return _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXXX() (TC, TX, TX, TX) { return _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXXY() (TC, TX, TX, TY) { return _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXXZ() (TC, TX, TX, TZ) { return _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXXW() (TC, TX, TX, TW) { return _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXXA() (TC, TX, TX, TA) { return _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXXB() (TC, TX, TX, TB) { return _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXXC() (TC, TX, TX, TC) { return _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXYX() (TC, TX, TY, TX) { return _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXYY() (TC, TX, TY, TY) { return _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXYZ() (TC, TX, TY, TZ) { return _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXYW() (TC, TX, TY, TW) { return _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXYA() (TC, TX, TY, TA) { return _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXYB() (TC, TX, TY, TB) { return _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXYC() (TC, TX, TY, TC) { return _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXZX() (TC, TX, TZ, TX) { return _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXZY() (TC, TX, TZ, TY) { return _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXZZ() (TC, TX, TZ, TZ) { return _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXZW() (TC, TX, TZ, TW) { return _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXZA() (TC, TX, TZ, TA) { return _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXZB() (TC, TX, TZ, TB) { return _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXZC() (TC, TX, TZ, TC) { return _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXWX() (TC, TX, TW, TX) { return _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXWY() (TC, TX, TW, TY) { return _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXWZ() (TC, TX, TW, TZ) { return _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXWW() (TC, TX, TW, TW) { return _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXWA() (TC, TX, TW, TA) { return _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXWB() (TC, TX, TW, TB) { return _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXWC() (TC, TX, TW, TC) { return _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXAX() (TC, TX, TA, TX) { return _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXAY() (TC, TX, TA, TY) { return _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXAZ() (TC, TX, TA, TZ) { return _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXAW() (TC, TX, TA, TW) { return _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXAA() (TC, TX, TA, TA) { return _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXAB() (TC, TX, TA, TB) { return _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXAC() (TC, TX, TA, TC) { return _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXBX() (TC, TX, TB, TX) { return _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXBY() (TC, TX, TB, TY) { return _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXBZ() (TC, TX, TB, TZ) { return _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXBW() (TC, TX, TB, TW) { return _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXBA() (TC, TX, TB, TA) { return _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXBB() (TC, TX, TB, TB) { return _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXBC() (TC, TX, TB, TC) { return _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXCX() (TC, TX, TC, TX) { return _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXCY() (TC, TX, TC, TY) { return _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXCZ() (TC, TX, TC, TZ) { return _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXCW() (TC, TX, TC, TW) { return _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXCA() (TC, TX, TC, TA) { return _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXCB() (TC, TX, TC, TB) { return _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXCC() (TC, TX, TC, TC) { return _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYXX() (TC, TY, TX, TX) { return _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYXY() (TC, TY, TX, TY) { return _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYXZ() (TC, TY, TX, TZ) { return _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYXW() (TC, TY, TX, TW) { return _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYXA() (TC, TY, TX, TA) { return _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYXB() (TC, TY, TX, TB) { return _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYXC() (TC, TY, TX, TC) { return _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYYX() (TC, TY, TY, TX) { return _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYYY() (TC, TY, TY, TY) { return _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYYZ() (TC, TY, TY, TZ) { return _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYYW() (TC, TY, TY, TW) { return _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYYA() (TC, TY, TY, TA) { return _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYYB() (TC, TY, TY, TB) { return _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYYC() (TC, TY, TY, TC) { return _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYZX() (TC, TY, TZ, TX) { return _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYZY() (TC, TY, TZ, TY) { return _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYZZ() (TC, TY, TZ, TZ) { return _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYZW() (TC, TY, TZ, TW) { return _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYZA() (TC, TY, TZ, TA) { return _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYZB() (TC, TY, TZ, TB) { return _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYZC() (TC, TY, TZ, TC) { return _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYWX() (TC, TY, TW, TX) { return _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYWY() (TC, TY, TW, TY) { return _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYWZ() (TC, TY, TW, TZ) { return _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYWW() (TC, TY, TW, TW) { return _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYWA() (TC, TY, TW, TA) { return _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYWB() (TC, TY, TW, TB) { return _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYWC() (TC, TY, TW, TC) { return _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYAX() (TC, TY, TA, TX) { return _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYAY() (TC, TY, TA, TY) { return _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYAZ() (TC, TY, TA, TZ) { return _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYAW() (TC, TY, TA, TW) { return _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYAA() (TC, TY, TA, TA) { return _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYAB() (TC, TY, TA, TB) { return _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYAC() (TC, TY, TA, TC) { return _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYBX() (TC, TY, TB, TX) { return _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYBY() (TC, TY, TB, TY) { return _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYBZ() (TC, TY, TB, TZ) { return _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYBW() (TC, TY, TB, TW) { return _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYBA() (TC, TY, TB, TA) { return _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYBB() (TC, TY, TB, TB) { return _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYBC() (TC, TY, TB, TC) { return _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYCX() (TC, TY, TC, TX) { return _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYCY() (TC, TY, TC, TY) { return _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYCZ() (TC, TY, TC, TZ) { return _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYCW() (TC, TY, TC, TW) { return _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYCA() (TC, TY, TC, TA) { return _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYCB() (TC, TY, TC, TB) { return _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYCC() (TC, TY, TC, TC) { return _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZXX() (TC, TZ, TX, TX) { return _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZXY() (TC, TZ, TX, TY) { return _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZXZ() (TC, TZ, TX, TZ) { return _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZXW() (TC, TZ, TX, TW) { return _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZXA() (TC, TZ, TX, TA) { return _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZXB() (TC, TZ, TX, TB) { return _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZXC() (TC, TZ, TX, TC) { return _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZYX() (TC, TZ, TY, TX) { return _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZYY() (TC, TZ, TY, TY) { return _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZYZ() (TC, TZ, TY, TZ) { return _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZYW() (TC, TZ, TY, TW) { return _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZYA() (TC, TZ, TY, TA) { return _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZYB() (TC, TZ, TY, TB) { return _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZYC() (TC, TZ, TY, TC) { return _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZZX() (TC, TZ, TZ, TX) { return _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZZY() (TC, TZ, TZ, TY) { return _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZZZ() (TC, TZ, TZ, TZ) { return _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZZW() (TC, TZ, TZ, TW) { return _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZZA() (TC, TZ, TZ, TA) { return _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZZB() (TC, TZ, TZ, TB) { return _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZZC() (TC, TZ, TZ, TC) { return _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZWX() (TC, TZ, TW, TX) { return _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZWY() (TC, TZ, TW, TY) { return _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZWZ() (TC, TZ, TW, TZ) { return _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZWW() (TC, TZ, TW, TW) { return _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZWA() (TC, TZ, TW, TA) { return _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZWB() (TC, TZ, TW, TB) { return _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZWC() (TC, TZ, TW, TC) { return _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZAX() (TC, TZ, TA, TX) { return _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZAY() (TC, TZ, TA, TY) { return _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZAZ() (TC, TZ, TA, TZ) { return _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZAW() (TC, TZ, TA, TW) { return _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZAA() (TC, TZ, TA, TA) { return _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZAB() (TC, TZ, TA, TB) { return _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZAC() (TC, TZ, TA, TC) { return _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZBX() (TC, TZ, TB, TX) { return _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZBY() (TC, TZ, TB, TY) { return _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZBZ() (TC, TZ, TB, TZ) { return _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZBW() (TC, TZ, TB, TW) { return _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZBA() (TC, TZ, TB, TA) { return _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZBB() (TC, TZ, TB, TB) { return _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZBC() (TC, TZ, TB, TC) { return _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZCX() (TC, TZ, TC, TX) { return _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZCY() (TC, TZ, TC, TY) { return _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZCZ() (TC, TZ, TC, TZ) { return _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZCW() (TC, TZ, TC, TW) { return _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZCA() (TC, TZ, TC, TA) { return _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZCB() (TC, TZ, TC, TB) { return _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZCC() (TC, TZ, TC, TC) { return _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWXX() (TC, TW, TX, TX) { return _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWXY() (TC, TW, TX, TY) { return _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWXZ() (TC, TW, TX, TZ) { return _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWXW() (TC, TW, TX, TW) { return _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWXA() (TC, TW, TX, TA) { return _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWXB() (TC, TW, TX, TB) { return _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWXC() (TC, TW, TX, TC) { return _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWYX() (TC, TW, TY, TX) { return _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWYY() (TC, TW, TY, TY) { return _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWYZ() (TC, TW, TY, TZ) { return _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWYW() (TC, TW, TY, TW) { return _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWYA() (TC, TW, TY, TA) { return _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWYB() (TC, TW, TY, TB) { return _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWYC() (TC, TW, TY, TC) { return _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWZX() (TC, TW, TZ, TX) { return _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWZY() (TC, TW, TZ, TY) { return _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWZZ() (TC, TW, TZ, TZ) { return _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWZW() (TC, TW, TZ, TW) { return _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWZA() (TC, TW, TZ, TA) { return _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWZB() (TC, TW, TZ, TB) { return _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWZC() (TC, TW, TZ, TC) { return _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWWX() (TC, TW, TW, TX) { return _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWWY() (TC, TW, TW, TY) { return _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWWZ() (TC, TW, TW, TZ) { return _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWWW() (TC, TW, TW, TW) { return _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWWA() (TC, TW, TW, TA) { return _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWWB() (TC, TW, TW, TB) { return _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWWC() (TC, TW, TW, TC) { return _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWAX() (TC, TW, TA, TX) { return _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWAY() (TC, TW, TA, TY) { return _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWAZ() (TC, TW, TA, TZ) { return _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWAW() (TC, TW, TA, TW) { return _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWAA() (TC, TW, TA, TA) { return _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWAB() (TC, TW, TA, TB) { return _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWAC() (TC, TW, TA, TC) { return _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWBX() (TC, TW, TB, TX) { return _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWBY() (TC, TW, TB, TY) { return _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWBZ() (TC, TW, TB, TZ) { return _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWBW() (TC, TW, TB, TW) { return _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWBA() (TC, TW, TB, TA) { return _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWBB() (TC, TW, TB, TB) { return _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWBC() (TC, TW, TB, TC) { return _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWCX() (TC, TW, TC, TX) { return _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWCY() (TC, TW, TC, TY) { return _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWCZ() (TC, TW, TC, TZ) { return _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWCW() (TC, TW, TC, TW) { return _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWCA() (TC, TW, TC, TA) { return _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWCB() (TC, TW, TC, TB) { return _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWCC() (TC, TW, TC, TC) { return _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAXX() (TC, TA, TX, TX) { return _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAXY() (TC, TA, TX, TY) { return _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAXZ() (TC, TA, TX, TZ) { return _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAXW() (TC, TA, TX, TW) { return _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAXA() (TC, TA, TX, TA) { return _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAXB() (TC, TA, TX, TB) { return _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAXC() (TC, TA, TX, TC) { return _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAYX() (TC, TA, TY, TX) { return _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAYY() (TC, TA, TY, TY) { return _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAYZ() (TC, TA, TY, TZ) { return _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAYW() (TC, TA, TY, TW) { return _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAYA() (TC, TA, TY, TA) { return _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAYB() (TC, TA, TY, TB) { return _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAYC() (TC, TA, TY, TC) { return _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAZX() (TC, TA, TZ, TX) { return _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAZY() (TC, TA, TZ, TY) { return _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAZZ() (TC, TA, TZ, TZ) { return _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAZW() (TC, TA, TZ, TW) { return _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAZA() (TC, TA, TZ, TA) { return _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAZB() (TC, TA, TZ, TB) { return _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAZC() (TC, TA, TZ, TC) { return _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAWX() (TC, TA, TW, TX) { return _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAWY() (TC, TA, TW, TY) { return _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAWZ() (TC, TA, TW, TZ) { return _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAWW() (TC, TA, TW, TW) { return _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAWA() (TC, TA, TW, TA) { return _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAWB() (TC, TA, TW, TB) { return _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAWC() (TC, TA, TW, TC) { return _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAAX() (TC, TA, TA, TX) { return _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAAY() (TC, TA, TA, TY) { return _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAAZ() (TC, TA, TA, TZ) { return _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAAW() (TC, TA, TA, TW) { return _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAAA() (TC, TA, TA, TA) { return _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAAB() (TC, TA, TA, TB) { return _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAAC() (TC, TA, TA, TC) { return _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CABX() (TC, TA, TB, TX) { return _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CABY() (TC, TA, TB, TY) { return _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CABZ() (TC, TA, TB, TZ) { return _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CABW() (TC, TA, TB, TW) { return _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CABA() (TC, TA, TB, TA) { return _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CABB() (TC, TA, TB, TB) { return _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CABC() (TC, TA, TB, TC) { return _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CACX() (TC, TA, TC, TX) { return _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CACY() (TC, TA, TC, TY) { return _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CACZ() (TC, TA, TC, TZ) { return _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CACW() (TC, TA, TC, TW) { return _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CACA() (TC, TA, TC, TA) { return _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CACB() (TC, TA, TC, TB) { return _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CACC() (TC, TA, TC, TC) { return _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBXX() (TC, TB, TX, TX) { return _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBXY() (TC, TB, TX, TY) { return _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBXZ() (TC, TB, TX, TZ) { return _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBXW() (TC, TB, TX, TW) { return _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBXA() (TC, TB, TX, TA) { return _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBXB() (TC, TB, TX, TB) { return _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBXC() (TC, TB, TX, TC) { return _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBYX() (TC, TB, TY, TX) { return _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBYY() (TC, TB, TY, TY) { return _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBYZ() (TC, TB, TY, TZ) { return _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBYW() (TC, TB, TY, TW) { return _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBYA() (TC, TB, TY, TA) { return _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBYB() (TC, TB, TY, TB) { return _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBYC() (TC, TB, TY, TC) { return _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBZX() (TC, TB, TZ, TX) { return _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBZY() (TC, TB, TZ, TY) { return _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBZZ() (TC, TB, TZ, TZ) { return _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBZW() (TC, TB, TZ, TW) { return _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBZA() (TC, TB, TZ, TA) { return _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBZB() (TC, TB, TZ, TB) { return _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBZC() (TC, TB, TZ, TC) { return _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBWX() (TC, TB, TW, TX) { return _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBWY() (TC, TB, TW, TY) { return _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBWZ() (TC, TB, TW, TZ) { return _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBWW() (TC, TB, TW, TW) { return _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBWA() (TC, TB, TW, TA) { return _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBWB() (TC, TB, TW, TB) { return _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBWC() (TC, TB, TW, TC) { return _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBAX() (TC, TB, TA, TX) { return _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBAY() (TC, TB, TA, TY) { return _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBAZ() (TC, TB, TA, TZ) { return _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBAW() (TC, TB, TA, TW) { return _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBAA() (TC, TB, TA, TA) { return _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBAB() (TC, TB, TA, TB) { return _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBAC() (TC, TB, TA, TC) { return _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBBX() (TC, TB, TB, TX) { return _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBBY() (TC, TB, TB, TY) { return _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBBZ() (TC, TB, TB, TZ) { return _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBBW() (TC, TB, TB, TW) { return _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBBA() (TC, TB, TB, TA) { return _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBBB() (TC, TB, TB, TB) { return _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBBC() (TC, TB, TB, TC) { return _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBCX() (TC, TB, TC, TX) { return _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBCY() (TC, TB, TC, TY) { return _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBCZ() (TC, TB, TC, TZ) { return _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBCW() (TC, TB, TC, TW) { return _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBCA() (TC, TB, TC, TA) { return _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBCB() (TC, TB, TC, TB) { return _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBCC() (TC, TB, TC, TC) { return _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCXX() (TC, TC, TX, TX) { return _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCXY() (TC, TC, TX, TY) { return _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCXZ() (TC, TC, TX, TZ) { return _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCXW() (TC, TC, TX, TW) { return _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCXA() (TC, TC, TX, TA) { return _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCXB() (TC, TC, TX, TB) { return _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCXC() (TC, TC, TX, TC) { return _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCYX() (TC, TC, TY, TX) { return _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCYY() (TC, TC, TY, TY) { return _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCYZ() (TC, TC, TY, TZ) { return _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCYW() (TC, TC, TY, TW) { return _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCYA() (TC, TC, TY, TA) { return _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCYB() (TC, TC, TY, TB) { return _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCYC() (TC, TC, TY, TC) { return _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCZX() (TC, TC, TZ, TX) { return _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCZY() (TC, TC, TZ, TY) { return _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCZZ() (TC, TC, TZ, TZ) { return _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCZW() (TC, TC, TZ, TW) { return _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCZA() (TC, TC, TZ, TA) { return _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCZB() (TC, TC, TZ, TB) { return _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCZC() (TC, TC, TZ, TC) { return _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCWX() (TC, TC, TW, TX) { return _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCWY() (TC, TC, TW, TY) { return _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCWZ() (TC, TC, TW, TZ) { return _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCWW() (TC, TC, TW, TW) { return _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCWA() (TC, TC, TW, TA) { return _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCWB() (TC, TC, TW, TB) { return _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCWC() (TC, TC, TW, TC) { return _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCAX() (TC, TC, TA, TX) { return _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCAY() (TC, TC, TA, TY) { return _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCAZ() (TC, TC, TA, TZ) { return _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCAW() (TC, TC, TA, TW) { return _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCAA() (TC, TC, TA, TA) { return _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCAB() (TC, TC, TA, TB) { return _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCAC() (TC, TC, TA, TC) { return _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCBX() (TC, TC, TB, TX) { return _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCBY() (TC, TC, TB, TY) { return _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCBZ() (TC, TC, TB, TZ) { return _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCBW() (TC, TC, TB, TW) { return _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCBA() (TC, TC, TB, TA) { return _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCBB() (TC, TC, TB, TB) { return _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCBC() (TC, TC, TB, TC) { return _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCCX() (TC, TC, TC, TX) { return _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCCY() (TC, TC, TC, TY) { return _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCCZ() (TC, TC, TC, TZ) { return _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCCW() (TC, TC, TC, TW) { return _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCCA() (TC, TC, TC, TA) { return _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCCB() (TC, TC, TC, TB) { return _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value() }
func (_v *XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCCC() (TC, TC, TC, TC) { return _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value() }
