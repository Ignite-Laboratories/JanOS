// Code generated by 'internal/generators/letter'; DO NOT EDIT.
//go:generate go run ./internal/generators/letter -pkg std -name XYZWABC -nameL xyzwabc -cmpts X,Y,Z,W,A,B,C -cmptsL x,y,z,w,a,b,c -out xyzwabc.go
package std

import (
	"core/sys/name/format"
	"core/sys/num"
	"core/sys/num/bounded"
	"core/sys/support"
	"fmt"
)

// XYZWABC is a 7D vector of like-typed bounded.Number components.
//
// NOTE: If you'd like asymmetric types, please see XYZWABCTyped.
type XYZWABC[T num.Primitive] = XYZWABCTyped[T, T, T, T, T, T, T]

// XYZWABCTyped is a 7D vector of asymmetrically typed bounded.Number components.
//
// NOTE: If you'd like symmetric types, please see XYZWABC.
type XYZWABCTyped[TX num.Primitive, TY num.Primitive, TZ num.Primitive, TW num.Primitive, TA num.Primitive, TB num.Primitive, TC num.Primitive] struct {
	Entity
	X bounded.Number[TX]
	Y bounded.Number[TY]
	Z bounded.Number[TZ]
	W bounded.Number[TW]
	A bounded.Number[TA]
	B bounded.Number[TB]
	C bounded.Number[TC]
}

func NewXYZWABC[T num.Primitive]() XYZWABC[T] {
	return XYZWABC[T](NewXYZWABCTyped[T, T, T, T, T, T, T]())
}

func NewXYZWABCTyped[TX num.Primitive, TY num.Primitive, TZ num.Primitive, TW num.Primitive, TA num.Primitive, TB num.Primitive, TC num.Primitive]() XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC] {
	minX := num.MinValue[TX]()
	maxX := num.MaxValue[TX]()
	minY := num.MinValue[TY]()
	maxY := num.MaxValue[TY]()
	minZ := num.MinValue[TZ]()
	maxZ := num.MaxValue[TZ]()
	minW := num.MinValue[TW]()
	maxW := num.MaxValue[TW]()
	minA := num.MinValue[TA]()
	maxA := num.MaxValue[TA]()
	minB := num.MinValue[TB]()
	maxB := num.MaxValue[TB]()
	minC := num.MinValue[TC]()
	maxC := num.MaxValue[TC]()

	c := XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]{}
	c.Entity = NewEntity[format.Default]()
	c.SetBoundaries(minX, maxX, minY, maxY, minZ, maxZ, minW, maxW, minA, maxA, minB, maxB, minC, maxC)
	return c
}

func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) String() string {
	if support.AllSameTypes(TX(0), TY(0), TZ(0), TW(0), TA(0), TB(0), TC(0)) {
		return fmt.Sprintf("xyzwabc[%T].{%v, %v, %v, %v, %v, %v, %v}(%v)", TX(0), _v.X.ValueString(), _v.Y.ValueString(), _v.Z.ValueString(), _v.W.ValueString(), _v.A.ValueString(), _v.B.ValueString(), _v.C.ValueString(), _v.GivenName.Name)
	}
	return fmt.Sprintf("xyzwabc[%T, %T, %T, %T, %T, %T, %T].{%v, %v, %v, %v, %v, %v, %v}(%v)", TX(0), TY(0), TZ(0), TW(0), TA(0), TB(0), TC(0), _v.X.ValueString(), _v.Y.ValueString(), _v.Z.ValueString(), _v.W.ValueString(), _v.A.ValueString(), _v.B.ValueString(), _v.C.ValueString(), _v.GivenName.Name)
}

func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) Set(x TX, y TY, z TZ, w TW, a TA, b TB, c TC) XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC] {
	_ = _v.X.Set(x)
	_ = _v.Y.Set(y)
	_ = _v.Z.Set(z)
	_ = _v.W.Set(w)
	_ = _v.A.Set(a)
	_ = _v.B.Set(b)
	_ = _v.C.Set(c)
	return _v
}

func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) SetClamp(clamp bool) XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC] {
	_v.X.Clamp = clamp
	_v.Y.Clamp = clamp
	_v.Z.Clamp = clamp
	_v.W.Clamp = clamp
	_v.A.Clamp = clamp
	_v.B.Clamp = clamp
	_v.C.Clamp = clamp
	return _v
}

func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) SetBoundaries(minX, maxX TX, minY, maxY TY, minZ, maxZ TZ, minW, maxW TW, minA, maxA TA, minB, maxB TB, minC, maxC TC) XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC] {
	_ = _v.X.SetBoundaries(minX, maxX)
	_ = _v.Y.SetBoundaries(minY, maxY)
	_ = _v.Z.SetBoundaries(minZ, maxZ)
	_ = _v.W.SetBoundaries(minW, maxW)
	_ = _v.A.SetBoundaries(minA, maxA)
	_ = _v.B.SetBoundaries(minB, maxB)
	_ = _v.C.SetBoundaries(minC, maxC)
	return _v
}

/**
Swizzling

	NOTE: This is a regular expression to find and replace swizzle functions into a one-liner if the auto formatter ever kicks in

	Find -
	func \((.*?)\) ([A-Z]{2,4})\(\) \((.*?)\)[ ]*\{[\n\t ]*return(.*?)[\n\t ]*\}

	Replace -
	func ($1) $2() ($3) { return$4 }
*/

func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XX() (TX, TX) { return _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XY() (TX, TY) { return _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZ() (TX, TZ) { return _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XW() (TX, TW) { return _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XA() (TX, TA) { return _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XB() (TX, TB) { return _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XC() (TX, TC) { return _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YX() (TY, TX) { return _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YY() (TY, TY) { return _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZ() (TY, TZ) { return _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YW() (TY, TW) { return _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YA() (TY, TA) { return _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YB() (TY, TB) { return _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YC() (TY, TC) { return _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZX() (TZ, TX) { return _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZY() (TZ, TY) { return _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZ() (TZ, TZ) { return _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZW() (TZ, TW) { return _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZA() (TZ, TA) { return _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZB() (TZ, TB) { return _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZC() (TZ, TC) { return _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WX() (TW, TX) { return _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WY() (TW, TY) { return _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZ() (TW, TZ) { return _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WW() (TW, TW) { return _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WA() (TW, TA) { return _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WB() (TW, TB) { return _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WC() (TW, TC) { return _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AX() (TA, TX) { return _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AY() (TA, TY) { return _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZ() (TA, TZ) { return _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AW() (TA, TW) { return _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AA() (TA, TA) { return _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AB() (TA, TB) { return _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AC() (TA, TC) { return _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BX() (TB, TX) { return _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BY() (TB, TY) { return _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZ() (TB, TZ) { return _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BW() (TB, TW) { return _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BA() (TB, TA) { return _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BB() (TB, TB) { return _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BC() (TB, TC) { return _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CX() (TC, TX) { return _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CY() (TC, TY) { return _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZ() (TC, TZ) { return _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CW() (TC, TW) { return _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CA() (TC, TA) { return _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CB() (TC, TB) { return _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CC() (TC, TC) { return _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXX() (TX, TX, TX) { return _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXY() (TX, TX, TY) { return _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXZ() (TX, TX, TZ) { return _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXW() (TX, TX, TW) { return _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXA() (TX, TX, TA) { return _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXB() (TX, TX, TB) { return _v.X.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXC() (TX, TX, TC) { return _v.X.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYX() (TX, TY, TX) { return _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYY() (TX, TY, TY) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYZ() (TX, TY, TZ) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYW() (TX, TY, TW) { return _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYA() (TX, TY, TA) { return _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYB() (TX, TY, TB) { return _v.X.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYC() (TX, TY, TC) { return _v.X.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZX() (TX, TZ, TX) { return _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZY() (TX, TZ, TY) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZZ() (TX, TZ, TZ) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZW() (TX, TZ, TW) { return _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZA() (TX, TZ, TA) { return _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZB() (TX, TZ, TB) { return _v.X.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZC() (TX, TZ, TC) { return _v.X.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWX() (TX, TW, TX) { return _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWY() (TX, TW, TY) { return _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWZ() (TX, TW, TZ) { return _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWW() (TX, TW, TW) { return _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWA() (TX, TW, TA) { return _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWB() (TX, TW, TB) { return _v.X.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWC() (TX, TW, TC) { return _v.X.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAX() (TX, TA, TX) { return _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAY() (TX, TA, TY) { return _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAZ() (TX, TA, TZ) { return _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAW() (TX, TA, TW) { return _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAA() (TX, TA, TA) { return _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAB() (TX, TA, TB) { return _v.X.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAC() (TX, TA, TC) { return _v.X.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBX() (TX, TB, TX) { return _v.X.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBY() (TX, TB, TY) { return _v.X.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBZ() (TX, TB, TZ) { return _v.X.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBW() (TX, TB, TW) { return _v.X.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBA() (TX, TB, TA) { return _v.X.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBB() (TX, TB, TB) { return _v.X.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBC() (TX, TB, TC) { return _v.X.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCX() (TX, TC, TX) { return _v.X.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCY() (TX, TC, TY) { return _v.X.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCZ() (TX, TC, TZ) { return _v.X.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCW() (TX, TC, TW) { return _v.X.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCA() (TX, TC, TA) { return _v.X.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCB() (TX, TC, TB) { return _v.X.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCC() (TX, TC, TC) { return _v.X.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXX() (TY, TX, TX) { return _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXY() (TY, TX, TY) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXZ() (TY, TX, TZ) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXW() (TY, TX, TW) { return _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXA() (TY, TX, TA) { return _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXB() (TY, TX, TB) { return _v.Y.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXC() (TY, TX, TC) { return _v.Y.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYX() (TY, TY, TX) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYY() (TY, TY, TY) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYZ() (TY, TY, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYW() (TY, TY, TW) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYA() (TY, TY, TA) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYB() (TY, TY, TB) { return _v.Y.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYC() (TY, TY, TC) { return _v.Y.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZX() (TY, TZ, TX) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZY() (TY, TZ, TY) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZZ() (TY, TZ, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZW() (TY, TZ, TW) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZA() (TY, TZ, TA) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZB() (TY, TZ, TB) { return _v.Y.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZC() (TY, TZ, TC) { return _v.Y.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWX() (TY, TW, TX) { return _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWY() (TY, TW, TY) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWZ() (TY, TW, TZ) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWW() (TY, TW, TW) { return _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWA() (TY, TW, TA) { return _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWB() (TY, TW, TB) { return _v.Y.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWC() (TY, TW, TC) { return _v.Y.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAX() (TY, TA, TX) { return _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAY() (TY, TA, TY) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAZ() (TY, TA, TZ) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAW() (TY, TA, TW) { return _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAA() (TY, TA, TA) { return _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAB() (TY, TA, TB) { return _v.Y.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAC() (TY, TA, TC) { return _v.Y.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBX() (TY, TB, TX) { return _v.Y.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBY() (TY, TB, TY) { return _v.Y.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBZ() (TY, TB, TZ) { return _v.Y.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBW() (TY, TB, TW) { return _v.Y.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBA() (TY, TB, TA) { return _v.Y.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBB() (TY, TB, TB) { return _v.Y.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBC() (TY, TB, TC) { return _v.Y.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCX() (TY, TC, TX) { return _v.Y.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCY() (TY, TC, TY) { return _v.Y.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCZ() (TY, TC, TZ) { return _v.Y.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCW() (TY, TC, TW) { return _v.Y.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCA() (TY, TC, TA) { return _v.Y.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCB() (TY, TC, TB) { return _v.Y.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCC() (TY, TC, TC) { return _v.Y.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXX() (TZ, TX, TX) { return _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXY() (TZ, TX, TY) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXZ() (TZ, TX, TZ) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXW() (TZ, TX, TW) { return _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXA() (TZ, TX, TA) { return _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXB() (TZ, TX, TB) { return _v.Z.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXC() (TZ, TX, TC) { return _v.Z.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYX() (TZ, TY, TX) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYY() (TZ, TY, TY) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYZ() (TZ, TY, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYW() (TZ, TY, TW) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYA() (TZ, TY, TA) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYB() (TZ, TY, TB) { return _v.Z.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYC() (TZ, TY, TC) { return _v.Z.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZX() (TZ, TZ, TX) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZY() (TZ, TZ, TY) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZZ() (TZ, TZ, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZW() (TZ, TZ, TW) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZA() (TZ, TZ, TA) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZB() (TZ, TZ, TB) { return _v.Z.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZC() (TZ, TZ, TC) { return _v.Z.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWX() (TZ, TW, TX) { return _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWY() (TZ, TW, TY) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWZ() (TZ, TW, TZ) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWW() (TZ, TW, TW) { return _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWA() (TZ, TW, TA) { return _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWB() (TZ, TW, TB) { return _v.Z.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWC() (TZ, TW, TC) { return _v.Z.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAX() (TZ, TA, TX) { return _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAY() (TZ, TA, TY) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAZ() (TZ, TA, TZ) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAW() (TZ, TA, TW) { return _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAA() (TZ, TA, TA) { return _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAB() (TZ, TA, TB) { return _v.Z.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAC() (TZ, TA, TC) { return _v.Z.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBX() (TZ, TB, TX) { return _v.Z.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBY() (TZ, TB, TY) { return _v.Z.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBZ() (TZ, TB, TZ) { return _v.Z.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBW() (TZ, TB, TW) { return _v.Z.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBA() (TZ, TB, TA) { return _v.Z.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBB() (TZ, TB, TB) { return _v.Z.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBC() (TZ, TB, TC) { return _v.Z.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCX() (TZ, TC, TX) { return _v.Z.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCY() (TZ, TC, TY) { return _v.Z.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCZ() (TZ, TC, TZ) { return _v.Z.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCW() (TZ, TC, TW) { return _v.Z.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCA() (TZ, TC, TA) { return _v.Z.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCB() (TZ, TC, TB) { return _v.Z.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCC() (TZ, TC, TC) { return _v.Z.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXX() (TW, TX, TX) { return _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXY() (TW, TX, TY) { return _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXZ() (TW, TX, TZ) { return _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXW() (TW, TX, TW) { return _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXA() (TW, TX, TA) { return _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXB() (TW, TX, TB) { return _v.W.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXC() (TW, TX, TC) { return _v.W.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYX() (TW, TY, TX) { return _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYY() (TW, TY, TY) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYZ() (TW, TY, TZ) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYW() (TW, TY, TW) { return _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYA() (TW, TY, TA) { return _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYB() (TW, TY, TB) { return _v.W.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYC() (TW, TY, TC) { return _v.W.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZX() (TW, TZ, TX) { return _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZY() (TW, TZ, TY) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZZ() (TW, TZ, TZ) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZW() (TW, TZ, TW) { return _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZA() (TW, TZ, TA) { return _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZB() (TW, TZ, TB) { return _v.W.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZC() (TW, TZ, TC) { return _v.W.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWX() (TW, TW, TX) { return _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWY() (TW, TW, TY) { return _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWZ() (TW, TW, TZ) { return _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWW() (TW, TW, TW) { return _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWA() (TW, TW, TA) { return _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWB() (TW, TW, TB) { return _v.W.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWC() (TW, TW, TC) { return _v.W.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAX() (TW, TA, TX) { return _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAY() (TW, TA, TY) { return _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAZ() (TW, TA, TZ) { return _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAW() (TW, TA, TW) { return _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAA() (TW, TA, TA) { return _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAB() (TW, TA, TB) { return _v.W.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAC() (TW, TA, TC) { return _v.W.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBX() (TW, TB, TX) { return _v.W.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBY() (TW, TB, TY) { return _v.W.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBZ() (TW, TB, TZ) { return _v.W.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBW() (TW, TB, TW) { return _v.W.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBA() (TW, TB, TA) { return _v.W.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBB() (TW, TB, TB) { return _v.W.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBC() (TW, TB, TC) { return _v.W.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCX() (TW, TC, TX) { return _v.W.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCY() (TW, TC, TY) { return _v.W.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCZ() (TW, TC, TZ) { return _v.W.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCW() (TW, TC, TW) { return _v.W.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCA() (TW, TC, TA) { return _v.W.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCB() (TW, TC, TB) { return _v.W.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCC() (TW, TC, TC) { return _v.W.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXX() (TA, TX, TX) { return _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXY() (TA, TX, TY) { return _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXZ() (TA, TX, TZ) { return _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXW() (TA, TX, TW) { return _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXA() (TA, TX, TA) { return _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXB() (TA, TX, TB) { return _v.A.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXC() (TA, TX, TC) { return _v.A.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYX() (TA, TY, TX) { return _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYY() (TA, TY, TY) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYZ() (TA, TY, TZ) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYW() (TA, TY, TW) { return _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYA() (TA, TY, TA) { return _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYB() (TA, TY, TB) { return _v.A.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYC() (TA, TY, TC) { return _v.A.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZX() (TA, TZ, TX) { return _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZY() (TA, TZ, TY) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZZ() (TA, TZ, TZ) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZW() (TA, TZ, TW) { return _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZA() (TA, TZ, TA) { return _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZB() (TA, TZ, TB) { return _v.A.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZC() (TA, TZ, TC) { return _v.A.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWX() (TA, TW, TX) { return _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWY() (TA, TW, TY) { return _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWZ() (TA, TW, TZ) { return _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWW() (TA, TW, TW) { return _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWA() (TA, TW, TA) { return _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWB() (TA, TW, TB) { return _v.A.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWC() (TA, TW, TC) { return _v.A.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAX() (TA, TA, TX) { return _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAY() (TA, TA, TY) { return _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAZ() (TA, TA, TZ) { return _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAW() (TA, TA, TW) { return _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAA() (TA, TA, TA) { return _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAB() (TA, TA, TB) { return _v.A.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAC() (TA, TA, TC) { return _v.A.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABX() (TA, TB, TX) { return _v.A.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABY() (TA, TB, TY) { return _v.A.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABZ() (TA, TB, TZ) { return _v.A.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABW() (TA, TB, TW) { return _v.A.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABA() (TA, TB, TA) { return _v.A.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABB() (TA, TB, TB) { return _v.A.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABC() (TA, TB, TC) { return _v.A.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACX() (TA, TC, TX) { return _v.A.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACY() (TA, TC, TY) { return _v.A.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACZ() (TA, TC, TZ) { return _v.A.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACW() (TA, TC, TW) { return _v.A.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACA() (TA, TC, TA) { return _v.A.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACB() (TA, TC, TB) { return _v.A.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACC() (TA, TC, TC) { return _v.A.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXX() (TB, TX, TX) { return _v.B.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXY() (TB, TX, TY) { return _v.B.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXZ() (TB, TX, TZ) { return _v.B.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXW() (TB, TX, TW) { return _v.B.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXA() (TB, TX, TA) { return _v.B.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXB() (TB, TX, TB) { return _v.B.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXC() (TB, TX, TC) { return _v.B.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYX() (TB, TY, TX) { return _v.B.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYY() (TB, TY, TY) { return _v.B.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYZ() (TB, TY, TZ) { return _v.B.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYW() (TB, TY, TW) { return _v.B.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYA() (TB, TY, TA) { return _v.B.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYB() (TB, TY, TB) { return _v.B.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYC() (TB, TY, TC) { return _v.B.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZX() (TB, TZ, TX) { return _v.B.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZY() (TB, TZ, TY) { return _v.B.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZZ() (TB, TZ, TZ) { return _v.B.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZW() (TB, TZ, TW) { return _v.B.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZA() (TB, TZ, TA) { return _v.B.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZB() (TB, TZ, TB) { return _v.B.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZC() (TB, TZ, TC) { return _v.B.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWX() (TB, TW, TX) { return _v.B.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWY() (TB, TW, TY) { return _v.B.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWZ() (TB, TW, TZ) { return _v.B.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWW() (TB, TW, TW) { return _v.B.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWA() (TB, TW, TA) { return _v.B.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWB() (TB, TW, TB) { return _v.B.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWC() (TB, TW, TC) { return _v.B.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAX() (TB, TA, TX) { return _v.B.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAY() (TB, TA, TY) { return _v.B.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAZ() (TB, TA, TZ) { return _v.B.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAW() (TB, TA, TW) { return _v.B.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAA() (TB, TA, TA) { return _v.B.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAB() (TB, TA, TB) { return _v.B.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAC() (TB, TA, TC) { return _v.B.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBX() (TB, TB, TX) { return _v.B.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBY() (TB, TB, TY) { return _v.B.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBZ() (TB, TB, TZ) { return _v.B.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBW() (TB, TB, TW) { return _v.B.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBA() (TB, TB, TA) { return _v.B.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBB() (TB, TB, TB) { return _v.B.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBC() (TB, TB, TC) { return _v.B.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCX() (TB, TC, TX) { return _v.B.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCY() (TB, TC, TY) { return _v.B.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCZ() (TB, TC, TZ) { return _v.B.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCW() (TB, TC, TW) { return _v.B.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCA() (TB, TC, TA) { return _v.B.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCB() (TB, TC, TB) { return _v.B.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCC() (TB, TC, TC) { return _v.B.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXX() (TC, TX, TX) { return _v.C.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXY() (TC, TX, TY) { return _v.C.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXZ() (TC, TX, TZ) { return _v.C.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXW() (TC, TX, TW) { return _v.C.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXA() (TC, TX, TA) { return _v.C.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXB() (TC, TX, TB) { return _v.C.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXC() (TC, TX, TC) { return _v.C.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYX() (TC, TY, TX) { return _v.C.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYY() (TC, TY, TY) { return _v.C.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYZ() (TC, TY, TZ) { return _v.C.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYW() (TC, TY, TW) { return _v.C.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYA() (TC, TY, TA) { return _v.C.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYB() (TC, TY, TB) { return _v.C.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYC() (TC, TY, TC) { return _v.C.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZX() (TC, TZ, TX) { return _v.C.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZY() (TC, TZ, TY) { return _v.C.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZZ() (TC, TZ, TZ) { return _v.C.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZW() (TC, TZ, TW) { return _v.C.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZA() (TC, TZ, TA) { return _v.C.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZB() (TC, TZ, TB) { return _v.C.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZC() (TC, TZ, TC) { return _v.C.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWX() (TC, TW, TX) { return _v.C.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWY() (TC, TW, TY) { return _v.C.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWZ() (TC, TW, TZ) { return _v.C.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWW() (TC, TW, TW) { return _v.C.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWA() (TC, TW, TA) { return _v.C.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWB() (TC, TW, TB) { return _v.C.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWC() (TC, TW, TC) { return _v.C.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAX() (TC, TA, TX) { return _v.C.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAY() (TC, TA, TY) { return _v.C.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAZ() (TC, TA, TZ) { return _v.C.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAW() (TC, TA, TW) { return _v.C.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAA() (TC, TA, TA) { return _v.C.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAB() (TC, TA, TB) { return _v.C.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAC() (TC, TA, TC) { return _v.C.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBX() (TC, TB, TX) { return _v.C.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBY() (TC, TB, TY) { return _v.C.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBZ() (TC, TB, TZ) { return _v.C.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBW() (TC, TB, TW) { return _v.C.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBA() (TC, TB, TA) { return _v.C.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBB() (TC, TB, TB) { return _v.C.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBC() (TC, TB, TC) { return _v.C.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCX() (TC, TC, TX) { return _v.C.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCY() (TC, TC, TY) { return _v.C.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCZ() (TC, TC, TZ) { return _v.C.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCW() (TC, TC, TW) { return _v.C.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCA() (TC, TC, TA) { return _v.C.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCB() (TC, TC, TB) { return _v.C.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCC() (TC, TC, TC) { return _v.C.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXXX() (TX, TX, TX, TX) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXXY() (TX, TX, TX, TY) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXXZ() (TX, TX, TX, TZ) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXXW() (TX, TX, TX, TW) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXXA() (TX, TX, TX, TA) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXXB() (TX, TX, TX, TB) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXXC() (TX, TX, TX, TC) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXYX() (TX, TX, TY, TX) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXYY() (TX, TX, TY, TY) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXYZ() (TX, TX, TY, TZ) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXYW() (TX, TX, TY, TW) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXYA() (TX, TX, TY, TA) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXYB() (TX, TX, TY, TB) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXYC() (TX, TX, TY, TC) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXZX() (TX, TX, TZ, TX) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXZY() (TX, TX, TZ, TY) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXZZ() (TX, TX, TZ, TZ) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXZW() (TX, TX, TZ, TW) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXZA() (TX, TX, TZ, TA) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXZB() (TX, TX, TZ, TB) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXZC() (TX, TX, TZ, TC) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXWX() (TX, TX, TW, TX) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXWY() (TX, TX, TW, TY) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXWZ() (TX, TX, TW, TZ) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXWW() (TX, TX, TW, TW) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXWA() (TX, TX, TW, TA) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXWB() (TX, TX, TW, TB) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXWC() (TX, TX, TW, TC) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXAX() (TX, TX, TA, TX) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXAY() (TX, TX, TA, TY) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXAZ() (TX, TX, TA, TZ) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXAW() (TX, TX, TA, TW) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXAA() (TX, TX, TA, TA) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXAB() (TX, TX, TA, TB) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXAC() (TX, TX, TA, TC) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXBX() (TX, TX, TB, TX) { return _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXBY() (TX, TX, TB, TY) { return _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXBZ() (TX, TX, TB, TZ) { return _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXBW() (TX, TX, TB, TW) { return _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXBA() (TX, TX, TB, TA) { return _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXBB() (TX, TX, TB, TB) { return _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXBC() (TX, TX, TB, TC) { return _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXCX() (TX, TX, TC, TX) { return _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXCY() (TX, TX, TC, TY) { return _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXCZ() (TX, TX, TC, TZ) { return _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXCW() (TX, TX, TC, TW) { return _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXCA() (TX, TX, TC, TA) { return _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXCB() (TX, TX, TC, TB) { return _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXCC() (TX, TX, TC, TC) { return _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYXX() (TX, TY, TX, TX) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYXY() (TX, TY, TX, TY) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYXZ() (TX, TY, TX, TZ) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYXW() (TX, TY, TX, TW) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYXA() (TX, TY, TX, TA) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYXB() (TX, TY, TX, TB) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYXC() (TX, TY, TX, TC) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYYX() (TX, TY, TY, TX) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYYY() (TX, TY, TY, TY) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYYZ() (TX, TY, TY, TZ) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYYW() (TX, TY, TY, TW) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYYA() (TX, TY, TY, TA) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYYB() (TX, TY, TY, TB) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYYC() (TX, TY, TY, TC) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYZX() (TX, TY, TZ, TX) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYZY() (TX, TY, TZ, TY) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYZZ() (TX, TY, TZ, TZ) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYZW() (TX, TY, TZ, TW) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYZA() (TX, TY, TZ, TA) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYZB() (TX, TY, TZ, TB) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYZC() (TX, TY, TZ, TC) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYWX() (TX, TY, TW, TX) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYWY() (TX, TY, TW, TY) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYWZ() (TX, TY, TW, TZ) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYWW() (TX, TY, TW, TW) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYWA() (TX, TY, TW, TA) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYWB() (TX, TY, TW, TB) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYWC() (TX, TY, TW, TC) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYAX() (TX, TY, TA, TX) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYAY() (TX, TY, TA, TY) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYAZ() (TX, TY, TA, TZ) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYAW() (TX, TY, TA, TW) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYAA() (TX, TY, TA, TA) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYAB() (TX, TY, TA, TB) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYAC() (TX, TY, TA, TC) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYBX() (TX, TY, TB, TX) { return _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYBY() (TX, TY, TB, TY) { return _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYBZ() (TX, TY, TB, TZ) { return _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYBW() (TX, TY, TB, TW) { return _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYBA() (TX, TY, TB, TA) { return _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYBB() (TX, TY, TB, TB) { return _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYBC() (TX, TY, TB, TC) { return _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYCX() (TX, TY, TC, TX) { return _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYCY() (TX, TY, TC, TY) { return _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYCZ() (TX, TY, TC, TZ) { return _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYCW() (TX, TY, TC, TW) { return _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYCA() (TX, TY, TC, TA) { return _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYCB() (TX, TY, TC, TB) { return _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYCC() (TX, TY, TC, TC) { return _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZXX() (TX, TZ, TX, TX) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZXY() (TX, TZ, TX, TY) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZXZ() (TX, TZ, TX, TZ) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZXW() (TX, TZ, TX, TW) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZXA() (TX, TZ, TX, TA) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZXB() (TX, TZ, TX, TB) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZXC() (TX, TZ, TX, TC) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZYX() (TX, TZ, TY, TX) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZYY() (TX, TZ, TY, TY) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZYZ() (TX, TZ, TY, TZ) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZYW() (TX, TZ, TY, TW) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZYA() (TX, TZ, TY, TA) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZYB() (TX, TZ, TY, TB) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZYC() (TX, TZ, TY, TC) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZZX() (TX, TZ, TZ, TX) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZZY() (TX, TZ, TZ, TY) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZZZ() (TX, TZ, TZ, TZ) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZZW() (TX, TZ, TZ, TW) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZZA() (TX, TZ, TZ, TA) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZZB() (TX, TZ, TZ, TB) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZZC() (TX, TZ, TZ, TC) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZWX() (TX, TZ, TW, TX) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZWY() (TX, TZ, TW, TY) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZWZ() (TX, TZ, TW, TZ) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZWW() (TX, TZ, TW, TW) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZWA() (TX, TZ, TW, TA) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZWB() (TX, TZ, TW, TB) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZWC() (TX, TZ, TW, TC) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZAX() (TX, TZ, TA, TX) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZAY() (TX, TZ, TA, TY) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZAZ() (TX, TZ, TA, TZ) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZAW() (TX, TZ, TA, TW) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZAA() (TX, TZ, TA, TA) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZAB() (TX, TZ, TA, TB) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZAC() (TX, TZ, TA, TC) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZBX() (TX, TZ, TB, TX) { return _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZBY() (TX, TZ, TB, TY) { return _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZBZ() (TX, TZ, TB, TZ) { return _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZBW() (TX, TZ, TB, TW) { return _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZBA() (TX, TZ, TB, TA) { return _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZBB() (TX, TZ, TB, TB) { return _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZBC() (TX, TZ, TB, TC) { return _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZCX() (TX, TZ, TC, TX) { return _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZCY() (TX, TZ, TC, TY) { return _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZCZ() (TX, TZ, TC, TZ) { return _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZCW() (TX, TZ, TC, TW) { return _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZCA() (TX, TZ, TC, TA) { return _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZCB() (TX, TZ, TC, TB) { return _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZCC() (TX, TZ, TC, TC) { return _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWXX() (TX, TW, TX, TX) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWXY() (TX, TW, TX, TY) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWXZ() (TX, TW, TX, TZ) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWXW() (TX, TW, TX, TW) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWXA() (TX, TW, TX, TA) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWXB() (TX, TW, TX, TB) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWXC() (TX, TW, TX, TC) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWYX() (TX, TW, TY, TX) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWYY() (TX, TW, TY, TY) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWYZ() (TX, TW, TY, TZ) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWYW() (TX, TW, TY, TW) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWYA() (TX, TW, TY, TA) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWYB() (TX, TW, TY, TB) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWYC() (TX, TW, TY, TC) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWZX() (TX, TW, TZ, TX) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWZY() (TX, TW, TZ, TY) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWZZ() (TX, TW, TZ, TZ) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWZW() (TX, TW, TZ, TW) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWZA() (TX, TW, TZ, TA) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWZB() (TX, TW, TZ, TB) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWZC() (TX, TW, TZ, TC) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWWX() (TX, TW, TW, TX) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWWY() (TX, TW, TW, TY) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWWZ() (TX, TW, TW, TZ) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWWW() (TX, TW, TW, TW) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWWA() (TX, TW, TW, TA) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWWB() (TX, TW, TW, TB) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWWC() (TX, TW, TW, TC) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWAX() (TX, TW, TA, TX) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWAY() (TX, TW, TA, TY) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWAZ() (TX, TW, TA, TZ) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWAW() (TX, TW, TA, TW) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWAA() (TX, TW, TA, TA) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWAB() (TX, TW, TA, TB) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWAC() (TX, TW, TA, TC) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWBX() (TX, TW, TB, TX) { return _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWBY() (TX, TW, TB, TY) { return _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWBZ() (TX, TW, TB, TZ) { return _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWBW() (TX, TW, TB, TW) { return _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWBA() (TX, TW, TB, TA) { return _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWBB() (TX, TW, TB, TB) { return _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWBC() (TX, TW, TB, TC) { return _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWCX() (TX, TW, TC, TX) { return _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWCY() (TX, TW, TC, TY) { return _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWCZ() (TX, TW, TC, TZ) { return _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWCW() (TX, TW, TC, TW) { return _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWCA() (TX, TW, TC, TA) { return _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWCB() (TX, TW, TC, TB) { return _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWCC() (TX, TW, TC, TC) { return _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAXX() (TX, TA, TX, TX) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAXY() (TX, TA, TX, TY) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAXZ() (TX, TA, TX, TZ) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAXW() (TX, TA, TX, TW) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAXA() (TX, TA, TX, TA) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAXB() (TX, TA, TX, TB) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAXC() (TX, TA, TX, TC) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAYX() (TX, TA, TY, TX) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAYY() (TX, TA, TY, TY) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAYZ() (TX, TA, TY, TZ) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAYW() (TX, TA, TY, TW) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAYA() (TX, TA, TY, TA) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAYB() (TX, TA, TY, TB) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAYC() (TX, TA, TY, TC) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAZX() (TX, TA, TZ, TX) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAZY() (TX, TA, TZ, TY) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAZZ() (TX, TA, TZ, TZ) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAZW() (TX, TA, TZ, TW) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAZA() (TX, TA, TZ, TA) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAZB() (TX, TA, TZ, TB) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAZC() (TX, TA, TZ, TC) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAWX() (TX, TA, TW, TX) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAWY() (TX, TA, TW, TY) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAWZ() (TX, TA, TW, TZ) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAWW() (TX, TA, TW, TW) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAWA() (TX, TA, TW, TA) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAWB() (TX, TA, TW, TB) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAWC() (TX, TA, TW, TC) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAAX() (TX, TA, TA, TX) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAAY() (TX, TA, TA, TY) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAAZ() (TX, TA, TA, TZ) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAAW() (TX, TA, TA, TW) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAAA() (TX, TA, TA, TA) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAAB() (TX, TA, TA, TB) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAAC() (TX, TA, TA, TC) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XABX() (TX, TA, TB, TX) { return _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XABY() (TX, TA, TB, TY) { return _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XABZ() (TX, TA, TB, TZ) { return _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XABW() (TX, TA, TB, TW) { return _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XABA() (TX, TA, TB, TA) { return _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XABB() (TX, TA, TB, TB) { return _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XABC() (TX, TA, TB, TC) { return _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XACX() (TX, TA, TC, TX) { return _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XACY() (TX, TA, TC, TY) { return _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XACZ() (TX, TA, TC, TZ) { return _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XACW() (TX, TA, TC, TW) { return _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XACA() (TX, TA, TC, TA) { return _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XACB() (TX, TA, TC, TB) { return _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XACC() (TX, TA, TC, TC) { return _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBXX() (TX, TB, TX, TX) { return _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBXY() (TX, TB, TX, TY) { return _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBXZ() (TX, TB, TX, TZ) { return _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBXW() (TX, TB, TX, TW) { return _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBXA() (TX, TB, TX, TA) { return _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBXB() (TX, TB, TX, TB) { return _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBXC() (TX, TB, TX, TC) { return _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBYX() (TX, TB, TY, TX) { return _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBYY() (TX, TB, TY, TY) { return _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBYZ() (TX, TB, TY, TZ) { return _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBYW() (TX, TB, TY, TW) { return _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBYA() (TX, TB, TY, TA) { return _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBYB() (TX, TB, TY, TB) { return _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBYC() (TX, TB, TY, TC) { return _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBZX() (TX, TB, TZ, TX) { return _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBZY() (TX, TB, TZ, TY) { return _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBZZ() (TX, TB, TZ, TZ) { return _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBZW() (TX, TB, TZ, TW) { return _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBZA() (TX, TB, TZ, TA) { return _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBZB() (TX, TB, TZ, TB) { return _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBZC() (TX, TB, TZ, TC) { return _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBWX() (TX, TB, TW, TX) { return _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBWY() (TX, TB, TW, TY) { return _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBWZ() (TX, TB, TW, TZ) { return _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBWW() (TX, TB, TW, TW) { return _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBWA() (TX, TB, TW, TA) { return _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBWB() (TX, TB, TW, TB) { return _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBWC() (TX, TB, TW, TC) { return _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBAX() (TX, TB, TA, TX) { return _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBAY() (TX, TB, TA, TY) { return _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBAZ() (TX, TB, TA, TZ) { return _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBAW() (TX, TB, TA, TW) { return _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBAA() (TX, TB, TA, TA) { return _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBAB() (TX, TB, TA, TB) { return _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBAC() (TX, TB, TA, TC) { return _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBBX() (TX, TB, TB, TX) { return _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBBY() (TX, TB, TB, TY) { return _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBBZ() (TX, TB, TB, TZ) { return _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBBW() (TX, TB, TB, TW) { return _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBBA() (TX, TB, TB, TA) { return _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBBB() (TX, TB, TB, TB) { return _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBBC() (TX, TB, TB, TC) { return _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBCX() (TX, TB, TC, TX) { return _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBCY() (TX, TB, TC, TY) { return _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBCZ() (TX, TB, TC, TZ) { return _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBCW() (TX, TB, TC, TW) { return _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBCA() (TX, TB, TC, TA) { return _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBCB() (TX, TB, TC, TB) { return _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBCC() (TX, TB, TC, TC) { return _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCXX() (TX, TC, TX, TX) { return _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCXY() (TX, TC, TX, TY) { return _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCXZ() (TX, TC, TX, TZ) { return _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCXW() (TX, TC, TX, TW) { return _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCXA() (TX, TC, TX, TA) { return _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCXB() (TX, TC, TX, TB) { return _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCXC() (TX, TC, TX, TC) { return _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCYX() (TX, TC, TY, TX) { return _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCYY() (TX, TC, TY, TY) { return _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCYZ() (TX, TC, TY, TZ) { return _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCYW() (TX, TC, TY, TW) { return _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCYA() (TX, TC, TY, TA) { return _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCYB() (TX, TC, TY, TB) { return _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCYC() (TX, TC, TY, TC) { return _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCZX() (TX, TC, TZ, TX) { return _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCZY() (TX, TC, TZ, TY) { return _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCZZ() (TX, TC, TZ, TZ) { return _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCZW() (TX, TC, TZ, TW) { return _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCZA() (TX, TC, TZ, TA) { return _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCZB() (TX, TC, TZ, TB) { return _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCZC() (TX, TC, TZ, TC) { return _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCWX() (TX, TC, TW, TX) { return _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCWY() (TX, TC, TW, TY) { return _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCWZ() (TX, TC, TW, TZ) { return _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCWW() (TX, TC, TW, TW) { return _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCWA() (TX, TC, TW, TA) { return _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCWB() (TX, TC, TW, TB) { return _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCWC() (TX, TC, TW, TC) { return _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCAX() (TX, TC, TA, TX) { return _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCAY() (TX, TC, TA, TY) { return _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCAZ() (TX, TC, TA, TZ) { return _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCAW() (TX, TC, TA, TW) { return _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCAA() (TX, TC, TA, TA) { return _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCAB() (TX, TC, TA, TB) { return _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCAC() (TX, TC, TA, TC) { return _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCBX() (TX, TC, TB, TX) { return _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCBY() (TX, TC, TB, TY) { return _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCBZ() (TX, TC, TB, TZ) { return _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCBW() (TX, TC, TB, TW) { return _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCBA() (TX, TC, TB, TA) { return _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCBB() (TX, TC, TB, TB) { return _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCBC() (TX, TC, TB, TC) { return _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCCX() (TX, TC, TC, TX) { return _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCCY() (TX, TC, TC, TY) { return _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCCZ() (TX, TC, TC, TZ) { return _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCCW() (TX, TC, TC, TW) { return _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCCA() (TX, TC, TC, TA) { return _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCCB() (TX, TC, TC, TB) { return _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCCC() (TX, TC, TC, TC) { return _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXXX() (TY, TX, TX, TX) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXXY() (TY, TX, TX, TY) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXXZ() (TY, TX, TX, TZ) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXXW() (TY, TX, TX, TW) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXXA() (TY, TX, TX, TA) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXXB() (TY, TX, TX, TB) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXXC() (TY, TX, TX, TC) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXYX() (TY, TX, TY, TX) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXYY() (TY, TX, TY, TY) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXYZ() (TY, TX, TY, TZ) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXYW() (TY, TX, TY, TW) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXYA() (TY, TX, TY, TA) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXYB() (TY, TX, TY, TB) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXYC() (TY, TX, TY, TC) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXZX() (TY, TX, TZ, TX) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXZY() (TY, TX, TZ, TY) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXZZ() (TY, TX, TZ, TZ) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXZW() (TY, TX, TZ, TW) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXZA() (TY, TX, TZ, TA) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXZB() (TY, TX, TZ, TB) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXZC() (TY, TX, TZ, TC) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXWX() (TY, TX, TW, TX) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXWY() (TY, TX, TW, TY) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXWZ() (TY, TX, TW, TZ) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXWW() (TY, TX, TW, TW) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXWA() (TY, TX, TW, TA) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXWB() (TY, TX, TW, TB) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXWC() (TY, TX, TW, TC) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXAX() (TY, TX, TA, TX) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXAY() (TY, TX, TA, TY) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXAZ() (TY, TX, TA, TZ) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXAW() (TY, TX, TA, TW) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXAA() (TY, TX, TA, TA) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXAB() (TY, TX, TA, TB) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXAC() (TY, TX, TA, TC) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXBX() (TY, TX, TB, TX) { return _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXBY() (TY, TX, TB, TY) { return _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXBZ() (TY, TX, TB, TZ) { return _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXBW() (TY, TX, TB, TW) { return _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXBA() (TY, TX, TB, TA) { return _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXBB() (TY, TX, TB, TB) { return _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXBC() (TY, TX, TB, TC) { return _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXCX() (TY, TX, TC, TX) { return _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXCY() (TY, TX, TC, TY) { return _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXCZ() (TY, TX, TC, TZ) { return _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXCW() (TY, TX, TC, TW) { return _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXCA() (TY, TX, TC, TA) { return _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXCB() (TY, TX, TC, TB) { return _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXCC() (TY, TX, TC, TC) { return _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYXX() (TY, TY, TX, TX) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYXY() (TY, TY, TX, TY) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYXZ() (TY, TY, TX, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYXW() (TY, TY, TX, TW) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYXA() (TY, TY, TX, TA) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYXB() (TY, TY, TX, TB) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYXC() (TY, TY, TX, TC) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYYX() (TY, TY, TY, TX) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYYY() (TY, TY, TY, TY) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYYZ() (TY, TY, TY, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYYW() (TY, TY, TY, TW) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYYA() (TY, TY, TY, TA) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYYB() (TY, TY, TY, TB) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYYC() (TY, TY, TY, TC) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYZX() (TY, TY, TZ, TX) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYZY() (TY, TY, TZ, TY) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYZZ() (TY, TY, TZ, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYZW() (TY, TY, TZ, TW) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYZA() (TY, TY, TZ, TA) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYZB() (TY, TY, TZ, TB) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYZC() (TY, TY, TZ, TC) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYWX() (TY, TY, TW, TX) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYWY() (TY, TY, TW, TY) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYWZ() (TY, TY, TW, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYWW() (TY, TY, TW, TW) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYWA() (TY, TY, TW, TA) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYWB() (TY, TY, TW, TB) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYWC() (TY, TY, TW, TC) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYAX() (TY, TY, TA, TX) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYAY() (TY, TY, TA, TY) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYAZ() (TY, TY, TA, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYAW() (TY, TY, TA, TW) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYAA() (TY, TY, TA, TA) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYAB() (TY, TY, TA, TB) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYAC() (TY, TY, TA, TC) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYBX() (TY, TY, TB, TX) { return _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYBY() (TY, TY, TB, TY) { return _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYBZ() (TY, TY, TB, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYBW() (TY, TY, TB, TW) { return _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYBA() (TY, TY, TB, TA) { return _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYBB() (TY, TY, TB, TB) { return _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYBC() (TY, TY, TB, TC) { return _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYCX() (TY, TY, TC, TX) { return _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYCY() (TY, TY, TC, TY) { return _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYCZ() (TY, TY, TC, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYCW() (TY, TY, TC, TW) { return _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYCA() (TY, TY, TC, TA) { return _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYCB() (TY, TY, TC, TB) { return _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYCC() (TY, TY, TC, TC) { return _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZXX() (TY, TZ, TX, TX) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZXY() (TY, TZ, TX, TY) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZXZ() (TY, TZ, TX, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZXW() (TY, TZ, TX, TW) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZXA() (TY, TZ, TX, TA) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZXB() (TY, TZ, TX, TB) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZXC() (TY, TZ, TX, TC) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZYX() (TY, TZ, TY, TX) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZYY() (TY, TZ, TY, TY) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZYZ() (TY, TZ, TY, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZYW() (TY, TZ, TY, TW) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZYA() (TY, TZ, TY, TA) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZYB() (TY, TZ, TY, TB) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZYC() (TY, TZ, TY, TC) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZZX() (TY, TZ, TZ, TX) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZZY() (TY, TZ, TZ, TY) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZZZ() (TY, TZ, TZ, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZZW() (TY, TZ, TZ, TW) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZZA() (TY, TZ, TZ, TA) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZZB() (TY, TZ, TZ, TB) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZZC() (TY, TZ, TZ, TC) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZWX() (TY, TZ, TW, TX) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZWY() (TY, TZ, TW, TY) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZWZ() (TY, TZ, TW, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZWW() (TY, TZ, TW, TW) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZWA() (TY, TZ, TW, TA) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZWB() (TY, TZ, TW, TB) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZWC() (TY, TZ, TW, TC) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZAX() (TY, TZ, TA, TX) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZAY() (TY, TZ, TA, TY) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZAZ() (TY, TZ, TA, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZAW() (TY, TZ, TA, TW) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZAA() (TY, TZ, TA, TA) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZAB() (TY, TZ, TA, TB) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZAC() (TY, TZ, TA, TC) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZBX() (TY, TZ, TB, TX) { return _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZBY() (TY, TZ, TB, TY) { return _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZBZ() (TY, TZ, TB, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZBW() (TY, TZ, TB, TW) { return _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZBA() (TY, TZ, TB, TA) { return _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZBB() (TY, TZ, TB, TB) { return _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZBC() (TY, TZ, TB, TC) { return _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZCX() (TY, TZ, TC, TX) { return _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZCY() (TY, TZ, TC, TY) { return _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZCZ() (TY, TZ, TC, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZCW() (TY, TZ, TC, TW) { return _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZCA() (TY, TZ, TC, TA) { return _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZCB() (TY, TZ, TC, TB) { return _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZCC() (TY, TZ, TC, TC) { return _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWXX() (TY, TW, TX, TX) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWXY() (TY, TW, TX, TY) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWXZ() (TY, TW, TX, TZ) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWXW() (TY, TW, TX, TW) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWXA() (TY, TW, TX, TA) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWXB() (TY, TW, TX, TB) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWXC() (TY, TW, TX, TC) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWYX() (TY, TW, TY, TX) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWYY() (TY, TW, TY, TY) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWYZ() (TY, TW, TY, TZ) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWYW() (TY, TW, TY, TW) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWYA() (TY, TW, TY, TA) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWYB() (TY, TW, TY, TB) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWYC() (TY, TW, TY, TC) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWZX() (TY, TW, TZ, TX) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWZY() (TY, TW, TZ, TY) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWZZ() (TY, TW, TZ, TZ) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWZW() (TY, TW, TZ, TW) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWZA() (TY, TW, TZ, TA) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWZB() (TY, TW, TZ, TB) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWZC() (TY, TW, TZ, TC) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWWX() (TY, TW, TW, TX) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWWY() (TY, TW, TW, TY) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWWZ() (TY, TW, TW, TZ) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWWW() (TY, TW, TW, TW) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWWA() (TY, TW, TW, TA) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWWB() (TY, TW, TW, TB) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWWC() (TY, TW, TW, TC) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWAX() (TY, TW, TA, TX) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWAY() (TY, TW, TA, TY) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWAZ() (TY, TW, TA, TZ) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWAW() (TY, TW, TA, TW) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWAA() (TY, TW, TA, TA) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWAB() (TY, TW, TA, TB) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWAC() (TY, TW, TA, TC) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWBX() (TY, TW, TB, TX) { return _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWBY() (TY, TW, TB, TY) { return _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWBZ() (TY, TW, TB, TZ) { return _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWBW() (TY, TW, TB, TW) { return _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWBA() (TY, TW, TB, TA) { return _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWBB() (TY, TW, TB, TB) { return _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWBC() (TY, TW, TB, TC) { return _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWCX() (TY, TW, TC, TX) { return _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWCY() (TY, TW, TC, TY) { return _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWCZ() (TY, TW, TC, TZ) { return _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWCW() (TY, TW, TC, TW) { return _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWCA() (TY, TW, TC, TA) { return _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWCB() (TY, TW, TC, TB) { return _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWCC() (TY, TW, TC, TC) { return _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAXX() (TY, TA, TX, TX) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAXY() (TY, TA, TX, TY) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAXZ() (TY, TA, TX, TZ) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAXW() (TY, TA, TX, TW) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAXA() (TY, TA, TX, TA) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAXB() (TY, TA, TX, TB) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAXC() (TY, TA, TX, TC) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAYX() (TY, TA, TY, TX) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAYY() (TY, TA, TY, TY) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAYZ() (TY, TA, TY, TZ) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAYW() (TY, TA, TY, TW) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAYA() (TY, TA, TY, TA) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAYB() (TY, TA, TY, TB) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAYC() (TY, TA, TY, TC) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAZX() (TY, TA, TZ, TX) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAZY() (TY, TA, TZ, TY) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAZZ() (TY, TA, TZ, TZ) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAZW() (TY, TA, TZ, TW) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAZA() (TY, TA, TZ, TA) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAZB() (TY, TA, TZ, TB) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAZC() (TY, TA, TZ, TC) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAWX() (TY, TA, TW, TX) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAWY() (TY, TA, TW, TY) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAWZ() (TY, TA, TW, TZ) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAWW() (TY, TA, TW, TW) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAWA() (TY, TA, TW, TA) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAWB() (TY, TA, TW, TB) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAWC() (TY, TA, TW, TC) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAAX() (TY, TA, TA, TX) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAAY() (TY, TA, TA, TY) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAAZ() (TY, TA, TA, TZ) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAAW() (TY, TA, TA, TW) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAAA() (TY, TA, TA, TA) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAAB() (TY, TA, TA, TB) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAAC() (TY, TA, TA, TC) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YABX() (TY, TA, TB, TX) { return _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YABY() (TY, TA, TB, TY) { return _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YABZ() (TY, TA, TB, TZ) { return _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YABW() (TY, TA, TB, TW) { return _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YABA() (TY, TA, TB, TA) { return _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YABB() (TY, TA, TB, TB) { return _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YABC() (TY, TA, TB, TC) { return _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YACX() (TY, TA, TC, TX) { return _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YACY() (TY, TA, TC, TY) { return _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YACZ() (TY, TA, TC, TZ) { return _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YACW() (TY, TA, TC, TW) { return _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YACA() (TY, TA, TC, TA) { return _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YACB() (TY, TA, TC, TB) { return _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YACC() (TY, TA, TC, TC) { return _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBXX() (TY, TB, TX, TX) { return _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBXY() (TY, TB, TX, TY) { return _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBXZ() (TY, TB, TX, TZ) { return _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBXW() (TY, TB, TX, TW) { return _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBXA() (TY, TB, TX, TA) { return _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBXB() (TY, TB, TX, TB) { return _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBXC() (TY, TB, TX, TC) { return _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBYX() (TY, TB, TY, TX) { return _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBYY() (TY, TB, TY, TY) { return _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBYZ() (TY, TB, TY, TZ) { return _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBYW() (TY, TB, TY, TW) { return _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBYA() (TY, TB, TY, TA) { return _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBYB() (TY, TB, TY, TB) { return _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBYC() (TY, TB, TY, TC) { return _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBZX() (TY, TB, TZ, TX) { return _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBZY() (TY, TB, TZ, TY) { return _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBZZ() (TY, TB, TZ, TZ) { return _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBZW() (TY, TB, TZ, TW) { return _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBZA() (TY, TB, TZ, TA) { return _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBZB() (TY, TB, TZ, TB) { return _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBZC() (TY, TB, TZ, TC) { return _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBWX() (TY, TB, TW, TX) { return _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBWY() (TY, TB, TW, TY) { return _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBWZ() (TY, TB, TW, TZ) { return _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBWW() (TY, TB, TW, TW) { return _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBWA() (TY, TB, TW, TA) { return _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBWB() (TY, TB, TW, TB) { return _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBWC() (TY, TB, TW, TC) { return _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBAX() (TY, TB, TA, TX) { return _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBAY() (TY, TB, TA, TY) { return _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBAZ() (TY, TB, TA, TZ) { return _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBAW() (TY, TB, TA, TW) { return _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBAA() (TY, TB, TA, TA) { return _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBAB() (TY, TB, TA, TB) { return _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBAC() (TY, TB, TA, TC) { return _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBBX() (TY, TB, TB, TX) { return _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBBY() (TY, TB, TB, TY) { return _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBBZ() (TY, TB, TB, TZ) { return _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBBW() (TY, TB, TB, TW) { return _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBBA() (TY, TB, TB, TA) { return _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBBB() (TY, TB, TB, TB) { return _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBBC() (TY, TB, TB, TC) { return _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBCX() (TY, TB, TC, TX) { return _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBCY() (TY, TB, TC, TY) { return _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBCZ() (TY, TB, TC, TZ) { return _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBCW() (TY, TB, TC, TW) { return _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBCA() (TY, TB, TC, TA) { return _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBCB() (TY, TB, TC, TB) { return _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBCC() (TY, TB, TC, TC) { return _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCXX() (TY, TC, TX, TX) { return _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCXY() (TY, TC, TX, TY) { return _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCXZ() (TY, TC, TX, TZ) { return _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCXW() (TY, TC, TX, TW) { return _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCXA() (TY, TC, TX, TA) { return _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCXB() (TY, TC, TX, TB) { return _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCXC() (TY, TC, TX, TC) { return _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCYX() (TY, TC, TY, TX) { return _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCYY() (TY, TC, TY, TY) { return _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCYZ() (TY, TC, TY, TZ) { return _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCYW() (TY, TC, TY, TW) { return _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCYA() (TY, TC, TY, TA) { return _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCYB() (TY, TC, TY, TB) { return _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCYC() (TY, TC, TY, TC) { return _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCZX() (TY, TC, TZ, TX) { return _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCZY() (TY, TC, TZ, TY) { return _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCZZ() (TY, TC, TZ, TZ) { return _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCZW() (TY, TC, TZ, TW) { return _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCZA() (TY, TC, TZ, TA) { return _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCZB() (TY, TC, TZ, TB) { return _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCZC() (TY, TC, TZ, TC) { return _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCWX() (TY, TC, TW, TX) { return _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCWY() (TY, TC, TW, TY) { return _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCWZ() (TY, TC, TW, TZ) { return _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCWW() (TY, TC, TW, TW) { return _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCWA() (TY, TC, TW, TA) { return _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCWB() (TY, TC, TW, TB) { return _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCWC() (TY, TC, TW, TC) { return _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCAX() (TY, TC, TA, TX) { return _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCAY() (TY, TC, TA, TY) { return _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCAZ() (TY, TC, TA, TZ) { return _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCAW() (TY, TC, TA, TW) { return _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCAA() (TY, TC, TA, TA) { return _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCAB() (TY, TC, TA, TB) { return _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCAC() (TY, TC, TA, TC) { return _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCBX() (TY, TC, TB, TX) { return _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCBY() (TY, TC, TB, TY) { return _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCBZ() (TY, TC, TB, TZ) { return _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCBW() (TY, TC, TB, TW) { return _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCBA() (TY, TC, TB, TA) { return _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCBB() (TY, TC, TB, TB) { return _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCBC() (TY, TC, TB, TC) { return _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCCX() (TY, TC, TC, TX) { return _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCCY() (TY, TC, TC, TY) { return _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCCZ() (TY, TC, TC, TZ) { return _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCCW() (TY, TC, TC, TW) { return _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCCA() (TY, TC, TC, TA) { return _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCCB() (TY, TC, TC, TB) { return _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCCC() (TY, TC, TC, TC) { return _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXXX() (TZ, TX, TX, TX) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXXY() (TZ, TX, TX, TY) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXXZ() (TZ, TX, TX, TZ) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXXW() (TZ, TX, TX, TW) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXXA() (TZ, TX, TX, TA) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXXB() (TZ, TX, TX, TB) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXXC() (TZ, TX, TX, TC) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXYX() (TZ, TX, TY, TX) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXYY() (TZ, TX, TY, TY) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXYZ() (TZ, TX, TY, TZ) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXYW() (TZ, TX, TY, TW) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXYA() (TZ, TX, TY, TA) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXYB() (TZ, TX, TY, TB) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXYC() (TZ, TX, TY, TC) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXZX() (TZ, TX, TZ, TX) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXZY() (TZ, TX, TZ, TY) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXZZ() (TZ, TX, TZ, TZ) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXZW() (TZ, TX, TZ, TW) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXZA() (TZ, TX, TZ, TA) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXZB() (TZ, TX, TZ, TB) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXZC() (TZ, TX, TZ, TC) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXWX() (TZ, TX, TW, TX) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXWY() (TZ, TX, TW, TY) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXWZ() (TZ, TX, TW, TZ) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXWW() (TZ, TX, TW, TW) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXWA() (TZ, TX, TW, TA) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXWB() (TZ, TX, TW, TB) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXWC() (TZ, TX, TW, TC) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXAX() (TZ, TX, TA, TX) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXAY() (TZ, TX, TA, TY) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXAZ() (TZ, TX, TA, TZ) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXAW() (TZ, TX, TA, TW) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXAA() (TZ, TX, TA, TA) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXAB() (TZ, TX, TA, TB) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXAC() (TZ, TX, TA, TC) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXBX() (TZ, TX, TB, TX) { return _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXBY() (TZ, TX, TB, TY) { return _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXBZ() (TZ, TX, TB, TZ) { return _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXBW() (TZ, TX, TB, TW) { return _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXBA() (TZ, TX, TB, TA) { return _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXBB() (TZ, TX, TB, TB) { return _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXBC() (TZ, TX, TB, TC) { return _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXCX() (TZ, TX, TC, TX) { return _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXCY() (TZ, TX, TC, TY) { return _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXCZ() (TZ, TX, TC, TZ) { return _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXCW() (TZ, TX, TC, TW) { return _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXCA() (TZ, TX, TC, TA) { return _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXCB() (TZ, TX, TC, TB) { return _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXCC() (TZ, TX, TC, TC) { return _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYXX() (TZ, TY, TX, TX) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYXY() (TZ, TY, TX, TY) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYXZ() (TZ, TY, TX, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYXW() (TZ, TY, TX, TW) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYXA() (TZ, TY, TX, TA) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYXB() (TZ, TY, TX, TB) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYXC() (TZ, TY, TX, TC) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYYX() (TZ, TY, TY, TX) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYYY() (TZ, TY, TY, TY) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYYZ() (TZ, TY, TY, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYYW() (TZ, TY, TY, TW) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYYA() (TZ, TY, TY, TA) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYYB() (TZ, TY, TY, TB) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYYC() (TZ, TY, TY, TC) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYZX() (TZ, TY, TZ, TX) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYZY() (TZ, TY, TZ, TY) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYZZ() (TZ, TY, TZ, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYZW() (TZ, TY, TZ, TW) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYZA() (TZ, TY, TZ, TA) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYZB() (TZ, TY, TZ, TB) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYZC() (TZ, TY, TZ, TC) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYWX() (TZ, TY, TW, TX) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYWY() (TZ, TY, TW, TY) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYWZ() (TZ, TY, TW, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYWW() (TZ, TY, TW, TW) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYWA() (TZ, TY, TW, TA) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYWB() (TZ, TY, TW, TB) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYWC() (TZ, TY, TW, TC) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYAX() (TZ, TY, TA, TX) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYAY() (TZ, TY, TA, TY) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYAZ() (TZ, TY, TA, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYAW() (TZ, TY, TA, TW) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYAA() (TZ, TY, TA, TA) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYAB() (TZ, TY, TA, TB) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYAC() (TZ, TY, TA, TC) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYBX() (TZ, TY, TB, TX) { return _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYBY() (TZ, TY, TB, TY) { return _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYBZ() (TZ, TY, TB, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYBW() (TZ, TY, TB, TW) { return _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYBA() (TZ, TY, TB, TA) { return _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYBB() (TZ, TY, TB, TB) { return _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYBC() (TZ, TY, TB, TC) { return _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYCX() (TZ, TY, TC, TX) { return _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYCY() (TZ, TY, TC, TY) { return _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYCZ() (TZ, TY, TC, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYCW() (TZ, TY, TC, TW) { return _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYCA() (TZ, TY, TC, TA) { return _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYCB() (TZ, TY, TC, TB) { return _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYCC() (TZ, TY, TC, TC) { return _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZXX() (TZ, TZ, TX, TX) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZXY() (TZ, TZ, TX, TY) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZXZ() (TZ, TZ, TX, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZXW() (TZ, TZ, TX, TW) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZXA() (TZ, TZ, TX, TA) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZXB() (TZ, TZ, TX, TB) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZXC() (TZ, TZ, TX, TC) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZYX() (TZ, TZ, TY, TX) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZYY() (TZ, TZ, TY, TY) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZYZ() (TZ, TZ, TY, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZYW() (TZ, TZ, TY, TW) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZYA() (TZ, TZ, TY, TA) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZYB() (TZ, TZ, TY, TB) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZYC() (TZ, TZ, TY, TC) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZZX() (TZ, TZ, TZ, TX) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZZY() (TZ, TZ, TZ, TY) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZZZ() (TZ, TZ, TZ, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZZW() (TZ, TZ, TZ, TW) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZZA() (TZ, TZ, TZ, TA) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZZB() (TZ, TZ, TZ, TB) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZZC() (TZ, TZ, TZ, TC) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZWX() (TZ, TZ, TW, TX) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZWY() (TZ, TZ, TW, TY) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZWZ() (TZ, TZ, TW, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZWW() (TZ, TZ, TW, TW) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZWA() (TZ, TZ, TW, TA) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZWB() (TZ, TZ, TW, TB) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZWC() (TZ, TZ, TW, TC) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZAX() (TZ, TZ, TA, TX) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZAY() (TZ, TZ, TA, TY) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZAZ() (TZ, TZ, TA, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZAW() (TZ, TZ, TA, TW) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZAA() (TZ, TZ, TA, TA) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZAB() (TZ, TZ, TA, TB) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZAC() (TZ, TZ, TA, TC) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZBX() (TZ, TZ, TB, TX) { return _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZBY() (TZ, TZ, TB, TY) { return _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZBZ() (TZ, TZ, TB, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZBW() (TZ, TZ, TB, TW) { return _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZBA() (TZ, TZ, TB, TA) { return _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZBB() (TZ, TZ, TB, TB) { return _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZBC() (TZ, TZ, TB, TC) { return _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZCX() (TZ, TZ, TC, TX) { return _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZCY() (TZ, TZ, TC, TY) { return _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZCZ() (TZ, TZ, TC, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZCW() (TZ, TZ, TC, TW) { return _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZCA() (TZ, TZ, TC, TA) { return _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZCB() (TZ, TZ, TC, TB) { return _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZCC() (TZ, TZ, TC, TC) { return _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWXX() (TZ, TW, TX, TX) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWXY() (TZ, TW, TX, TY) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWXZ() (TZ, TW, TX, TZ) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWXW() (TZ, TW, TX, TW) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWXA() (TZ, TW, TX, TA) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWXB() (TZ, TW, TX, TB) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWXC() (TZ, TW, TX, TC) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWYX() (TZ, TW, TY, TX) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWYY() (TZ, TW, TY, TY) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWYZ() (TZ, TW, TY, TZ) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWYW() (TZ, TW, TY, TW) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWYA() (TZ, TW, TY, TA) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWYB() (TZ, TW, TY, TB) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWYC() (TZ, TW, TY, TC) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWZX() (TZ, TW, TZ, TX) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWZY() (TZ, TW, TZ, TY) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWZZ() (TZ, TW, TZ, TZ) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWZW() (TZ, TW, TZ, TW) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWZA() (TZ, TW, TZ, TA) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWZB() (TZ, TW, TZ, TB) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWZC() (TZ, TW, TZ, TC) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWWX() (TZ, TW, TW, TX) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWWY() (TZ, TW, TW, TY) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWWZ() (TZ, TW, TW, TZ) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWWW() (TZ, TW, TW, TW) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWWA() (TZ, TW, TW, TA) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWWB() (TZ, TW, TW, TB) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWWC() (TZ, TW, TW, TC) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWAX() (TZ, TW, TA, TX) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWAY() (TZ, TW, TA, TY) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWAZ() (TZ, TW, TA, TZ) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWAW() (TZ, TW, TA, TW) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWAA() (TZ, TW, TA, TA) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWAB() (TZ, TW, TA, TB) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWAC() (TZ, TW, TA, TC) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWBX() (TZ, TW, TB, TX) { return _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWBY() (TZ, TW, TB, TY) { return _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWBZ() (TZ, TW, TB, TZ) { return _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWBW() (TZ, TW, TB, TW) { return _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWBA() (TZ, TW, TB, TA) { return _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWBB() (TZ, TW, TB, TB) { return _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWBC() (TZ, TW, TB, TC) { return _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWCX() (TZ, TW, TC, TX) { return _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWCY() (TZ, TW, TC, TY) { return _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWCZ() (TZ, TW, TC, TZ) { return _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWCW() (TZ, TW, TC, TW) { return _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWCA() (TZ, TW, TC, TA) { return _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWCB() (TZ, TW, TC, TB) { return _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWCC() (TZ, TW, TC, TC) { return _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAXX() (TZ, TA, TX, TX) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAXY() (TZ, TA, TX, TY) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAXZ() (TZ, TA, TX, TZ) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAXW() (TZ, TA, TX, TW) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAXA() (TZ, TA, TX, TA) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAXB() (TZ, TA, TX, TB) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAXC() (TZ, TA, TX, TC) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAYX() (TZ, TA, TY, TX) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAYY() (TZ, TA, TY, TY) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAYZ() (TZ, TA, TY, TZ) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAYW() (TZ, TA, TY, TW) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAYA() (TZ, TA, TY, TA) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAYB() (TZ, TA, TY, TB) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAYC() (TZ, TA, TY, TC) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAZX() (TZ, TA, TZ, TX) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAZY() (TZ, TA, TZ, TY) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAZZ() (TZ, TA, TZ, TZ) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAZW() (TZ, TA, TZ, TW) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAZA() (TZ, TA, TZ, TA) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAZB() (TZ, TA, TZ, TB) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAZC() (TZ, TA, TZ, TC) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAWX() (TZ, TA, TW, TX) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAWY() (TZ, TA, TW, TY) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAWZ() (TZ, TA, TW, TZ) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAWW() (TZ, TA, TW, TW) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAWA() (TZ, TA, TW, TA) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAWB() (TZ, TA, TW, TB) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAWC() (TZ, TA, TW, TC) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAAX() (TZ, TA, TA, TX) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAAY() (TZ, TA, TA, TY) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAAZ() (TZ, TA, TA, TZ) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAAW() (TZ, TA, TA, TW) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAAA() (TZ, TA, TA, TA) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAAB() (TZ, TA, TA, TB) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAAC() (TZ, TA, TA, TC) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZABX() (TZ, TA, TB, TX) { return _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZABY() (TZ, TA, TB, TY) { return _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZABZ() (TZ, TA, TB, TZ) { return _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZABW() (TZ, TA, TB, TW) { return _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZABA() (TZ, TA, TB, TA) { return _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZABB() (TZ, TA, TB, TB) { return _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZABC() (TZ, TA, TB, TC) { return _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZACX() (TZ, TA, TC, TX) { return _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZACY() (TZ, TA, TC, TY) { return _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZACZ() (TZ, TA, TC, TZ) { return _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZACW() (TZ, TA, TC, TW) { return _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZACA() (TZ, TA, TC, TA) { return _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZACB() (TZ, TA, TC, TB) { return _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZACC() (TZ, TA, TC, TC) { return _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBXX() (TZ, TB, TX, TX) { return _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBXY() (TZ, TB, TX, TY) { return _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBXZ() (TZ, TB, TX, TZ) { return _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBXW() (TZ, TB, TX, TW) { return _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBXA() (TZ, TB, TX, TA) { return _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBXB() (TZ, TB, TX, TB) { return _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBXC() (TZ, TB, TX, TC) { return _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBYX() (TZ, TB, TY, TX) { return _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBYY() (TZ, TB, TY, TY) { return _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBYZ() (TZ, TB, TY, TZ) { return _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBYW() (TZ, TB, TY, TW) { return _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBYA() (TZ, TB, TY, TA) { return _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBYB() (TZ, TB, TY, TB) { return _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBYC() (TZ, TB, TY, TC) { return _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBZX() (TZ, TB, TZ, TX) { return _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBZY() (TZ, TB, TZ, TY) { return _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBZZ() (TZ, TB, TZ, TZ) { return _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBZW() (TZ, TB, TZ, TW) { return _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBZA() (TZ, TB, TZ, TA) { return _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBZB() (TZ, TB, TZ, TB) { return _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBZC() (TZ, TB, TZ, TC) { return _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBWX() (TZ, TB, TW, TX) { return _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBWY() (TZ, TB, TW, TY) { return _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBWZ() (TZ, TB, TW, TZ) { return _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBWW() (TZ, TB, TW, TW) { return _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBWA() (TZ, TB, TW, TA) { return _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBWB() (TZ, TB, TW, TB) { return _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBWC() (TZ, TB, TW, TC) { return _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBAX() (TZ, TB, TA, TX) { return _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBAY() (TZ, TB, TA, TY) { return _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBAZ() (TZ, TB, TA, TZ) { return _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBAW() (TZ, TB, TA, TW) { return _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBAA() (TZ, TB, TA, TA) { return _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBAB() (TZ, TB, TA, TB) { return _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBAC() (TZ, TB, TA, TC) { return _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBBX() (TZ, TB, TB, TX) { return _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBBY() (TZ, TB, TB, TY) { return _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBBZ() (TZ, TB, TB, TZ) { return _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBBW() (TZ, TB, TB, TW) { return _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBBA() (TZ, TB, TB, TA) { return _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBBB() (TZ, TB, TB, TB) { return _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBBC() (TZ, TB, TB, TC) { return _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBCX() (TZ, TB, TC, TX) { return _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBCY() (TZ, TB, TC, TY) { return _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBCZ() (TZ, TB, TC, TZ) { return _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBCW() (TZ, TB, TC, TW) { return _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBCA() (TZ, TB, TC, TA) { return _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBCB() (TZ, TB, TC, TB) { return _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBCC() (TZ, TB, TC, TC) { return _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCXX() (TZ, TC, TX, TX) { return _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCXY() (TZ, TC, TX, TY) { return _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCXZ() (TZ, TC, TX, TZ) { return _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCXW() (TZ, TC, TX, TW) { return _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCXA() (TZ, TC, TX, TA) { return _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCXB() (TZ, TC, TX, TB) { return _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCXC() (TZ, TC, TX, TC) { return _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCYX() (TZ, TC, TY, TX) { return _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCYY() (TZ, TC, TY, TY) { return _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCYZ() (TZ, TC, TY, TZ) { return _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCYW() (TZ, TC, TY, TW) { return _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCYA() (TZ, TC, TY, TA) { return _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCYB() (TZ, TC, TY, TB) { return _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCYC() (TZ, TC, TY, TC) { return _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCZX() (TZ, TC, TZ, TX) { return _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCZY() (TZ, TC, TZ, TY) { return _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCZZ() (TZ, TC, TZ, TZ) { return _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCZW() (TZ, TC, TZ, TW) { return _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCZA() (TZ, TC, TZ, TA) { return _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCZB() (TZ, TC, TZ, TB) { return _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCZC() (TZ, TC, TZ, TC) { return _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCWX() (TZ, TC, TW, TX) { return _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCWY() (TZ, TC, TW, TY) { return _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCWZ() (TZ, TC, TW, TZ) { return _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCWW() (TZ, TC, TW, TW) { return _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCWA() (TZ, TC, TW, TA) { return _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCWB() (TZ, TC, TW, TB) { return _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCWC() (TZ, TC, TW, TC) { return _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCAX() (TZ, TC, TA, TX) { return _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCAY() (TZ, TC, TA, TY) { return _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCAZ() (TZ, TC, TA, TZ) { return _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCAW() (TZ, TC, TA, TW) { return _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCAA() (TZ, TC, TA, TA) { return _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCAB() (TZ, TC, TA, TB) { return _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCAC() (TZ, TC, TA, TC) { return _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCBX() (TZ, TC, TB, TX) { return _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCBY() (TZ, TC, TB, TY) { return _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCBZ() (TZ, TC, TB, TZ) { return _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCBW() (TZ, TC, TB, TW) { return _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCBA() (TZ, TC, TB, TA) { return _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCBB() (TZ, TC, TB, TB) { return _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCBC() (TZ, TC, TB, TC) { return _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCCX() (TZ, TC, TC, TX) { return _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCCY() (TZ, TC, TC, TY) { return _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCCZ() (TZ, TC, TC, TZ) { return _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCCW() (TZ, TC, TC, TW) { return _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCCA() (TZ, TC, TC, TA) { return _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCCB() (TZ, TC, TC, TB) { return _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCCC() (TZ, TC, TC, TC) { return _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXXX() (TW, TX, TX, TX) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXXY() (TW, TX, TX, TY) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXXZ() (TW, TX, TX, TZ) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXXW() (TW, TX, TX, TW) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXXA() (TW, TX, TX, TA) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXXB() (TW, TX, TX, TB) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXXC() (TW, TX, TX, TC) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXYX() (TW, TX, TY, TX) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXYY() (TW, TX, TY, TY) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXYZ() (TW, TX, TY, TZ) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXYW() (TW, TX, TY, TW) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXYA() (TW, TX, TY, TA) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXYB() (TW, TX, TY, TB) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXYC() (TW, TX, TY, TC) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXZX() (TW, TX, TZ, TX) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXZY() (TW, TX, TZ, TY) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXZZ() (TW, TX, TZ, TZ) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXZW() (TW, TX, TZ, TW) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXZA() (TW, TX, TZ, TA) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXZB() (TW, TX, TZ, TB) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXZC() (TW, TX, TZ, TC) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXWX() (TW, TX, TW, TX) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXWY() (TW, TX, TW, TY) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXWZ() (TW, TX, TW, TZ) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXWW() (TW, TX, TW, TW) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXWA() (TW, TX, TW, TA) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXWB() (TW, TX, TW, TB) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXWC() (TW, TX, TW, TC) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXAX() (TW, TX, TA, TX) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXAY() (TW, TX, TA, TY) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXAZ() (TW, TX, TA, TZ) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXAW() (TW, TX, TA, TW) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXAA() (TW, TX, TA, TA) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXAB() (TW, TX, TA, TB) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXAC() (TW, TX, TA, TC) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXBX() (TW, TX, TB, TX) { return _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXBY() (TW, TX, TB, TY) { return _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXBZ() (TW, TX, TB, TZ) { return _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXBW() (TW, TX, TB, TW) { return _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXBA() (TW, TX, TB, TA) { return _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXBB() (TW, TX, TB, TB) { return _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXBC() (TW, TX, TB, TC) { return _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXCX() (TW, TX, TC, TX) { return _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXCY() (TW, TX, TC, TY) { return _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXCZ() (TW, TX, TC, TZ) { return _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXCW() (TW, TX, TC, TW) { return _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXCA() (TW, TX, TC, TA) { return _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXCB() (TW, TX, TC, TB) { return _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXCC() (TW, TX, TC, TC) { return _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYXX() (TW, TY, TX, TX) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYXY() (TW, TY, TX, TY) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYXZ() (TW, TY, TX, TZ) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYXW() (TW, TY, TX, TW) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYXA() (TW, TY, TX, TA) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYXB() (TW, TY, TX, TB) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYXC() (TW, TY, TX, TC) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYYX() (TW, TY, TY, TX) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYYY() (TW, TY, TY, TY) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYYZ() (TW, TY, TY, TZ) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYYW() (TW, TY, TY, TW) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYYA() (TW, TY, TY, TA) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYYB() (TW, TY, TY, TB) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYYC() (TW, TY, TY, TC) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYZX() (TW, TY, TZ, TX) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYZY() (TW, TY, TZ, TY) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYZZ() (TW, TY, TZ, TZ) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYZW() (TW, TY, TZ, TW) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYZA() (TW, TY, TZ, TA) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYZB() (TW, TY, TZ, TB) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYZC() (TW, TY, TZ, TC) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYWX() (TW, TY, TW, TX) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYWY() (TW, TY, TW, TY) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYWZ() (TW, TY, TW, TZ) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYWW() (TW, TY, TW, TW) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYWA() (TW, TY, TW, TA) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYWB() (TW, TY, TW, TB) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYWC() (TW, TY, TW, TC) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYAX() (TW, TY, TA, TX) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYAY() (TW, TY, TA, TY) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYAZ() (TW, TY, TA, TZ) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYAW() (TW, TY, TA, TW) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYAA() (TW, TY, TA, TA) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYAB() (TW, TY, TA, TB) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYAC() (TW, TY, TA, TC) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYBX() (TW, TY, TB, TX) { return _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYBY() (TW, TY, TB, TY) { return _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYBZ() (TW, TY, TB, TZ) { return _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYBW() (TW, TY, TB, TW) { return _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYBA() (TW, TY, TB, TA) { return _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYBB() (TW, TY, TB, TB) { return _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYBC() (TW, TY, TB, TC) { return _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYCX() (TW, TY, TC, TX) { return _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYCY() (TW, TY, TC, TY) { return _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYCZ() (TW, TY, TC, TZ) { return _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYCW() (TW, TY, TC, TW) { return _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYCA() (TW, TY, TC, TA) { return _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYCB() (TW, TY, TC, TB) { return _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYCC() (TW, TY, TC, TC) { return _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZXX() (TW, TZ, TX, TX) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZXY() (TW, TZ, TX, TY) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZXZ() (TW, TZ, TX, TZ) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZXW() (TW, TZ, TX, TW) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZXA() (TW, TZ, TX, TA) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZXB() (TW, TZ, TX, TB) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZXC() (TW, TZ, TX, TC) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZYX() (TW, TZ, TY, TX) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZYY() (TW, TZ, TY, TY) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZYZ() (TW, TZ, TY, TZ) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZYW() (TW, TZ, TY, TW) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZYA() (TW, TZ, TY, TA) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZYB() (TW, TZ, TY, TB) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZYC() (TW, TZ, TY, TC) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZZX() (TW, TZ, TZ, TX) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZZY() (TW, TZ, TZ, TY) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZZZ() (TW, TZ, TZ, TZ) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZZW() (TW, TZ, TZ, TW) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZZA() (TW, TZ, TZ, TA) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZZB() (TW, TZ, TZ, TB) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZZC() (TW, TZ, TZ, TC) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZWX() (TW, TZ, TW, TX) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZWY() (TW, TZ, TW, TY) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZWZ() (TW, TZ, TW, TZ) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZWW() (TW, TZ, TW, TW) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZWA() (TW, TZ, TW, TA) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZWB() (TW, TZ, TW, TB) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZWC() (TW, TZ, TW, TC) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZAX() (TW, TZ, TA, TX) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZAY() (TW, TZ, TA, TY) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZAZ() (TW, TZ, TA, TZ) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZAW() (TW, TZ, TA, TW) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZAA() (TW, TZ, TA, TA) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZAB() (TW, TZ, TA, TB) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZAC() (TW, TZ, TA, TC) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZBX() (TW, TZ, TB, TX) { return _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZBY() (TW, TZ, TB, TY) { return _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZBZ() (TW, TZ, TB, TZ) { return _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZBW() (TW, TZ, TB, TW) { return _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZBA() (TW, TZ, TB, TA) { return _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZBB() (TW, TZ, TB, TB) { return _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZBC() (TW, TZ, TB, TC) { return _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZCX() (TW, TZ, TC, TX) { return _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZCY() (TW, TZ, TC, TY) { return _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZCZ() (TW, TZ, TC, TZ) { return _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZCW() (TW, TZ, TC, TW) { return _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZCA() (TW, TZ, TC, TA) { return _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZCB() (TW, TZ, TC, TB) { return _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZCC() (TW, TZ, TC, TC) { return _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWXX() (TW, TW, TX, TX) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWXY() (TW, TW, TX, TY) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWXZ() (TW, TW, TX, TZ) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWXW() (TW, TW, TX, TW) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWXA() (TW, TW, TX, TA) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWXB() (TW, TW, TX, TB) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWXC() (TW, TW, TX, TC) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWYX() (TW, TW, TY, TX) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWYY() (TW, TW, TY, TY) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWYZ() (TW, TW, TY, TZ) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWYW() (TW, TW, TY, TW) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWYA() (TW, TW, TY, TA) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWYB() (TW, TW, TY, TB) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWYC() (TW, TW, TY, TC) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWZX() (TW, TW, TZ, TX) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWZY() (TW, TW, TZ, TY) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWZZ() (TW, TW, TZ, TZ) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWZW() (TW, TW, TZ, TW) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWZA() (TW, TW, TZ, TA) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWZB() (TW, TW, TZ, TB) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWZC() (TW, TW, TZ, TC) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWWX() (TW, TW, TW, TX) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWWY() (TW, TW, TW, TY) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWWZ() (TW, TW, TW, TZ) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWWW() (TW, TW, TW, TW) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWWA() (TW, TW, TW, TA) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWWB() (TW, TW, TW, TB) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWWC() (TW, TW, TW, TC) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWAX() (TW, TW, TA, TX) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWAY() (TW, TW, TA, TY) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWAZ() (TW, TW, TA, TZ) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWAW() (TW, TW, TA, TW) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWAA() (TW, TW, TA, TA) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWAB() (TW, TW, TA, TB) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWAC() (TW, TW, TA, TC) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWBX() (TW, TW, TB, TX) { return _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWBY() (TW, TW, TB, TY) { return _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWBZ() (TW, TW, TB, TZ) { return _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWBW() (TW, TW, TB, TW) { return _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWBA() (TW, TW, TB, TA) { return _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWBB() (TW, TW, TB, TB) { return _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWBC() (TW, TW, TB, TC) { return _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWCX() (TW, TW, TC, TX) { return _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWCY() (TW, TW, TC, TY) { return _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWCZ() (TW, TW, TC, TZ) { return _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWCW() (TW, TW, TC, TW) { return _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWCA() (TW, TW, TC, TA) { return _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWCB() (TW, TW, TC, TB) { return _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWCC() (TW, TW, TC, TC) { return _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAXX() (TW, TA, TX, TX) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAXY() (TW, TA, TX, TY) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAXZ() (TW, TA, TX, TZ) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAXW() (TW, TA, TX, TW) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAXA() (TW, TA, TX, TA) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAXB() (TW, TA, TX, TB) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAXC() (TW, TA, TX, TC) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAYX() (TW, TA, TY, TX) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAYY() (TW, TA, TY, TY) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAYZ() (TW, TA, TY, TZ) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAYW() (TW, TA, TY, TW) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAYA() (TW, TA, TY, TA) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAYB() (TW, TA, TY, TB) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAYC() (TW, TA, TY, TC) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAZX() (TW, TA, TZ, TX) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAZY() (TW, TA, TZ, TY) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAZZ() (TW, TA, TZ, TZ) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAZW() (TW, TA, TZ, TW) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAZA() (TW, TA, TZ, TA) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAZB() (TW, TA, TZ, TB) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAZC() (TW, TA, TZ, TC) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAWX() (TW, TA, TW, TX) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAWY() (TW, TA, TW, TY) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAWZ() (TW, TA, TW, TZ) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAWW() (TW, TA, TW, TW) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAWA() (TW, TA, TW, TA) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAWB() (TW, TA, TW, TB) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAWC() (TW, TA, TW, TC) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAAX() (TW, TA, TA, TX) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAAY() (TW, TA, TA, TY) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAAZ() (TW, TA, TA, TZ) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAAW() (TW, TA, TA, TW) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAAA() (TW, TA, TA, TA) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAAB() (TW, TA, TA, TB) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAAC() (TW, TA, TA, TC) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WABX() (TW, TA, TB, TX) { return _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WABY() (TW, TA, TB, TY) { return _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WABZ() (TW, TA, TB, TZ) { return _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WABW() (TW, TA, TB, TW) { return _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WABA() (TW, TA, TB, TA) { return _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WABB() (TW, TA, TB, TB) { return _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WABC() (TW, TA, TB, TC) { return _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WACX() (TW, TA, TC, TX) { return _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WACY() (TW, TA, TC, TY) { return _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WACZ() (TW, TA, TC, TZ) { return _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WACW() (TW, TA, TC, TW) { return _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WACA() (TW, TA, TC, TA) { return _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WACB() (TW, TA, TC, TB) { return _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WACC() (TW, TA, TC, TC) { return _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBXX() (TW, TB, TX, TX) { return _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBXY() (TW, TB, TX, TY) { return _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBXZ() (TW, TB, TX, TZ) { return _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBXW() (TW, TB, TX, TW) { return _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBXA() (TW, TB, TX, TA) { return _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBXB() (TW, TB, TX, TB) { return _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBXC() (TW, TB, TX, TC) { return _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBYX() (TW, TB, TY, TX) { return _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBYY() (TW, TB, TY, TY) { return _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBYZ() (TW, TB, TY, TZ) { return _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBYW() (TW, TB, TY, TW) { return _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBYA() (TW, TB, TY, TA) { return _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBYB() (TW, TB, TY, TB) { return _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBYC() (TW, TB, TY, TC) { return _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBZX() (TW, TB, TZ, TX) { return _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBZY() (TW, TB, TZ, TY) { return _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBZZ() (TW, TB, TZ, TZ) { return _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBZW() (TW, TB, TZ, TW) { return _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBZA() (TW, TB, TZ, TA) { return _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBZB() (TW, TB, TZ, TB) { return _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBZC() (TW, TB, TZ, TC) { return _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBWX() (TW, TB, TW, TX) { return _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBWY() (TW, TB, TW, TY) { return _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBWZ() (TW, TB, TW, TZ) { return _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBWW() (TW, TB, TW, TW) { return _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBWA() (TW, TB, TW, TA) { return _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBWB() (TW, TB, TW, TB) { return _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBWC() (TW, TB, TW, TC) { return _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBAX() (TW, TB, TA, TX) { return _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBAY() (TW, TB, TA, TY) { return _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBAZ() (TW, TB, TA, TZ) { return _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBAW() (TW, TB, TA, TW) { return _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBAA() (TW, TB, TA, TA) { return _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBAB() (TW, TB, TA, TB) { return _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBAC() (TW, TB, TA, TC) { return _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBBX() (TW, TB, TB, TX) { return _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBBY() (TW, TB, TB, TY) { return _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBBZ() (TW, TB, TB, TZ) { return _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBBW() (TW, TB, TB, TW) { return _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBBA() (TW, TB, TB, TA) { return _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBBB() (TW, TB, TB, TB) { return _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBBC() (TW, TB, TB, TC) { return _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBCX() (TW, TB, TC, TX) { return _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBCY() (TW, TB, TC, TY) { return _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBCZ() (TW, TB, TC, TZ) { return _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBCW() (TW, TB, TC, TW) { return _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBCA() (TW, TB, TC, TA) { return _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBCB() (TW, TB, TC, TB) { return _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBCC() (TW, TB, TC, TC) { return _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCXX() (TW, TC, TX, TX) { return _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCXY() (TW, TC, TX, TY) { return _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCXZ() (TW, TC, TX, TZ) { return _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCXW() (TW, TC, TX, TW) { return _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCXA() (TW, TC, TX, TA) { return _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCXB() (TW, TC, TX, TB) { return _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCXC() (TW, TC, TX, TC) { return _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCYX() (TW, TC, TY, TX) { return _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCYY() (TW, TC, TY, TY) { return _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCYZ() (TW, TC, TY, TZ) { return _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCYW() (TW, TC, TY, TW) { return _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCYA() (TW, TC, TY, TA) { return _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCYB() (TW, TC, TY, TB) { return _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCYC() (TW, TC, TY, TC) { return _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCZX() (TW, TC, TZ, TX) { return _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCZY() (TW, TC, TZ, TY) { return _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCZZ() (TW, TC, TZ, TZ) { return _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCZW() (TW, TC, TZ, TW) { return _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCZA() (TW, TC, TZ, TA) { return _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCZB() (TW, TC, TZ, TB) { return _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCZC() (TW, TC, TZ, TC) { return _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCWX() (TW, TC, TW, TX) { return _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCWY() (TW, TC, TW, TY) { return _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCWZ() (TW, TC, TW, TZ) { return _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCWW() (TW, TC, TW, TW) { return _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCWA() (TW, TC, TW, TA) { return _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCWB() (TW, TC, TW, TB) { return _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCWC() (TW, TC, TW, TC) { return _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCAX() (TW, TC, TA, TX) { return _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCAY() (TW, TC, TA, TY) { return _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCAZ() (TW, TC, TA, TZ) { return _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCAW() (TW, TC, TA, TW) { return _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCAA() (TW, TC, TA, TA) { return _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCAB() (TW, TC, TA, TB) { return _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCAC() (TW, TC, TA, TC) { return _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCBX() (TW, TC, TB, TX) { return _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCBY() (TW, TC, TB, TY) { return _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCBZ() (TW, TC, TB, TZ) { return _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCBW() (TW, TC, TB, TW) { return _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCBA() (TW, TC, TB, TA) { return _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCBB() (TW, TC, TB, TB) { return _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCBC() (TW, TC, TB, TC) { return _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCCX() (TW, TC, TC, TX) { return _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCCY() (TW, TC, TC, TY) { return _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCCZ() (TW, TC, TC, TZ) { return _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCCW() (TW, TC, TC, TW) { return _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCCA() (TW, TC, TC, TA) { return _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCCB() (TW, TC, TC, TB) { return _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCCC() (TW, TC, TC, TC) { return _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXXX() (TA, TX, TX, TX) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXXY() (TA, TX, TX, TY) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXXZ() (TA, TX, TX, TZ) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXXW() (TA, TX, TX, TW) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXXA() (TA, TX, TX, TA) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXXB() (TA, TX, TX, TB) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXXC() (TA, TX, TX, TC) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXYX() (TA, TX, TY, TX) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXYY() (TA, TX, TY, TY) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXYZ() (TA, TX, TY, TZ) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXYW() (TA, TX, TY, TW) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXYA() (TA, TX, TY, TA) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXYB() (TA, TX, TY, TB) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXYC() (TA, TX, TY, TC) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXZX() (TA, TX, TZ, TX) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXZY() (TA, TX, TZ, TY) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXZZ() (TA, TX, TZ, TZ) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXZW() (TA, TX, TZ, TW) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXZA() (TA, TX, TZ, TA) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXZB() (TA, TX, TZ, TB) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXZC() (TA, TX, TZ, TC) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXWX() (TA, TX, TW, TX) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXWY() (TA, TX, TW, TY) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXWZ() (TA, TX, TW, TZ) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXWW() (TA, TX, TW, TW) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXWA() (TA, TX, TW, TA) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXWB() (TA, TX, TW, TB) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXWC() (TA, TX, TW, TC) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXAX() (TA, TX, TA, TX) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXAY() (TA, TX, TA, TY) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXAZ() (TA, TX, TA, TZ) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXAW() (TA, TX, TA, TW) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXAA() (TA, TX, TA, TA) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXAB() (TA, TX, TA, TB) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXAC() (TA, TX, TA, TC) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXBX() (TA, TX, TB, TX) { return _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXBY() (TA, TX, TB, TY) { return _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXBZ() (TA, TX, TB, TZ) { return _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXBW() (TA, TX, TB, TW) { return _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXBA() (TA, TX, TB, TA) { return _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXBB() (TA, TX, TB, TB) { return _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXBC() (TA, TX, TB, TC) { return _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXCX() (TA, TX, TC, TX) { return _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXCY() (TA, TX, TC, TY) { return _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXCZ() (TA, TX, TC, TZ) { return _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXCW() (TA, TX, TC, TW) { return _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXCA() (TA, TX, TC, TA) { return _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXCB() (TA, TX, TC, TB) { return _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXCC() (TA, TX, TC, TC) { return _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYXX() (TA, TY, TX, TX) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYXY() (TA, TY, TX, TY) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYXZ() (TA, TY, TX, TZ) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYXW() (TA, TY, TX, TW) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYXA() (TA, TY, TX, TA) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYXB() (TA, TY, TX, TB) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYXC() (TA, TY, TX, TC) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYYX() (TA, TY, TY, TX) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYYY() (TA, TY, TY, TY) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYYZ() (TA, TY, TY, TZ) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYYW() (TA, TY, TY, TW) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYYA() (TA, TY, TY, TA) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYYB() (TA, TY, TY, TB) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYYC() (TA, TY, TY, TC) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYZX() (TA, TY, TZ, TX) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYZY() (TA, TY, TZ, TY) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYZZ() (TA, TY, TZ, TZ) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYZW() (TA, TY, TZ, TW) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYZA() (TA, TY, TZ, TA) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYZB() (TA, TY, TZ, TB) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYZC() (TA, TY, TZ, TC) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYWX() (TA, TY, TW, TX) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYWY() (TA, TY, TW, TY) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYWZ() (TA, TY, TW, TZ) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYWW() (TA, TY, TW, TW) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYWA() (TA, TY, TW, TA) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYWB() (TA, TY, TW, TB) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYWC() (TA, TY, TW, TC) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYAX() (TA, TY, TA, TX) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYAY() (TA, TY, TA, TY) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYAZ() (TA, TY, TA, TZ) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYAW() (TA, TY, TA, TW) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYAA() (TA, TY, TA, TA) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYAB() (TA, TY, TA, TB) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYAC() (TA, TY, TA, TC) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYBX() (TA, TY, TB, TX) { return _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYBY() (TA, TY, TB, TY) { return _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYBZ() (TA, TY, TB, TZ) { return _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYBW() (TA, TY, TB, TW) { return _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYBA() (TA, TY, TB, TA) { return _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYBB() (TA, TY, TB, TB) { return _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYBC() (TA, TY, TB, TC) { return _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYCX() (TA, TY, TC, TX) { return _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYCY() (TA, TY, TC, TY) { return _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYCZ() (TA, TY, TC, TZ) { return _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYCW() (TA, TY, TC, TW) { return _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYCA() (TA, TY, TC, TA) { return _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYCB() (TA, TY, TC, TB) { return _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYCC() (TA, TY, TC, TC) { return _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZXX() (TA, TZ, TX, TX) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZXY() (TA, TZ, TX, TY) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZXZ() (TA, TZ, TX, TZ) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZXW() (TA, TZ, TX, TW) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZXA() (TA, TZ, TX, TA) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZXB() (TA, TZ, TX, TB) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZXC() (TA, TZ, TX, TC) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZYX() (TA, TZ, TY, TX) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZYY() (TA, TZ, TY, TY) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZYZ() (TA, TZ, TY, TZ) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZYW() (TA, TZ, TY, TW) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZYA() (TA, TZ, TY, TA) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZYB() (TA, TZ, TY, TB) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZYC() (TA, TZ, TY, TC) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZZX() (TA, TZ, TZ, TX) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZZY() (TA, TZ, TZ, TY) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZZZ() (TA, TZ, TZ, TZ) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZZW() (TA, TZ, TZ, TW) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZZA() (TA, TZ, TZ, TA) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZZB() (TA, TZ, TZ, TB) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZZC() (TA, TZ, TZ, TC) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZWX() (TA, TZ, TW, TX) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZWY() (TA, TZ, TW, TY) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZWZ() (TA, TZ, TW, TZ) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZWW() (TA, TZ, TW, TW) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZWA() (TA, TZ, TW, TA) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZWB() (TA, TZ, TW, TB) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZWC() (TA, TZ, TW, TC) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZAX() (TA, TZ, TA, TX) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZAY() (TA, TZ, TA, TY) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZAZ() (TA, TZ, TA, TZ) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZAW() (TA, TZ, TA, TW) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZAA() (TA, TZ, TA, TA) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZAB() (TA, TZ, TA, TB) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZAC() (TA, TZ, TA, TC) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZBX() (TA, TZ, TB, TX) { return _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZBY() (TA, TZ, TB, TY) { return _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZBZ() (TA, TZ, TB, TZ) { return _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZBW() (TA, TZ, TB, TW) { return _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZBA() (TA, TZ, TB, TA) { return _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZBB() (TA, TZ, TB, TB) { return _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZBC() (TA, TZ, TB, TC) { return _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZCX() (TA, TZ, TC, TX) { return _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZCY() (TA, TZ, TC, TY) { return _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZCZ() (TA, TZ, TC, TZ) { return _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZCW() (TA, TZ, TC, TW) { return _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZCA() (TA, TZ, TC, TA) { return _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZCB() (TA, TZ, TC, TB) { return _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZCC() (TA, TZ, TC, TC) { return _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWXX() (TA, TW, TX, TX) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWXY() (TA, TW, TX, TY) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWXZ() (TA, TW, TX, TZ) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWXW() (TA, TW, TX, TW) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWXA() (TA, TW, TX, TA) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWXB() (TA, TW, TX, TB) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWXC() (TA, TW, TX, TC) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWYX() (TA, TW, TY, TX) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWYY() (TA, TW, TY, TY) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWYZ() (TA, TW, TY, TZ) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWYW() (TA, TW, TY, TW) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWYA() (TA, TW, TY, TA) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWYB() (TA, TW, TY, TB) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWYC() (TA, TW, TY, TC) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWZX() (TA, TW, TZ, TX) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWZY() (TA, TW, TZ, TY) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWZZ() (TA, TW, TZ, TZ) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWZW() (TA, TW, TZ, TW) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWZA() (TA, TW, TZ, TA) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWZB() (TA, TW, TZ, TB) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWZC() (TA, TW, TZ, TC) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWWX() (TA, TW, TW, TX) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWWY() (TA, TW, TW, TY) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWWZ() (TA, TW, TW, TZ) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWWW() (TA, TW, TW, TW) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWWA() (TA, TW, TW, TA) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWWB() (TA, TW, TW, TB) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWWC() (TA, TW, TW, TC) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWAX() (TA, TW, TA, TX) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWAY() (TA, TW, TA, TY) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWAZ() (TA, TW, TA, TZ) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWAW() (TA, TW, TA, TW) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWAA() (TA, TW, TA, TA) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWAB() (TA, TW, TA, TB) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWAC() (TA, TW, TA, TC) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWBX() (TA, TW, TB, TX) { return _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWBY() (TA, TW, TB, TY) { return _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWBZ() (TA, TW, TB, TZ) { return _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWBW() (TA, TW, TB, TW) { return _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWBA() (TA, TW, TB, TA) { return _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWBB() (TA, TW, TB, TB) { return _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWBC() (TA, TW, TB, TC) { return _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWCX() (TA, TW, TC, TX) { return _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWCY() (TA, TW, TC, TY) { return _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWCZ() (TA, TW, TC, TZ) { return _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWCW() (TA, TW, TC, TW) { return _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWCA() (TA, TW, TC, TA) { return _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWCB() (TA, TW, TC, TB) { return _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWCC() (TA, TW, TC, TC) { return _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAXX() (TA, TA, TX, TX) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAXY() (TA, TA, TX, TY) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAXZ() (TA, TA, TX, TZ) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAXW() (TA, TA, TX, TW) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAXA() (TA, TA, TX, TA) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAXB() (TA, TA, TX, TB) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAXC() (TA, TA, TX, TC) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAYX() (TA, TA, TY, TX) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAYY() (TA, TA, TY, TY) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAYZ() (TA, TA, TY, TZ) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAYW() (TA, TA, TY, TW) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAYA() (TA, TA, TY, TA) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAYB() (TA, TA, TY, TB) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAYC() (TA, TA, TY, TC) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAZX() (TA, TA, TZ, TX) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAZY() (TA, TA, TZ, TY) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAZZ() (TA, TA, TZ, TZ) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAZW() (TA, TA, TZ, TW) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAZA() (TA, TA, TZ, TA) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAZB() (TA, TA, TZ, TB) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAZC() (TA, TA, TZ, TC) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAWX() (TA, TA, TW, TX) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAWY() (TA, TA, TW, TY) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAWZ() (TA, TA, TW, TZ) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAWW() (TA, TA, TW, TW) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAWA() (TA, TA, TW, TA) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAWB() (TA, TA, TW, TB) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAWC() (TA, TA, TW, TC) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAAX() (TA, TA, TA, TX) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAAY() (TA, TA, TA, TY) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAAZ() (TA, TA, TA, TZ) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAAW() (TA, TA, TA, TW) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAAA() (TA, TA, TA, TA) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAAB() (TA, TA, TA, TB) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAAC() (TA, TA, TA, TC) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AABX() (TA, TA, TB, TX) { return _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AABY() (TA, TA, TB, TY) { return _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AABZ() (TA, TA, TB, TZ) { return _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AABW() (TA, TA, TB, TW) { return _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AABA() (TA, TA, TB, TA) { return _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AABB() (TA, TA, TB, TB) { return _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AABC() (TA, TA, TB, TC) { return _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AACX() (TA, TA, TC, TX) { return _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AACY() (TA, TA, TC, TY) { return _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AACZ() (TA, TA, TC, TZ) { return _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AACW() (TA, TA, TC, TW) { return _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AACA() (TA, TA, TC, TA) { return _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AACB() (TA, TA, TC, TB) { return _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AACC() (TA, TA, TC, TC) { return _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABXX() (TA, TB, TX, TX) { return _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABXY() (TA, TB, TX, TY) { return _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABXZ() (TA, TB, TX, TZ) { return _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABXW() (TA, TB, TX, TW) { return _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABXA() (TA, TB, TX, TA) { return _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABXB() (TA, TB, TX, TB) { return _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABXC() (TA, TB, TX, TC) { return _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABYX() (TA, TB, TY, TX) { return _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABYY() (TA, TB, TY, TY) { return _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABYZ() (TA, TB, TY, TZ) { return _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABYW() (TA, TB, TY, TW) { return _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABYA() (TA, TB, TY, TA) { return _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABYB() (TA, TB, TY, TB) { return _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABYC() (TA, TB, TY, TC) { return _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABZX() (TA, TB, TZ, TX) { return _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABZY() (TA, TB, TZ, TY) { return _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABZZ() (TA, TB, TZ, TZ) { return _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABZW() (TA, TB, TZ, TW) { return _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABZA() (TA, TB, TZ, TA) { return _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABZB() (TA, TB, TZ, TB) { return _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABZC() (TA, TB, TZ, TC) { return _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABWX() (TA, TB, TW, TX) { return _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABWY() (TA, TB, TW, TY) { return _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABWZ() (TA, TB, TW, TZ) { return _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABWW() (TA, TB, TW, TW) { return _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABWA() (TA, TB, TW, TA) { return _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABWB() (TA, TB, TW, TB) { return _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABWC() (TA, TB, TW, TC) { return _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABAX() (TA, TB, TA, TX) { return _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABAY() (TA, TB, TA, TY) { return _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABAZ() (TA, TB, TA, TZ) { return _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABAW() (TA, TB, TA, TW) { return _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABAA() (TA, TB, TA, TA) { return _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABAB() (TA, TB, TA, TB) { return _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABAC() (TA, TB, TA, TC) { return _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABBX() (TA, TB, TB, TX) { return _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABBY() (TA, TB, TB, TY) { return _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABBZ() (TA, TB, TB, TZ) { return _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABBW() (TA, TB, TB, TW) { return _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABBA() (TA, TB, TB, TA) { return _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABBB() (TA, TB, TB, TB) { return _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABBC() (TA, TB, TB, TC) { return _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABCX() (TA, TB, TC, TX) { return _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABCY() (TA, TB, TC, TY) { return _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABCZ() (TA, TB, TC, TZ) { return _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABCW() (TA, TB, TC, TW) { return _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABCA() (TA, TB, TC, TA) { return _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABCB() (TA, TB, TC, TB) { return _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABCC() (TA, TB, TC, TC) { return _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACXX() (TA, TC, TX, TX) { return _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACXY() (TA, TC, TX, TY) { return _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACXZ() (TA, TC, TX, TZ) { return _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACXW() (TA, TC, TX, TW) { return _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACXA() (TA, TC, TX, TA) { return _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACXB() (TA, TC, TX, TB) { return _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACXC() (TA, TC, TX, TC) { return _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACYX() (TA, TC, TY, TX) { return _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACYY() (TA, TC, TY, TY) { return _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACYZ() (TA, TC, TY, TZ) { return _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACYW() (TA, TC, TY, TW) { return _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACYA() (TA, TC, TY, TA) { return _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACYB() (TA, TC, TY, TB) { return _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACYC() (TA, TC, TY, TC) { return _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACZX() (TA, TC, TZ, TX) { return _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACZY() (TA, TC, TZ, TY) { return _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACZZ() (TA, TC, TZ, TZ) { return _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACZW() (TA, TC, TZ, TW) { return _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACZA() (TA, TC, TZ, TA) { return _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACZB() (TA, TC, TZ, TB) { return _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACZC() (TA, TC, TZ, TC) { return _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACWX() (TA, TC, TW, TX) { return _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACWY() (TA, TC, TW, TY) { return _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACWZ() (TA, TC, TW, TZ) { return _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACWW() (TA, TC, TW, TW) { return _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACWA() (TA, TC, TW, TA) { return _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACWB() (TA, TC, TW, TB) { return _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACWC() (TA, TC, TW, TC) { return _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACAX() (TA, TC, TA, TX) { return _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACAY() (TA, TC, TA, TY) { return _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACAZ() (TA, TC, TA, TZ) { return _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACAW() (TA, TC, TA, TW) { return _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACAA() (TA, TC, TA, TA) { return _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACAB() (TA, TC, TA, TB) { return _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACAC() (TA, TC, TA, TC) { return _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACBX() (TA, TC, TB, TX) { return _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACBY() (TA, TC, TB, TY) { return _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACBZ() (TA, TC, TB, TZ) { return _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACBW() (TA, TC, TB, TW) { return _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACBA() (TA, TC, TB, TA) { return _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACBB() (TA, TC, TB, TB) { return _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACBC() (TA, TC, TB, TC) { return _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACCX() (TA, TC, TC, TX) { return _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACCY() (TA, TC, TC, TY) { return _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACCZ() (TA, TC, TC, TZ) { return _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACCW() (TA, TC, TC, TW) { return _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACCA() (TA, TC, TC, TA) { return _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACCB() (TA, TC, TC, TB) { return _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACCC() (TA, TC, TC, TC) { return _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXXX() (TB, TX, TX, TX) { return _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXXY() (TB, TX, TX, TY) { return _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXXZ() (TB, TX, TX, TZ) { return _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXXW() (TB, TX, TX, TW) { return _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXXA() (TB, TX, TX, TA) { return _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXXB() (TB, TX, TX, TB) { return _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXXC() (TB, TX, TX, TC) { return _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXYX() (TB, TX, TY, TX) { return _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXYY() (TB, TX, TY, TY) { return _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXYZ() (TB, TX, TY, TZ) { return _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXYW() (TB, TX, TY, TW) { return _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXYA() (TB, TX, TY, TA) { return _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXYB() (TB, TX, TY, TB) { return _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXYC() (TB, TX, TY, TC) { return _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXZX() (TB, TX, TZ, TX) { return _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXZY() (TB, TX, TZ, TY) { return _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXZZ() (TB, TX, TZ, TZ) { return _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXZW() (TB, TX, TZ, TW) { return _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXZA() (TB, TX, TZ, TA) { return _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXZB() (TB, TX, TZ, TB) { return _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXZC() (TB, TX, TZ, TC) { return _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXWX() (TB, TX, TW, TX) { return _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXWY() (TB, TX, TW, TY) { return _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXWZ() (TB, TX, TW, TZ) { return _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXWW() (TB, TX, TW, TW) { return _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXWA() (TB, TX, TW, TA) { return _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXWB() (TB, TX, TW, TB) { return _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXWC() (TB, TX, TW, TC) { return _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXAX() (TB, TX, TA, TX) { return _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXAY() (TB, TX, TA, TY) { return _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXAZ() (TB, TX, TA, TZ) { return _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXAW() (TB, TX, TA, TW) { return _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXAA() (TB, TX, TA, TA) { return _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXAB() (TB, TX, TA, TB) { return _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXAC() (TB, TX, TA, TC) { return _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXBX() (TB, TX, TB, TX) { return _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXBY() (TB, TX, TB, TY) { return _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXBZ() (TB, TX, TB, TZ) { return _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXBW() (TB, TX, TB, TW) { return _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXBA() (TB, TX, TB, TA) { return _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXBB() (TB, TX, TB, TB) { return _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXBC() (TB, TX, TB, TC) { return _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXCX() (TB, TX, TC, TX) { return _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXCY() (TB, TX, TC, TY) { return _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXCZ() (TB, TX, TC, TZ) { return _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXCW() (TB, TX, TC, TW) { return _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXCA() (TB, TX, TC, TA) { return _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXCB() (TB, TX, TC, TB) { return _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXCC() (TB, TX, TC, TC) { return _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYXX() (TB, TY, TX, TX) { return _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYXY() (TB, TY, TX, TY) { return _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYXZ() (TB, TY, TX, TZ) { return _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYXW() (TB, TY, TX, TW) { return _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYXA() (TB, TY, TX, TA) { return _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYXB() (TB, TY, TX, TB) { return _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYXC() (TB, TY, TX, TC) { return _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYYX() (TB, TY, TY, TX) { return _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYYY() (TB, TY, TY, TY) { return _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYYZ() (TB, TY, TY, TZ) { return _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYYW() (TB, TY, TY, TW) { return _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYYA() (TB, TY, TY, TA) { return _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYYB() (TB, TY, TY, TB) { return _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYYC() (TB, TY, TY, TC) { return _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYZX() (TB, TY, TZ, TX) { return _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYZY() (TB, TY, TZ, TY) { return _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYZZ() (TB, TY, TZ, TZ) { return _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYZW() (TB, TY, TZ, TW) { return _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYZA() (TB, TY, TZ, TA) { return _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYZB() (TB, TY, TZ, TB) { return _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYZC() (TB, TY, TZ, TC) { return _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYWX() (TB, TY, TW, TX) { return _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYWY() (TB, TY, TW, TY) { return _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYWZ() (TB, TY, TW, TZ) { return _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYWW() (TB, TY, TW, TW) { return _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYWA() (TB, TY, TW, TA) { return _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYWB() (TB, TY, TW, TB) { return _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYWC() (TB, TY, TW, TC) { return _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYAX() (TB, TY, TA, TX) { return _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYAY() (TB, TY, TA, TY) { return _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYAZ() (TB, TY, TA, TZ) { return _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYAW() (TB, TY, TA, TW) { return _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYAA() (TB, TY, TA, TA) { return _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYAB() (TB, TY, TA, TB) { return _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYAC() (TB, TY, TA, TC) { return _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYBX() (TB, TY, TB, TX) { return _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYBY() (TB, TY, TB, TY) { return _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYBZ() (TB, TY, TB, TZ) { return _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYBW() (TB, TY, TB, TW) { return _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYBA() (TB, TY, TB, TA) { return _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYBB() (TB, TY, TB, TB) { return _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYBC() (TB, TY, TB, TC) { return _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYCX() (TB, TY, TC, TX) { return _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYCY() (TB, TY, TC, TY) { return _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYCZ() (TB, TY, TC, TZ) { return _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYCW() (TB, TY, TC, TW) { return _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYCA() (TB, TY, TC, TA) { return _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYCB() (TB, TY, TC, TB) { return _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYCC() (TB, TY, TC, TC) { return _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZXX() (TB, TZ, TX, TX) { return _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZXY() (TB, TZ, TX, TY) { return _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZXZ() (TB, TZ, TX, TZ) { return _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZXW() (TB, TZ, TX, TW) { return _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZXA() (TB, TZ, TX, TA) { return _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZXB() (TB, TZ, TX, TB) { return _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZXC() (TB, TZ, TX, TC) { return _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZYX() (TB, TZ, TY, TX) { return _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZYY() (TB, TZ, TY, TY) { return _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZYZ() (TB, TZ, TY, TZ) { return _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZYW() (TB, TZ, TY, TW) { return _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZYA() (TB, TZ, TY, TA) { return _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZYB() (TB, TZ, TY, TB) { return _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZYC() (TB, TZ, TY, TC) { return _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZZX() (TB, TZ, TZ, TX) { return _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZZY() (TB, TZ, TZ, TY) { return _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZZZ() (TB, TZ, TZ, TZ) { return _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZZW() (TB, TZ, TZ, TW) { return _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZZA() (TB, TZ, TZ, TA) { return _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZZB() (TB, TZ, TZ, TB) { return _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZZC() (TB, TZ, TZ, TC) { return _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZWX() (TB, TZ, TW, TX) { return _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZWY() (TB, TZ, TW, TY) { return _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZWZ() (TB, TZ, TW, TZ) { return _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZWW() (TB, TZ, TW, TW) { return _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZWA() (TB, TZ, TW, TA) { return _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZWB() (TB, TZ, TW, TB) { return _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZWC() (TB, TZ, TW, TC) { return _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZAX() (TB, TZ, TA, TX) { return _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZAY() (TB, TZ, TA, TY) { return _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZAZ() (TB, TZ, TA, TZ) { return _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZAW() (TB, TZ, TA, TW) { return _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZAA() (TB, TZ, TA, TA) { return _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZAB() (TB, TZ, TA, TB) { return _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZAC() (TB, TZ, TA, TC) { return _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZBX() (TB, TZ, TB, TX) { return _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZBY() (TB, TZ, TB, TY) { return _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZBZ() (TB, TZ, TB, TZ) { return _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZBW() (TB, TZ, TB, TW) { return _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZBA() (TB, TZ, TB, TA) { return _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZBB() (TB, TZ, TB, TB) { return _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZBC() (TB, TZ, TB, TC) { return _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZCX() (TB, TZ, TC, TX) { return _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZCY() (TB, TZ, TC, TY) { return _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZCZ() (TB, TZ, TC, TZ) { return _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZCW() (TB, TZ, TC, TW) { return _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZCA() (TB, TZ, TC, TA) { return _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZCB() (TB, TZ, TC, TB) { return _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZCC() (TB, TZ, TC, TC) { return _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWXX() (TB, TW, TX, TX) { return _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWXY() (TB, TW, TX, TY) { return _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWXZ() (TB, TW, TX, TZ) { return _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWXW() (TB, TW, TX, TW) { return _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWXA() (TB, TW, TX, TA) { return _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWXB() (TB, TW, TX, TB) { return _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWXC() (TB, TW, TX, TC) { return _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWYX() (TB, TW, TY, TX) { return _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWYY() (TB, TW, TY, TY) { return _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWYZ() (TB, TW, TY, TZ) { return _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWYW() (TB, TW, TY, TW) { return _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWYA() (TB, TW, TY, TA) { return _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWYB() (TB, TW, TY, TB) { return _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWYC() (TB, TW, TY, TC) { return _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWZX() (TB, TW, TZ, TX) { return _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWZY() (TB, TW, TZ, TY) { return _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWZZ() (TB, TW, TZ, TZ) { return _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWZW() (TB, TW, TZ, TW) { return _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWZA() (TB, TW, TZ, TA) { return _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWZB() (TB, TW, TZ, TB) { return _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWZC() (TB, TW, TZ, TC) { return _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWWX() (TB, TW, TW, TX) { return _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWWY() (TB, TW, TW, TY) { return _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWWZ() (TB, TW, TW, TZ) { return _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWWW() (TB, TW, TW, TW) { return _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWWA() (TB, TW, TW, TA) { return _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWWB() (TB, TW, TW, TB) { return _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWWC() (TB, TW, TW, TC) { return _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWAX() (TB, TW, TA, TX) { return _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWAY() (TB, TW, TA, TY) { return _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWAZ() (TB, TW, TA, TZ) { return _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWAW() (TB, TW, TA, TW) { return _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWAA() (TB, TW, TA, TA) { return _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWAB() (TB, TW, TA, TB) { return _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWAC() (TB, TW, TA, TC) { return _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWBX() (TB, TW, TB, TX) { return _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWBY() (TB, TW, TB, TY) { return _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWBZ() (TB, TW, TB, TZ) { return _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWBW() (TB, TW, TB, TW) { return _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWBA() (TB, TW, TB, TA) { return _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWBB() (TB, TW, TB, TB) { return _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWBC() (TB, TW, TB, TC) { return _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWCX() (TB, TW, TC, TX) { return _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWCY() (TB, TW, TC, TY) { return _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWCZ() (TB, TW, TC, TZ) { return _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWCW() (TB, TW, TC, TW) { return _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWCA() (TB, TW, TC, TA) { return _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWCB() (TB, TW, TC, TB) { return _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWCC() (TB, TW, TC, TC) { return _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAXX() (TB, TA, TX, TX) { return _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAXY() (TB, TA, TX, TY) { return _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAXZ() (TB, TA, TX, TZ) { return _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAXW() (TB, TA, TX, TW) { return _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAXA() (TB, TA, TX, TA) { return _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAXB() (TB, TA, TX, TB) { return _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAXC() (TB, TA, TX, TC) { return _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAYX() (TB, TA, TY, TX) { return _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAYY() (TB, TA, TY, TY) { return _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAYZ() (TB, TA, TY, TZ) { return _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAYW() (TB, TA, TY, TW) { return _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAYA() (TB, TA, TY, TA) { return _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAYB() (TB, TA, TY, TB) { return _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAYC() (TB, TA, TY, TC) { return _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAZX() (TB, TA, TZ, TX) { return _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAZY() (TB, TA, TZ, TY) { return _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAZZ() (TB, TA, TZ, TZ) { return _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAZW() (TB, TA, TZ, TW) { return _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAZA() (TB, TA, TZ, TA) { return _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAZB() (TB, TA, TZ, TB) { return _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAZC() (TB, TA, TZ, TC) { return _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAWX() (TB, TA, TW, TX) { return _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAWY() (TB, TA, TW, TY) { return _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAWZ() (TB, TA, TW, TZ) { return _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAWW() (TB, TA, TW, TW) { return _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAWA() (TB, TA, TW, TA) { return _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAWB() (TB, TA, TW, TB) { return _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAWC() (TB, TA, TW, TC) { return _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAAX() (TB, TA, TA, TX) { return _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAAY() (TB, TA, TA, TY) { return _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAAZ() (TB, TA, TA, TZ) { return _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAAW() (TB, TA, TA, TW) { return _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAAA() (TB, TA, TA, TA) { return _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAAB() (TB, TA, TA, TB) { return _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAAC() (TB, TA, TA, TC) { return _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BABX() (TB, TA, TB, TX) { return _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BABY() (TB, TA, TB, TY) { return _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BABZ() (TB, TA, TB, TZ) { return _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BABW() (TB, TA, TB, TW) { return _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BABA() (TB, TA, TB, TA) { return _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BABB() (TB, TA, TB, TB) { return _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BABC() (TB, TA, TB, TC) { return _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BACX() (TB, TA, TC, TX) { return _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BACY() (TB, TA, TC, TY) { return _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BACZ() (TB, TA, TC, TZ) { return _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BACW() (TB, TA, TC, TW) { return _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BACA() (TB, TA, TC, TA) { return _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BACB() (TB, TA, TC, TB) { return _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BACC() (TB, TA, TC, TC) { return _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBXX() (TB, TB, TX, TX) { return _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBXY() (TB, TB, TX, TY) { return _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBXZ() (TB, TB, TX, TZ) { return _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBXW() (TB, TB, TX, TW) { return _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBXA() (TB, TB, TX, TA) { return _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBXB() (TB, TB, TX, TB) { return _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBXC() (TB, TB, TX, TC) { return _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBYX() (TB, TB, TY, TX) { return _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBYY() (TB, TB, TY, TY) { return _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBYZ() (TB, TB, TY, TZ) { return _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBYW() (TB, TB, TY, TW) { return _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBYA() (TB, TB, TY, TA) { return _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBYB() (TB, TB, TY, TB) { return _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBYC() (TB, TB, TY, TC) { return _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBZX() (TB, TB, TZ, TX) { return _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBZY() (TB, TB, TZ, TY) { return _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBZZ() (TB, TB, TZ, TZ) { return _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBZW() (TB, TB, TZ, TW) { return _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBZA() (TB, TB, TZ, TA) { return _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBZB() (TB, TB, TZ, TB) { return _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBZC() (TB, TB, TZ, TC) { return _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBWX() (TB, TB, TW, TX) { return _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBWY() (TB, TB, TW, TY) { return _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBWZ() (TB, TB, TW, TZ) { return _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBWW() (TB, TB, TW, TW) { return _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBWA() (TB, TB, TW, TA) { return _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBWB() (TB, TB, TW, TB) { return _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBWC() (TB, TB, TW, TC) { return _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBAX() (TB, TB, TA, TX) { return _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBAY() (TB, TB, TA, TY) { return _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBAZ() (TB, TB, TA, TZ) { return _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBAW() (TB, TB, TA, TW) { return _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBAA() (TB, TB, TA, TA) { return _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBAB() (TB, TB, TA, TB) { return _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBAC() (TB, TB, TA, TC) { return _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBBX() (TB, TB, TB, TX) { return _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBBY() (TB, TB, TB, TY) { return _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBBZ() (TB, TB, TB, TZ) { return _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBBW() (TB, TB, TB, TW) { return _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBBA() (TB, TB, TB, TA) { return _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBBB() (TB, TB, TB, TB) { return _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBBC() (TB, TB, TB, TC) { return _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBCX() (TB, TB, TC, TX) { return _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBCY() (TB, TB, TC, TY) { return _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBCZ() (TB, TB, TC, TZ) { return _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBCW() (TB, TB, TC, TW) { return _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBCA() (TB, TB, TC, TA) { return _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBCB() (TB, TB, TC, TB) { return _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBCC() (TB, TB, TC, TC) { return _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCXX() (TB, TC, TX, TX) { return _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCXY() (TB, TC, TX, TY) { return _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCXZ() (TB, TC, TX, TZ) { return _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCXW() (TB, TC, TX, TW) { return _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCXA() (TB, TC, TX, TA) { return _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCXB() (TB, TC, TX, TB) { return _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCXC() (TB, TC, TX, TC) { return _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCYX() (TB, TC, TY, TX) { return _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCYY() (TB, TC, TY, TY) { return _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCYZ() (TB, TC, TY, TZ) { return _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCYW() (TB, TC, TY, TW) { return _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCYA() (TB, TC, TY, TA) { return _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCYB() (TB, TC, TY, TB) { return _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCYC() (TB, TC, TY, TC) { return _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCZX() (TB, TC, TZ, TX) { return _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCZY() (TB, TC, TZ, TY) { return _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCZZ() (TB, TC, TZ, TZ) { return _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCZW() (TB, TC, TZ, TW) { return _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCZA() (TB, TC, TZ, TA) { return _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCZB() (TB, TC, TZ, TB) { return _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCZC() (TB, TC, TZ, TC) { return _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCWX() (TB, TC, TW, TX) { return _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCWY() (TB, TC, TW, TY) { return _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCWZ() (TB, TC, TW, TZ) { return _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCWW() (TB, TC, TW, TW) { return _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCWA() (TB, TC, TW, TA) { return _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCWB() (TB, TC, TW, TB) { return _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCWC() (TB, TC, TW, TC) { return _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCAX() (TB, TC, TA, TX) { return _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCAY() (TB, TC, TA, TY) { return _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCAZ() (TB, TC, TA, TZ) { return _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCAW() (TB, TC, TA, TW) { return _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCAA() (TB, TC, TA, TA) { return _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCAB() (TB, TC, TA, TB) { return _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCAC() (TB, TC, TA, TC) { return _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCBX() (TB, TC, TB, TX) { return _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCBY() (TB, TC, TB, TY) { return _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCBZ() (TB, TC, TB, TZ) { return _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCBW() (TB, TC, TB, TW) { return _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCBA() (TB, TC, TB, TA) { return _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCBB() (TB, TC, TB, TB) { return _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCBC() (TB, TC, TB, TC) { return _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCCX() (TB, TC, TC, TX) { return _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCCY() (TB, TC, TC, TY) { return _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCCZ() (TB, TC, TC, TZ) { return _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCCW() (TB, TC, TC, TW) { return _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCCA() (TB, TC, TC, TA) { return _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCCB() (TB, TC, TC, TB) { return _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCCC() (TB, TC, TC, TC) { return _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXXX() (TC, TX, TX, TX) { return _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXXY() (TC, TX, TX, TY) { return _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXXZ() (TC, TX, TX, TZ) { return _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXXW() (TC, TX, TX, TW) { return _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXXA() (TC, TX, TX, TA) { return _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXXB() (TC, TX, TX, TB) { return _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXXC() (TC, TX, TX, TC) { return _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXYX() (TC, TX, TY, TX) { return _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXYY() (TC, TX, TY, TY) { return _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXYZ() (TC, TX, TY, TZ) { return _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXYW() (TC, TX, TY, TW) { return _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXYA() (TC, TX, TY, TA) { return _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXYB() (TC, TX, TY, TB) { return _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXYC() (TC, TX, TY, TC) { return _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXZX() (TC, TX, TZ, TX) { return _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXZY() (TC, TX, TZ, TY) { return _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXZZ() (TC, TX, TZ, TZ) { return _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXZW() (TC, TX, TZ, TW) { return _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXZA() (TC, TX, TZ, TA) { return _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXZB() (TC, TX, TZ, TB) { return _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXZC() (TC, TX, TZ, TC) { return _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXWX() (TC, TX, TW, TX) { return _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXWY() (TC, TX, TW, TY) { return _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXWZ() (TC, TX, TW, TZ) { return _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXWW() (TC, TX, TW, TW) { return _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXWA() (TC, TX, TW, TA) { return _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXWB() (TC, TX, TW, TB) { return _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXWC() (TC, TX, TW, TC) { return _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXAX() (TC, TX, TA, TX) { return _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXAY() (TC, TX, TA, TY) { return _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXAZ() (TC, TX, TA, TZ) { return _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXAW() (TC, TX, TA, TW) { return _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXAA() (TC, TX, TA, TA) { return _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXAB() (TC, TX, TA, TB) { return _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXAC() (TC, TX, TA, TC) { return _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXBX() (TC, TX, TB, TX) { return _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXBY() (TC, TX, TB, TY) { return _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXBZ() (TC, TX, TB, TZ) { return _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXBW() (TC, TX, TB, TW) { return _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXBA() (TC, TX, TB, TA) { return _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXBB() (TC, TX, TB, TB) { return _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXBC() (TC, TX, TB, TC) { return _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXCX() (TC, TX, TC, TX) { return _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXCY() (TC, TX, TC, TY) { return _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXCZ() (TC, TX, TC, TZ) { return _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXCW() (TC, TX, TC, TW) { return _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXCA() (TC, TX, TC, TA) { return _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXCB() (TC, TX, TC, TB) { return _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXCC() (TC, TX, TC, TC) { return _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYXX() (TC, TY, TX, TX) { return _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYXY() (TC, TY, TX, TY) { return _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYXZ() (TC, TY, TX, TZ) { return _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYXW() (TC, TY, TX, TW) { return _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYXA() (TC, TY, TX, TA) { return _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYXB() (TC, TY, TX, TB) { return _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYXC() (TC, TY, TX, TC) { return _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYYX() (TC, TY, TY, TX) { return _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYYY() (TC, TY, TY, TY) { return _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYYZ() (TC, TY, TY, TZ) { return _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYYW() (TC, TY, TY, TW) { return _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYYA() (TC, TY, TY, TA) { return _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYYB() (TC, TY, TY, TB) { return _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYYC() (TC, TY, TY, TC) { return _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYZX() (TC, TY, TZ, TX) { return _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYZY() (TC, TY, TZ, TY) { return _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYZZ() (TC, TY, TZ, TZ) { return _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYZW() (TC, TY, TZ, TW) { return _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYZA() (TC, TY, TZ, TA) { return _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYZB() (TC, TY, TZ, TB) { return _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYZC() (TC, TY, TZ, TC) { return _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYWX() (TC, TY, TW, TX) { return _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYWY() (TC, TY, TW, TY) { return _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYWZ() (TC, TY, TW, TZ) { return _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYWW() (TC, TY, TW, TW) { return _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYWA() (TC, TY, TW, TA) { return _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYWB() (TC, TY, TW, TB) { return _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYWC() (TC, TY, TW, TC) { return _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYAX() (TC, TY, TA, TX) { return _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYAY() (TC, TY, TA, TY) { return _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYAZ() (TC, TY, TA, TZ) { return _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYAW() (TC, TY, TA, TW) { return _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYAA() (TC, TY, TA, TA) { return _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYAB() (TC, TY, TA, TB) { return _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYAC() (TC, TY, TA, TC) { return _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYBX() (TC, TY, TB, TX) { return _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYBY() (TC, TY, TB, TY) { return _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYBZ() (TC, TY, TB, TZ) { return _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYBW() (TC, TY, TB, TW) { return _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYBA() (TC, TY, TB, TA) { return _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYBB() (TC, TY, TB, TB) { return _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYBC() (TC, TY, TB, TC) { return _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYCX() (TC, TY, TC, TX) { return _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYCY() (TC, TY, TC, TY) { return _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYCZ() (TC, TY, TC, TZ) { return _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYCW() (TC, TY, TC, TW) { return _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYCA() (TC, TY, TC, TA) { return _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYCB() (TC, TY, TC, TB) { return _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYCC() (TC, TY, TC, TC) { return _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZXX() (TC, TZ, TX, TX) { return _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZXY() (TC, TZ, TX, TY) { return _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZXZ() (TC, TZ, TX, TZ) { return _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZXW() (TC, TZ, TX, TW) { return _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZXA() (TC, TZ, TX, TA) { return _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZXB() (TC, TZ, TX, TB) { return _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZXC() (TC, TZ, TX, TC) { return _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZYX() (TC, TZ, TY, TX) { return _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZYY() (TC, TZ, TY, TY) { return _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZYZ() (TC, TZ, TY, TZ) { return _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZYW() (TC, TZ, TY, TW) { return _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZYA() (TC, TZ, TY, TA) { return _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZYB() (TC, TZ, TY, TB) { return _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZYC() (TC, TZ, TY, TC) { return _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZZX() (TC, TZ, TZ, TX) { return _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZZY() (TC, TZ, TZ, TY) { return _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZZZ() (TC, TZ, TZ, TZ) { return _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZZW() (TC, TZ, TZ, TW) { return _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZZA() (TC, TZ, TZ, TA) { return _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZZB() (TC, TZ, TZ, TB) { return _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZZC() (TC, TZ, TZ, TC) { return _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZWX() (TC, TZ, TW, TX) { return _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZWY() (TC, TZ, TW, TY) { return _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZWZ() (TC, TZ, TW, TZ) { return _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZWW() (TC, TZ, TW, TW) { return _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZWA() (TC, TZ, TW, TA) { return _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZWB() (TC, TZ, TW, TB) { return _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZWC() (TC, TZ, TW, TC) { return _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZAX() (TC, TZ, TA, TX) { return _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZAY() (TC, TZ, TA, TY) { return _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZAZ() (TC, TZ, TA, TZ) { return _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZAW() (TC, TZ, TA, TW) { return _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZAA() (TC, TZ, TA, TA) { return _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZAB() (TC, TZ, TA, TB) { return _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZAC() (TC, TZ, TA, TC) { return _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZBX() (TC, TZ, TB, TX) { return _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZBY() (TC, TZ, TB, TY) { return _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZBZ() (TC, TZ, TB, TZ) { return _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZBW() (TC, TZ, TB, TW) { return _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZBA() (TC, TZ, TB, TA) { return _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZBB() (TC, TZ, TB, TB) { return _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZBC() (TC, TZ, TB, TC) { return _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZCX() (TC, TZ, TC, TX) { return _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZCY() (TC, TZ, TC, TY) { return _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZCZ() (TC, TZ, TC, TZ) { return _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZCW() (TC, TZ, TC, TW) { return _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZCA() (TC, TZ, TC, TA) { return _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZCB() (TC, TZ, TC, TB) { return _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZCC() (TC, TZ, TC, TC) { return _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWXX() (TC, TW, TX, TX) { return _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWXY() (TC, TW, TX, TY) { return _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWXZ() (TC, TW, TX, TZ) { return _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWXW() (TC, TW, TX, TW) { return _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWXA() (TC, TW, TX, TA) { return _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWXB() (TC, TW, TX, TB) { return _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWXC() (TC, TW, TX, TC) { return _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWYX() (TC, TW, TY, TX) { return _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWYY() (TC, TW, TY, TY) { return _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWYZ() (TC, TW, TY, TZ) { return _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWYW() (TC, TW, TY, TW) { return _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWYA() (TC, TW, TY, TA) { return _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWYB() (TC, TW, TY, TB) { return _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWYC() (TC, TW, TY, TC) { return _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWZX() (TC, TW, TZ, TX) { return _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWZY() (TC, TW, TZ, TY) { return _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWZZ() (TC, TW, TZ, TZ) { return _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWZW() (TC, TW, TZ, TW) { return _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWZA() (TC, TW, TZ, TA) { return _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWZB() (TC, TW, TZ, TB) { return _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWZC() (TC, TW, TZ, TC) { return _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWWX() (TC, TW, TW, TX) { return _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWWY() (TC, TW, TW, TY) { return _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWWZ() (TC, TW, TW, TZ) { return _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWWW() (TC, TW, TW, TW) { return _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWWA() (TC, TW, TW, TA) { return _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWWB() (TC, TW, TW, TB) { return _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWWC() (TC, TW, TW, TC) { return _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWAX() (TC, TW, TA, TX) { return _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWAY() (TC, TW, TA, TY) { return _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWAZ() (TC, TW, TA, TZ) { return _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWAW() (TC, TW, TA, TW) { return _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWAA() (TC, TW, TA, TA) { return _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWAB() (TC, TW, TA, TB) { return _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWAC() (TC, TW, TA, TC) { return _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWBX() (TC, TW, TB, TX) { return _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWBY() (TC, TW, TB, TY) { return _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWBZ() (TC, TW, TB, TZ) { return _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWBW() (TC, TW, TB, TW) { return _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWBA() (TC, TW, TB, TA) { return _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWBB() (TC, TW, TB, TB) { return _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWBC() (TC, TW, TB, TC) { return _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWCX() (TC, TW, TC, TX) { return _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWCY() (TC, TW, TC, TY) { return _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWCZ() (TC, TW, TC, TZ) { return _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWCW() (TC, TW, TC, TW) { return _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWCA() (TC, TW, TC, TA) { return _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWCB() (TC, TW, TC, TB) { return _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWCC() (TC, TW, TC, TC) { return _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAXX() (TC, TA, TX, TX) { return _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAXY() (TC, TA, TX, TY) { return _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAXZ() (TC, TA, TX, TZ) { return _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAXW() (TC, TA, TX, TW) { return _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAXA() (TC, TA, TX, TA) { return _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAXB() (TC, TA, TX, TB) { return _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAXC() (TC, TA, TX, TC) { return _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAYX() (TC, TA, TY, TX) { return _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAYY() (TC, TA, TY, TY) { return _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAYZ() (TC, TA, TY, TZ) { return _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAYW() (TC, TA, TY, TW) { return _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAYA() (TC, TA, TY, TA) { return _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAYB() (TC, TA, TY, TB) { return _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAYC() (TC, TA, TY, TC) { return _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAZX() (TC, TA, TZ, TX) { return _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAZY() (TC, TA, TZ, TY) { return _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAZZ() (TC, TA, TZ, TZ) { return _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAZW() (TC, TA, TZ, TW) { return _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAZA() (TC, TA, TZ, TA) { return _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAZB() (TC, TA, TZ, TB) { return _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAZC() (TC, TA, TZ, TC) { return _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAWX() (TC, TA, TW, TX) { return _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAWY() (TC, TA, TW, TY) { return _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAWZ() (TC, TA, TW, TZ) { return _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAWW() (TC, TA, TW, TW) { return _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAWA() (TC, TA, TW, TA) { return _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAWB() (TC, TA, TW, TB) { return _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAWC() (TC, TA, TW, TC) { return _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAAX() (TC, TA, TA, TX) { return _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAAY() (TC, TA, TA, TY) { return _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAAZ() (TC, TA, TA, TZ) { return _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAAW() (TC, TA, TA, TW) { return _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAAA() (TC, TA, TA, TA) { return _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAAB() (TC, TA, TA, TB) { return _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAAC() (TC, TA, TA, TC) { return _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CABX() (TC, TA, TB, TX) { return _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CABY() (TC, TA, TB, TY) { return _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CABZ() (TC, TA, TB, TZ) { return _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CABW() (TC, TA, TB, TW) { return _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CABA() (TC, TA, TB, TA) { return _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CABB() (TC, TA, TB, TB) { return _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CABC() (TC, TA, TB, TC) { return _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CACX() (TC, TA, TC, TX) { return _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CACY() (TC, TA, TC, TY) { return _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CACZ() (TC, TA, TC, TZ) { return _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CACW() (TC, TA, TC, TW) { return _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CACA() (TC, TA, TC, TA) { return _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CACB() (TC, TA, TC, TB) { return _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CACC() (TC, TA, TC, TC) { return _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBXX() (TC, TB, TX, TX) { return _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBXY() (TC, TB, TX, TY) { return _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBXZ() (TC, TB, TX, TZ) { return _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBXW() (TC, TB, TX, TW) { return _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBXA() (TC, TB, TX, TA) { return _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBXB() (TC, TB, TX, TB) { return _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBXC() (TC, TB, TX, TC) { return _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBYX() (TC, TB, TY, TX) { return _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBYY() (TC, TB, TY, TY) { return _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBYZ() (TC, TB, TY, TZ) { return _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBYW() (TC, TB, TY, TW) { return _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBYA() (TC, TB, TY, TA) { return _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBYB() (TC, TB, TY, TB) { return _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBYC() (TC, TB, TY, TC) { return _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBZX() (TC, TB, TZ, TX) { return _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBZY() (TC, TB, TZ, TY) { return _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBZZ() (TC, TB, TZ, TZ) { return _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBZW() (TC, TB, TZ, TW) { return _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBZA() (TC, TB, TZ, TA) { return _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBZB() (TC, TB, TZ, TB) { return _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBZC() (TC, TB, TZ, TC) { return _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBWX() (TC, TB, TW, TX) { return _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBWY() (TC, TB, TW, TY) { return _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBWZ() (TC, TB, TW, TZ) { return _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBWW() (TC, TB, TW, TW) { return _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBWA() (TC, TB, TW, TA) { return _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBWB() (TC, TB, TW, TB) { return _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBWC() (TC, TB, TW, TC) { return _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBAX() (TC, TB, TA, TX) { return _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBAY() (TC, TB, TA, TY) { return _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBAZ() (TC, TB, TA, TZ) { return _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBAW() (TC, TB, TA, TW) { return _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBAA() (TC, TB, TA, TA) { return _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBAB() (TC, TB, TA, TB) { return _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBAC() (TC, TB, TA, TC) { return _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBBX() (TC, TB, TB, TX) { return _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBBY() (TC, TB, TB, TY) { return _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBBZ() (TC, TB, TB, TZ) { return _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBBW() (TC, TB, TB, TW) { return _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBBA() (TC, TB, TB, TA) { return _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBBB() (TC, TB, TB, TB) { return _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBBC() (TC, TB, TB, TC) { return _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBCX() (TC, TB, TC, TX) { return _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBCY() (TC, TB, TC, TY) { return _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBCZ() (TC, TB, TC, TZ) { return _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBCW() (TC, TB, TC, TW) { return _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBCA() (TC, TB, TC, TA) { return _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBCB() (TC, TB, TC, TB) { return _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBCC() (TC, TB, TC, TC) { return _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCXX() (TC, TC, TX, TX) { return _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCXY() (TC, TC, TX, TY) { return _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCXZ() (TC, TC, TX, TZ) { return _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCXW() (TC, TC, TX, TW) { return _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCXA() (TC, TC, TX, TA) { return _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCXB() (TC, TC, TX, TB) { return _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCXC() (TC, TC, TX, TC) { return _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCYX() (TC, TC, TY, TX) { return _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCYY() (TC, TC, TY, TY) { return _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCYZ() (TC, TC, TY, TZ) { return _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCYW() (TC, TC, TY, TW) { return _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCYA() (TC, TC, TY, TA) { return _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCYB() (TC, TC, TY, TB) { return _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCYC() (TC, TC, TY, TC) { return _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCZX() (TC, TC, TZ, TX) { return _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCZY() (TC, TC, TZ, TY) { return _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCZZ() (TC, TC, TZ, TZ) { return _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCZW() (TC, TC, TZ, TW) { return _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCZA() (TC, TC, TZ, TA) { return _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCZB() (TC, TC, TZ, TB) { return _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCZC() (TC, TC, TZ, TC) { return _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCWX() (TC, TC, TW, TX) { return _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCWY() (TC, TC, TW, TY) { return _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCWZ() (TC, TC, TW, TZ) { return _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCWW() (TC, TC, TW, TW) { return _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCWA() (TC, TC, TW, TA) { return _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCWB() (TC, TC, TW, TB) { return _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCWC() (TC, TC, TW, TC) { return _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCAX() (TC, TC, TA, TX) { return _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCAY() (TC, TC, TA, TY) { return _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCAZ() (TC, TC, TA, TZ) { return _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCAW() (TC, TC, TA, TW) { return _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCAA() (TC, TC, TA, TA) { return _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCAB() (TC, TC, TA, TB) { return _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCAC() (TC, TC, TA, TC) { return _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCBX() (TC, TC, TB, TX) { return _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCBY() (TC, TC, TB, TY) { return _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCBZ() (TC, TC, TB, TZ) { return _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCBW() (TC, TC, TB, TW) { return _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCBA() (TC, TC, TB, TA) { return _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCBB() (TC, TC, TB, TB) { return _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCBC() (TC, TC, TB, TC) { return _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCCX() (TC, TC, TC, TX) { return _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCCY() (TC, TC, TC, TY) { return _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCCZ() (TC, TC, TC, TZ) { return _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCCW() (TC, TC, TC, TW) { return _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCCA() (TC, TC, TC, TA) { return _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCCB() (TC, TC, TC, TB) { return _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCCC() (TC, TC, TC, TC) { return _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXXXX() (TX, TX, TX, TX, TX) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXXXY() (TX, TX, TX, TX, TY) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXXXZ() (TX, TX, TX, TX, TZ) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXXXW() (TX, TX, TX, TX, TW) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXXXA() (TX, TX, TX, TX, TA) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXXXB() (TX, TX, TX, TX, TB) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXXXC() (TX, TX, TX, TX, TC) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXXYX() (TX, TX, TX, TY, TX) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXXYY() (TX, TX, TX, TY, TY) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXXYZ() (TX, TX, TX, TY, TZ) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXXYW() (TX, TX, TX, TY, TW) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXXYA() (TX, TX, TX, TY, TA) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXXYB() (TX, TX, TX, TY, TB) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXXYC() (TX, TX, TX, TY, TC) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXXZX() (TX, TX, TX, TZ, TX) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXXZY() (TX, TX, TX, TZ, TY) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXXZZ() (TX, TX, TX, TZ, TZ) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXXZW() (TX, TX, TX, TZ, TW) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXXZA() (TX, TX, TX, TZ, TA) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXXZB() (TX, TX, TX, TZ, TB) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXXZC() (TX, TX, TX, TZ, TC) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXXWX() (TX, TX, TX, TW, TX) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXXWY() (TX, TX, TX, TW, TY) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXXWZ() (TX, TX, TX, TW, TZ) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXXWW() (TX, TX, TX, TW, TW) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXXWA() (TX, TX, TX, TW, TA) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXXWB() (TX, TX, TX, TW, TB) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXXWC() (TX, TX, TX, TW, TC) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXXAX() (TX, TX, TX, TA, TX) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXXAY() (TX, TX, TX, TA, TY) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXXAZ() (TX, TX, TX, TA, TZ) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXXAW() (TX, TX, TX, TA, TW) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXXAA() (TX, TX, TX, TA, TA) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXXAB() (TX, TX, TX, TA, TB) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXXAC() (TX, TX, TX, TA, TC) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXXBX() (TX, TX, TX, TB, TX) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXXBY() (TX, TX, TX, TB, TY) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXXBZ() (TX, TX, TX, TB, TZ) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXXBW() (TX, TX, TX, TB, TW) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXXBA() (TX, TX, TX, TB, TA) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXXBB() (TX, TX, TX, TB, TB) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXXBC() (TX, TX, TX, TB, TC) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXXCX() (TX, TX, TX, TC, TX) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXXCY() (TX, TX, TX, TC, TY) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXXCZ() (TX, TX, TX, TC, TZ) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXXCW() (TX, TX, TX, TC, TW) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXXCA() (TX, TX, TX, TC, TA) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXXCB() (TX, TX, TX, TC, TB) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXXCC() (TX, TX, TX, TC, TC) { return _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXYXX() (TX, TX, TY, TX, TX) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXYXY() (TX, TX, TY, TX, TY) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXYXZ() (TX, TX, TY, TX, TZ) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXYXW() (TX, TX, TY, TX, TW) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXYXA() (TX, TX, TY, TX, TA) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXYXB() (TX, TX, TY, TX, TB) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXYXC() (TX, TX, TY, TX, TC) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXYYX() (TX, TX, TY, TY, TX) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXYYY() (TX, TX, TY, TY, TY) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXYYZ() (TX, TX, TY, TY, TZ) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXYYW() (TX, TX, TY, TY, TW) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXYYA() (TX, TX, TY, TY, TA) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXYYB() (TX, TX, TY, TY, TB) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXYYC() (TX, TX, TY, TY, TC) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXYZX() (TX, TX, TY, TZ, TX) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXYZY() (TX, TX, TY, TZ, TY) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXYZZ() (TX, TX, TY, TZ, TZ) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXYZW() (TX, TX, TY, TZ, TW) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXYZA() (TX, TX, TY, TZ, TA) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXYZB() (TX, TX, TY, TZ, TB) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXYZC() (TX, TX, TY, TZ, TC) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXYWX() (TX, TX, TY, TW, TX) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXYWY() (TX, TX, TY, TW, TY) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXYWZ() (TX, TX, TY, TW, TZ) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXYWW() (TX, TX, TY, TW, TW) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXYWA() (TX, TX, TY, TW, TA) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXYWB() (TX, TX, TY, TW, TB) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXYWC() (TX, TX, TY, TW, TC) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXYAX() (TX, TX, TY, TA, TX) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXYAY() (TX, TX, TY, TA, TY) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXYAZ() (TX, TX, TY, TA, TZ) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXYAW() (TX, TX, TY, TA, TW) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXYAA() (TX, TX, TY, TA, TA) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXYAB() (TX, TX, TY, TA, TB) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXYAC() (TX, TX, TY, TA, TC) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXYBX() (TX, TX, TY, TB, TX) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXYBY() (TX, TX, TY, TB, TY) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXYBZ() (TX, TX, TY, TB, TZ) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXYBW() (TX, TX, TY, TB, TW) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXYBA() (TX, TX, TY, TB, TA) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXYBB() (TX, TX, TY, TB, TB) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXYBC() (TX, TX, TY, TB, TC) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXYCX() (TX, TX, TY, TC, TX) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXYCY() (TX, TX, TY, TC, TY) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXYCZ() (TX, TX, TY, TC, TZ) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXYCW() (TX, TX, TY, TC, TW) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXYCA() (TX, TX, TY, TC, TA) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXYCB() (TX, TX, TY, TC, TB) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXYCC() (TX, TX, TY, TC, TC) { return _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXZXX() (TX, TX, TZ, TX, TX) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXZXY() (TX, TX, TZ, TX, TY) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXZXZ() (TX, TX, TZ, TX, TZ) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXZXW() (TX, TX, TZ, TX, TW) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXZXA() (TX, TX, TZ, TX, TA) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXZXB() (TX, TX, TZ, TX, TB) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXZXC() (TX, TX, TZ, TX, TC) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXZYX() (TX, TX, TZ, TY, TX) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXZYY() (TX, TX, TZ, TY, TY) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXZYZ() (TX, TX, TZ, TY, TZ) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXZYW() (TX, TX, TZ, TY, TW) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXZYA() (TX, TX, TZ, TY, TA) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXZYB() (TX, TX, TZ, TY, TB) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXZYC() (TX, TX, TZ, TY, TC) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXZZX() (TX, TX, TZ, TZ, TX) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXZZY() (TX, TX, TZ, TZ, TY) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXZZZ() (TX, TX, TZ, TZ, TZ) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXZZW() (TX, TX, TZ, TZ, TW) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXZZA() (TX, TX, TZ, TZ, TA) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXZZB() (TX, TX, TZ, TZ, TB) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXZZC() (TX, TX, TZ, TZ, TC) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXZWX() (TX, TX, TZ, TW, TX) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXZWY() (TX, TX, TZ, TW, TY) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXZWZ() (TX, TX, TZ, TW, TZ) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXZWW() (TX, TX, TZ, TW, TW) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXZWA() (TX, TX, TZ, TW, TA) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXZWB() (TX, TX, TZ, TW, TB) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXZWC() (TX, TX, TZ, TW, TC) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXZAX() (TX, TX, TZ, TA, TX) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXZAY() (TX, TX, TZ, TA, TY) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXZAZ() (TX, TX, TZ, TA, TZ) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXZAW() (TX, TX, TZ, TA, TW) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXZAA() (TX, TX, TZ, TA, TA) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXZAB() (TX, TX, TZ, TA, TB) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXZAC() (TX, TX, TZ, TA, TC) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXZBX() (TX, TX, TZ, TB, TX) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXZBY() (TX, TX, TZ, TB, TY) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXZBZ() (TX, TX, TZ, TB, TZ) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXZBW() (TX, TX, TZ, TB, TW) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXZBA() (TX, TX, TZ, TB, TA) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXZBB() (TX, TX, TZ, TB, TB) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXZBC() (TX, TX, TZ, TB, TC) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXZCX() (TX, TX, TZ, TC, TX) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXZCY() (TX, TX, TZ, TC, TY) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXZCZ() (TX, TX, TZ, TC, TZ) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXZCW() (TX, TX, TZ, TC, TW) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXZCA() (TX, TX, TZ, TC, TA) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXZCB() (TX, TX, TZ, TC, TB) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXZCC() (TX, TX, TZ, TC, TC) { return _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXWXX() (TX, TX, TW, TX, TX) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXWXY() (TX, TX, TW, TX, TY) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXWXZ() (TX, TX, TW, TX, TZ) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXWXW() (TX, TX, TW, TX, TW) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXWXA() (TX, TX, TW, TX, TA) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXWXB() (TX, TX, TW, TX, TB) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXWXC() (TX, TX, TW, TX, TC) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXWYX() (TX, TX, TW, TY, TX) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXWYY() (TX, TX, TW, TY, TY) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXWYZ() (TX, TX, TW, TY, TZ) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXWYW() (TX, TX, TW, TY, TW) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXWYA() (TX, TX, TW, TY, TA) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXWYB() (TX, TX, TW, TY, TB) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXWYC() (TX, TX, TW, TY, TC) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXWZX() (TX, TX, TW, TZ, TX) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXWZY() (TX, TX, TW, TZ, TY) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXWZZ() (TX, TX, TW, TZ, TZ) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXWZW() (TX, TX, TW, TZ, TW) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXWZA() (TX, TX, TW, TZ, TA) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXWZB() (TX, TX, TW, TZ, TB) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXWZC() (TX, TX, TW, TZ, TC) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXWWX() (TX, TX, TW, TW, TX) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXWWY() (TX, TX, TW, TW, TY) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXWWZ() (TX, TX, TW, TW, TZ) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXWWW() (TX, TX, TW, TW, TW) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXWWA() (TX, TX, TW, TW, TA) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXWWB() (TX, TX, TW, TW, TB) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXWWC() (TX, TX, TW, TW, TC) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXWAX() (TX, TX, TW, TA, TX) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXWAY() (TX, TX, TW, TA, TY) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXWAZ() (TX, TX, TW, TA, TZ) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXWAW() (TX, TX, TW, TA, TW) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXWAA() (TX, TX, TW, TA, TA) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXWAB() (TX, TX, TW, TA, TB) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXWAC() (TX, TX, TW, TA, TC) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXWBX() (TX, TX, TW, TB, TX) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXWBY() (TX, TX, TW, TB, TY) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXWBZ() (TX, TX, TW, TB, TZ) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXWBW() (TX, TX, TW, TB, TW) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXWBA() (TX, TX, TW, TB, TA) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXWBB() (TX, TX, TW, TB, TB) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXWBC() (TX, TX, TW, TB, TC) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXWCX() (TX, TX, TW, TC, TX) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXWCY() (TX, TX, TW, TC, TY) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXWCZ() (TX, TX, TW, TC, TZ) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXWCW() (TX, TX, TW, TC, TW) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXWCA() (TX, TX, TW, TC, TA) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXWCB() (TX, TX, TW, TC, TB) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXWCC() (TX, TX, TW, TC, TC) { return _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXAXX() (TX, TX, TA, TX, TX) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXAXY() (TX, TX, TA, TX, TY) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXAXZ() (TX, TX, TA, TX, TZ) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXAXW() (TX, TX, TA, TX, TW) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXAXA() (TX, TX, TA, TX, TA) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXAXB() (TX, TX, TA, TX, TB) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXAXC() (TX, TX, TA, TX, TC) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXAYX() (TX, TX, TA, TY, TX) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXAYY() (TX, TX, TA, TY, TY) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXAYZ() (TX, TX, TA, TY, TZ) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXAYW() (TX, TX, TA, TY, TW) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXAYA() (TX, TX, TA, TY, TA) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXAYB() (TX, TX, TA, TY, TB) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXAYC() (TX, TX, TA, TY, TC) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXAZX() (TX, TX, TA, TZ, TX) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXAZY() (TX, TX, TA, TZ, TY) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXAZZ() (TX, TX, TA, TZ, TZ) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXAZW() (TX, TX, TA, TZ, TW) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXAZA() (TX, TX, TA, TZ, TA) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXAZB() (TX, TX, TA, TZ, TB) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXAZC() (TX, TX, TA, TZ, TC) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXAWX() (TX, TX, TA, TW, TX) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXAWY() (TX, TX, TA, TW, TY) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXAWZ() (TX, TX, TA, TW, TZ) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXAWW() (TX, TX, TA, TW, TW) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXAWA() (TX, TX, TA, TW, TA) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXAWB() (TX, TX, TA, TW, TB) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXAWC() (TX, TX, TA, TW, TC) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXAAX() (TX, TX, TA, TA, TX) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXAAY() (TX, TX, TA, TA, TY) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXAAZ() (TX, TX, TA, TA, TZ) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXAAW() (TX, TX, TA, TA, TW) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXAAA() (TX, TX, TA, TA, TA) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXAAB() (TX, TX, TA, TA, TB) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXAAC() (TX, TX, TA, TA, TC) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXABX() (TX, TX, TA, TB, TX) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXABY() (TX, TX, TA, TB, TY) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXABZ() (TX, TX, TA, TB, TZ) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXABW() (TX, TX, TA, TB, TW) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXABA() (TX, TX, TA, TB, TA) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXABB() (TX, TX, TA, TB, TB) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXABC() (TX, TX, TA, TB, TC) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXACX() (TX, TX, TA, TC, TX) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXACY() (TX, TX, TA, TC, TY) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXACZ() (TX, TX, TA, TC, TZ) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXACW() (TX, TX, TA, TC, TW) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXACA() (TX, TX, TA, TC, TA) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXACB() (TX, TX, TA, TC, TB) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXACC() (TX, TX, TA, TC, TC) { return _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXBXX() (TX, TX, TB, TX, TX) { return _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXBXY() (TX, TX, TB, TX, TY) { return _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXBXZ() (TX, TX, TB, TX, TZ) { return _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXBXW() (TX, TX, TB, TX, TW) { return _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXBXA() (TX, TX, TB, TX, TA) { return _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXBXB() (TX, TX, TB, TX, TB) { return _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXBXC() (TX, TX, TB, TX, TC) { return _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXBYX() (TX, TX, TB, TY, TX) { return _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXBYY() (TX, TX, TB, TY, TY) { return _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXBYZ() (TX, TX, TB, TY, TZ) { return _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXBYW() (TX, TX, TB, TY, TW) { return _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXBYA() (TX, TX, TB, TY, TA) { return _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXBYB() (TX, TX, TB, TY, TB) { return _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXBYC() (TX, TX, TB, TY, TC) { return _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXBZX() (TX, TX, TB, TZ, TX) { return _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXBZY() (TX, TX, TB, TZ, TY) { return _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXBZZ() (TX, TX, TB, TZ, TZ) { return _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXBZW() (TX, TX, TB, TZ, TW) { return _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXBZA() (TX, TX, TB, TZ, TA) { return _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXBZB() (TX, TX, TB, TZ, TB) { return _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXBZC() (TX, TX, TB, TZ, TC) { return _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXBWX() (TX, TX, TB, TW, TX) { return _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXBWY() (TX, TX, TB, TW, TY) { return _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXBWZ() (TX, TX, TB, TW, TZ) { return _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXBWW() (TX, TX, TB, TW, TW) { return _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXBWA() (TX, TX, TB, TW, TA) { return _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXBWB() (TX, TX, TB, TW, TB) { return _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXBWC() (TX, TX, TB, TW, TC) { return _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXBAX() (TX, TX, TB, TA, TX) { return _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXBAY() (TX, TX, TB, TA, TY) { return _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXBAZ() (TX, TX, TB, TA, TZ) { return _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXBAW() (TX, TX, TB, TA, TW) { return _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXBAA() (TX, TX, TB, TA, TA) { return _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXBAB() (TX, TX, TB, TA, TB) { return _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXBAC() (TX, TX, TB, TA, TC) { return _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXBBX() (TX, TX, TB, TB, TX) { return _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXBBY() (TX, TX, TB, TB, TY) { return _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXBBZ() (TX, TX, TB, TB, TZ) { return _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXBBW() (TX, TX, TB, TB, TW) { return _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXBBA() (TX, TX, TB, TB, TA) { return _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXBBB() (TX, TX, TB, TB, TB) { return _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXBBC() (TX, TX, TB, TB, TC) { return _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXBCX() (TX, TX, TB, TC, TX) { return _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXBCY() (TX, TX, TB, TC, TY) { return _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXBCZ() (TX, TX, TB, TC, TZ) { return _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXBCW() (TX, TX, TB, TC, TW) { return _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXBCA() (TX, TX, TB, TC, TA) { return _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXBCB() (TX, TX, TB, TC, TB) { return _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXBCC() (TX, TX, TB, TC, TC) { return _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXCXX() (TX, TX, TC, TX, TX) { return _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXCXY() (TX, TX, TC, TX, TY) { return _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXCXZ() (TX, TX, TC, TX, TZ) { return _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXCXW() (TX, TX, TC, TX, TW) { return _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXCXA() (TX, TX, TC, TX, TA) { return _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXCXB() (TX, TX, TC, TX, TB) { return _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXCXC() (TX, TX, TC, TX, TC) { return _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXCYX() (TX, TX, TC, TY, TX) { return _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXCYY() (TX, TX, TC, TY, TY) { return _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXCYZ() (TX, TX, TC, TY, TZ) { return _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXCYW() (TX, TX, TC, TY, TW) { return _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXCYA() (TX, TX, TC, TY, TA) { return _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXCYB() (TX, TX, TC, TY, TB) { return _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXCYC() (TX, TX, TC, TY, TC) { return _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXCZX() (TX, TX, TC, TZ, TX) { return _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXCZY() (TX, TX, TC, TZ, TY) { return _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXCZZ() (TX, TX, TC, TZ, TZ) { return _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXCZW() (TX, TX, TC, TZ, TW) { return _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXCZA() (TX, TX, TC, TZ, TA) { return _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXCZB() (TX, TX, TC, TZ, TB) { return _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXCZC() (TX, TX, TC, TZ, TC) { return _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXCWX() (TX, TX, TC, TW, TX) { return _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXCWY() (TX, TX, TC, TW, TY) { return _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXCWZ() (TX, TX, TC, TW, TZ) { return _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXCWW() (TX, TX, TC, TW, TW) { return _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXCWA() (TX, TX, TC, TW, TA) { return _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXCWB() (TX, TX, TC, TW, TB) { return _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXCWC() (TX, TX, TC, TW, TC) { return _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXCAX() (TX, TX, TC, TA, TX) { return _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXCAY() (TX, TX, TC, TA, TY) { return _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXCAZ() (TX, TX, TC, TA, TZ) { return _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXCAW() (TX, TX, TC, TA, TW) { return _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXCAA() (TX, TX, TC, TA, TA) { return _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXCAB() (TX, TX, TC, TA, TB) { return _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXCAC() (TX, TX, TC, TA, TC) { return _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXCBX() (TX, TX, TC, TB, TX) { return _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXCBY() (TX, TX, TC, TB, TY) { return _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXCBZ() (TX, TX, TC, TB, TZ) { return _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXCBW() (TX, TX, TC, TB, TW) { return _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXCBA() (TX, TX, TC, TB, TA) { return _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXCBB() (TX, TX, TC, TB, TB) { return _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXCBC() (TX, TX, TC, TB, TC) { return _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXCCX() (TX, TX, TC, TC, TX) { return _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXCCY() (TX, TX, TC, TC, TY) { return _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXCCZ() (TX, TX, TC, TC, TZ) { return _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXCCW() (TX, TX, TC, TC, TW) { return _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXCCA() (TX, TX, TC, TC, TA) { return _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXCCB() (TX, TX, TC, TC, TB) { return _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XXCCC() (TX, TX, TC, TC, TC) { return _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYXXX() (TX, TY, TX, TX, TX) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYXXY() (TX, TY, TX, TX, TY) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYXXZ() (TX, TY, TX, TX, TZ) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYXXW() (TX, TY, TX, TX, TW) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYXXA() (TX, TY, TX, TX, TA) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYXXB() (TX, TY, TX, TX, TB) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYXXC() (TX, TY, TX, TX, TC) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYXYX() (TX, TY, TX, TY, TX) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYXYY() (TX, TY, TX, TY, TY) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYXYZ() (TX, TY, TX, TY, TZ) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYXYW() (TX, TY, TX, TY, TW) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYXYA() (TX, TY, TX, TY, TA) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYXYB() (TX, TY, TX, TY, TB) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYXYC() (TX, TY, TX, TY, TC) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYXZX() (TX, TY, TX, TZ, TX) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYXZY() (TX, TY, TX, TZ, TY) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYXZZ() (TX, TY, TX, TZ, TZ) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYXZW() (TX, TY, TX, TZ, TW) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYXZA() (TX, TY, TX, TZ, TA) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYXZB() (TX, TY, TX, TZ, TB) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYXZC() (TX, TY, TX, TZ, TC) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYXWX() (TX, TY, TX, TW, TX) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYXWY() (TX, TY, TX, TW, TY) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYXWZ() (TX, TY, TX, TW, TZ) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYXWW() (TX, TY, TX, TW, TW) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYXWA() (TX, TY, TX, TW, TA) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYXWB() (TX, TY, TX, TW, TB) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYXWC() (TX, TY, TX, TW, TC) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYXAX() (TX, TY, TX, TA, TX) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYXAY() (TX, TY, TX, TA, TY) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYXAZ() (TX, TY, TX, TA, TZ) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYXAW() (TX, TY, TX, TA, TW) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYXAA() (TX, TY, TX, TA, TA) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYXAB() (TX, TY, TX, TA, TB) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYXAC() (TX, TY, TX, TA, TC) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYXBX() (TX, TY, TX, TB, TX) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYXBY() (TX, TY, TX, TB, TY) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYXBZ() (TX, TY, TX, TB, TZ) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYXBW() (TX, TY, TX, TB, TW) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYXBA() (TX, TY, TX, TB, TA) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYXBB() (TX, TY, TX, TB, TB) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYXBC() (TX, TY, TX, TB, TC) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYXCX() (TX, TY, TX, TC, TX) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYXCY() (TX, TY, TX, TC, TY) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYXCZ() (TX, TY, TX, TC, TZ) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYXCW() (TX, TY, TX, TC, TW) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYXCA() (TX, TY, TX, TC, TA) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYXCB() (TX, TY, TX, TC, TB) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYXCC() (TX, TY, TX, TC, TC) { return _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYYXX() (TX, TY, TY, TX, TX) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYYXY() (TX, TY, TY, TX, TY) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYYXZ() (TX, TY, TY, TX, TZ) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYYXW() (TX, TY, TY, TX, TW) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYYXA() (TX, TY, TY, TX, TA) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYYXB() (TX, TY, TY, TX, TB) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYYXC() (TX, TY, TY, TX, TC) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYYYX() (TX, TY, TY, TY, TX) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYYYY() (TX, TY, TY, TY, TY) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYYYZ() (TX, TY, TY, TY, TZ) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYYYW() (TX, TY, TY, TY, TW) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYYYA() (TX, TY, TY, TY, TA) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYYYB() (TX, TY, TY, TY, TB) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYYYC() (TX, TY, TY, TY, TC) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYYZX() (TX, TY, TY, TZ, TX) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYYZY() (TX, TY, TY, TZ, TY) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYYZZ() (TX, TY, TY, TZ, TZ) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYYZW() (TX, TY, TY, TZ, TW) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYYZA() (TX, TY, TY, TZ, TA) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYYZB() (TX, TY, TY, TZ, TB) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYYZC() (TX, TY, TY, TZ, TC) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYYWX() (TX, TY, TY, TW, TX) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYYWY() (TX, TY, TY, TW, TY) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYYWZ() (TX, TY, TY, TW, TZ) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYYWW() (TX, TY, TY, TW, TW) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYYWA() (TX, TY, TY, TW, TA) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYYWB() (TX, TY, TY, TW, TB) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYYWC() (TX, TY, TY, TW, TC) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYYAX() (TX, TY, TY, TA, TX) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYYAY() (TX, TY, TY, TA, TY) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYYAZ() (TX, TY, TY, TA, TZ) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYYAW() (TX, TY, TY, TA, TW) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYYAA() (TX, TY, TY, TA, TA) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYYAB() (TX, TY, TY, TA, TB) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYYAC() (TX, TY, TY, TA, TC) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYYBX() (TX, TY, TY, TB, TX) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYYBY() (TX, TY, TY, TB, TY) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYYBZ() (TX, TY, TY, TB, TZ) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYYBW() (TX, TY, TY, TB, TW) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYYBA() (TX, TY, TY, TB, TA) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYYBB() (TX, TY, TY, TB, TB) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYYBC() (TX, TY, TY, TB, TC) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYYCX() (TX, TY, TY, TC, TX) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYYCY() (TX, TY, TY, TC, TY) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYYCZ() (TX, TY, TY, TC, TZ) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYYCW() (TX, TY, TY, TC, TW) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYYCA() (TX, TY, TY, TC, TA) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYYCB() (TX, TY, TY, TC, TB) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYYCC() (TX, TY, TY, TC, TC) { return _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYZXX() (TX, TY, TZ, TX, TX) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYZXY() (TX, TY, TZ, TX, TY) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYZXZ() (TX, TY, TZ, TX, TZ) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYZXW() (TX, TY, TZ, TX, TW) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYZXA() (TX, TY, TZ, TX, TA) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYZXB() (TX, TY, TZ, TX, TB) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYZXC() (TX, TY, TZ, TX, TC) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYZYX() (TX, TY, TZ, TY, TX) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYZYY() (TX, TY, TZ, TY, TY) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYZYZ() (TX, TY, TZ, TY, TZ) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYZYW() (TX, TY, TZ, TY, TW) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYZYA() (TX, TY, TZ, TY, TA) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYZYB() (TX, TY, TZ, TY, TB) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYZYC() (TX, TY, TZ, TY, TC) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYZZX() (TX, TY, TZ, TZ, TX) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYZZY() (TX, TY, TZ, TZ, TY) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYZZZ() (TX, TY, TZ, TZ, TZ) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYZZW() (TX, TY, TZ, TZ, TW) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYZZA() (TX, TY, TZ, TZ, TA) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYZZB() (TX, TY, TZ, TZ, TB) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYZZC() (TX, TY, TZ, TZ, TC) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYZWX() (TX, TY, TZ, TW, TX) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYZWY() (TX, TY, TZ, TW, TY) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYZWZ() (TX, TY, TZ, TW, TZ) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYZWW() (TX, TY, TZ, TW, TW) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYZWA() (TX, TY, TZ, TW, TA) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYZWB() (TX, TY, TZ, TW, TB) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYZWC() (TX, TY, TZ, TW, TC) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYZAX() (TX, TY, TZ, TA, TX) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYZAY() (TX, TY, TZ, TA, TY) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYZAZ() (TX, TY, TZ, TA, TZ) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYZAW() (TX, TY, TZ, TA, TW) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYZAA() (TX, TY, TZ, TA, TA) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYZAB() (TX, TY, TZ, TA, TB) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYZAC() (TX, TY, TZ, TA, TC) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYZBX() (TX, TY, TZ, TB, TX) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYZBY() (TX, TY, TZ, TB, TY) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYZBZ() (TX, TY, TZ, TB, TZ) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYZBW() (TX, TY, TZ, TB, TW) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYZBA() (TX, TY, TZ, TB, TA) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYZBB() (TX, TY, TZ, TB, TB) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYZBC() (TX, TY, TZ, TB, TC) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYZCX() (TX, TY, TZ, TC, TX) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYZCY() (TX, TY, TZ, TC, TY) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYZCZ() (TX, TY, TZ, TC, TZ) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYZCW() (TX, TY, TZ, TC, TW) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYZCA() (TX, TY, TZ, TC, TA) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYZCB() (TX, TY, TZ, TC, TB) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYZCC() (TX, TY, TZ, TC, TC) { return _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYWXX() (TX, TY, TW, TX, TX) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYWXY() (TX, TY, TW, TX, TY) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYWXZ() (TX, TY, TW, TX, TZ) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYWXW() (TX, TY, TW, TX, TW) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYWXA() (TX, TY, TW, TX, TA) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYWXB() (TX, TY, TW, TX, TB) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYWXC() (TX, TY, TW, TX, TC) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYWYX() (TX, TY, TW, TY, TX) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYWYY() (TX, TY, TW, TY, TY) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYWYZ() (TX, TY, TW, TY, TZ) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYWYW() (TX, TY, TW, TY, TW) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYWYA() (TX, TY, TW, TY, TA) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYWYB() (TX, TY, TW, TY, TB) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYWYC() (TX, TY, TW, TY, TC) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYWZX() (TX, TY, TW, TZ, TX) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYWZY() (TX, TY, TW, TZ, TY) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYWZZ() (TX, TY, TW, TZ, TZ) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYWZW() (TX, TY, TW, TZ, TW) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYWZA() (TX, TY, TW, TZ, TA) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYWZB() (TX, TY, TW, TZ, TB) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYWZC() (TX, TY, TW, TZ, TC) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYWWX() (TX, TY, TW, TW, TX) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYWWY() (TX, TY, TW, TW, TY) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYWWZ() (TX, TY, TW, TW, TZ) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYWWW() (TX, TY, TW, TW, TW) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYWWA() (TX, TY, TW, TW, TA) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYWWB() (TX, TY, TW, TW, TB) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYWWC() (TX, TY, TW, TW, TC) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYWAX() (TX, TY, TW, TA, TX) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYWAY() (TX, TY, TW, TA, TY) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYWAZ() (TX, TY, TW, TA, TZ) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYWAW() (TX, TY, TW, TA, TW) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYWAA() (TX, TY, TW, TA, TA) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYWAB() (TX, TY, TW, TA, TB) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYWAC() (TX, TY, TW, TA, TC) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYWBX() (TX, TY, TW, TB, TX) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYWBY() (TX, TY, TW, TB, TY) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYWBZ() (TX, TY, TW, TB, TZ) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYWBW() (TX, TY, TW, TB, TW) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYWBA() (TX, TY, TW, TB, TA) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYWBB() (TX, TY, TW, TB, TB) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYWBC() (TX, TY, TW, TB, TC) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYWCX() (TX, TY, TW, TC, TX) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYWCY() (TX, TY, TW, TC, TY) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYWCZ() (TX, TY, TW, TC, TZ) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYWCW() (TX, TY, TW, TC, TW) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYWCA() (TX, TY, TW, TC, TA) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYWCB() (TX, TY, TW, TC, TB) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYWCC() (TX, TY, TW, TC, TC) { return _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYAXX() (TX, TY, TA, TX, TX) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYAXY() (TX, TY, TA, TX, TY) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYAXZ() (TX, TY, TA, TX, TZ) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYAXW() (TX, TY, TA, TX, TW) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYAXA() (TX, TY, TA, TX, TA) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYAXB() (TX, TY, TA, TX, TB) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYAXC() (TX, TY, TA, TX, TC) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYAYX() (TX, TY, TA, TY, TX) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYAYY() (TX, TY, TA, TY, TY) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYAYZ() (TX, TY, TA, TY, TZ) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYAYW() (TX, TY, TA, TY, TW) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYAYA() (TX, TY, TA, TY, TA) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYAYB() (TX, TY, TA, TY, TB) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYAYC() (TX, TY, TA, TY, TC) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYAZX() (TX, TY, TA, TZ, TX) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYAZY() (TX, TY, TA, TZ, TY) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYAZZ() (TX, TY, TA, TZ, TZ) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYAZW() (TX, TY, TA, TZ, TW) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYAZA() (TX, TY, TA, TZ, TA) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYAZB() (TX, TY, TA, TZ, TB) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYAZC() (TX, TY, TA, TZ, TC) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYAWX() (TX, TY, TA, TW, TX) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYAWY() (TX, TY, TA, TW, TY) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYAWZ() (TX, TY, TA, TW, TZ) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYAWW() (TX, TY, TA, TW, TW) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYAWA() (TX, TY, TA, TW, TA) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYAWB() (TX, TY, TA, TW, TB) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYAWC() (TX, TY, TA, TW, TC) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYAAX() (TX, TY, TA, TA, TX) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYAAY() (TX, TY, TA, TA, TY) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYAAZ() (TX, TY, TA, TA, TZ) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYAAW() (TX, TY, TA, TA, TW) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYAAA() (TX, TY, TA, TA, TA) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYAAB() (TX, TY, TA, TA, TB) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYAAC() (TX, TY, TA, TA, TC) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYABX() (TX, TY, TA, TB, TX) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYABY() (TX, TY, TA, TB, TY) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYABZ() (TX, TY, TA, TB, TZ) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYABW() (TX, TY, TA, TB, TW) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYABA() (TX, TY, TA, TB, TA) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYABB() (TX, TY, TA, TB, TB) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYABC() (TX, TY, TA, TB, TC) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYACX() (TX, TY, TA, TC, TX) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYACY() (TX, TY, TA, TC, TY) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYACZ() (TX, TY, TA, TC, TZ) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYACW() (TX, TY, TA, TC, TW) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYACA() (TX, TY, TA, TC, TA) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYACB() (TX, TY, TA, TC, TB) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYACC() (TX, TY, TA, TC, TC) { return _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYBXX() (TX, TY, TB, TX, TX) { return _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYBXY() (TX, TY, TB, TX, TY) { return _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYBXZ() (TX, TY, TB, TX, TZ) { return _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYBXW() (TX, TY, TB, TX, TW) { return _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYBXA() (TX, TY, TB, TX, TA) { return _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYBXB() (TX, TY, TB, TX, TB) { return _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYBXC() (TX, TY, TB, TX, TC) { return _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYBYX() (TX, TY, TB, TY, TX) { return _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYBYY() (TX, TY, TB, TY, TY) { return _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYBYZ() (TX, TY, TB, TY, TZ) { return _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYBYW() (TX, TY, TB, TY, TW) { return _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYBYA() (TX, TY, TB, TY, TA) { return _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYBYB() (TX, TY, TB, TY, TB) { return _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYBYC() (TX, TY, TB, TY, TC) { return _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYBZX() (TX, TY, TB, TZ, TX) { return _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYBZY() (TX, TY, TB, TZ, TY) { return _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYBZZ() (TX, TY, TB, TZ, TZ) { return _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYBZW() (TX, TY, TB, TZ, TW) { return _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYBZA() (TX, TY, TB, TZ, TA) { return _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYBZB() (TX, TY, TB, TZ, TB) { return _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYBZC() (TX, TY, TB, TZ, TC) { return _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYBWX() (TX, TY, TB, TW, TX) { return _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYBWY() (TX, TY, TB, TW, TY) { return _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYBWZ() (TX, TY, TB, TW, TZ) { return _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYBWW() (TX, TY, TB, TW, TW) { return _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYBWA() (TX, TY, TB, TW, TA) { return _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYBWB() (TX, TY, TB, TW, TB) { return _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYBWC() (TX, TY, TB, TW, TC) { return _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYBAX() (TX, TY, TB, TA, TX) { return _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYBAY() (TX, TY, TB, TA, TY) { return _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYBAZ() (TX, TY, TB, TA, TZ) { return _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYBAW() (TX, TY, TB, TA, TW) { return _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYBAA() (TX, TY, TB, TA, TA) { return _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYBAB() (TX, TY, TB, TA, TB) { return _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYBAC() (TX, TY, TB, TA, TC) { return _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYBBX() (TX, TY, TB, TB, TX) { return _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYBBY() (TX, TY, TB, TB, TY) { return _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYBBZ() (TX, TY, TB, TB, TZ) { return _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYBBW() (TX, TY, TB, TB, TW) { return _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYBBA() (TX, TY, TB, TB, TA) { return _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYBBB() (TX, TY, TB, TB, TB) { return _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYBBC() (TX, TY, TB, TB, TC) { return _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYBCX() (TX, TY, TB, TC, TX) { return _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYBCY() (TX, TY, TB, TC, TY) { return _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYBCZ() (TX, TY, TB, TC, TZ) { return _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYBCW() (TX, TY, TB, TC, TW) { return _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYBCA() (TX, TY, TB, TC, TA) { return _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYBCB() (TX, TY, TB, TC, TB) { return _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYBCC() (TX, TY, TB, TC, TC) { return _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYCXX() (TX, TY, TC, TX, TX) { return _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYCXY() (TX, TY, TC, TX, TY) { return _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYCXZ() (TX, TY, TC, TX, TZ) { return _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYCXW() (TX, TY, TC, TX, TW) { return _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYCXA() (TX, TY, TC, TX, TA) { return _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYCXB() (TX, TY, TC, TX, TB) { return _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYCXC() (TX, TY, TC, TX, TC) { return _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYCYX() (TX, TY, TC, TY, TX) { return _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYCYY() (TX, TY, TC, TY, TY) { return _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYCYZ() (TX, TY, TC, TY, TZ) { return _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYCYW() (TX, TY, TC, TY, TW) { return _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYCYA() (TX, TY, TC, TY, TA) { return _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYCYB() (TX, TY, TC, TY, TB) { return _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYCYC() (TX, TY, TC, TY, TC) { return _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYCZX() (TX, TY, TC, TZ, TX) { return _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYCZY() (TX, TY, TC, TZ, TY) { return _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYCZZ() (TX, TY, TC, TZ, TZ) { return _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYCZW() (TX, TY, TC, TZ, TW) { return _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYCZA() (TX, TY, TC, TZ, TA) { return _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYCZB() (TX, TY, TC, TZ, TB) { return _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYCZC() (TX, TY, TC, TZ, TC) { return _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYCWX() (TX, TY, TC, TW, TX) { return _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYCWY() (TX, TY, TC, TW, TY) { return _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYCWZ() (TX, TY, TC, TW, TZ) { return _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYCWW() (TX, TY, TC, TW, TW) { return _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYCWA() (TX, TY, TC, TW, TA) { return _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYCWB() (TX, TY, TC, TW, TB) { return _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYCWC() (TX, TY, TC, TW, TC) { return _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYCAX() (TX, TY, TC, TA, TX) { return _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYCAY() (TX, TY, TC, TA, TY) { return _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYCAZ() (TX, TY, TC, TA, TZ) { return _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYCAW() (TX, TY, TC, TA, TW) { return _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYCAA() (TX, TY, TC, TA, TA) { return _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYCAB() (TX, TY, TC, TA, TB) { return _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYCAC() (TX, TY, TC, TA, TC) { return _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYCBX() (TX, TY, TC, TB, TX) { return _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYCBY() (TX, TY, TC, TB, TY) { return _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYCBZ() (TX, TY, TC, TB, TZ) { return _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYCBW() (TX, TY, TC, TB, TW) { return _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYCBA() (TX, TY, TC, TB, TA) { return _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYCBB() (TX, TY, TC, TB, TB) { return _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYCBC() (TX, TY, TC, TB, TC) { return _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYCCX() (TX, TY, TC, TC, TX) { return _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYCCY() (TX, TY, TC, TC, TY) { return _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYCCZ() (TX, TY, TC, TC, TZ) { return _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYCCW() (TX, TY, TC, TC, TW) { return _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYCCA() (TX, TY, TC, TC, TA) { return _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYCCB() (TX, TY, TC, TC, TB) { return _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XYCCC() (TX, TY, TC, TC, TC) { return _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZXXX() (TX, TZ, TX, TX, TX) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZXXY() (TX, TZ, TX, TX, TY) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZXXZ() (TX, TZ, TX, TX, TZ) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZXXW() (TX, TZ, TX, TX, TW) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZXXA() (TX, TZ, TX, TX, TA) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZXXB() (TX, TZ, TX, TX, TB) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZXXC() (TX, TZ, TX, TX, TC) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZXYX() (TX, TZ, TX, TY, TX) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZXYY() (TX, TZ, TX, TY, TY) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZXYZ() (TX, TZ, TX, TY, TZ) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZXYW() (TX, TZ, TX, TY, TW) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZXYA() (TX, TZ, TX, TY, TA) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZXYB() (TX, TZ, TX, TY, TB) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZXYC() (TX, TZ, TX, TY, TC) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZXZX() (TX, TZ, TX, TZ, TX) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZXZY() (TX, TZ, TX, TZ, TY) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZXZZ() (TX, TZ, TX, TZ, TZ) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZXZW() (TX, TZ, TX, TZ, TW) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZXZA() (TX, TZ, TX, TZ, TA) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZXZB() (TX, TZ, TX, TZ, TB) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZXZC() (TX, TZ, TX, TZ, TC) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZXWX() (TX, TZ, TX, TW, TX) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZXWY() (TX, TZ, TX, TW, TY) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZXWZ() (TX, TZ, TX, TW, TZ) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZXWW() (TX, TZ, TX, TW, TW) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZXWA() (TX, TZ, TX, TW, TA) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZXWB() (TX, TZ, TX, TW, TB) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZXWC() (TX, TZ, TX, TW, TC) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZXAX() (TX, TZ, TX, TA, TX) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZXAY() (TX, TZ, TX, TA, TY) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZXAZ() (TX, TZ, TX, TA, TZ) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZXAW() (TX, TZ, TX, TA, TW) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZXAA() (TX, TZ, TX, TA, TA) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZXAB() (TX, TZ, TX, TA, TB) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZXAC() (TX, TZ, TX, TA, TC) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZXBX() (TX, TZ, TX, TB, TX) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZXBY() (TX, TZ, TX, TB, TY) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZXBZ() (TX, TZ, TX, TB, TZ) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZXBW() (TX, TZ, TX, TB, TW) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZXBA() (TX, TZ, TX, TB, TA) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZXBB() (TX, TZ, TX, TB, TB) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZXBC() (TX, TZ, TX, TB, TC) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZXCX() (TX, TZ, TX, TC, TX) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZXCY() (TX, TZ, TX, TC, TY) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZXCZ() (TX, TZ, TX, TC, TZ) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZXCW() (TX, TZ, TX, TC, TW) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZXCA() (TX, TZ, TX, TC, TA) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZXCB() (TX, TZ, TX, TC, TB) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZXCC() (TX, TZ, TX, TC, TC) { return _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZYXX() (TX, TZ, TY, TX, TX) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZYXY() (TX, TZ, TY, TX, TY) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZYXZ() (TX, TZ, TY, TX, TZ) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZYXW() (TX, TZ, TY, TX, TW) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZYXA() (TX, TZ, TY, TX, TA) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZYXB() (TX, TZ, TY, TX, TB) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZYXC() (TX, TZ, TY, TX, TC) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZYYX() (TX, TZ, TY, TY, TX) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZYYY() (TX, TZ, TY, TY, TY) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZYYZ() (TX, TZ, TY, TY, TZ) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZYYW() (TX, TZ, TY, TY, TW) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZYYA() (TX, TZ, TY, TY, TA) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZYYB() (TX, TZ, TY, TY, TB) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZYYC() (TX, TZ, TY, TY, TC) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZYZX() (TX, TZ, TY, TZ, TX) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZYZY() (TX, TZ, TY, TZ, TY) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZYZZ() (TX, TZ, TY, TZ, TZ) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZYZW() (TX, TZ, TY, TZ, TW) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZYZA() (TX, TZ, TY, TZ, TA) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZYZB() (TX, TZ, TY, TZ, TB) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZYZC() (TX, TZ, TY, TZ, TC) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZYWX() (TX, TZ, TY, TW, TX) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZYWY() (TX, TZ, TY, TW, TY) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZYWZ() (TX, TZ, TY, TW, TZ) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZYWW() (TX, TZ, TY, TW, TW) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZYWA() (TX, TZ, TY, TW, TA) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZYWB() (TX, TZ, TY, TW, TB) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZYWC() (TX, TZ, TY, TW, TC) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZYAX() (TX, TZ, TY, TA, TX) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZYAY() (TX, TZ, TY, TA, TY) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZYAZ() (TX, TZ, TY, TA, TZ) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZYAW() (TX, TZ, TY, TA, TW) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZYAA() (TX, TZ, TY, TA, TA) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZYAB() (TX, TZ, TY, TA, TB) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZYAC() (TX, TZ, TY, TA, TC) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZYBX() (TX, TZ, TY, TB, TX) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZYBY() (TX, TZ, TY, TB, TY) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZYBZ() (TX, TZ, TY, TB, TZ) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZYBW() (TX, TZ, TY, TB, TW) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZYBA() (TX, TZ, TY, TB, TA) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZYBB() (TX, TZ, TY, TB, TB) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZYBC() (TX, TZ, TY, TB, TC) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZYCX() (TX, TZ, TY, TC, TX) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZYCY() (TX, TZ, TY, TC, TY) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZYCZ() (TX, TZ, TY, TC, TZ) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZYCW() (TX, TZ, TY, TC, TW) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZYCA() (TX, TZ, TY, TC, TA) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZYCB() (TX, TZ, TY, TC, TB) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZYCC() (TX, TZ, TY, TC, TC) { return _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZZXX() (TX, TZ, TZ, TX, TX) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZZXY() (TX, TZ, TZ, TX, TY) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZZXZ() (TX, TZ, TZ, TX, TZ) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZZXW() (TX, TZ, TZ, TX, TW) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZZXA() (TX, TZ, TZ, TX, TA) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZZXB() (TX, TZ, TZ, TX, TB) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZZXC() (TX, TZ, TZ, TX, TC) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZZYX() (TX, TZ, TZ, TY, TX) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZZYY() (TX, TZ, TZ, TY, TY) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZZYZ() (TX, TZ, TZ, TY, TZ) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZZYW() (TX, TZ, TZ, TY, TW) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZZYA() (TX, TZ, TZ, TY, TA) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZZYB() (TX, TZ, TZ, TY, TB) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZZYC() (TX, TZ, TZ, TY, TC) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZZZX() (TX, TZ, TZ, TZ, TX) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZZZY() (TX, TZ, TZ, TZ, TY) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZZZZ() (TX, TZ, TZ, TZ, TZ) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZZZW() (TX, TZ, TZ, TZ, TW) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZZZA() (TX, TZ, TZ, TZ, TA) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZZZB() (TX, TZ, TZ, TZ, TB) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZZZC() (TX, TZ, TZ, TZ, TC) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZZWX() (TX, TZ, TZ, TW, TX) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZZWY() (TX, TZ, TZ, TW, TY) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZZWZ() (TX, TZ, TZ, TW, TZ) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZZWW() (TX, TZ, TZ, TW, TW) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZZWA() (TX, TZ, TZ, TW, TA) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZZWB() (TX, TZ, TZ, TW, TB) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZZWC() (TX, TZ, TZ, TW, TC) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZZAX() (TX, TZ, TZ, TA, TX) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZZAY() (TX, TZ, TZ, TA, TY) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZZAZ() (TX, TZ, TZ, TA, TZ) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZZAW() (TX, TZ, TZ, TA, TW) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZZAA() (TX, TZ, TZ, TA, TA) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZZAB() (TX, TZ, TZ, TA, TB) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZZAC() (TX, TZ, TZ, TA, TC) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZZBX() (TX, TZ, TZ, TB, TX) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZZBY() (TX, TZ, TZ, TB, TY) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZZBZ() (TX, TZ, TZ, TB, TZ) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZZBW() (TX, TZ, TZ, TB, TW) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZZBA() (TX, TZ, TZ, TB, TA) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZZBB() (TX, TZ, TZ, TB, TB) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZZBC() (TX, TZ, TZ, TB, TC) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZZCX() (TX, TZ, TZ, TC, TX) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZZCY() (TX, TZ, TZ, TC, TY) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZZCZ() (TX, TZ, TZ, TC, TZ) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZZCW() (TX, TZ, TZ, TC, TW) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZZCA() (TX, TZ, TZ, TC, TA) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZZCB() (TX, TZ, TZ, TC, TB) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZZCC() (TX, TZ, TZ, TC, TC) { return _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZWXX() (TX, TZ, TW, TX, TX) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZWXY() (TX, TZ, TW, TX, TY) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZWXZ() (TX, TZ, TW, TX, TZ) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZWXW() (TX, TZ, TW, TX, TW) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZWXA() (TX, TZ, TW, TX, TA) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZWXB() (TX, TZ, TW, TX, TB) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZWXC() (TX, TZ, TW, TX, TC) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZWYX() (TX, TZ, TW, TY, TX) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZWYY() (TX, TZ, TW, TY, TY) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZWYZ() (TX, TZ, TW, TY, TZ) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZWYW() (TX, TZ, TW, TY, TW) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZWYA() (TX, TZ, TW, TY, TA) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZWYB() (TX, TZ, TW, TY, TB) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZWYC() (TX, TZ, TW, TY, TC) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZWZX() (TX, TZ, TW, TZ, TX) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZWZY() (TX, TZ, TW, TZ, TY) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZWZZ() (TX, TZ, TW, TZ, TZ) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZWZW() (TX, TZ, TW, TZ, TW) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZWZA() (TX, TZ, TW, TZ, TA) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZWZB() (TX, TZ, TW, TZ, TB) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZWZC() (TX, TZ, TW, TZ, TC) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZWWX() (TX, TZ, TW, TW, TX) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZWWY() (TX, TZ, TW, TW, TY) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZWWZ() (TX, TZ, TW, TW, TZ) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZWWW() (TX, TZ, TW, TW, TW) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZWWA() (TX, TZ, TW, TW, TA) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZWWB() (TX, TZ, TW, TW, TB) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZWWC() (TX, TZ, TW, TW, TC) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZWAX() (TX, TZ, TW, TA, TX) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZWAY() (TX, TZ, TW, TA, TY) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZWAZ() (TX, TZ, TW, TA, TZ) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZWAW() (TX, TZ, TW, TA, TW) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZWAA() (TX, TZ, TW, TA, TA) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZWAB() (TX, TZ, TW, TA, TB) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZWAC() (TX, TZ, TW, TA, TC) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZWBX() (TX, TZ, TW, TB, TX) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZWBY() (TX, TZ, TW, TB, TY) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZWBZ() (TX, TZ, TW, TB, TZ) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZWBW() (TX, TZ, TW, TB, TW) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZWBA() (TX, TZ, TW, TB, TA) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZWBB() (TX, TZ, TW, TB, TB) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZWBC() (TX, TZ, TW, TB, TC) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZWCX() (TX, TZ, TW, TC, TX) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZWCY() (TX, TZ, TW, TC, TY) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZWCZ() (TX, TZ, TW, TC, TZ) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZWCW() (TX, TZ, TW, TC, TW) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZWCA() (TX, TZ, TW, TC, TA) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZWCB() (TX, TZ, TW, TC, TB) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZWCC() (TX, TZ, TW, TC, TC) { return _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZAXX() (TX, TZ, TA, TX, TX) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZAXY() (TX, TZ, TA, TX, TY) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZAXZ() (TX, TZ, TA, TX, TZ) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZAXW() (TX, TZ, TA, TX, TW) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZAXA() (TX, TZ, TA, TX, TA) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZAXB() (TX, TZ, TA, TX, TB) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZAXC() (TX, TZ, TA, TX, TC) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZAYX() (TX, TZ, TA, TY, TX) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZAYY() (TX, TZ, TA, TY, TY) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZAYZ() (TX, TZ, TA, TY, TZ) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZAYW() (TX, TZ, TA, TY, TW) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZAYA() (TX, TZ, TA, TY, TA) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZAYB() (TX, TZ, TA, TY, TB) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZAYC() (TX, TZ, TA, TY, TC) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZAZX() (TX, TZ, TA, TZ, TX) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZAZY() (TX, TZ, TA, TZ, TY) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZAZZ() (TX, TZ, TA, TZ, TZ) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZAZW() (TX, TZ, TA, TZ, TW) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZAZA() (TX, TZ, TA, TZ, TA) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZAZB() (TX, TZ, TA, TZ, TB) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZAZC() (TX, TZ, TA, TZ, TC) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZAWX() (TX, TZ, TA, TW, TX) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZAWY() (TX, TZ, TA, TW, TY) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZAWZ() (TX, TZ, TA, TW, TZ) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZAWW() (TX, TZ, TA, TW, TW) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZAWA() (TX, TZ, TA, TW, TA) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZAWB() (TX, TZ, TA, TW, TB) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZAWC() (TX, TZ, TA, TW, TC) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZAAX() (TX, TZ, TA, TA, TX) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZAAY() (TX, TZ, TA, TA, TY) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZAAZ() (TX, TZ, TA, TA, TZ) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZAAW() (TX, TZ, TA, TA, TW) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZAAA() (TX, TZ, TA, TA, TA) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZAAB() (TX, TZ, TA, TA, TB) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZAAC() (TX, TZ, TA, TA, TC) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZABX() (TX, TZ, TA, TB, TX) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZABY() (TX, TZ, TA, TB, TY) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZABZ() (TX, TZ, TA, TB, TZ) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZABW() (TX, TZ, TA, TB, TW) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZABA() (TX, TZ, TA, TB, TA) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZABB() (TX, TZ, TA, TB, TB) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZABC() (TX, TZ, TA, TB, TC) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZACX() (TX, TZ, TA, TC, TX) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZACY() (TX, TZ, TA, TC, TY) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZACZ() (TX, TZ, TA, TC, TZ) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZACW() (TX, TZ, TA, TC, TW) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZACA() (TX, TZ, TA, TC, TA) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZACB() (TX, TZ, TA, TC, TB) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZACC() (TX, TZ, TA, TC, TC) { return _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZBXX() (TX, TZ, TB, TX, TX) { return _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZBXY() (TX, TZ, TB, TX, TY) { return _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZBXZ() (TX, TZ, TB, TX, TZ) { return _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZBXW() (TX, TZ, TB, TX, TW) { return _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZBXA() (TX, TZ, TB, TX, TA) { return _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZBXB() (TX, TZ, TB, TX, TB) { return _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZBXC() (TX, TZ, TB, TX, TC) { return _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZBYX() (TX, TZ, TB, TY, TX) { return _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZBYY() (TX, TZ, TB, TY, TY) { return _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZBYZ() (TX, TZ, TB, TY, TZ) { return _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZBYW() (TX, TZ, TB, TY, TW) { return _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZBYA() (TX, TZ, TB, TY, TA) { return _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZBYB() (TX, TZ, TB, TY, TB) { return _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZBYC() (TX, TZ, TB, TY, TC) { return _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZBZX() (TX, TZ, TB, TZ, TX) { return _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZBZY() (TX, TZ, TB, TZ, TY) { return _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZBZZ() (TX, TZ, TB, TZ, TZ) { return _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZBZW() (TX, TZ, TB, TZ, TW) { return _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZBZA() (TX, TZ, TB, TZ, TA) { return _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZBZB() (TX, TZ, TB, TZ, TB) { return _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZBZC() (TX, TZ, TB, TZ, TC) { return _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZBWX() (TX, TZ, TB, TW, TX) { return _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZBWY() (TX, TZ, TB, TW, TY) { return _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZBWZ() (TX, TZ, TB, TW, TZ) { return _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZBWW() (TX, TZ, TB, TW, TW) { return _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZBWA() (TX, TZ, TB, TW, TA) { return _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZBWB() (TX, TZ, TB, TW, TB) { return _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZBWC() (TX, TZ, TB, TW, TC) { return _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZBAX() (TX, TZ, TB, TA, TX) { return _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZBAY() (TX, TZ, TB, TA, TY) { return _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZBAZ() (TX, TZ, TB, TA, TZ) { return _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZBAW() (TX, TZ, TB, TA, TW) { return _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZBAA() (TX, TZ, TB, TA, TA) { return _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZBAB() (TX, TZ, TB, TA, TB) { return _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZBAC() (TX, TZ, TB, TA, TC) { return _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZBBX() (TX, TZ, TB, TB, TX) { return _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZBBY() (TX, TZ, TB, TB, TY) { return _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZBBZ() (TX, TZ, TB, TB, TZ) { return _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZBBW() (TX, TZ, TB, TB, TW) { return _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZBBA() (TX, TZ, TB, TB, TA) { return _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZBBB() (TX, TZ, TB, TB, TB) { return _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZBBC() (TX, TZ, TB, TB, TC) { return _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZBCX() (TX, TZ, TB, TC, TX) { return _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZBCY() (TX, TZ, TB, TC, TY) { return _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZBCZ() (TX, TZ, TB, TC, TZ) { return _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZBCW() (TX, TZ, TB, TC, TW) { return _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZBCA() (TX, TZ, TB, TC, TA) { return _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZBCB() (TX, TZ, TB, TC, TB) { return _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZBCC() (TX, TZ, TB, TC, TC) { return _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZCXX() (TX, TZ, TC, TX, TX) { return _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZCXY() (TX, TZ, TC, TX, TY) { return _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZCXZ() (TX, TZ, TC, TX, TZ) { return _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZCXW() (TX, TZ, TC, TX, TW) { return _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZCXA() (TX, TZ, TC, TX, TA) { return _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZCXB() (TX, TZ, TC, TX, TB) { return _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZCXC() (TX, TZ, TC, TX, TC) { return _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZCYX() (TX, TZ, TC, TY, TX) { return _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZCYY() (TX, TZ, TC, TY, TY) { return _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZCYZ() (TX, TZ, TC, TY, TZ) { return _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZCYW() (TX, TZ, TC, TY, TW) { return _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZCYA() (TX, TZ, TC, TY, TA) { return _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZCYB() (TX, TZ, TC, TY, TB) { return _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZCYC() (TX, TZ, TC, TY, TC) { return _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZCZX() (TX, TZ, TC, TZ, TX) { return _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZCZY() (TX, TZ, TC, TZ, TY) { return _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZCZZ() (TX, TZ, TC, TZ, TZ) { return _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZCZW() (TX, TZ, TC, TZ, TW) { return _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZCZA() (TX, TZ, TC, TZ, TA) { return _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZCZB() (TX, TZ, TC, TZ, TB) { return _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZCZC() (TX, TZ, TC, TZ, TC) { return _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZCWX() (TX, TZ, TC, TW, TX) { return _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZCWY() (TX, TZ, TC, TW, TY) { return _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZCWZ() (TX, TZ, TC, TW, TZ) { return _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZCWW() (TX, TZ, TC, TW, TW) { return _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZCWA() (TX, TZ, TC, TW, TA) { return _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZCWB() (TX, TZ, TC, TW, TB) { return _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZCWC() (TX, TZ, TC, TW, TC) { return _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZCAX() (TX, TZ, TC, TA, TX) { return _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZCAY() (TX, TZ, TC, TA, TY) { return _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZCAZ() (TX, TZ, TC, TA, TZ) { return _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZCAW() (TX, TZ, TC, TA, TW) { return _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZCAA() (TX, TZ, TC, TA, TA) { return _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZCAB() (TX, TZ, TC, TA, TB) { return _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZCAC() (TX, TZ, TC, TA, TC) { return _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZCBX() (TX, TZ, TC, TB, TX) { return _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZCBY() (TX, TZ, TC, TB, TY) { return _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZCBZ() (TX, TZ, TC, TB, TZ) { return _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZCBW() (TX, TZ, TC, TB, TW) { return _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZCBA() (TX, TZ, TC, TB, TA) { return _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZCBB() (TX, TZ, TC, TB, TB) { return _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZCBC() (TX, TZ, TC, TB, TC) { return _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZCCX() (TX, TZ, TC, TC, TX) { return _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZCCY() (TX, TZ, TC, TC, TY) { return _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZCCZ() (TX, TZ, TC, TC, TZ) { return _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZCCW() (TX, TZ, TC, TC, TW) { return _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZCCA() (TX, TZ, TC, TC, TA) { return _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZCCB() (TX, TZ, TC, TC, TB) { return _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XZCCC() (TX, TZ, TC, TC, TC) { return _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWXXX() (TX, TW, TX, TX, TX) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWXXY() (TX, TW, TX, TX, TY) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWXXZ() (TX, TW, TX, TX, TZ) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWXXW() (TX, TW, TX, TX, TW) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWXXA() (TX, TW, TX, TX, TA) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWXXB() (TX, TW, TX, TX, TB) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWXXC() (TX, TW, TX, TX, TC) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWXYX() (TX, TW, TX, TY, TX) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWXYY() (TX, TW, TX, TY, TY) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWXYZ() (TX, TW, TX, TY, TZ) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWXYW() (TX, TW, TX, TY, TW) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWXYA() (TX, TW, TX, TY, TA) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWXYB() (TX, TW, TX, TY, TB) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWXYC() (TX, TW, TX, TY, TC) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWXZX() (TX, TW, TX, TZ, TX) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWXZY() (TX, TW, TX, TZ, TY) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWXZZ() (TX, TW, TX, TZ, TZ) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWXZW() (TX, TW, TX, TZ, TW) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWXZA() (TX, TW, TX, TZ, TA) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWXZB() (TX, TW, TX, TZ, TB) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWXZC() (TX, TW, TX, TZ, TC) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWXWX() (TX, TW, TX, TW, TX) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWXWY() (TX, TW, TX, TW, TY) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWXWZ() (TX, TW, TX, TW, TZ) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWXWW() (TX, TW, TX, TW, TW) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWXWA() (TX, TW, TX, TW, TA) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWXWB() (TX, TW, TX, TW, TB) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWXWC() (TX, TW, TX, TW, TC) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWXAX() (TX, TW, TX, TA, TX) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWXAY() (TX, TW, TX, TA, TY) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWXAZ() (TX, TW, TX, TA, TZ) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWXAW() (TX, TW, TX, TA, TW) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWXAA() (TX, TW, TX, TA, TA) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWXAB() (TX, TW, TX, TA, TB) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWXAC() (TX, TW, TX, TA, TC) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWXBX() (TX, TW, TX, TB, TX) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWXBY() (TX, TW, TX, TB, TY) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWXBZ() (TX, TW, TX, TB, TZ) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWXBW() (TX, TW, TX, TB, TW) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWXBA() (TX, TW, TX, TB, TA) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWXBB() (TX, TW, TX, TB, TB) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWXBC() (TX, TW, TX, TB, TC) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWXCX() (TX, TW, TX, TC, TX) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWXCY() (TX, TW, TX, TC, TY) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWXCZ() (TX, TW, TX, TC, TZ) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWXCW() (TX, TW, TX, TC, TW) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWXCA() (TX, TW, TX, TC, TA) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWXCB() (TX, TW, TX, TC, TB) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWXCC() (TX, TW, TX, TC, TC) { return _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWYXX() (TX, TW, TY, TX, TX) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWYXY() (TX, TW, TY, TX, TY) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWYXZ() (TX, TW, TY, TX, TZ) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWYXW() (TX, TW, TY, TX, TW) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWYXA() (TX, TW, TY, TX, TA) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWYXB() (TX, TW, TY, TX, TB) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWYXC() (TX, TW, TY, TX, TC) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWYYX() (TX, TW, TY, TY, TX) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWYYY() (TX, TW, TY, TY, TY) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWYYZ() (TX, TW, TY, TY, TZ) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWYYW() (TX, TW, TY, TY, TW) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWYYA() (TX, TW, TY, TY, TA) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWYYB() (TX, TW, TY, TY, TB) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWYYC() (TX, TW, TY, TY, TC) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWYZX() (TX, TW, TY, TZ, TX) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWYZY() (TX, TW, TY, TZ, TY) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWYZZ() (TX, TW, TY, TZ, TZ) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWYZW() (TX, TW, TY, TZ, TW) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWYZA() (TX, TW, TY, TZ, TA) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWYZB() (TX, TW, TY, TZ, TB) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWYZC() (TX, TW, TY, TZ, TC) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWYWX() (TX, TW, TY, TW, TX) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWYWY() (TX, TW, TY, TW, TY) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWYWZ() (TX, TW, TY, TW, TZ) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWYWW() (TX, TW, TY, TW, TW) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWYWA() (TX, TW, TY, TW, TA) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWYWB() (TX, TW, TY, TW, TB) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWYWC() (TX, TW, TY, TW, TC) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWYAX() (TX, TW, TY, TA, TX) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWYAY() (TX, TW, TY, TA, TY) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWYAZ() (TX, TW, TY, TA, TZ) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWYAW() (TX, TW, TY, TA, TW) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWYAA() (TX, TW, TY, TA, TA) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWYAB() (TX, TW, TY, TA, TB) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWYAC() (TX, TW, TY, TA, TC) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWYBX() (TX, TW, TY, TB, TX) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWYBY() (TX, TW, TY, TB, TY) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWYBZ() (TX, TW, TY, TB, TZ) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWYBW() (TX, TW, TY, TB, TW) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWYBA() (TX, TW, TY, TB, TA) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWYBB() (TX, TW, TY, TB, TB) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWYBC() (TX, TW, TY, TB, TC) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWYCX() (TX, TW, TY, TC, TX) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWYCY() (TX, TW, TY, TC, TY) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWYCZ() (TX, TW, TY, TC, TZ) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWYCW() (TX, TW, TY, TC, TW) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWYCA() (TX, TW, TY, TC, TA) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWYCB() (TX, TW, TY, TC, TB) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWYCC() (TX, TW, TY, TC, TC) { return _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWZXX() (TX, TW, TZ, TX, TX) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWZXY() (TX, TW, TZ, TX, TY) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWZXZ() (TX, TW, TZ, TX, TZ) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWZXW() (TX, TW, TZ, TX, TW) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWZXA() (TX, TW, TZ, TX, TA) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWZXB() (TX, TW, TZ, TX, TB) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWZXC() (TX, TW, TZ, TX, TC) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWZYX() (TX, TW, TZ, TY, TX) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWZYY() (TX, TW, TZ, TY, TY) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWZYZ() (TX, TW, TZ, TY, TZ) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWZYW() (TX, TW, TZ, TY, TW) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWZYA() (TX, TW, TZ, TY, TA) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWZYB() (TX, TW, TZ, TY, TB) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWZYC() (TX, TW, TZ, TY, TC) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWZZX() (TX, TW, TZ, TZ, TX) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWZZY() (TX, TW, TZ, TZ, TY) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWZZZ() (TX, TW, TZ, TZ, TZ) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWZZW() (TX, TW, TZ, TZ, TW) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWZZA() (TX, TW, TZ, TZ, TA) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWZZB() (TX, TW, TZ, TZ, TB) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWZZC() (TX, TW, TZ, TZ, TC) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWZWX() (TX, TW, TZ, TW, TX) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWZWY() (TX, TW, TZ, TW, TY) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWZWZ() (TX, TW, TZ, TW, TZ) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWZWW() (TX, TW, TZ, TW, TW) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWZWA() (TX, TW, TZ, TW, TA) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWZWB() (TX, TW, TZ, TW, TB) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWZWC() (TX, TW, TZ, TW, TC) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWZAX() (TX, TW, TZ, TA, TX) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWZAY() (TX, TW, TZ, TA, TY) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWZAZ() (TX, TW, TZ, TA, TZ) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWZAW() (TX, TW, TZ, TA, TW) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWZAA() (TX, TW, TZ, TA, TA) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWZAB() (TX, TW, TZ, TA, TB) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWZAC() (TX, TW, TZ, TA, TC) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWZBX() (TX, TW, TZ, TB, TX) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWZBY() (TX, TW, TZ, TB, TY) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWZBZ() (TX, TW, TZ, TB, TZ) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWZBW() (TX, TW, TZ, TB, TW) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWZBA() (TX, TW, TZ, TB, TA) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWZBB() (TX, TW, TZ, TB, TB) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWZBC() (TX, TW, TZ, TB, TC) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWZCX() (TX, TW, TZ, TC, TX) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWZCY() (TX, TW, TZ, TC, TY) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWZCZ() (TX, TW, TZ, TC, TZ) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWZCW() (TX, TW, TZ, TC, TW) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWZCA() (TX, TW, TZ, TC, TA) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWZCB() (TX, TW, TZ, TC, TB) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWZCC() (TX, TW, TZ, TC, TC) { return _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWWXX() (TX, TW, TW, TX, TX) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWWXY() (TX, TW, TW, TX, TY) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWWXZ() (TX, TW, TW, TX, TZ) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWWXW() (TX, TW, TW, TX, TW) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWWXA() (TX, TW, TW, TX, TA) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWWXB() (TX, TW, TW, TX, TB) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWWXC() (TX, TW, TW, TX, TC) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWWYX() (TX, TW, TW, TY, TX) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWWYY() (TX, TW, TW, TY, TY) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWWYZ() (TX, TW, TW, TY, TZ) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWWYW() (TX, TW, TW, TY, TW) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWWYA() (TX, TW, TW, TY, TA) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWWYB() (TX, TW, TW, TY, TB) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWWYC() (TX, TW, TW, TY, TC) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWWZX() (TX, TW, TW, TZ, TX) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWWZY() (TX, TW, TW, TZ, TY) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWWZZ() (TX, TW, TW, TZ, TZ) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWWZW() (TX, TW, TW, TZ, TW) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWWZA() (TX, TW, TW, TZ, TA) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWWZB() (TX, TW, TW, TZ, TB) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWWZC() (TX, TW, TW, TZ, TC) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWWWX() (TX, TW, TW, TW, TX) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWWWY() (TX, TW, TW, TW, TY) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWWWZ() (TX, TW, TW, TW, TZ) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWWWW() (TX, TW, TW, TW, TW) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWWWA() (TX, TW, TW, TW, TA) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWWWB() (TX, TW, TW, TW, TB) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWWWC() (TX, TW, TW, TW, TC) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWWAX() (TX, TW, TW, TA, TX) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWWAY() (TX, TW, TW, TA, TY) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWWAZ() (TX, TW, TW, TA, TZ) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWWAW() (TX, TW, TW, TA, TW) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWWAA() (TX, TW, TW, TA, TA) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWWAB() (TX, TW, TW, TA, TB) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWWAC() (TX, TW, TW, TA, TC) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWWBX() (TX, TW, TW, TB, TX) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWWBY() (TX, TW, TW, TB, TY) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWWBZ() (TX, TW, TW, TB, TZ) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWWBW() (TX, TW, TW, TB, TW) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWWBA() (TX, TW, TW, TB, TA) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWWBB() (TX, TW, TW, TB, TB) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWWBC() (TX, TW, TW, TB, TC) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWWCX() (TX, TW, TW, TC, TX) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWWCY() (TX, TW, TW, TC, TY) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWWCZ() (TX, TW, TW, TC, TZ) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWWCW() (TX, TW, TW, TC, TW) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWWCA() (TX, TW, TW, TC, TA) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWWCB() (TX, TW, TW, TC, TB) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWWCC() (TX, TW, TW, TC, TC) { return _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWAXX() (TX, TW, TA, TX, TX) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWAXY() (TX, TW, TA, TX, TY) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWAXZ() (TX, TW, TA, TX, TZ) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWAXW() (TX, TW, TA, TX, TW) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWAXA() (TX, TW, TA, TX, TA) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWAXB() (TX, TW, TA, TX, TB) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWAXC() (TX, TW, TA, TX, TC) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWAYX() (TX, TW, TA, TY, TX) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWAYY() (TX, TW, TA, TY, TY) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWAYZ() (TX, TW, TA, TY, TZ) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWAYW() (TX, TW, TA, TY, TW) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWAYA() (TX, TW, TA, TY, TA) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWAYB() (TX, TW, TA, TY, TB) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWAYC() (TX, TW, TA, TY, TC) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWAZX() (TX, TW, TA, TZ, TX) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWAZY() (TX, TW, TA, TZ, TY) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWAZZ() (TX, TW, TA, TZ, TZ) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWAZW() (TX, TW, TA, TZ, TW) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWAZA() (TX, TW, TA, TZ, TA) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWAZB() (TX, TW, TA, TZ, TB) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWAZC() (TX, TW, TA, TZ, TC) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWAWX() (TX, TW, TA, TW, TX) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWAWY() (TX, TW, TA, TW, TY) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWAWZ() (TX, TW, TA, TW, TZ) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWAWW() (TX, TW, TA, TW, TW) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWAWA() (TX, TW, TA, TW, TA) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWAWB() (TX, TW, TA, TW, TB) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWAWC() (TX, TW, TA, TW, TC) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWAAX() (TX, TW, TA, TA, TX) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWAAY() (TX, TW, TA, TA, TY) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWAAZ() (TX, TW, TA, TA, TZ) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWAAW() (TX, TW, TA, TA, TW) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWAAA() (TX, TW, TA, TA, TA) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWAAB() (TX, TW, TA, TA, TB) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWAAC() (TX, TW, TA, TA, TC) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWABX() (TX, TW, TA, TB, TX) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWABY() (TX, TW, TA, TB, TY) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWABZ() (TX, TW, TA, TB, TZ) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWABW() (TX, TW, TA, TB, TW) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWABA() (TX, TW, TA, TB, TA) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWABB() (TX, TW, TA, TB, TB) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWABC() (TX, TW, TA, TB, TC) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWACX() (TX, TW, TA, TC, TX) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWACY() (TX, TW, TA, TC, TY) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWACZ() (TX, TW, TA, TC, TZ) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWACW() (TX, TW, TA, TC, TW) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWACA() (TX, TW, TA, TC, TA) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWACB() (TX, TW, TA, TC, TB) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWACC() (TX, TW, TA, TC, TC) { return _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWBXX() (TX, TW, TB, TX, TX) { return _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWBXY() (TX, TW, TB, TX, TY) { return _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWBXZ() (TX, TW, TB, TX, TZ) { return _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWBXW() (TX, TW, TB, TX, TW) { return _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWBXA() (TX, TW, TB, TX, TA) { return _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWBXB() (TX, TW, TB, TX, TB) { return _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWBXC() (TX, TW, TB, TX, TC) { return _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWBYX() (TX, TW, TB, TY, TX) { return _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWBYY() (TX, TW, TB, TY, TY) { return _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWBYZ() (TX, TW, TB, TY, TZ) { return _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWBYW() (TX, TW, TB, TY, TW) { return _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWBYA() (TX, TW, TB, TY, TA) { return _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWBYB() (TX, TW, TB, TY, TB) { return _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWBYC() (TX, TW, TB, TY, TC) { return _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWBZX() (TX, TW, TB, TZ, TX) { return _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWBZY() (TX, TW, TB, TZ, TY) { return _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWBZZ() (TX, TW, TB, TZ, TZ) { return _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWBZW() (TX, TW, TB, TZ, TW) { return _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWBZA() (TX, TW, TB, TZ, TA) { return _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWBZB() (TX, TW, TB, TZ, TB) { return _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWBZC() (TX, TW, TB, TZ, TC) { return _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWBWX() (TX, TW, TB, TW, TX) { return _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWBWY() (TX, TW, TB, TW, TY) { return _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWBWZ() (TX, TW, TB, TW, TZ) { return _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWBWW() (TX, TW, TB, TW, TW) { return _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWBWA() (TX, TW, TB, TW, TA) { return _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWBWB() (TX, TW, TB, TW, TB) { return _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWBWC() (TX, TW, TB, TW, TC) { return _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWBAX() (TX, TW, TB, TA, TX) { return _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWBAY() (TX, TW, TB, TA, TY) { return _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWBAZ() (TX, TW, TB, TA, TZ) { return _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWBAW() (TX, TW, TB, TA, TW) { return _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWBAA() (TX, TW, TB, TA, TA) { return _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWBAB() (TX, TW, TB, TA, TB) { return _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWBAC() (TX, TW, TB, TA, TC) { return _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWBBX() (TX, TW, TB, TB, TX) { return _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWBBY() (TX, TW, TB, TB, TY) { return _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWBBZ() (TX, TW, TB, TB, TZ) { return _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWBBW() (TX, TW, TB, TB, TW) { return _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWBBA() (TX, TW, TB, TB, TA) { return _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWBBB() (TX, TW, TB, TB, TB) { return _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWBBC() (TX, TW, TB, TB, TC) { return _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWBCX() (TX, TW, TB, TC, TX) { return _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWBCY() (TX, TW, TB, TC, TY) { return _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWBCZ() (TX, TW, TB, TC, TZ) { return _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWBCW() (TX, TW, TB, TC, TW) { return _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWBCA() (TX, TW, TB, TC, TA) { return _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWBCB() (TX, TW, TB, TC, TB) { return _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWBCC() (TX, TW, TB, TC, TC) { return _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWCXX() (TX, TW, TC, TX, TX) { return _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWCXY() (TX, TW, TC, TX, TY) { return _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWCXZ() (TX, TW, TC, TX, TZ) { return _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWCXW() (TX, TW, TC, TX, TW) { return _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWCXA() (TX, TW, TC, TX, TA) { return _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWCXB() (TX, TW, TC, TX, TB) { return _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWCXC() (TX, TW, TC, TX, TC) { return _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWCYX() (TX, TW, TC, TY, TX) { return _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWCYY() (TX, TW, TC, TY, TY) { return _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWCYZ() (TX, TW, TC, TY, TZ) { return _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWCYW() (TX, TW, TC, TY, TW) { return _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWCYA() (TX, TW, TC, TY, TA) { return _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWCYB() (TX, TW, TC, TY, TB) { return _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWCYC() (TX, TW, TC, TY, TC) { return _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWCZX() (TX, TW, TC, TZ, TX) { return _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWCZY() (TX, TW, TC, TZ, TY) { return _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWCZZ() (TX, TW, TC, TZ, TZ) { return _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWCZW() (TX, TW, TC, TZ, TW) { return _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWCZA() (TX, TW, TC, TZ, TA) { return _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWCZB() (TX, TW, TC, TZ, TB) { return _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWCZC() (TX, TW, TC, TZ, TC) { return _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWCWX() (TX, TW, TC, TW, TX) { return _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWCWY() (TX, TW, TC, TW, TY) { return _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWCWZ() (TX, TW, TC, TW, TZ) { return _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWCWW() (TX, TW, TC, TW, TW) { return _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWCWA() (TX, TW, TC, TW, TA) { return _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWCWB() (TX, TW, TC, TW, TB) { return _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWCWC() (TX, TW, TC, TW, TC) { return _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWCAX() (TX, TW, TC, TA, TX) { return _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWCAY() (TX, TW, TC, TA, TY) { return _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWCAZ() (TX, TW, TC, TA, TZ) { return _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWCAW() (TX, TW, TC, TA, TW) { return _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWCAA() (TX, TW, TC, TA, TA) { return _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWCAB() (TX, TW, TC, TA, TB) { return _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWCAC() (TX, TW, TC, TA, TC) { return _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWCBX() (TX, TW, TC, TB, TX) { return _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWCBY() (TX, TW, TC, TB, TY) { return _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWCBZ() (TX, TW, TC, TB, TZ) { return _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWCBW() (TX, TW, TC, TB, TW) { return _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWCBA() (TX, TW, TC, TB, TA) { return _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWCBB() (TX, TW, TC, TB, TB) { return _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWCBC() (TX, TW, TC, TB, TC) { return _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWCCX() (TX, TW, TC, TC, TX) { return _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWCCY() (TX, TW, TC, TC, TY) { return _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWCCZ() (TX, TW, TC, TC, TZ) { return _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWCCW() (TX, TW, TC, TC, TW) { return _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWCCA() (TX, TW, TC, TC, TA) { return _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWCCB() (TX, TW, TC, TC, TB) { return _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XWCCC() (TX, TW, TC, TC, TC) { return _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAXXX() (TX, TA, TX, TX, TX) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAXXY() (TX, TA, TX, TX, TY) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAXXZ() (TX, TA, TX, TX, TZ) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAXXW() (TX, TA, TX, TX, TW) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAXXA() (TX, TA, TX, TX, TA) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAXXB() (TX, TA, TX, TX, TB) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAXXC() (TX, TA, TX, TX, TC) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAXYX() (TX, TA, TX, TY, TX) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAXYY() (TX, TA, TX, TY, TY) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAXYZ() (TX, TA, TX, TY, TZ) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAXYW() (TX, TA, TX, TY, TW) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAXYA() (TX, TA, TX, TY, TA) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAXYB() (TX, TA, TX, TY, TB) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAXYC() (TX, TA, TX, TY, TC) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAXZX() (TX, TA, TX, TZ, TX) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAXZY() (TX, TA, TX, TZ, TY) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAXZZ() (TX, TA, TX, TZ, TZ) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAXZW() (TX, TA, TX, TZ, TW) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAXZA() (TX, TA, TX, TZ, TA) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAXZB() (TX, TA, TX, TZ, TB) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAXZC() (TX, TA, TX, TZ, TC) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAXWX() (TX, TA, TX, TW, TX) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAXWY() (TX, TA, TX, TW, TY) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAXWZ() (TX, TA, TX, TW, TZ) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAXWW() (TX, TA, TX, TW, TW) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAXWA() (TX, TA, TX, TW, TA) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAXWB() (TX, TA, TX, TW, TB) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAXWC() (TX, TA, TX, TW, TC) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAXAX() (TX, TA, TX, TA, TX) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAXAY() (TX, TA, TX, TA, TY) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAXAZ() (TX, TA, TX, TA, TZ) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAXAW() (TX, TA, TX, TA, TW) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAXAA() (TX, TA, TX, TA, TA) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAXAB() (TX, TA, TX, TA, TB) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAXAC() (TX, TA, TX, TA, TC) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAXBX() (TX, TA, TX, TB, TX) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAXBY() (TX, TA, TX, TB, TY) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAXBZ() (TX, TA, TX, TB, TZ) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAXBW() (TX, TA, TX, TB, TW) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAXBA() (TX, TA, TX, TB, TA) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAXBB() (TX, TA, TX, TB, TB) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAXBC() (TX, TA, TX, TB, TC) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAXCX() (TX, TA, TX, TC, TX) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAXCY() (TX, TA, TX, TC, TY) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAXCZ() (TX, TA, TX, TC, TZ) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAXCW() (TX, TA, TX, TC, TW) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAXCA() (TX, TA, TX, TC, TA) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAXCB() (TX, TA, TX, TC, TB) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAXCC() (TX, TA, TX, TC, TC) { return _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAYXX() (TX, TA, TY, TX, TX) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAYXY() (TX, TA, TY, TX, TY) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAYXZ() (TX, TA, TY, TX, TZ) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAYXW() (TX, TA, TY, TX, TW) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAYXA() (TX, TA, TY, TX, TA) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAYXB() (TX, TA, TY, TX, TB) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAYXC() (TX, TA, TY, TX, TC) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAYYX() (TX, TA, TY, TY, TX) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAYYY() (TX, TA, TY, TY, TY) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAYYZ() (TX, TA, TY, TY, TZ) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAYYW() (TX, TA, TY, TY, TW) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAYYA() (TX, TA, TY, TY, TA) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAYYB() (TX, TA, TY, TY, TB) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAYYC() (TX, TA, TY, TY, TC) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAYZX() (TX, TA, TY, TZ, TX) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAYZY() (TX, TA, TY, TZ, TY) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAYZZ() (TX, TA, TY, TZ, TZ) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAYZW() (TX, TA, TY, TZ, TW) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAYZA() (TX, TA, TY, TZ, TA) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAYZB() (TX, TA, TY, TZ, TB) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAYZC() (TX, TA, TY, TZ, TC) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAYWX() (TX, TA, TY, TW, TX) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAYWY() (TX, TA, TY, TW, TY) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAYWZ() (TX, TA, TY, TW, TZ) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAYWW() (TX, TA, TY, TW, TW) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAYWA() (TX, TA, TY, TW, TA) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAYWB() (TX, TA, TY, TW, TB) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAYWC() (TX, TA, TY, TW, TC) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAYAX() (TX, TA, TY, TA, TX) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAYAY() (TX, TA, TY, TA, TY) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAYAZ() (TX, TA, TY, TA, TZ) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAYAW() (TX, TA, TY, TA, TW) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAYAA() (TX, TA, TY, TA, TA) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAYAB() (TX, TA, TY, TA, TB) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAYAC() (TX, TA, TY, TA, TC) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAYBX() (TX, TA, TY, TB, TX) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAYBY() (TX, TA, TY, TB, TY) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAYBZ() (TX, TA, TY, TB, TZ) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAYBW() (TX, TA, TY, TB, TW) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAYBA() (TX, TA, TY, TB, TA) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAYBB() (TX, TA, TY, TB, TB) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAYBC() (TX, TA, TY, TB, TC) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAYCX() (TX, TA, TY, TC, TX) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAYCY() (TX, TA, TY, TC, TY) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAYCZ() (TX, TA, TY, TC, TZ) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAYCW() (TX, TA, TY, TC, TW) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAYCA() (TX, TA, TY, TC, TA) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAYCB() (TX, TA, TY, TC, TB) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAYCC() (TX, TA, TY, TC, TC) { return _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAZXX() (TX, TA, TZ, TX, TX) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAZXY() (TX, TA, TZ, TX, TY) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAZXZ() (TX, TA, TZ, TX, TZ) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAZXW() (TX, TA, TZ, TX, TW) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAZXA() (TX, TA, TZ, TX, TA) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAZXB() (TX, TA, TZ, TX, TB) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAZXC() (TX, TA, TZ, TX, TC) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAZYX() (TX, TA, TZ, TY, TX) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAZYY() (TX, TA, TZ, TY, TY) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAZYZ() (TX, TA, TZ, TY, TZ) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAZYW() (TX, TA, TZ, TY, TW) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAZYA() (TX, TA, TZ, TY, TA) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAZYB() (TX, TA, TZ, TY, TB) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAZYC() (TX, TA, TZ, TY, TC) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAZZX() (TX, TA, TZ, TZ, TX) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAZZY() (TX, TA, TZ, TZ, TY) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAZZZ() (TX, TA, TZ, TZ, TZ) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAZZW() (TX, TA, TZ, TZ, TW) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAZZA() (TX, TA, TZ, TZ, TA) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAZZB() (TX, TA, TZ, TZ, TB) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAZZC() (TX, TA, TZ, TZ, TC) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAZWX() (TX, TA, TZ, TW, TX) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAZWY() (TX, TA, TZ, TW, TY) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAZWZ() (TX, TA, TZ, TW, TZ) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAZWW() (TX, TA, TZ, TW, TW) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAZWA() (TX, TA, TZ, TW, TA) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAZWB() (TX, TA, TZ, TW, TB) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAZWC() (TX, TA, TZ, TW, TC) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAZAX() (TX, TA, TZ, TA, TX) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAZAY() (TX, TA, TZ, TA, TY) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAZAZ() (TX, TA, TZ, TA, TZ) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAZAW() (TX, TA, TZ, TA, TW) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAZAA() (TX, TA, TZ, TA, TA) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAZAB() (TX, TA, TZ, TA, TB) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAZAC() (TX, TA, TZ, TA, TC) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAZBX() (TX, TA, TZ, TB, TX) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAZBY() (TX, TA, TZ, TB, TY) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAZBZ() (TX, TA, TZ, TB, TZ) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAZBW() (TX, TA, TZ, TB, TW) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAZBA() (TX, TA, TZ, TB, TA) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAZBB() (TX, TA, TZ, TB, TB) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAZBC() (TX, TA, TZ, TB, TC) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAZCX() (TX, TA, TZ, TC, TX) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAZCY() (TX, TA, TZ, TC, TY) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAZCZ() (TX, TA, TZ, TC, TZ) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAZCW() (TX, TA, TZ, TC, TW) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAZCA() (TX, TA, TZ, TC, TA) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAZCB() (TX, TA, TZ, TC, TB) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAZCC() (TX, TA, TZ, TC, TC) { return _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAWXX() (TX, TA, TW, TX, TX) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAWXY() (TX, TA, TW, TX, TY) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAWXZ() (TX, TA, TW, TX, TZ) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAWXW() (TX, TA, TW, TX, TW) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAWXA() (TX, TA, TW, TX, TA) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAWXB() (TX, TA, TW, TX, TB) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAWXC() (TX, TA, TW, TX, TC) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAWYX() (TX, TA, TW, TY, TX) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAWYY() (TX, TA, TW, TY, TY) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAWYZ() (TX, TA, TW, TY, TZ) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAWYW() (TX, TA, TW, TY, TW) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAWYA() (TX, TA, TW, TY, TA) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAWYB() (TX, TA, TW, TY, TB) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAWYC() (TX, TA, TW, TY, TC) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAWZX() (TX, TA, TW, TZ, TX) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAWZY() (TX, TA, TW, TZ, TY) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAWZZ() (TX, TA, TW, TZ, TZ) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAWZW() (TX, TA, TW, TZ, TW) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAWZA() (TX, TA, TW, TZ, TA) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAWZB() (TX, TA, TW, TZ, TB) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAWZC() (TX, TA, TW, TZ, TC) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAWWX() (TX, TA, TW, TW, TX) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAWWY() (TX, TA, TW, TW, TY) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAWWZ() (TX, TA, TW, TW, TZ) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAWWW() (TX, TA, TW, TW, TW) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAWWA() (TX, TA, TW, TW, TA) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAWWB() (TX, TA, TW, TW, TB) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAWWC() (TX, TA, TW, TW, TC) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAWAX() (TX, TA, TW, TA, TX) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAWAY() (TX, TA, TW, TA, TY) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAWAZ() (TX, TA, TW, TA, TZ) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAWAW() (TX, TA, TW, TA, TW) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAWAA() (TX, TA, TW, TA, TA) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAWAB() (TX, TA, TW, TA, TB) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAWAC() (TX, TA, TW, TA, TC) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAWBX() (TX, TA, TW, TB, TX) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAWBY() (TX, TA, TW, TB, TY) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAWBZ() (TX, TA, TW, TB, TZ) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAWBW() (TX, TA, TW, TB, TW) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAWBA() (TX, TA, TW, TB, TA) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAWBB() (TX, TA, TW, TB, TB) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAWBC() (TX, TA, TW, TB, TC) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAWCX() (TX, TA, TW, TC, TX) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAWCY() (TX, TA, TW, TC, TY) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAWCZ() (TX, TA, TW, TC, TZ) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAWCW() (TX, TA, TW, TC, TW) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAWCA() (TX, TA, TW, TC, TA) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAWCB() (TX, TA, TW, TC, TB) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAWCC() (TX, TA, TW, TC, TC) { return _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAAXX() (TX, TA, TA, TX, TX) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAAXY() (TX, TA, TA, TX, TY) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAAXZ() (TX, TA, TA, TX, TZ) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAAXW() (TX, TA, TA, TX, TW) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAAXA() (TX, TA, TA, TX, TA) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAAXB() (TX, TA, TA, TX, TB) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAAXC() (TX, TA, TA, TX, TC) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAAYX() (TX, TA, TA, TY, TX) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAAYY() (TX, TA, TA, TY, TY) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAAYZ() (TX, TA, TA, TY, TZ) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAAYW() (TX, TA, TA, TY, TW) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAAYA() (TX, TA, TA, TY, TA) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAAYB() (TX, TA, TA, TY, TB) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAAYC() (TX, TA, TA, TY, TC) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAAZX() (TX, TA, TA, TZ, TX) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAAZY() (TX, TA, TA, TZ, TY) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAAZZ() (TX, TA, TA, TZ, TZ) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAAZW() (TX, TA, TA, TZ, TW) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAAZA() (TX, TA, TA, TZ, TA) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAAZB() (TX, TA, TA, TZ, TB) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAAZC() (TX, TA, TA, TZ, TC) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAAWX() (TX, TA, TA, TW, TX) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAAWY() (TX, TA, TA, TW, TY) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAAWZ() (TX, TA, TA, TW, TZ) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAAWW() (TX, TA, TA, TW, TW) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAAWA() (TX, TA, TA, TW, TA) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAAWB() (TX, TA, TA, TW, TB) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAAWC() (TX, TA, TA, TW, TC) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAAAX() (TX, TA, TA, TA, TX) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAAAY() (TX, TA, TA, TA, TY) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAAAZ() (TX, TA, TA, TA, TZ) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAAAW() (TX, TA, TA, TA, TW) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAAAA() (TX, TA, TA, TA, TA) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAAAB() (TX, TA, TA, TA, TB) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAAAC() (TX, TA, TA, TA, TC) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAABX() (TX, TA, TA, TB, TX) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAABY() (TX, TA, TA, TB, TY) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAABZ() (TX, TA, TA, TB, TZ) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAABW() (TX, TA, TA, TB, TW) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAABA() (TX, TA, TA, TB, TA) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAABB() (TX, TA, TA, TB, TB) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAABC() (TX, TA, TA, TB, TC) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAACX() (TX, TA, TA, TC, TX) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAACY() (TX, TA, TA, TC, TY) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAACZ() (TX, TA, TA, TC, TZ) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAACW() (TX, TA, TA, TC, TW) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAACA() (TX, TA, TA, TC, TA) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAACB() (TX, TA, TA, TC, TB) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XAACC() (TX, TA, TA, TC, TC) { return _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XABXX() (TX, TA, TB, TX, TX) { return _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XABXY() (TX, TA, TB, TX, TY) { return _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XABXZ() (TX, TA, TB, TX, TZ) { return _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XABXW() (TX, TA, TB, TX, TW) { return _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XABXA() (TX, TA, TB, TX, TA) { return _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XABXB() (TX, TA, TB, TX, TB) { return _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XABXC() (TX, TA, TB, TX, TC) { return _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XABYX() (TX, TA, TB, TY, TX) { return _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XABYY() (TX, TA, TB, TY, TY) { return _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XABYZ() (TX, TA, TB, TY, TZ) { return _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XABYW() (TX, TA, TB, TY, TW) { return _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XABYA() (TX, TA, TB, TY, TA) { return _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XABYB() (TX, TA, TB, TY, TB) { return _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XABYC() (TX, TA, TB, TY, TC) { return _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XABZX() (TX, TA, TB, TZ, TX) { return _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XABZY() (TX, TA, TB, TZ, TY) { return _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XABZZ() (TX, TA, TB, TZ, TZ) { return _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XABZW() (TX, TA, TB, TZ, TW) { return _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XABZA() (TX, TA, TB, TZ, TA) { return _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XABZB() (TX, TA, TB, TZ, TB) { return _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XABZC() (TX, TA, TB, TZ, TC) { return _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XABWX() (TX, TA, TB, TW, TX) { return _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XABWY() (TX, TA, TB, TW, TY) { return _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XABWZ() (TX, TA, TB, TW, TZ) { return _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XABWW() (TX, TA, TB, TW, TW) { return _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XABWA() (TX, TA, TB, TW, TA) { return _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XABWB() (TX, TA, TB, TW, TB) { return _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XABWC() (TX, TA, TB, TW, TC) { return _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XABAX() (TX, TA, TB, TA, TX) { return _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XABAY() (TX, TA, TB, TA, TY) { return _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XABAZ() (TX, TA, TB, TA, TZ) { return _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XABAW() (TX, TA, TB, TA, TW) { return _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XABAA() (TX, TA, TB, TA, TA) { return _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XABAB() (TX, TA, TB, TA, TB) { return _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XABAC() (TX, TA, TB, TA, TC) { return _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XABBX() (TX, TA, TB, TB, TX) { return _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XABBY() (TX, TA, TB, TB, TY) { return _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XABBZ() (TX, TA, TB, TB, TZ) { return _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XABBW() (TX, TA, TB, TB, TW) { return _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XABBA() (TX, TA, TB, TB, TA) { return _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XABBB() (TX, TA, TB, TB, TB) { return _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XABBC() (TX, TA, TB, TB, TC) { return _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XABCX() (TX, TA, TB, TC, TX) { return _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XABCY() (TX, TA, TB, TC, TY) { return _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XABCZ() (TX, TA, TB, TC, TZ) { return _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XABCW() (TX, TA, TB, TC, TW) { return _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XABCA() (TX, TA, TB, TC, TA) { return _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XABCB() (TX, TA, TB, TC, TB) { return _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XABCC() (TX, TA, TB, TC, TC) { return _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XACXX() (TX, TA, TC, TX, TX) { return _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XACXY() (TX, TA, TC, TX, TY) { return _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XACXZ() (TX, TA, TC, TX, TZ) { return _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XACXW() (TX, TA, TC, TX, TW) { return _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XACXA() (TX, TA, TC, TX, TA) { return _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XACXB() (TX, TA, TC, TX, TB) { return _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XACXC() (TX, TA, TC, TX, TC) { return _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XACYX() (TX, TA, TC, TY, TX) { return _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XACYY() (TX, TA, TC, TY, TY) { return _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XACYZ() (TX, TA, TC, TY, TZ) { return _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XACYW() (TX, TA, TC, TY, TW) { return _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XACYA() (TX, TA, TC, TY, TA) { return _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XACYB() (TX, TA, TC, TY, TB) { return _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XACYC() (TX, TA, TC, TY, TC) { return _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XACZX() (TX, TA, TC, TZ, TX) { return _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XACZY() (TX, TA, TC, TZ, TY) { return _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XACZZ() (TX, TA, TC, TZ, TZ) { return _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XACZW() (TX, TA, TC, TZ, TW) { return _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XACZA() (TX, TA, TC, TZ, TA) { return _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XACZB() (TX, TA, TC, TZ, TB) { return _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XACZC() (TX, TA, TC, TZ, TC) { return _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XACWX() (TX, TA, TC, TW, TX) { return _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XACWY() (TX, TA, TC, TW, TY) { return _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XACWZ() (TX, TA, TC, TW, TZ) { return _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XACWW() (TX, TA, TC, TW, TW) { return _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XACWA() (TX, TA, TC, TW, TA) { return _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XACWB() (TX, TA, TC, TW, TB) { return _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XACWC() (TX, TA, TC, TW, TC) { return _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XACAX() (TX, TA, TC, TA, TX) { return _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XACAY() (TX, TA, TC, TA, TY) { return _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XACAZ() (TX, TA, TC, TA, TZ) { return _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XACAW() (TX, TA, TC, TA, TW) { return _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XACAA() (TX, TA, TC, TA, TA) { return _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XACAB() (TX, TA, TC, TA, TB) { return _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XACAC() (TX, TA, TC, TA, TC) { return _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XACBX() (TX, TA, TC, TB, TX) { return _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XACBY() (TX, TA, TC, TB, TY) { return _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XACBZ() (TX, TA, TC, TB, TZ) { return _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XACBW() (TX, TA, TC, TB, TW) { return _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XACBA() (TX, TA, TC, TB, TA) { return _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XACBB() (TX, TA, TC, TB, TB) { return _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XACBC() (TX, TA, TC, TB, TC) { return _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XACCX() (TX, TA, TC, TC, TX) { return _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XACCY() (TX, TA, TC, TC, TY) { return _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XACCZ() (TX, TA, TC, TC, TZ) { return _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XACCW() (TX, TA, TC, TC, TW) { return _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XACCA() (TX, TA, TC, TC, TA) { return _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XACCB() (TX, TA, TC, TC, TB) { return _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XACCC() (TX, TA, TC, TC, TC) { return _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBXXX() (TX, TB, TX, TX, TX) { return _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBXXY() (TX, TB, TX, TX, TY) { return _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBXXZ() (TX, TB, TX, TX, TZ) { return _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBXXW() (TX, TB, TX, TX, TW) { return _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBXXA() (TX, TB, TX, TX, TA) { return _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBXXB() (TX, TB, TX, TX, TB) { return _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBXXC() (TX, TB, TX, TX, TC) { return _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBXYX() (TX, TB, TX, TY, TX) { return _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBXYY() (TX, TB, TX, TY, TY) { return _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBXYZ() (TX, TB, TX, TY, TZ) { return _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBXYW() (TX, TB, TX, TY, TW) { return _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBXYA() (TX, TB, TX, TY, TA) { return _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBXYB() (TX, TB, TX, TY, TB) { return _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBXYC() (TX, TB, TX, TY, TC) { return _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBXZX() (TX, TB, TX, TZ, TX) { return _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBXZY() (TX, TB, TX, TZ, TY) { return _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBXZZ() (TX, TB, TX, TZ, TZ) { return _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBXZW() (TX, TB, TX, TZ, TW) { return _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBXZA() (TX, TB, TX, TZ, TA) { return _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBXZB() (TX, TB, TX, TZ, TB) { return _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBXZC() (TX, TB, TX, TZ, TC) { return _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBXWX() (TX, TB, TX, TW, TX) { return _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBXWY() (TX, TB, TX, TW, TY) { return _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBXWZ() (TX, TB, TX, TW, TZ) { return _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBXWW() (TX, TB, TX, TW, TW) { return _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBXWA() (TX, TB, TX, TW, TA) { return _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBXWB() (TX, TB, TX, TW, TB) { return _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBXWC() (TX, TB, TX, TW, TC) { return _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBXAX() (TX, TB, TX, TA, TX) { return _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBXAY() (TX, TB, TX, TA, TY) { return _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBXAZ() (TX, TB, TX, TA, TZ) { return _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBXAW() (TX, TB, TX, TA, TW) { return _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBXAA() (TX, TB, TX, TA, TA) { return _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBXAB() (TX, TB, TX, TA, TB) { return _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBXAC() (TX, TB, TX, TA, TC) { return _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBXBX() (TX, TB, TX, TB, TX) { return _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBXBY() (TX, TB, TX, TB, TY) { return _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBXBZ() (TX, TB, TX, TB, TZ) { return _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBXBW() (TX, TB, TX, TB, TW) { return _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBXBA() (TX, TB, TX, TB, TA) { return _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBXBB() (TX, TB, TX, TB, TB) { return _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBXBC() (TX, TB, TX, TB, TC) { return _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBXCX() (TX, TB, TX, TC, TX) { return _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBXCY() (TX, TB, TX, TC, TY) { return _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBXCZ() (TX, TB, TX, TC, TZ) { return _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBXCW() (TX, TB, TX, TC, TW) { return _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBXCA() (TX, TB, TX, TC, TA) { return _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBXCB() (TX, TB, TX, TC, TB) { return _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBXCC() (TX, TB, TX, TC, TC) { return _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBYXX() (TX, TB, TY, TX, TX) { return _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBYXY() (TX, TB, TY, TX, TY) { return _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBYXZ() (TX, TB, TY, TX, TZ) { return _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBYXW() (TX, TB, TY, TX, TW) { return _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBYXA() (TX, TB, TY, TX, TA) { return _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBYXB() (TX, TB, TY, TX, TB) { return _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBYXC() (TX, TB, TY, TX, TC) { return _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBYYX() (TX, TB, TY, TY, TX) { return _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBYYY() (TX, TB, TY, TY, TY) { return _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBYYZ() (TX, TB, TY, TY, TZ) { return _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBYYW() (TX, TB, TY, TY, TW) { return _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBYYA() (TX, TB, TY, TY, TA) { return _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBYYB() (TX, TB, TY, TY, TB) { return _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBYYC() (TX, TB, TY, TY, TC) { return _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBYZX() (TX, TB, TY, TZ, TX) { return _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBYZY() (TX, TB, TY, TZ, TY) { return _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBYZZ() (TX, TB, TY, TZ, TZ) { return _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBYZW() (TX, TB, TY, TZ, TW) { return _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBYZA() (TX, TB, TY, TZ, TA) { return _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBYZB() (TX, TB, TY, TZ, TB) { return _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBYZC() (TX, TB, TY, TZ, TC) { return _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBYWX() (TX, TB, TY, TW, TX) { return _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBYWY() (TX, TB, TY, TW, TY) { return _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBYWZ() (TX, TB, TY, TW, TZ) { return _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBYWW() (TX, TB, TY, TW, TW) { return _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBYWA() (TX, TB, TY, TW, TA) { return _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBYWB() (TX, TB, TY, TW, TB) { return _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBYWC() (TX, TB, TY, TW, TC) { return _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBYAX() (TX, TB, TY, TA, TX) { return _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBYAY() (TX, TB, TY, TA, TY) { return _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBYAZ() (TX, TB, TY, TA, TZ) { return _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBYAW() (TX, TB, TY, TA, TW) { return _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBYAA() (TX, TB, TY, TA, TA) { return _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBYAB() (TX, TB, TY, TA, TB) { return _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBYAC() (TX, TB, TY, TA, TC) { return _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBYBX() (TX, TB, TY, TB, TX) { return _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBYBY() (TX, TB, TY, TB, TY) { return _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBYBZ() (TX, TB, TY, TB, TZ) { return _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBYBW() (TX, TB, TY, TB, TW) { return _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBYBA() (TX, TB, TY, TB, TA) { return _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBYBB() (TX, TB, TY, TB, TB) { return _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBYBC() (TX, TB, TY, TB, TC) { return _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBYCX() (TX, TB, TY, TC, TX) { return _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBYCY() (TX, TB, TY, TC, TY) { return _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBYCZ() (TX, TB, TY, TC, TZ) { return _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBYCW() (TX, TB, TY, TC, TW) { return _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBYCA() (TX, TB, TY, TC, TA) { return _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBYCB() (TX, TB, TY, TC, TB) { return _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBYCC() (TX, TB, TY, TC, TC) { return _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBZXX() (TX, TB, TZ, TX, TX) { return _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBZXY() (TX, TB, TZ, TX, TY) { return _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBZXZ() (TX, TB, TZ, TX, TZ) { return _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBZXW() (TX, TB, TZ, TX, TW) { return _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBZXA() (TX, TB, TZ, TX, TA) { return _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBZXB() (TX, TB, TZ, TX, TB) { return _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBZXC() (TX, TB, TZ, TX, TC) { return _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBZYX() (TX, TB, TZ, TY, TX) { return _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBZYY() (TX, TB, TZ, TY, TY) { return _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBZYZ() (TX, TB, TZ, TY, TZ) { return _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBZYW() (TX, TB, TZ, TY, TW) { return _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBZYA() (TX, TB, TZ, TY, TA) { return _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBZYB() (TX, TB, TZ, TY, TB) { return _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBZYC() (TX, TB, TZ, TY, TC) { return _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBZZX() (TX, TB, TZ, TZ, TX) { return _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBZZY() (TX, TB, TZ, TZ, TY) { return _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBZZZ() (TX, TB, TZ, TZ, TZ) { return _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBZZW() (TX, TB, TZ, TZ, TW) { return _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBZZA() (TX, TB, TZ, TZ, TA) { return _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBZZB() (TX, TB, TZ, TZ, TB) { return _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBZZC() (TX, TB, TZ, TZ, TC) { return _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBZWX() (TX, TB, TZ, TW, TX) { return _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBZWY() (TX, TB, TZ, TW, TY) { return _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBZWZ() (TX, TB, TZ, TW, TZ) { return _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBZWW() (TX, TB, TZ, TW, TW) { return _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBZWA() (TX, TB, TZ, TW, TA) { return _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBZWB() (TX, TB, TZ, TW, TB) { return _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBZWC() (TX, TB, TZ, TW, TC) { return _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBZAX() (TX, TB, TZ, TA, TX) { return _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBZAY() (TX, TB, TZ, TA, TY) { return _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBZAZ() (TX, TB, TZ, TA, TZ) { return _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBZAW() (TX, TB, TZ, TA, TW) { return _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBZAA() (TX, TB, TZ, TA, TA) { return _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBZAB() (TX, TB, TZ, TA, TB) { return _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBZAC() (TX, TB, TZ, TA, TC) { return _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBZBX() (TX, TB, TZ, TB, TX) { return _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBZBY() (TX, TB, TZ, TB, TY) { return _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBZBZ() (TX, TB, TZ, TB, TZ) { return _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBZBW() (TX, TB, TZ, TB, TW) { return _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBZBA() (TX, TB, TZ, TB, TA) { return _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBZBB() (TX, TB, TZ, TB, TB) { return _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBZBC() (TX, TB, TZ, TB, TC) { return _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBZCX() (TX, TB, TZ, TC, TX) { return _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBZCY() (TX, TB, TZ, TC, TY) { return _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBZCZ() (TX, TB, TZ, TC, TZ) { return _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBZCW() (TX, TB, TZ, TC, TW) { return _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBZCA() (TX, TB, TZ, TC, TA) { return _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBZCB() (TX, TB, TZ, TC, TB) { return _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBZCC() (TX, TB, TZ, TC, TC) { return _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBWXX() (TX, TB, TW, TX, TX) { return _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBWXY() (TX, TB, TW, TX, TY) { return _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBWXZ() (TX, TB, TW, TX, TZ) { return _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBWXW() (TX, TB, TW, TX, TW) { return _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBWXA() (TX, TB, TW, TX, TA) { return _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBWXB() (TX, TB, TW, TX, TB) { return _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBWXC() (TX, TB, TW, TX, TC) { return _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBWYX() (TX, TB, TW, TY, TX) { return _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBWYY() (TX, TB, TW, TY, TY) { return _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBWYZ() (TX, TB, TW, TY, TZ) { return _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBWYW() (TX, TB, TW, TY, TW) { return _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBWYA() (TX, TB, TW, TY, TA) { return _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBWYB() (TX, TB, TW, TY, TB) { return _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBWYC() (TX, TB, TW, TY, TC) { return _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBWZX() (TX, TB, TW, TZ, TX) { return _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBWZY() (TX, TB, TW, TZ, TY) { return _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBWZZ() (TX, TB, TW, TZ, TZ) { return _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBWZW() (TX, TB, TW, TZ, TW) { return _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBWZA() (TX, TB, TW, TZ, TA) { return _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBWZB() (TX, TB, TW, TZ, TB) { return _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBWZC() (TX, TB, TW, TZ, TC) { return _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBWWX() (TX, TB, TW, TW, TX) { return _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBWWY() (TX, TB, TW, TW, TY) { return _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBWWZ() (TX, TB, TW, TW, TZ) { return _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBWWW() (TX, TB, TW, TW, TW) { return _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBWWA() (TX, TB, TW, TW, TA) { return _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBWWB() (TX, TB, TW, TW, TB) { return _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBWWC() (TX, TB, TW, TW, TC) { return _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBWAX() (TX, TB, TW, TA, TX) { return _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBWAY() (TX, TB, TW, TA, TY) { return _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBWAZ() (TX, TB, TW, TA, TZ) { return _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBWAW() (TX, TB, TW, TA, TW) { return _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBWAA() (TX, TB, TW, TA, TA) { return _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBWAB() (TX, TB, TW, TA, TB) { return _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBWAC() (TX, TB, TW, TA, TC) { return _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBWBX() (TX, TB, TW, TB, TX) { return _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBWBY() (TX, TB, TW, TB, TY) { return _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBWBZ() (TX, TB, TW, TB, TZ) { return _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBWBW() (TX, TB, TW, TB, TW) { return _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBWBA() (TX, TB, TW, TB, TA) { return _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBWBB() (TX, TB, TW, TB, TB) { return _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBWBC() (TX, TB, TW, TB, TC) { return _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBWCX() (TX, TB, TW, TC, TX) { return _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBWCY() (TX, TB, TW, TC, TY) { return _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBWCZ() (TX, TB, TW, TC, TZ) { return _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBWCW() (TX, TB, TW, TC, TW) { return _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBWCA() (TX, TB, TW, TC, TA) { return _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBWCB() (TX, TB, TW, TC, TB) { return _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBWCC() (TX, TB, TW, TC, TC) { return _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBAXX() (TX, TB, TA, TX, TX) { return _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBAXY() (TX, TB, TA, TX, TY) { return _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBAXZ() (TX, TB, TA, TX, TZ) { return _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBAXW() (TX, TB, TA, TX, TW) { return _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBAXA() (TX, TB, TA, TX, TA) { return _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBAXB() (TX, TB, TA, TX, TB) { return _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBAXC() (TX, TB, TA, TX, TC) { return _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBAYX() (TX, TB, TA, TY, TX) { return _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBAYY() (TX, TB, TA, TY, TY) { return _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBAYZ() (TX, TB, TA, TY, TZ) { return _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBAYW() (TX, TB, TA, TY, TW) { return _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBAYA() (TX, TB, TA, TY, TA) { return _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBAYB() (TX, TB, TA, TY, TB) { return _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBAYC() (TX, TB, TA, TY, TC) { return _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBAZX() (TX, TB, TA, TZ, TX) { return _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBAZY() (TX, TB, TA, TZ, TY) { return _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBAZZ() (TX, TB, TA, TZ, TZ) { return _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBAZW() (TX, TB, TA, TZ, TW) { return _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBAZA() (TX, TB, TA, TZ, TA) { return _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBAZB() (TX, TB, TA, TZ, TB) { return _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBAZC() (TX, TB, TA, TZ, TC) { return _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBAWX() (TX, TB, TA, TW, TX) { return _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBAWY() (TX, TB, TA, TW, TY) { return _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBAWZ() (TX, TB, TA, TW, TZ) { return _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBAWW() (TX, TB, TA, TW, TW) { return _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBAWA() (TX, TB, TA, TW, TA) { return _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBAWB() (TX, TB, TA, TW, TB) { return _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBAWC() (TX, TB, TA, TW, TC) { return _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBAAX() (TX, TB, TA, TA, TX) { return _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBAAY() (TX, TB, TA, TA, TY) { return _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBAAZ() (TX, TB, TA, TA, TZ) { return _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBAAW() (TX, TB, TA, TA, TW) { return _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBAAA() (TX, TB, TA, TA, TA) { return _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBAAB() (TX, TB, TA, TA, TB) { return _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBAAC() (TX, TB, TA, TA, TC) { return _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBABX() (TX, TB, TA, TB, TX) { return _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBABY() (TX, TB, TA, TB, TY) { return _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBABZ() (TX, TB, TA, TB, TZ) { return _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBABW() (TX, TB, TA, TB, TW) { return _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBABA() (TX, TB, TA, TB, TA) { return _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBABB() (TX, TB, TA, TB, TB) { return _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBABC() (TX, TB, TA, TB, TC) { return _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBACX() (TX, TB, TA, TC, TX) { return _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBACY() (TX, TB, TA, TC, TY) { return _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBACZ() (TX, TB, TA, TC, TZ) { return _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBACW() (TX, TB, TA, TC, TW) { return _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBACA() (TX, TB, TA, TC, TA) { return _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBACB() (TX, TB, TA, TC, TB) { return _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBACC() (TX, TB, TA, TC, TC) { return _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBBXX() (TX, TB, TB, TX, TX) { return _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBBXY() (TX, TB, TB, TX, TY) { return _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBBXZ() (TX, TB, TB, TX, TZ) { return _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBBXW() (TX, TB, TB, TX, TW) { return _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBBXA() (TX, TB, TB, TX, TA) { return _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBBXB() (TX, TB, TB, TX, TB) { return _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBBXC() (TX, TB, TB, TX, TC) { return _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBBYX() (TX, TB, TB, TY, TX) { return _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBBYY() (TX, TB, TB, TY, TY) { return _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBBYZ() (TX, TB, TB, TY, TZ) { return _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBBYW() (TX, TB, TB, TY, TW) { return _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBBYA() (TX, TB, TB, TY, TA) { return _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBBYB() (TX, TB, TB, TY, TB) { return _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBBYC() (TX, TB, TB, TY, TC) { return _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBBZX() (TX, TB, TB, TZ, TX) { return _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBBZY() (TX, TB, TB, TZ, TY) { return _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBBZZ() (TX, TB, TB, TZ, TZ) { return _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBBZW() (TX, TB, TB, TZ, TW) { return _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBBZA() (TX, TB, TB, TZ, TA) { return _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBBZB() (TX, TB, TB, TZ, TB) { return _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBBZC() (TX, TB, TB, TZ, TC) { return _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBBWX() (TX, TB, TB, TW, TX) { return _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBBWY() (TX, TB, TB, TW, TY) { return _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBBWZ() (TX, TB, TB, TW, TZ) { return _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBBWW() (TX, TB, TB, TW, TW) { return _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBBWA() (TX, TB, TB, TW, TA) { return _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBBWB() (TX, TB, TB, TW, TB) { return _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBBWC() (TX, TB, TB, TW, TC) { return _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBBAX() (TX, TB, TB, TA, TX) { return _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBBAY() (TX, TB, TB, TA, TY) { return _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBBAZ() (TX, TB, TB, TA, TZ) { return _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBBAW() (TX, TB, TB, TA, TW) { return _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBBAA() (TX, TB, TB, TA, TA) { return _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBBAB() (TX, TB, TB, TA, TB) { return _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBBAC() (TX, TB, TB, TA, TC) { return _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBBBX() (TX, TB, TB, TB, TX) { return _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBBBY() (TX, TB, TB, TB, TY) { return _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBBBZ() (TX, TB, TB, TB, TZ) { return _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBBBW() (TX, TB, TB, TB, TW) { return _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBBBA() (TX, TB, TB, TB, TA) { return _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBBBB() (TX, TB, TB, TB, TB) { return _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBBBC() (TX, TB, TB, TB, TC) { return _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBBCX() (TX, TB, TB, TC, TX) { return _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBBCY() (TX, TB, TB, TC, TY) { return _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBBCZ() (TX, TB, TB, TC, TZ) { return _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBBCW() (TX, TB, TB, TC, TW) { return _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBBCA() (TX, TB, TB, TC, TA) { return _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBBCB() (TX, TB, TB, TC, TB) { return _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBBCC() (TX, TB, TB, TC, TC) { return _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBCXX() (TX, TB, TC, TX, TX) { return _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBCXY() (TX, TB, TC, TX, TY) { return _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBCXZ() (TX, TB, TC, TX, TZ) { return _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBCXW() (TX, TB, TC, TX, TW) { return _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBCXA() (TX, TB, TC, TX, TA) { return _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBCXB() (TX, TB, TC, TX, TB) { return _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBCXC() (TX, TB, TC, TX, TC) { return _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBCYX() (TX, TB, TC, TY, TX) { return _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBCYY() (TX, TB, TC, TY, TY) { return _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBCYZ() (TX, TB, TC, TY, TZ) { return _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBCYW() (TX, TB, TC, TY, TW) { return _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBCYA() (TX, TB, TC, TY, TA) { return _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBCYB() (TX, TB, TC, TY, TB) { return _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBCYC() (TX, TB, TC, TY, TC) { return _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBCZX() (TX, TB, TC, TZ, TX) { return _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBCZY() (TX, TB, TC, TZ, TY) { return _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBCZZ() (TX, TB, TC, TZ, TZ) { return _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBCZW() (TX, TB, TC, TZ, TW) { return _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBCZA() (TX, TB, TC, TZ, TA) { return _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBCZB() (TX, TB, TC, TZ, TB) { return _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBCZC() (TX, TB, TC, TZ, TC) { return _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBCWX() (TX, TB, TC, TW, TX) { return _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBCWY() (TX, TB, TC, TW, TY) { return _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBCWZ() (TX, TB, TC, TW, TZ) { return _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBCWW() (TX, TB, TC, TW, TW) { return _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBCWA() (TX, TB, TC, TW, TA) { return _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBCWB() (TX, TB, TC, TW, TB) { return _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBCWC() (TX, TB, TC, TW, TC) { return _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBCAX() (TX, TB, TC, TA, TX) { return _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBCAY() (TX, TB, TC, TA, TY) { return _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBCAZ() (TX, TB, TC, TA, TZ) { return _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBCAW() (TX, TB, TC, TA, TW) { return _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBCAA() (TX, TB, TC, TA, TA) { return _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBCAB() (TX, TB, TC, TA, TB) { return _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBCAC() (TX, TB, TC, TA, TC) { return _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBCBX() (TX, TB, TC, TB, TX) { return _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBCBY() (TX, TB, TC, TB, TY) { return _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBCBZ() (TX, TB, TC, TB, TZ) { return _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBCBW() (TX, TB, TC, TB, TW) { return _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBCBA() (TX, TB, TC, TB, TA) { return _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBCBB() (TX, TB, TC, TB, TB) { return _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBCBC() (TX, TB, TC, TB, TC) { return _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBCCX() (TX, TB, TC, TC, TX) { return _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBCCY() (TX, TB, TC, TC, TY) { return _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBCCZ() (TX, TB, TC, TC, TZ) { return _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBCCW() (TX, TB, TC, TC, TW) { return _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBCCA() (TX, TB, TC, TC, TA) { return _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBCCB() (TX, TB, TC, TC, TB) { return _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XBCCC() (TX, TB, TC, TC, TC) { return _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCXXX() (TX, TC, TX, TX, TX) { return _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCXXY() (TX, TC, TX, TX, TY) { return _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCXXZ() (TX, TC, TX, TX, TZ) { return _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCXXW() (TX, TC, TX, TX, TW) { return _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCXXA() (TX, TC, TX, TX, TA) { return _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCXXB() (TX, TC, TX, TX, TB) { return _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCXXC() (TX, TC, TX, TX, TC) { return _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCXYX() (TX, TC, TX, TY, TX) { return _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCXYY() (TX, TC, TX, TY, TY) { return _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCXYZ() (TX, TC, TX, TY, TZ) { return _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCXYW() (TX, TC, TX, TY, TW) { return _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCXYA() (TX, TC, TX, TY, TA) { return _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCXYB() (TX, TC, TX, TY, TB) { return _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCXYC() (TX, TC, TX, TY, TC) { return _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCXZX() (TX, TC, TX, TZ, TX) { return _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCXZY() (TX, TC, TX, TZ, TY) { return _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCXZZ() (TX, TC, TX, TZ, TZ) { return _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCXZW() (TX, TC, TX, TZ, TW) { return _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCXZA() (TX, TC, TX, TZ, TA) { return _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCXZB() (TX, TC, TX, TZ, TB) { return _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCXZC() (TX, TC, TX, TZ, TC) { return _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCXWX() (TX, TC, TX, TW, TX) { return _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCXWY() (TX, TC, TX, TW, TY) { return _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCXWZ() (TX, TC, TX, TW, TZ) { return _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCXWW() (TX, TC, TX, TW, TW) { return _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCXWA() (TX, TC, TX, TW, TA) { return _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCXWB() (TX, TC, TX, TW, TB) { return _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCXWC() (TX, TC, TX, TW, TC) { return _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCXAX() (TX, TC, TX, TA, TX) { return _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCXAY() (TX, TC, TX, TA, TY) { return _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCXAZ() (TX, TC, TX, TA, TZ) { return _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCXAW() (TX, TC, TX, TA, TW) { return _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCXAA() (TX, TC, TX, TA, TA) { return _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCXAB() (TX, TC, TX, TA, TB) { return _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCXAC() (TX, TC, TX, TA, TC) { return _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCXBX() (TX, TC, TX, TB, TX) { return _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCXBY() (TX, TC, TX, TB, TY) { return _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCXBZ() (TX, TC, TX, TB, TZ) { return _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCXBW() (TX, TC, TX, TB, TW) { return _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCXBA() (TX, TC, TX, TB, TA) { return _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCXBB() (TX, TC, TX, TB, TB) { return _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCXBC() (TX, TC, TX, TB, TC) { return _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCXCX() (TX, TC, TX, TC, TX) { return _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCXCY() (TX, TC, TX, TC, TY) { return _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCXCZ() (TX, TC, TX, TC, TZ) { return _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCXCW() (TX, TC, TX, TC, TW) { return _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCXCA() (TX, TC, TX, TC, TA) { return _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCXCB() (TX, TC, TX, TC, TB) { return _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCXCC() (TX, TC, TX, TC, TC) { return _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCYXX() (TX, TC, TY, TX, TX) { return _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCYXY() (TX, TC, TY, TX, TY) { return _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCYXZ() (TX, TC, TY, TX, TZ) { return _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCYXW() (TX, TC, TY, TX, TW) { return _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCYXA() (TX, TC, TY, TX, TA) { return _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCYXB() (TX, TC, TY, TX, TB) { return _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCYXC() (TX, TC, TY, TX, TC) { return _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCYYX() (TX, TC, TY, TY, TX) { return _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCYYY() (TX, TC, TY, TY, TY) { return _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCYYZ() (TX, TC, TY, TY, TZ) { return _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCYYW() (TX, TC, TY, TY, TW) { return _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCYYA() (TX, TC, TY, TY, TA) { return _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCYYB() (TX, TC, TY, TY, TB) { return _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCYYC() (TX, TC, TY, TY, TC) { return _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCYZX() (TX, TC, TY, TZ, TX) { return _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCYZY() (TX, TC, TY, TZ, TY) { return _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCYZZ() (TX, TC, TY, TZ, TZ) { return _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCYZW() (TX, TC, TY, TZ, TW) { return _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCYZA() (TX, TC, TY, TZ, TA) { return _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCYZB() (TX, TC, TY, TZ, TB) { return _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCYZC() (TX, TC, TY, TZ, TC) { return _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCYWX() (TX, TC, TY, TW, TX) { return _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCYWY() (TX, TC, TY, TW, TY) { return _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCYWZ() (TX, TC, TY, TW, TZ) { return _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCYWW() (TX, TC, TY, TW, TW) { return _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCYWA() (TX, TC, TY, TW, TA) { return _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCYWB() (TX, TC, TY, TW, TB) { return _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCYWC() (TX, TC, TY, TW, TC) { return _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCYAX() (TX, TC, TY, TA, TX) { return _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCYAY() (TX, TC, TY, TA, TY) { return _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCYAZ() (TX, TC, TY, TA, TZ) { return _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCYAW() (TX, TC, TY, TA, TW) { return _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCYAA() (TX, TC, TY, TA, TA) { return _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCYAB() (TX, TC, TY, TA, TB) { return _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCYAC() (TX, TC, TY, TA, TC) { return _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCYBX() (TX, TC, TY, TB, TX) { return _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCYBY() (TX, TC, TY, TB, TY) { return _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCYBZ() (TX, TC, TY, TB, TZ) { return _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCYBW() (TX, TC, TY, TB, TW) { return _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCYBA() (TX, TC, TY, TB, TA) { return _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCYBB() (TX, TC, TY, TB, TB) { return _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCYBC() (TX, TC, TY, TB, TC) { return _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCYCX() (TX, TC, TY, TC, TX) { return _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCYCY() (TX, TC, TY, TC, TY) { return _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCYCZ() (TX, TC, TY, TC, TZ) { return _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCYCW() (TX, TC, TY, TC, TW) { return _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCYCA() (TX, TC, TY, TC, TA) { return _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCYCB() (TX, TC, TY, TC, TB) { return _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCYCC() (TX, TC, TY, TC, TC) { return _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCZXX() (TX, TC, TZ, TX, TX) { return _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCZXY() (TX, TC, TZ, TX, TY) { return _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCZXZ() (TX, TC, TZ, TX, TZ) { return _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCZXW() (TX, TC, TZ, TX, TW) { return _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCZXA() (TX, TC, TZ, TX, TA) { return _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCZXB() (TX, TC, TZ, TX, TB) { return _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCZXC() (TX, TC, TZ, TX, TC) { return _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCZYX() (TX, TC, TZ, TY, TX) { return _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCZYY() (TX, TC, TZ, TY, TY) { return _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCZYZ() (TX, TC, TZ, TY, TZ) { return _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCZYW() (TX, TC, TZ, TY, TW) { return _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCZYA() (TX, TC, TZ, TY, TA) { return _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCZYB() (TX, TC, TZ, TY, TB) { return _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCZYC() (TX, TC, TZ, TY, TC) { return _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCZZX() (TX, TC, TZ, TZ, TX) { return _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCZZY() (TX, TC, TZ, TZ, TY) { return _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCZZZ() (TX, TC, TZ, TZ, TZ) { return _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCZZW() (TX, TC, TZ, TZ, TW) { return _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCZZA() (TX, TC, TZ, TZ, TA) { return _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCZZB() (TX, TC, TZ, TZ, TB) { return _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCZZC() (TX, TC, TZ, TZ, TC) { return _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCZWX() (TX, TC, TZ, TW, TX) { return _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCZWY() (TX, TC, TZ, TW, TY) { return _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCZWZ() (TX, TC, TZ, TW, TZ) { return _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCZWW() (TX, TC, TZ, TW, TW) { return _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCZWA() (TX, TC, TZ, TW, TA) { return _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCZWB() (TX, TC, TZ, TW, TB) { return _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCZWC() (TX, TC, TZ, TW, TC) { return _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCZAX() (TX, TC, TZ, TA, TX) { return _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCZAY() (TX, TC, TZ, TA, TY) { return _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCZAZ() (TX, TC, TZ, TA, TZ) { return _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCZAW() (TX, TC, TZ, TA, TW) { return _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCZAA() (TX, TC, TZ, TA, TA) { return _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCZAB() (TX, TC, TZ, TA, TB) { return _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCZAC() (TX, TC, TZ, TA, TC) { return _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCZBX() (TX, TC, TZ, TB, TX) { return _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCZBY() (TX, TC, TZ, TB, TY) { return _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCZBZ() (TX, TC, TZ, TB, TZ) { return _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCZBW() (TX, TC, TZ, TB, TW) { return _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCZBA() (TX, TC, TZ, TB, TA) { return _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCZBB() (TX, TC, TZ, TB, TB) { return _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCZBC() (TX, TC, TZ, TB, TC) { return _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCZCX() (TX, TC, TZ, TC, TX) { return _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCZCY() (TX, TC, TZ, TC, TY) { return _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCZCZ() (TX, TC, TZ, TC, TZ) { return _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCZCW() (TX, TC, TZ, TC, TW) { return _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCZCA() (TX, TC, TZ, TC, TA) { return _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCZCB() (TX, TC, TZ, TC, TB) { return _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCZCC() (TX, TC, TZ, TC, TC) { return _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCWXX() (TX, TC, TW, TX, TX) { return _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCWXY() (TX, TC, TW, TX, TY) { return _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCWXZ() (TX, TC, TW, TX, TZ) { return _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCWXW() (TX, TC, TW, TX, TW) { return _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCWXA() (TX, TC, TW, TX, TA) { return _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCWXB() (TX, TC, TW, TX, TB) { return _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCWXC() (TX, TC, TW, TX, TC) { return _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCWYX() (TX, TC, TW, TY, TX) { return _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCWYY() (TX, TC, TW, TY, TY) { return _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCWYZ() (TX, TC, TW, TY, TZ) { return _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCWYW() (TX, TC, TW, TY, TW) { return _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCWYA() (TX, TC, TW, TY, TA) { return _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCWYB() (TX, TC, TW, TY, TB) { return _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCWYC() (TX, TC, TW, TY, TC) { return _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCWZX() (TX, TC, TW, TZ, TX) { return _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCWZY() (TX, TC, TW, TZ, TY) { return _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCWZZ() (TX, TC, TW, TZ, TZ) { return _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCWZW() (TX, TC, TW, TZ, TW) { return _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCWZA() (TX, TC, TW, TZ, TA) { return _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCWZB() (TX, TC, TW, TZ, TB) { return _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCWZC() (TX, TC, TW, TZ, TC) { return _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCWWX() (TX, TC, TW, TW, TX) { return _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCWWY() (TX, TC, TW, TW, TY) { return _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCWWZ() (TX, TC, TW, TW, TZ) { return _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCWWW() (TX, TC, TW, TW, TW) { return _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCWWA() (TX, TC, TW, TW, TA) { return _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCWWB() (TX, TC, TW, TW, TB) { return _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCWWC() (TX, TC, TW, TW, TC) { return _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCWAX() (TX, TC, TW, TA, TX) { return _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCWAY() (TX, TC, TW, TA, TY) { return _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCWAZ() (TX, TC, TW, TA, TZ) { return _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCWAW() (TX, TC, TW, TA, TW) { return _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCWAA() (TX, TC, TW, TA, TA) { return _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCWAB() (TX, TC, TW, TA, TB) { return _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCWAC() (TX, TC, TW, TA, TC) { return _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCWBX() (TX, TC, TW, TB, TX) { return _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCWBY() (TX, TC, TW, TB, TY) { return _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCWBZ() (TX, TC, TW, TB, TZ) { return _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCWBW() (TX, TC, TW, TB, TW) { return _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCWBA() (TX, TC, TW, TB, TA) { return _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCWBB() (TX, TC, TW, TB, TB) { return _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCWBC() (TX, TC, TW, TB, TC) { return _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCWCX() (TX, TC, TW, TC, TX) { return _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCWCY() (TX, TC, TW, TC, TY) { return _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCWCZ() (TX, TC, TW, TC, TZ) { return _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCWCW() (TX, TC, TW, TC, TW) { return _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCWCA() (TX, TC, TW, TC, TA) { return _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCWCB() (TX, TC, TW, TC, TB) { return _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCWCC() (TX, TC, TW, TC, TC) { return _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCAXX() (TX, TC, TA, TX, TX) { return _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCAXY() (TX, TC, TA, TX, TY) { return _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCAXZ() (TX, TC, TA, TX, TZ) { return _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCAXW() (TX, TC, TA, TX, TW) { return _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCAXA() (TX, TC, TA, TX, TA) { return _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCAXB() (TX, TC, TA, TX, TB) { return _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCAXC() (TX, TC, TA, TX, TC) { return _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCAYX() (TX, TC, TA, TY, TX) { return _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCAYY() (TX, TC, TA, TY, TY) { return _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCAYZ() (TX, TC, TA, TY, TZ) { return _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCAYW() (TX, TC, TA, TY, TW) { return _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCAYA() (TX, TC, TA, TY, TA) { return _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCAYB() (TX, TC, TA, TY, TB) { return _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCAYC() (TX, TC, TA, TY, TC) { return _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCAZX() (TX, TC, TA, TZ, TX) { return _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCAZY() (TX, TC, TA, TZ, TY) { return _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCAZZ() (TX, TC, TA, TZ, TZ) { return _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCAZW() (TX, TC, TA, TZ, TW) { return _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCAZA() (TX, TC, TA, TZ, TA) { return _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCAZB() (TX, TC, TA, TZ, TB) { return _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCAZC() (TX, TC, TA, TZ, TC) { return _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCAWX() (TX, TC, TA, TW, TX) { return _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCAWY() (TX, TC, TA, TW, TY) { return _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCAWZ() (TX, TC, TA, TW, TZ) { return _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCAWW() (TX, TC, TA, TW, TW) { return _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCAWA() (TX, TC, TA, TW, TA) { return _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCAWB() (TX, TC, TA, TW, TB) { return _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCAWC() (TX, TC, TA, TW, TC) { return _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCAAX() (TX, TC, TA, TA, TX) { return _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCAAY() (TX, TC, TA, TA, TY) { return _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCAAZ() (TX, TC, TA, TA, TZ) { return _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCAAW() (TX, TC, TA, TA, TW) { return _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCAAA() (TX, TC, TA, TA, TA) { return _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCAAB() (TX, TC, TA, TA, TB) { return _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCAAC() (TX, TC, TA, TA, TC) { return _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCABX() (TX, TC, TA, TB, TX) { return _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCABY() (TX, TC, TA, TB, TY) { return _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCABZ() (TX, TC, TA, TB, TZ) { return _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCABW() (TX, TC, TA, TB, TW) { return _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCABA() (TX, TC, TA, TB, TA) { return _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCABB() (TX, TC, TA, TB, TB) { return _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCABC() (TX, TC, TA, TB, TC) { return _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCACX() (TX, TC, TA, TC, TX) { return _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCACY() (TX, TC, TA, TC, TY) { return _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCACZ() (TX, TC, TA, TC, TZ) { return _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCACW() (TX, TC, TA, TC, TW) { return _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCACA() (TX, TC, TA, TC, TA) { return _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCACB() (TX, TC, TA, TC, TB) { return _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCACC() (TX, TC, TA, TC, TC) { return _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCBXX() (TX, TC, TB, TX, TX) { return _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCBXY() (TX, TC, TB, TX, TY) { return _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCBXZ() (TX, TC, TB, TX, TZ) { return _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCBXW() (TX, TC, TB, TX, TW) { return _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCBXA() (TX, TC, TB, TX, TA) { return _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCBXB() (TX, TC, TB, TX, TB) { return _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCBXC() (TX, TC, TB, TX, TC) { return _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCBYX() (TX, TC, TB, TY, TX) { return _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCBYY() (TX, TC, TB, TY, TY) { return _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCBYZ() (TX, TC, TB, TY, TZ) { return _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCBYW() (TX, TC, TB, TY, TW) { return _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCBYA() (TX, TC, TB, TY, TA) { return _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCBYB() (TX, TC, TB, TY, TB) { return _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCBYC() (TX, TC, TB, TY, TC) { return _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCBZX() (TX, TC, TB, TZ, TX) { return _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCBZY() (TX, TC, TB, TZ, TY) { return _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCBZZ() (TX, TC, TB, TZ, TZ) { return _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCBZW() (TX, TC, TB, TZ, TW) { return _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCBZA() (TX, TC, TB, TZ, TA) { return _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCBZB() (TX, TC, TB, TZ, TB) { return _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCBZC() (TX, TC, TB, TZ, TC) { return _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCBWX() (TX, TC, TB, TW, TX) { return _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCBWY() (TX, TC, TB, TW, TY) { return _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCBWZ() (TX, TC, TB, TW, TZ) { return _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCBWW() (TX, TC, TB, TW, TW) { return _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCBWA() (TX, TC, TB, TW, TA) { return _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCBWB() (TX, TC, TB, TW, TB) { return _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCBWC() (TX, TC, TB, TW, TC) { return _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCBAX() (TX, TC, TB, TA, TX) { return _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCBAY() (TX, TC, TB, TA, TY) { return _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCBAZ() (TX, TC, TB, TA, TZ) { return _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCBAW() (TX, TC, TB, TA, TW) { return _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCBAA() (TX, TC, TB, TA, TA) { return _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCBAB() (TX, TC, TB, TA, TB) { return _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCBAC() (TX, TC, TB, TA, TC) { return _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCBBX() (TX, TC, TB, TB, TX) { return _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCBBY() (TX, TC, TB, TB, TY) { return _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCBBZ() (TX, TC, TB, TB, TZ) { return _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCBBW() (TX, TC, TB, TB, TW) { return _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCBBA() (TX, TC, TB, TB, TA) { return _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCBBB() (TX, TC, TB, TB, TB) { return _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCBBC() (TX, TC, TB, TB, TC) { return _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCBCX() (TX, TC, TB, TC, TX) { return _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCBCY() (TX, TC, TB, TC, TY) { return _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCBCZ() (TX, TC, TB, TC, TZ) { return _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCBCW() (TX, TC, TB, TC, TW) { return _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCBCA() (TX, TC, TB, TC, TA) { return _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCBCB() (TX, TC, TB, TC, TB) { return _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCBCC() (TX, TC, TB, TC, TC) { return _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCCXX() (TX, TC, TC, TX, TX) { return _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCCXY() (TX, TC, TC, TX, TY) { return _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCCXZ() (TX, TC, TC, TX, TZ) { return _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCCXW() (TX, TC, TC, TX, TW) { return _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCCXA() (TX, TC, TC, TX, TA) { return _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCCXB() (TX, TC, TC, TX, TB) { return _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCCXC() (TX, TC, TC, TX, TC) { return _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCCYX() (TX, TC, TC, TY, TX) { return _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCCYY() (TX, TC, TC, TY, TY) { return _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCCYZ() (TX, TC, TC, TY, TZ) { return _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCCYW() (TX, TC, TC, TY, TW) { return _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCCYA() (TX, TC, TC, TY, TA) { return _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCCYB() (TX, TC, TC, TY, TB) { return _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCCYC() (TX, TC, TC, TY, TC) { return _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCCZX() (TX, TC, TC, TZ, TX) { return _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCCZY() (TX, TC, TC, TZ, TY) { return _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCCZZ() (TX, TC, TC, TZ, TZ) { return _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCCZW() (TX, TC, TC, TZ, TW) { return _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCCZA() (TX, TC, TC, TZ, TA) { return _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCCZB() (TX, TC, TC, TZ, TB) { return _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCCZC() (TX, TC, TC, TZ, TC) { return _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCCWX() (TX, TC, TC, TW, TX) { return _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCCWY() (TX, TC, TC, TW, TY) { return _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCCWZ() (TX, TC, TC, TW, TZ) { return _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCCWW() (TX, TC, TC, TW, TW) { return _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCCWA() (TX, TC, TC, TW, TA) { return _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCCWB() (TX, TC, TC, TW, TB) { return _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCCWC() (TX, TC, TC, TW, TC) { return _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCCAX() (TX, TC, TC, TA, TX) { return _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCCAY() (TX, TC, TC, TA, TY) { return _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCCAZ() (TX, TC, TC, TA, TZ) { return _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCCAW() (TX, TC, TC, TA, TW) { return _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCCAA() (TX, TC, TC, TA, TA) { return _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCCAB() (TX, TC, TC, TA, TB) { return _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCCAC() (TX, TC, TC, TA, TC) { return _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCCBX() (TX, TC, TC, TB, TX) { return _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCCBY() (TX, TC, TC, TB, TY) { return _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCCBZ() (TX, TC, TC, TB, TZ) { return _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCCBW() (TX, TC, TC, TB, TW) { return _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCCBA() (TX, TC, TC, TB, TA) { return _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCCBB() (TX, TC, TC, TB, TB) { return _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCCBC() (TX, TC, TC, TB, TC) { return _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCCCX() (TX, TC, TC, TC, TX) { return _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCCCY() (TX, TC, TC, TC, TY) { return _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCCCZ() (TX, TC, TC, TC, TZ) { return _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCCCW() (TX, TC, TC, TC, TW) { return _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCCCA() (TX, TC, TC, TC, TA) { return _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCCCB() (TX, TC, TC, TC, TB) { return _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) XCCCC() (TX, TC, TC, TC, TC) { return _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXXXX() (TY, TX, TX, TX, TX) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXXXY() (TY, TX, TX, TX, TY) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXXXZ() (TY, TX, TX, TX, TZ) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXXXW() (TY, TX, TX, TX, TW) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXXXA() (TY, TX, TX, TX, TA) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXXXB() (TY, TX, TX, TX, TB) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXXXC() (TY, TX, TX, TX, TC) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXXYX() (TY, TX, TX, TY, TX) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXXYY() (TY, TX, TX, TY, TY) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXXYZ() (TY, TX, TX, TY, TZ) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXXYW() (TY, TX, TX, TY, TW) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXXYA() (TY, TX, TX, TY, TA) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXXYB() (TY, TX, TX, TY, TB) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXXYC() (TY, TX, TX, TY, TC) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXXZX() (TY, TX, TX, TZ, TX) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXXZY() (TY, TX, TX, TZ, TY) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXXZZ() (TY, TX, TX, TZ, TZ) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXXZW() (TY, TX, TX, TZ, TW) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXXZA() (TY, TX, TX, TZ, TA) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXXZB() (TY, TX, TX, TZ, TB) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXXZC() (TY, TX, TX, TZ, TC) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXXWX() (TY, TX, TX, TW, TX) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXXWY() (TY, TX, TX, TW, TY) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXXWZ() (TY, TX, TX, TW, TZ) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXXWW() (TY, TX, TX, TW, TW) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXXWA() (TY, TX, TX, TW, TA) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXXWB() (TY, TX, TX, TW, TB) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXXWC() (TY, TX, TX, TW, TC) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXXAX() (TY, TX, TX, TA, TX) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXXAY() (TY, TX, TX, TA, TY) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXXAZ() (TY, TX, TX, TA, TZ) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXXAW() (TY, TX, TX, TA, TW) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXXAA() (TY, TX, TX, TA, TA) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXXAB() (TY, TX, TX, TA, TB) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXXAC() (TY, TX, TX, TA, TC) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXXBX() (TY, TX, TX, TB, TX) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXXBY() (TY, TX, TX, TB, TY) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXXBZ() (TY, TX, TX, TB, TZ) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXXBW() (TY, TX, TX, TB, TW) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXXBA() (TY, TX, TX, TB, TA) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXXBB() (TY, TX, TX, TB, TB) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXXBC() (TY, TX, TX, TB, TC) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXXCX() (TY, TX, TX, TC, TX) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXXCY() (TY, TX, TX, TC, TY) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXXCZ() (TY, TX, TX, TC, TZ) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXXCW() (TY, TX, TX, TC, TW) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXXCA() (TY, TX, TX, TC, TA) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXXCB() (TY, TX, TX, TC, TB) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXXCC() (TY, TX, TX, TC, TC) { return _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXYXX() (TY, TX, TY, TX, TX) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXYXY() (TY, TX, TY, TX, TY) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXYXZ() (TY, TX, TY, TX, TZ) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXYXW() (TY, TX, TY, TX, TW) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXYXA() (TY, TX, TY, TX, TA) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXYXB() (TY, TX, TY, TX, TB) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXYXC() (TY, TX, TY, TX, TC) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXYYX() (TY, TX, TY, TY, TX) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXYYY() (TY, TX, TY, TY, TY) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXYYZ() (TY, TX, TY, TY, TZ) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXYYW() (TY, TX, TY, TY, TW) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXYYA() (TY, TX, TY, TY, TA) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXYYB() (TY, TX, TY, TY, TB) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXYYC() (TY, TX, TY, TY, TC) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXYZX() (TY, TX, TY, TZ, TX) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXYZY() (TY, TX, TY, TZ, TY) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXYZZ() (TY, TX, TY, TZ, TZ) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXYZW() (TY, TX, TY, TZ, TW) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXYZA() (TY, TX, TY, TZ, TA) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXYZB() (TY, TX, TY, TZ, TB) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXYZC() (TY, TX, TY, TZ, TC) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXYWX() (TY, TX, TY, TW, TX) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXYWY() (TY, TX, TY, TW, TY) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXYWZ() (TY, TX, TY, TW, TZ) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXYWW() (TY, TX, TY, TW, TW) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXYWA() (TY, TX, TY, TW, TA) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXYWB() (TY, TX, TY, TW, TB) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXYWC() (TY, TX, TY, TW, TC) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXYAX() (TY, TX, TY, TA, TX) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXYAY() (TY, TX, TY, TA, TY) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXYAZ() (TY, TX, TY, TA, TZ) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXYAW() (TY, TX, TY, TA, TW) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXYAA() (TY, TX, TY, TA, TA) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXYAB() (TY, TX, TY, TA, TB) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXYAC() (TY, TX, TY, TA, TC) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXYBX() (TY, TX, TY, TB, TX) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXYBY() (TY, TX, TY, TB, TY) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXYBZ() (TY, TX, TY, TB, TZ) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXYBW() (TY, TX, TY, TB, TW) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXYBA() (TY, TX, TY, TB, TA) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXYBB() (TY, TX, TY, TB, TB) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXYBC() (TY, TX, TY, TB, TC) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXYCX() (TY, TX, TY, TC, TX) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXYCY() (TY, TX, TY, TC, TY) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXYCZ() (TY, TX, TY, TC, TZ) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXYCW() (TY, TX, TY, TC, TW) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXYCA() (TY, TX, TY, TC, TA) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXYCB() (TY, TX, TY, TC, TB) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXYCC() (TY, TX, TY, TC, TC) { return _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXZXX() (TY, TX, TZ, TX, TX) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXZXY() (TY, TX, TZ, TX, TY) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXZXZ() (TY, TX, TZ, TX, TZ) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXZXW() (TY, TX, TZ, TX, TW) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXZXA() (TY, TX, TZ, TX, TA) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXZXB() (TY, TX, TZ, TX, TB) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXZXC() (TY, TX, TZ, TX, TC) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXZYX() (TY, TX, TZ, TY, TX) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXZYY() (TY, TX, TZ, TY, TY) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXZYZ() (TY, TX, TZ, TY, TZ) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXZYW() (TY, TX, TZ, TY, TW) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXZYA() (TY, TX, TZ, TY, TA) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXZYB() (TY, TX, TZ, TY, TB) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXZYC() (TY, TX, TZ, TY, TC) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXZZX() (TY, TX, TZ, TZ, TX) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXZZY() (TY, TX, TZ, TZ, TY) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXZZZ() (TY, TX, TZ, TZ, TZ) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXZZW() (TY, TX, TZ, TZ, TW) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXZZA() (TY, TX, TZ, TZ, TA) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXZZB() (TY, TX, TZ, TZ, TB) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXZZC() (TY, TX, TZ, TZ, TC) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXZWX() (TY, TX, TZ, TW, TX) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXZWY() (TY, TX, TZ, TW, TY) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXZWZ() (TY, TX, TZ, TW, TZ) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXZWW() (TY, TX, TZ, TW, TW) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXZWA() (TY, TX, TZ, TW, TA) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXZWB() (TY, TX, TZ, TW, TB) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXZWC() (TY, TX, TZ, TW, TC) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXZAX() (TY, TX, TZ, TA, TX) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXZAY() (TY, TX, TZ, TA, TY) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXZAZ() (TY, TX, TZ, TA, TZ) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXZAW() (TY, TX, TZ, TA, TW) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXZAA() (TY, TX, TZ, TA, TA) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXZAB() (TY, TX, TZ, TA, TB) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXZAC() (TY, TX, TZ, TA, TC) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXZBX() (TY, TX, TZ, TB, TX) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXZBY() (TY, TX, TZ, TB, TY) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXZBZ() (TY, TX, TZ, TB, TZ) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXZBW() (TY, TX, TZ, TB, TW) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXZBA() (TY, TX, TZ, TB, TA) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXZBB() (TY, TX, TZ, TB, TB) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXZBC() (TY, TX, TZ, TB, TC) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXZCX() (TY, TX, TZ, TC, TX) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXZCY() (TY, TX, TZ, TC, TY) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXZCZ() (TY, TX, TZ, TC, TZ) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXZCW() (TY, TX, TZ, TC, TW) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXZCA() (TY, TX, TZ, TC, TA) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXZCB() (TY, TX, TZ, TC, TB) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXZCC() (TY, TX, TZ, TC, TC) { return _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXWXX() (TY, TX, TW, TX, TX) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXWXY() (TY, TX, TW, TX, TY) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXWXZ() (TY, TX, TW, TX, TZ) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXWXW() (TY, TX, TW, TX, TW) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXWXA() (TY, TX, TW, TX, TA) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXWXB() (TY, TX, TW, TX, TB) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXWXC() (TY, TX, TW, TX, TC) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXWYX() (TY, TX, TW, TY, TX) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXWYY() (TY, TX, TW, TY, TY) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXWYZ() (TY, TX, TW, TY, TZ) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXWYW() (TY, TX, TW, TY, TW) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXWYA() (TY, TX, TW, TY, TA) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXWYB() (TY, TX, TW, TY, TB) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXWYC() (TY, TX, TW, TY, TC) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXWZX() (TY, TX, TW, TZ, TX) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXWZY() (TY, TX, TW, TZ, TY) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXWZZ() (TY, TX, TW, TZ, TZ) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXWZW() (TY, TX, TW, TZ, TW) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXWZA() (TY, TX, TW, TZ, TA) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXWZB() (TY, TX, TW, TZ, TB) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXWZC() (TY, TX, TW, TZ, TC) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXWWX() (TY, TX, TW, TW, TX) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXWWY() (TY, TX, TW, TW, TY) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXWWZ() (TY, TX, TW, TW, TZ) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXWWW() (TY, TX, TW, TW, TW) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXWWA() (TY, TX, TW, TW, TA) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXWWB() (TY, TX, TW, TW, TB) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXWWC() (TY, TX, TW, TW, TC) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXWAX() (TY, TX, TW, TA, TX) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXWAY() (TY, TX, TW, TA, TY) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXWAZ() (TY, TX, TW, TA, TZ) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXWAW() (TY, TX, TW, TA, TW) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXWAA() (TY, TX, TW, TA, TA) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXWAB() (TY, TX, TW, TA, TB) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXWAC() (TY, TX, TW, TA, TC) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXWBX() (TY, TX, TW, TB, TX) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXWBY() (TY, TX, TW, TB, TY) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXWBZ() (TY, TX, TW, TB, TZ) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXWBW() (TY, TX, TW, TB, TW) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXWBA() (TY, TX, TW, TB, TA) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXWBB() (TY, TX, TW, TB, TB) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXWBC() (TY, TX, TW, TB, TC) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXWCX() (TY, TX, TW, TC, TX) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXWCY() (TY, TX, TW, TC, TY) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXWCZ() (TY, TX, TW, TC, TZ) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXWCW() (TY, TX, TW, TC, TW) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXWCA() (TY, TX, TW, TC, TA) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXWCB() (TY, TX, TW, TC, TB) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXWCC() (TY, TX, TW, TC, TC) { return _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXAXX() (TY, TX, TA, TX, TX) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXAXY() (TY, TX, TA, TX, TY) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXAXZ() (TY, TX, TA, TX, TZ) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXAXW() (TY, TX, TA, TX, TW) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXAXA() (TY, TX, TA, TX, TA) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXAXB() (TY, TX, TA, TX, TB) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXAXC() (TY, TX, TA, TX, TC) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXAYX() (TY, TX, TA, TY, TX) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXAYY() (TY, TX, TA, TY, TY) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXAYZ() (TY, TX, TA, TY, TZ) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXAYW() (TY, TX, TA, TY, TW) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXAYA() (TY, TX, TA, TY, TA) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXAYB() (TY, TX, TA, TY, TB) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXAYC() (TY, TX, TA, TY, TC) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXAZX() (TY, TX, TA, TZ, TX) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXAZY() (TY, TX, TA, TZ, TY) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXAZZ() (TY, TX, TA, TZ, TZ) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXAZW() (TY, TX, TA, TZ, TW) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXAZA() (TY, TX, TA, TZ, TA) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXAZB() (TY, TX, TA, TZ, TB) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXAZC() (TY, TX, TA, TZ, TC) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXAWX() (TY, TX, TA, TW, TX) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXAWY() (TY, TX, TA, TW, TY) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXAWZ() (TY, TX, TA, TW, TZ) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXAWW() (TY, TX, TA, TW, TW) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXAWA() (TY, TX, TA, TW, TA) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXAWB() (TY, TX, TA, TW, TB) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXAWC() (TY, TX, TA, TW, TC) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXAAX() (TY, TX, TA, TA, TX) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXAAY() (TY, TX, TA, TA, TY) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXAAZ() (TY, TX, TA, TA, TZ) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXAAW() (TY, TX, TA, TA, TW) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXAAA() (TY, TX, TA, TA, TA) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXAAB() (TY, TX, TA, TA, TB) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXAAC() (TY, TX, TA, TA, TC) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXABX() (TY, TX, TA, TB, TX) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXABY() (TY, TX, TA, TB, TY) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXABZ() (TY, TX, TA, TB, TZ) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXABW() (TY, TX, TA, TB, TW) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXABA() (TY, TX, TA, TB, TA) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXABB() (TY, TX, TA, TB, TB) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXABC() (TY, TX, TA, TB, TC) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXACX() (TY, TX, TA, TC, TX) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXACY() (TY, TX, TA, TC, TY) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXACZ() (TY, TX, TA, TC, TZ) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXACW() (TY, TX, TA, TC, TW) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXACA() (TY, TX, TA, TC, TA) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXACB() (TY, TX, TA, TC, TB) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXACC() (TY, TX, TA, TC, TC) { return _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXBXX() (TY, TX, TB, TX, TX) { return _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXBXY() (TY, TX, TB, TX, TY) { return _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXBXZ() (TY, TX, TB, TX, TZ) { return _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXBXW() (TY, TX, TB, TX, TW) { return _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXBXA() (TY, TX, TB, TX, TA) { return _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXBXB() (TY, TX, TB, TX, TB) { return _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXBXC() (TY, TX, TB, TX, TC) { return _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXBYX() (TY, TX, TB, TY, TX) { return _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXBYY() (TY, TX, TB, TY, TY) { return _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXBYZ() (TY, TX, TB, TY, TZ) { return _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXBYW() (TY, TX, TB, TY, TW) { return _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXBYA() (TY, TX, TB, TY, TA) { return _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXBYB() (TY, TX, TB, TY, TB) { return _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXBYC() (TY, TX, TB, TY, TC) { return _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXBZX() (TY, TX, TB, TZ, TX) { return _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXBZY() (TY, TX, TB, TZ, TY) { return _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXBZZ() (TY, TX, TB, TZ, TZ) { return _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXBZW() (TY, TX, TB, TZ, TW) { return _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXBZA() (TY, TX, TB, TZ, TA) { return _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXBZB() (TY, TX, TB, TZ, TB) { return _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXBZC() (TY, TX, TB, TZ, TC) { return _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXBWX() (TY, TX, TB, TW, TX) { return _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXBWY() (TY, TX, TB, TW, TY) { return _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXBWZ() (TY, TX, TB, TW, TZ) { return _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXBWW() (TY, TX, TB, TW, TW) { return _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXBWA() (TY, TX, TB, TW, TA) { return _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXBWB() (TY, TX, TB, TW, TB) { return _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXBWC() (TY, TX, TB, TW, TC) { return _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXBAX() (TY, TX, TB, TA, TX) { return _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXBAY() (TY, TX, TB, TA, TY) { return _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXBAZ() (TY, TX, TB, TA, TZ) { return _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXBAW() (TY, TX, TB, TA, TW) { return _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXBAA() (TY, TX, TB, TA, TA) { return _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXBAB() (TY, TX, TB, TA, TB) { return _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXBAC() (TY, TX, TB, TA, TC) { return _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXBBX() (TY, TX, TB, TB, TX) { return _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXBBY() (TY, TX, TB, TB, TY) { return _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXBBZ() (TY, TX, TB, TB, TZ) { return _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXBBW() (TY, TX, TB, TB, TW) { return _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXBBA() (TY, TX, TB, TB, TA) { return _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXBBB() (TY, TX, TB, TB, TB) { return _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXBBC() (TY, TX, TB, TB, TC) { return _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXBCX() (TY, TX, TB, TC, TX) { return _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXBCY() (TY, TX, TB, TC, TY) { return _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXBCZ() (TY, TX, TB, TC, TZ) { return _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXBCW() (TY, TX, TB, TC, TW) { return _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXBCA() (TY, TX, TB, TC, TA) { return _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXBCB() (TY, TX, TB, TC, TB) { return _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXBCC() (TY, TX, TB, TC, TC) { return _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXCXX() (TY, TX, TC, TX, TX) { return _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXCXY() (TY, TX, TC, TX, TY) { return _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXCXZ() (TY, TX, TC, TX, TZ) { return _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXCXW() (TY, TX, TC, TX, TW) { return _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXCXA() (TY, TX, TC, TX, TA) { return _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXCXB() (TY, TX, TC, TX, TB) { return _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXCXC() (TY, TX, TC, TX, TC) { return _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXCYX() (TY, TX, TC, TY, TX) { return _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXCYY() (TY, TX, TC, TY, TY) { return _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXCYZ() (TY, TX, TC, TY, TZ) { return _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXCYW() (TY, TX, TC, TY, TW) { return _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXCYA() (TY, TX, TC, TY, TA) { return _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXCYB() (TY, TX, TC, TY, TB) { return _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXCYC() (TY, TX, TC, TY, TC) { return _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXCZX() (TY, TX, TC, TZ, TX) { return _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXCZY() (TY, TX, TC, TZ, TY) { return _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXCZZ() (TY, TX, TC, TZ, TZ) { return _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXCZW() (TY, TX, TC, TZ, TW) { return _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXCZA() (TY, TX, TC, TZ, TA) { return _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXCZB() (TY, TX, TC, TZ, TB) { return _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXCZC() (TY, TX, TC, TZ, TC) { return _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXCWX() (TY, TX, TC, TW, TX) { return _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXCWY() (TY, TX, TC, TW, TY) { return _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXCWZ() (TY, TX, TC, TW, TZ) { return _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXCWW() (TY, TX, TC, TW, TW) { return _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXCWA() (TY, TX, TC, TW, TA) { return _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXCWB() (TY, TX, TC, TW, TB) { return _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXCWC() (TY, TX, TC, TW, TC) { return _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXCAX() (TY, TX, TC, TA, TX) { return _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXCAY() (TY, TX, TC, TA, TY) { return _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXCAZ() (TY, TX, TC, TA, TZ) { return _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXCAW() (TY, TX, TC, TA, TW) { return _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXCAA() (TY, TX, TC, TA, TA) { return _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXCAB() (TY, TX, TC, TA, TB) { return _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXCAC() (TY, TX, TC, TA, TC) { return _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXCBX() (TY, TX, TC, TB, TX) { return _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXCBY() (TY, TX, TC, TB, TY) { return _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXCBZ() (TY, TX, TC, TB, TZ) { return _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXCBW() (TY, TX, TC, TB, TW) { return _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXCBA() (TY, TX, TC, TB, TA) { return _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXCBB() (TY, TX, TC, TB, TB) { return _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXCBC() (TY, TX, TC, TB, TC) { return _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXCCX() (TY, TX, TC, TC, TX) { return _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXCCY() (TY, TX, TC, TC, TY) { return _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXCCZ() (TY, TX, TC, TC, TZ) { return _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXCCW() (TY, TX, TC, TC, TW) { return _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXCCA() (TY, TX, TC, TC, TA) { return _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXCCB() (TY, TX, TC, TC, TB) { return _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YXCCC() (TY, TX, TC, TC, TC) { return _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYXXX() (TY, TY, TX, TX, TX) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYXXY() (TY, TY, TX, TX, TY) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYXXZ() (TY, TY, TX, TX, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYXXW() (TY, TY, TX, TX, TW) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYXXA() (TY, TY, TX, TX, TA) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYXXB() (TY, TY, TX, TX, TB) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYXXC() (TY, TY, TX, TX, TC) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYXYX() (TY, TY, TX, TY, TX) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYXYY() (TY, TY, TX, TY, TY) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYXYZ() (TY, TY, TX, TY, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYXYW() (TY, TY, TX, TY, TW) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYXYA() (TY, TY, TX, TY, TA) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYXYB() (TY, TY, TX, TY, TB) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYXYC() (TY, TY, TX, TY, TC) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYXZX() (TY, TY, TX, TZ, TX) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYXZY() (TY, TY, TX, TZ, TY) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYXZZ() (TY, TY, TX, TZ, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYXZW() (TY, TY, TX, TZ, TW) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYXZA() (TY, TY, TX, TZ, TA) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYXZB() (TY, TY, TX, TZ, TB) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYXZC() (TY, TY, TX, TZ, TC) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYXWX() (TY, TY, TX, TW, TX) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYXWY() (TY, TY, TX, TW, TY) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYXWZ() (TY, TY, TX, TW, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYXWW() (TY, TY, TX, TW, TW) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYXWA() (TY, TY, TX, TW, TA) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYXWB() (TY, TY, TX, TW, TB) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYXWC() (TY, TY, TX, TW, TC) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYXAX() (TY, TY, TX, TA, TX) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYXAY() (TY, TY, TX, TA, TY) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYXAZ() (TY, TY, TX, TA, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYXAW() (TY, TY, TX, TA, TW) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYXAA() (TY, TY, TX, TA, TA) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYXAB() (TY, TY, TX, TA, TB) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYXAC() (TY, TY, TX, TA, TC) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYXBX() (TY, TY, TX, TB, TX) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYXBY() (TY, TY, TX, TB, TY) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYXBZ() (TY, TY, TX, TB, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYXBW() (TY, TY, TX, TB, TW) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYXBA() (TY, TY, TX, TB, TA) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYXBB() (TY, TY, TX, TB, TB) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYXBC() (TY, TY, TX, TB, TC) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYXCX() (TY, TY, TX, TC, TX) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYXCY() (TY, TY, TX, TC, TY) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYXCZ() (TY, TY, TX, TC, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYXCW() (TY, TY, TX, TC, TW) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYXCA() (TY, TY, TX, TC, TA) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYXCB() (TY, TY, TX, TC, TB) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYXCC() (TY, TY, TX, TC, TC) { return _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYYXX() (TY, TY, TY, TX, TX) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYYXY() (TY, TY, TY, TX, TY) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYYXZ() (TY, TY, TY, TX, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYYXW() (TY, TY, TY, TX, TW) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYYXA() (TY, TY, TY, TX, TA) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYYXB() (TY, TY, TY, TX, TB) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYYXC() (TY, TY, TY, TX, TC) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYYYX() (TY, TY, TY, TY, TX) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYYYY() (TY, TY, TY, TY, TY) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYYYZ() (TY, TY, TY, TY, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYYYW() (TY, TY, TY, TY, TW) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYYYA() (TY, TY, TY, TY, TA) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYYYB() (TY, TY, TY, TY, TB) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYYYC() (TY, TY, TY, TY, TC) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYYZX() (TY, TY, TY, TZ, TX) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYYZY() (TY, TY, TY, TZ, TY) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYYZZ() (TY, TY, TY, TZ, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYYZW() (TY, TY, TY, TZ, TW) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYYZA() (TY, TY, TY, TZ, TA) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYYZB() (TY, TY, TY, TZ, TB) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYYZC() (TY, TY, TY, TZ, TC) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYYWX() (TY, TY, TY, TW, TX) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYYWY() (TY, TY, TY, TW, TY) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYYWZ() (TY, TY, TY, TW, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYYWW() (TY, TY, TY, TW, TW) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYYWA() (TY, TY, TY, TW, TA) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYYWB() (TY, TY, TY, TW, TB) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYYWC() (TY, TY, TY, TW, TC) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYYAX() (TY, TY, TY, TA, TX) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYYAY() (TY, TY, TY, TA, TY) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYYAZ() (TY, TY, TY, TA, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYYAW() (TY, TY, TY, TA, TW) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYYAA() (TY, TY, TY, TA, TA) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYYAB() (TY, TY, TY, TA, TB) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYYAC() (TY, TY, TY, TA, TC) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYYBX() (TY, TY, TY, TB, TX) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYYBY() (TY, TY, TY, TB, TY) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYYBZ() (TY, TY, TY, TB, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYYBW() (TY, TY, TY, TB, TW) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYYBA() (TY, TY, TY, TB, TA) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYYBB() (TY, TY, TY, TB, TB) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYYBC() (TY, TY, TY, TB, TC) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYYCX() (TY, TY, TY, TC, TX) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYYCY() (TY, TY, TY, TC, TY) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYYCZ() (TY, TY, TY, TC, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYYCW() (TY, TY, TY, TC, TW) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYYCA() (TY, TY, TY, TC, TA) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYYCB() (TY, TY, TY, TC, TB) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYYCC() (TY, TY, TY, TC, TC) { return _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYZXX() (TY, TY, TZ, TX, TX) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYZXY() (TY, TY, TZ, TX, TY) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYZXZ() (TY, TY, TZ, TX, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYZXW() (TY, TY, TZ, TX, TW) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYZXA() (TY, TY, TZ, TX, TA) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYZXB() (TY, TY, TZ, TX, TB) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYZXC() (TY, TY, TZ, TX, TC) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYZYX() (TY, TY, TZ, TY, TX) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYZYY() (TY, TY, TZ, TY, TY) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYZYZ() (TY, TY, TZ, TY, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYZYW() (TY, TY, TZ, TY, TW) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYZYA() (TY, TY, TZ, TY, TA) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYZYB() (TY, TY, TZ, TY, TB) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYZYC() (TY, TY, TZ, TY, TC) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYZZX() (TY, TY, TZ, TZ, TX) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYZZY() (TY, TY, TZ, TZ, TY) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYZZZ() (TY, TY, TZ, TZ, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYZZW() (TY, TY, TZ, TZ, TW) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYZZA() (TY, TY, TZ, TZ, TA) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYZZB() (TY, TY, TZ, TZ, TB) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYZZC() (TY, TY, TZ, TZ, TC) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYZWX() (TY, TY, TZ, TW, TX) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYZWY() (TY, TY, TZ, TW, TY) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYZWZ() (TY, TY, TZ, TW, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYZWW() (TY, TY, TZ, TW, TW) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYZWA() (TY, TY, TZ, TW, TA) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYZWB() (TY, TY, TZ, TW, TB) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYZWC() (TY, TY, TZ, TW, TC) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYZAX() (TY, TY, TZ, TA, TX) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYZAY() (TY, TY, TZ, TA, TY) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYZAZ() (TY, TY, TZ, TA, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYZAW() (TY, TY, TZ, TA, TW) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYZAA() (TY, TY, TZ, TA, TA) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYZAB() (TY, TY, TZ, TA, TB) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYZAC() (TY, TY, TZ, TA, TC) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYZBX() (TY, TY, TZ, TB, TX) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYZBY() (TY, TY, TZ, TB, TY) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYZBZ() (TY, TY, TZ, TB, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYZBW() (TY, TY, TZ, TB, TW) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYZBA() (TY, TY, TZ, TB, TA) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYZBB() (TY, TY, TZ, TB, TB) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYZBC() (TY, TY, TZ, TB, TC) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYZCX() (TY, TY, TZ, TC, TX) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYZCY() (TY, TY, TZ, TC, TY) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYZCZ() (TY, TY, TZ, TC, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYZCW() (TY, TY, TZ, TC, TW) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYZCA() (TY, TY, TZ, TC, TA) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYZCB() (TY, TY, TZ, TC, TB) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYZCC() (TY, TY, TZ, TC, TC) { return _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYWXX() (TY, TY, TW, TX, TX) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYWXY() (TY, TY, TW, TX, TY) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYWXZ() (TY, TY, TW, TX, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYWXW() (TY, TY, TW, TX, TW) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYWXA() (TY, TY, TW, TX, TA) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYWXB() (TY, TY, TW, TX, TB) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYWXC() (TY, TY, TW, TX, TC) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYWYX() (TY, TY, TW, TY, TX) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYWYY() (TY, TY, TW, TY, TY) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYWYZ() (TY, TY, TW, TY, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYWYW() (TY, TY, TW, TY, TW) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYWYA() (TY, TY, TW, TY, TA) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYWYB() (TY, TY, TW, TY, TB) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYWYC() (TY, TY, TW, TY, TC) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYWZX() (TY, TY, TW, TZ, TX) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYWZY() (TY, TY, TW, TZ, TY) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYWZZ() (TY, TY, TW, TZ, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYWZW() (TY, TY, TW, TZ, TW) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYWZA() (TY, TY, TW, TZ, TA) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYWZB() (TY, TY, TW, TZ, TB) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYWZC() (TY, TY, TW, TZ, TC) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYWWX() (TY, TY, TW, TW, TX) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYWWY() (TY, TY, TW, TW, TY) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYWWZ() (TY, TY, TW, TW, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYWWW() (TY, TY, TW, TW, TW) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYWWA() (TY, TY, TW, TW, TA) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYWWB() (TY, TY, TW, TW, TB) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYWWC() (TY, TY, TW, TW, TC) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYWAX() (TY, TY, TW, TA, TX) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYWAY() (TY, TY, TW, TA, TY) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYWAZ() (TY, TY, TW, TA, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYWAW() (TY, TY, TW, TA, TW) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYWAA() (TY, TY, TW, TA, TA) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYWAB() (TY, TY, TW, TA, TB) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYWAC() (TY, TY, TW, TA, TC) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYWBX() (TY, TY, TW, TB, TX) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYWBY() (TY, TY, TW, TB, TY) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYWBZ() (TY, TY, TW, TB, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYWBW() (TY, TY, TW, TB, TW) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYWBA() (TY, TY, TW, TB, TA) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYWBB() (TY, TY, TW, TB, TB) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYWBC() (TY, TY, TW, TB, TC) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYWCX() (TY, TY, TW, TC, TX) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYWCY() (TY, TY, TW, TC, TY) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYWCZ() (TY, TY, TW, TC, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYWCW() (TY, TY, TW, TC, TW) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYWCA() (TY, TY, TW, TC, TA) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYWCB() (TY, TY, TW, TC, TB) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYWCC() (TY, TY, TW, TC, TC) { return _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYAXX() (TY, TY, TA, TX, TX) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYAXY() (TY, TY, TA, TX, TY) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYAXZ() (TY, TY, TA, TX, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYAXW() (TY, TY, TA, TX, TW) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYAXA() (TY, TY, TA, TX, TA) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYAXB() (TY, TY, TA, TX, TB) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYAXC() (TY, TY, TA, TX, TC) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYAYX() (TY, TY, TA, TY, TX) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYAYY() (TY, TY, TA, TY, TY) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYAYZ() (TY, TY, TA, TY, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYAYW() (TY, TY, TA, TY, TW) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYAYA() (TY, TY, TA, TY, TA) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYAYB() (TY, TY, TA, TY, TB) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYAYC() (TY, TY, TA, TY, TC) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYAZX() (TY, TY, TA, TZ, TX) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYAZY() (TY, TY, TA, TZ, TY) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYAZZ() (TY, TY, TA, TZ, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYAZW() (TY, TY, TA, TZ, TW) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYAZA() (TY, TY, TA, TZ, TA) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYAZB() (TY, TY, TA, TZ, TB) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYAZC() (TY, TY, TA, TZ, TC) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYAWX() (TY, TY, TA, TW, TX) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYAWY() (TY, TY, TA, TW, TY) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYAWZ() (TY, TY, TA, TW, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYAWW() (TY, TY, TA, TW, TW) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYAWA() (TY, TY, TA, TW, TA) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYAWB() (TY, TY, TA, TW, TB) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYAWC() (TY, TY, TA, TW, TC) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYAAX() (TY, TY, TA, TA, TX) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYAAY() (TY, TY, TA, TA, TY) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYAAZ() (TY, TY, TA, TA, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYAAW() (TY, TY, TA, TA, TW) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYAAA() (TY, TY, TA, TA, TA) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYAAB() (TY, TY, TA, TA, TB) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYAAC() (TY, TY, TA, TA, TC) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYABX() (TY, TY, TA, TB, TX) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYABY() (TY, TY, TA, TB, TY) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYABZ() (TY, TY, TA, TB, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYABW() (TY, TY, TA, TB, TW) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYABA() (TY, TY, TA, TB, TA) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYABB() (TY, TY, TA, TB, TB) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYABC() (TY, TY, TA, TB, TC) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYACX() (TY, TY, TA, TC, TX) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYACY() (TY, TY, TA, TC, TY) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYACZ() (TY, TY, TA, TC, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYACW() (TY, TY, TA, TC, TW) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYACA() (TY, TY, TA, TC, TA) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYACB() (TY, TY, TA, TC, TB) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYACC() (TY, TY, TA, TC, TC) { return _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYBXX() (TY, TY, TB, TX, TX) { return _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYBXY() (TY, TY, TB, TX, TY) { return _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYBXZ() (TY, TY, TB, TX, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYBXW() (TY, TY, TB, TX, TW) { return _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYBXA() (TY, TY, TB, TX, TA) { return _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYBXB() (TY, TY, TB, TX, TB) { return _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYBXC() (TY, TY, TB, TX, TC) { return _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYBYX() (TY, TY, TB, TY, TX) { return _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYBYY() (TY, TY, TB, TY, TY) { return _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYBYZ() (TY, TY, TB, TY, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYBYW() (TY, TY, TB, TY, TW) { return _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYBYA() (TY, TY, TB, TY, TA) { return _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYBYB() (TY, TY, TB, TY, TB) { return _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYBYC() (TY, TY, TB, TY, TC) { return _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYBZX() (TY, TY, TB, TZ, TX) { return _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYBZY() (TY, TY, TB, TZ, TY) { return _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYBZZ() (TY, TY, TB, TZ, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYBZW() (TY, TY, TB, TZ, TW) { return _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYBZA() (TY, TY, TB, TZ, TA) { return _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYBZB() (TY, TY, TB, TZ, TB) { return _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYBZC() (TY, TY, TB, TZ, TC) { return _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYBWX() (TY, TY, TB, TW, TX) { return _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYBWY() (TY, TY, TB, TW, TY) { return _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYBWZ() (TY, TY, TB, TW, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYBWW() (TY, TY, TB, TW, TW) { return _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYBWA() (TY, TY, TB, TW, TA) { return _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYBWB() (TY, TY, TB, TW, TB) { return _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYBWC() (TY, TY, TB, TW, TC) { return _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYBAX() (TY, TY, TB, TA, TX) { return _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYBAY() (TY, TY, TB, TA, TY) { return _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYBAZ() (TY, TY, TB, TA, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYBAW() (TY, TY, TB, TA, TW) { return _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYBAA() (TY, TY, TB, TA, TA) { return _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYBAB() (TY, TY, TB, TA, TB) { return _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYBAC() (TY, TY, TB, TA, TC) { return _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYBBX() (TY, TY, TB, TB, TX) { return _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYBBY() (TY, TY, TB, TB, TY) { return _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYBBZ() (TY, TY, TB, TB, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYBBW() (TY, TY, TB, TB, TW) { return _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYBBA() (TY, TY, TB, TB, TA) { return _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYBBB() (TY, TY, TB, TB, TB) { return _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYBBC() (TY, TY, TB, TB, TC) { return _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYBCX() (TY, TY, TB, TC, TX) { return _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYBCY() (TY, TY, TB, TC, TY) { return _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYBCZ() (TY, TY, TB, TC, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYBCW() (TY, TY, TB, TC, TW) { return _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYBCA() (TY, TY, TB, TC, TA) { return _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYBCB() (TY, TY, TB, TC, TB) { return _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYBCC() (TY, TY, TB, TC, TC) { return _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYCXX() (TY, TY, TC, TX, TX) { return _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYCXY() (TY, TY, TC, TX, TY) { return _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYCXZ() (TY, TY, TC, TX, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYCXW() (TY, TY, TC, TX, TW) { return _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYCXA() (TY, TY, TC, TX, TA) { return _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYCXB() (TY, TY, TC, TX, TB) { return _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYCXC() (TY, TY, TC, TX, TC) { return _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYCYX() (TY, TY, TC, TY, TX) { return _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYCYY() (TY, TY, TC, TY, TY) { return _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYCYZ() (TY, TY, TC, TY, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYCYW() (TY, TY, TC, TY, TW) { return _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYCYA() (TY, TY, TC, TY, TA) { return _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYCYB() (TY, TY, TC, TY, TB) { return _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYCYC() (TY, TY, TC, TY, TC) { return _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYCZX() (TY, TY, TC, TZ, TX) { return _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYCZY() (TY, TY, TC, TZ, TY) { return _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYCZZ() (TY, TY, TC, TZ, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYCZW() (TY, TY, TC, TZ, TW) { return _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYCZA() (TY, TY, TC, TZ, TA) { return _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYCZB() (TY, TY, TC, TZ, TB) { return _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYCZC() (TY, TY, TC, TZ, TC) { return _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYCWX() (TY, TY, TC, TW, TX) { return _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYCWY() (TY, TY, TC, TW, TY) { return _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYCWZ() (TY, TY, TC, TW, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYCWW() (TY, TY, TC, TW, TW) { return _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYCWA() (TY, TY, TC, TW, TA) { return _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYCWB() (TY, TY, TC, TW, TB) { return _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYCWC() (TY, TY, TC, TW, TC) { return _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYCAX() (TY, TY, TC, TA, TX) { return _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYCAY() (TY, TY, TC, TA, TY) { return _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYCAZ() (TY, TY, TC, TA, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYCAW() (TY, TY, TC, TA, TW) { return _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYCAA() (TY, TY, TC, TA, TA) { return _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYCAB() (TY, TY, TC, TA, TB) { return _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYCAC() (TY, TY, TC, TA, TC) { return _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYCBX() (TY, TY, TC, TB, TX) { return _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYCBY() (TY, TY, TC, TB, TY) { return _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYCBZ() (TY, TY, TC, TB, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYCBW() (TY, TY, TC, TB, TW) { return _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYCBA() (TY, TY, TC, TB, TA) { return _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYCBB() (TY, TY, TC, TB, TB) { return _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYCBC() (TY, TY, TC, TB, TC) { return _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYCCX() (TY, TY, TC, TC, TX) { return _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYCCY() (TY, TY, TC, TC, TY) { return _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYCCZ() (TY, TY, TC, TC, TZ) { return _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYCCW() (TY, TY, TC, TC, TW) { return _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYCCA() (TY, TY, TC, TC, TA) { return _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYCCB() (TY, TY, TC, TC, TB) { return _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YYCCC() (TY, TY, TC, TC, TC) { return _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZXXX() (TY, TZ, TX, TX, TX) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZXXY() (TY, TZ, TX, TX, TY) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZXXZ() (TY, TZ, TX, TX, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZXXW() (TY, TZ, TX, TX, TW) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZXXA() (TY, TZ, TX, TX, TA) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZXXB() (TY, TZ, TX, TX, TB) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZXXC() (TY, TZ, TX, TX, TC) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZXYX() (TY, TZ, TX, TY, TX) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZXYY() (TY, TZ, TX, TY, TY) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZXYZ() (TY, TZ, TX, TY, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZXYW() (TY, TZ, TX, TY, TW) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZXYA() (TY, TZ, TX, TY, TA) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZXYB() (TY, TZ, TX, TY, TB) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZXYC() (TY, TZ, TX, TY, TC) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZXZX() (TY, TZ, TX, TZ, TX) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZXZY() (TY, TZ, TX, TZ, TY) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZXZZ() (TY, TZ, TX, TZ, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZXZW() (TY, TZ, TX, TZ, TW) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZXZA() (TY, TZ, TX, TZ, TA) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZXZB() (TY, TZ, TX, TZ, TB) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZXZC() (TY, TZ, TX, TZ, TC) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZXWX() (TY, TZ, TX, TW, TX) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZXWY() (TY, TZ, TX, TW, TY) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZXWZ() (TY, TZ, TX, TW, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZXWW() (TY, TZ, TX, TW, TW) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZXWA() (TY, TZ, TX, TW, TA) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZXWB() (TY, TZ, TX, TW, TB) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZXWC() (TY, TZ, TX, TW, TC) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZXAX() (TY, TZ, TX, TA, TX) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZXAY() (TY, TZ, TX, TA, TY) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZXAZ() (TY, TZ, TX, TA, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZXAW() (TY, TZ, TX, TA, TW) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZXAA() (TY, TZ, TX, TA, TA) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZXAB() (TY, TZ, TX, TA, TB) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZXAC() (TY, TZ, TX, TA, TC) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZXBX() (TY, TZ, TX, TB, TX) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZXBY() (TY, TZ, TX, TB, TY) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZXBZ() (TY, TZ, TX, TB, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZXBW() (TY, TZ, TX, TB, TW) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZXBA() (TY, TZ, TX, TB, TA) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZXBB() (TY, TZ, TX, TB, TB) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZXBC() (TY, TZ, TX, TB, TC) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZXCX() (TY, TZ, TX, TC, TX) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZXCY() (TY, TZ, TX, TC, TY) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZXCZ() (TY, TZ, TX, TC, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZXCW() (TY, TZ, TX, TC, TW) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZXCA() (TY, TZ, TX, TC, TA) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZXCB() (TY, TZ, TX, TC, TB) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZXCC() (TY, TZ, TX, TC, TC) { return _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZYXX() (TY, TZ, TY, TX, TX) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZYXY() (TY, TZ, TY, TX, TY) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZYXZ() (TY, TZ, TY, TX, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZYXW() (TY, TZ, TY, TX, TW) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZYXA() (TY, TZ, TY, TX, TA) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZYXB() (TY, TZ, TY, TX, TB) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZYXC() (TY, TZ, TY, TX, TC) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZYYX() (TY, TZ, TY, TY, TX) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZYYY() (TY, TZ, TY, TY, TY) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZYYZ() (TY, TZ, TY, TY, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZYYW() (TY, TZ, TY, TY, TW) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZYYA() (TY, TZ, TY, TY, TA) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZYYB() (TY, TZ, TY, TY, TB) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZYYC() (TY, TZ, TY, TY, TC) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZYZX() (TY, TZ, TY, TZ, TX) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZYZY() (TY, TZ, TY, TZ, TY) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZYZZ() (TY, TZ, TY, TZ, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZYZW() (TY, TZ, TY, TZ, TW) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZYZA() (TY, TZ, TY, TZ, TA) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZYZB() (TY, TZ, TY, TZ, TB) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZYZC() (TY, TZ, TY, TZ, TC) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZYWX() (TY, TZ, TY, TW, TX) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZYWY() (TY, TZ, TY, TW, TY) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZYWZ() (TY, TZ, TY, TW, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZYWW() (TY, TZ, TY, TW, TW) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZYWA() (TY, TZ, TY, TW, TA) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZYWB() (TY, TZ, TY, TW, TB) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZYWC() (TY, TZ, TY, TW, TC) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZYAX() (TY, TZ, TY, TA, TX) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZYAY() (TY, TZ, TY, TA, TY) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZYAZ() (TY, TZ, TY, TA, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZYAW() (TY, TZ, TY, TA, TW) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZYAA() (TY, TZ, TY, TA, TA) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZYAB() (TY, TZ, TY, TA, TB) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZYAC() (TY, TZ, TY, TA, TC) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZYBX() (TY, TZ, TY, TB, TX) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZYBY() (TY, TZ, TY, TB, TY) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZYBZ() (TY, TZ, TY, TB, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZYBW() (TY, TZ, TY, TB, TW) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZYBA() (TY, TZ, TY, TB, TA) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZYBB() (TY, TZ, TY, TB, TB) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZYBC() (TY, TZ, TY, TB, TC) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZYCX() (TY, TZ, TY, TC, TX) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZYCY() (TY, TZ, TY, TC, TY) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZYCZ() (TY, TZ, TY, TC, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZYCW() (TY, TZ, TY, TC, TW) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZYCA() (TY, TZ, TY, TC, TA) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZYCB() (TY, TZ, TY, TC, TB) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZYCC() (TY, TZ, TY, TC, TC) { return _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZZXX() (TY, TZ, TZ, TX, TX) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZZXY() (TY, TZ, TZ, TX, TY) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZZXZ() (TY, TZ, TZ, TX, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZZXW() (TY, TZ, TZ, TX, TW) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZZXA() (TY, TZ, TZ, TX, TA) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZZXB() (TY, TZ, TZ, TX, TB) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZZXC() (TY, TZ, TZ, TX, TC) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZZYX() (TY, TZ, TZ, TY, TX) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZZYY() (TY, TZ, TZ, TY, TY) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZZYZ() (TY, TZ, TZ, TY, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZZYW() (TY, TZ, TZ, TY, TW) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZZYA() (TY, TZ, TZ, TY, TA) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZZYB() (TY, TZ, TZ, TY, TB) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZZYC() (TY, TZ, TZ, TY, TC) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZZZX() (TY, TZ, TZ, TZ, TX) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZZZY() (TY, TZ, TZ, TZ, TY) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZZZZ() (TY, TZ, TZ, TZ, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZZZW() (TY, TZ, TZ, TZ, TW) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZZZA() (TY, TZ, TZ, TZ, TA) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZZZB() (TY, TZ, TZ, TZ, TB) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZZZC() (TY, TZ, TZ, TZ, TC) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZZWX() (TY, TZ, TZ, TW, TX) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZZWY() (TY, TZ, TZ, TW, TY) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZZWZ() (TY, TZ, TZ, TW, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZZWW() (TY, TZ, TZ, TW, TW) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZZWA() (TY, TZ, TZ, TW, TA) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZZWB() (TY, TZ, TZ, TW, TB) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZZWC() (TY, TZ, TZ, TW, TC) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZZAX() (TY, TZ, TZ, TA, TX) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZZAY() (TY, TZ, TZ, TA, TY) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZZAZ() (TY, TZ, TZ, TA, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZZAW() (TY, TZ, TZ, TA, TW) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZZAA() (TY, TZ, TZ, TA, TA) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZZAB() (TY, TZ, TZ, TA, TB) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZZAC() (TY, TZ, TZ, TA, TC) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZZBX() (TY, TZ, TZ, TB, TX) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZZBY() (TY, TZ, TZ, TB, TY) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZZBZ() (TY, TZ, TZ, TB, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZZBW() (TY, TZ, TZ, TB, TW) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZZBA() (TY, TZ, TZ, TB, TA) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZZBB() (TY, TZ, TZ, TB, TB) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZZBC() (TY, TZ, TZ, TB, TC) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZZCX() (TY, TZ, TZ, TC, TX) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZZCY() (TY, TZ, TZ, TC, TY) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZZCZ() (TY, TZ, TZ, TC, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZZCW() (TY, TZ, TZ, TC, TW) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZZCA() (TY, TZ, TZ, TC, TA) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZZCB() (TY, TZ, TZ, TC, TB) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZZCC() (TY, TZ, TZ, TC, TC) { return _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZWXX() (TY, TZ, TW, TX, TX) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZWXY() (TY, TZ, TW, TX, TY) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZWXZ() (TY, TZ, TW, TX, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZWXW() (TY, TZ, TW, TX, TW) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZWXA() (TY, TZ, TW, TX, TA) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZWXB() (TY, TZ, TW, TX, TB) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZWXC() (TY, TZ, TW, TX, TC) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZWYX() (TY, TZ, TW, TY, TX) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZWYY() (TY, TZ, TW, TY, TY) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZWYZ() (TY, TZ, TW, TY, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZWYW() (TY, TZ, TW, TY, TW) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZWYA() (TY, TZ, TW, TY, TA) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZWYB() (TY, TZ, TW, TY, TB) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZWYC() (TY, TZ, TW, TY, TC) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZWZX() (TY, TZ, TW, TZ, TX) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZWZY() (TY, TZ, TW, TZ, TY) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZWZZ() (TY, TZ, TW, TZ, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZWZW() (TY, TZ, TW, TZ, TW) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZWZA() (TY, TZ, TW, TZ, TA) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZWZB() (TY, TZ, TW, TZ, TB) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZWZC() (TY, TZ, TW, TZ, TC) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZWWX() (TY, TZ, TW, TW, TX) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZWWY() (TY, TZ, TW, TW, TY) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZWWZ() (TY, TZ, TW, TW, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZWWW() (TY, TZ, TW, TW, TW) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZWWA() (TY, TZ, TW, TW, TA) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZWWB() (TY, TZ, TW, TW, TB) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZWWC() (TY, TZ, TW, TW, TC) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZWAX() (TY, TZ, TW, TA, TX) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZWAY() (TY, TZ, TW, TA, TY) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZWAZ() (TY, TZ, TW, TA, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZWAW() (TY, TZ, TW, TA, TW) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZWAA() (TY, TZ, TW, TA, TA) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZWAB() (TY, TZ, TW, TA, TB) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZWAC() (TY, TZ, TW, TA, TC) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZWBX() (TY, TZ, TW, TB, TX) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZWBY() (TY, TZ, TW, TB, TY) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZWBZ() (TY, TZ, TW, TB, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZWBW() (TY, TZ, TW, TB, TW) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZWBA() (TY, TZ, TW, TB, TA) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZWBB() (TY, TZ, TW, TB, TB) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZWBC() (TY, TZ, TW, TB, TC) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZWCX() (TY, TZ, TW, TC, TX) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZWCY() (TY, TZ, TW, TC, TY) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZWCZ() (TY, TZ, TW, TC, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZWCW() (TY, TZ, TW, TC, TW) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZWCA() (TY, TZ, TW, TC, TA) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZWCB() (TY, TZ, TW, TC, TB) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZWCC() (TY, TZ, TW, TC, TC) { return _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZAXX() (TY, TZ, TA, TX, TX) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZAXY() (TY, TZ, TA, TX, TY) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZAXZ() (TY, TZ, TA, TX, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZAXW() (TY, TZ, TA, TX, TW) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZAXA() (TY, TZ, TA, TX, TA) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZAXB() (TY, TZ, TA, TX, TB) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZAXC() (TY, TZ, TA, TX, TC) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZAYX() (TY, TZ, TA, TY, TX) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZAYY() (TY, TZ, TA, TY, TY) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZAYZ() (TY, TZ, TA, TY, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZAYW() (TY, TZ, TA, TY, TW) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZAYA() (TY, TZ, TA, TY, TA) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZAYB() (TY, TZ, TA, TY, TB) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZAYC() (TY, TZ, TA, TY, TC) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZAZX() (TY, TZ, TA, TZ, TX) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZAZY() (TY, TZ, TA, TZ, TY) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZAZZ() (TY, TZ, TA, TZ, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZAZW() (TY, TZ, TA, TZ, TW) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZAZA() (TY, TZ, TA, TZ, TA) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZAZB() (TY, TZ, TA, TZ, TB) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZAZC() (TY, TZ, TA, TZ, TC) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZAWX() (TY, TZ, TA, TW, TX) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZAWY() (TY, TZ, TA, TW, TY) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZAWZ() (TY, TZ, TA, TW, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZAWW() (TY, TZ, TA, TW, TW) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZAWA() (TY, TZ, TA, TW, TA) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZAWB() (TY, TZ, TA, TW, TB) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZAWC() (TY, TZ, TA, TW, TC) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZAAX() (TY, TZ, TA, TA, TX) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZAAY() (TY, TZ, TA, TA, TY) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZAAZ() (TY, TZ, TA, TA, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZAAW() (TY, TZ, TA, TA, TW) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZAAA() (TY, TZ, TA, TA, TA) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZAAB() (TY, TZ, TA, TA, TB) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZAAC() (TY, TZ, TA, TA, TC) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZABX() (TY, TZ, TA, TB, TX) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZABY() (TY, TZ, TA, TB, TY) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZABZ() (TY, TZ, TA, TB, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZABW() (TY, TZ, TA, TB, TW) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZABA() (TY, TZ, TA, TB, TA) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZABB() (TY, TZ, TA, TB, TB) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZABC() (TY, TZ, TA, TB, TC) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZACX() (TY, TZ, TA, TC, TX) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZACY() (TY, TZ, TA, TC, TY) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZACZ() (TY, TZ, TA, TC, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZACW() (TY, TZ, TA, TC, TW) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZACA() (TY, TZ, TA, TC, TA) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZACB() (TY, TZ, TA, TC, TB) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZACC() (TY, TZ, TA, TC, TC) { return _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZBXX() (TY, TZ, TB, TX, TX) { return _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZBXY() (TY, TZ, TB, TX, TY) { return _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZBXZ() (TY, TZ, TB, TX, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZBXW() (TY, TZ, TB, TX, TW) { return _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZBXA() (TY, TZ, TB, TX, TA) { return _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZBXB() (TY, TZ, TB, TX, TB) { return _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZBXC() (TY, TZ, TB, TX, TC) { return _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZBYX() (TY, TZ, TB, TY, TX) { return _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZBYY() (TY, TZ, TB, TY, TY) { return _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZBYZ() (TY, TZ, TB, TY, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZBYW() (TY, TZ, TB, TY, TW) { return _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZBYA() (TY, TZ, TB, TY, TA) { return _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZBYB() (TY, TZ, TB, TY, TB) { return _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZBYC() (TY, TZ, TB, TY, TC) { return _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZBZX() (TY, TZ, TB, TZ, TX) { return _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZBZY() (TY, TZ, TB, TZ, TY) { return _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZBZZ() (TY, TZ, TB, TZ, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZBZW() (TY, TZ, TB, TZ, TW) { return _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZBZA() (TY, TZ, TB, TZ, TA) { return _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZBZB() (TY, TZ, TB, TZ, TB) { return _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZBZC() (TY, TZ, TB, TZ, TC) { return _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZBWX() (TY, TZ, TB, TW, TX) { return _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZBWY() (TY, TZ, TB, TW, TY) { return _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZBWZ() (TY, TZ, TB, TW, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZBWW() (TY, TZ, TB, TW, TW) { return _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZBWA() (TY, TZ, TB, TW, TA) { return _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZBWB() (TY, TZ, TB, TW, TB) { return _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZBWC() (TY, TZ, TB, TW, TC) { return _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZBAX() (TY, TZ, TB, TA, TX) { return _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZBAY() (TY, TZ, TB, TA, TY) { return _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZBAZ() (TY, TZ, TB, TA, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZBAW() (TY, TZ, TB, TA, TW) { return _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZBAA() (TY, TZ, TB, TA, TA) { return _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZBAB() (TY, TZ, TB, TA, TB) { return _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZBAC() (TY, TZ, TB, TA, TC) { return _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZBBX() (TY, TZ, TB, TB, TX) { return _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZBBY() (TY, TZ, TB, TB, TY) { return _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZBBZ() (TY, TZ, TB, TB, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZBBW() (TY, TZ, TB, TB, TW) { return _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZBBA() (TY, TZ, TB, TB, TA) { return _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZBBB() (TY, TZ, TB, TB, TB) { return _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZBBC() (TY, TZ, TB, TB, TC) { return _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZBCX() (TY, TZ, TB, TC, TX) { return _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZBCY() (TY, TZ, TB, TC, TY) { return _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZBCZ() (TY, TZ, TB, TC, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZBCW() (TY, TZ, TB, TC, TW) { return _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZBCA() (TY, TZ, TB, TC, TA) { return _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZBCB() (TY, TZ, TB, TC, TB) { return _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZBCC() (TY, TZ, TB, TC, TC) { return _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZCXX() (TY, TZ, TC, TX, TX) { return _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZCXY() (TY, TZ, TC, TX, TY) { return _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZCXZ() (TY, TZ, TC, TX, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZCXW() (TY, TZ, TC, TX, TW) { return _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZCXA() (TY, TZ, TC, TX, TA) { return _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZCXB() (TY, TZ, TC, TX, TB) { return _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZCXC() (TY, TZ, TC, TX, TC) { return _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZCYX() (TY, TZ, TC, TY, TX) { return _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZCYY() (TY, TZ, TC, TY, TY) { return _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZCYZ() (TY, TZ, TC, TY, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZCYW() (TY, TZ, TC, TY, TW) { return _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZCYA() (TY, TZ, TC, TY, TA) { return _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZCYB() (TY, TZ, TC, TY, TB) { return _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZCYC() (TY, TZ, TC, TY, TC) { return _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZCZX() (TY, TZ, TC, TZ, TX) { return _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZCZY() (TY, TZ, TC, TZ, TY) { return _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZCZZ() (TY, TZ, TC, TZ, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZCZW() (TY, TZ, TC, TZ, TW) { return _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZCZA() (TY, TZ, TC, TZ, TA) { return _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZCZB() (TY, TZ, TC, TZ, TB) { return _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZCZC() (TY, TZ, TC, TZ, TC) { return _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZCWX() (TY, TZ, TC, TW, TX) { return _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZCWY() (TY, TZ, TC, TW, TY) { return _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZCWZ() (TY, TZ, TC, TW, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZCWW() (TY, TZ, TC, TW, TW) { return _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZCWA() (TY, TZ, TC, TW, TA) { return _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZCWB() (TY, TZ, TC, TW, TB) { return _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZCWC() (TY, TZ, TC, TW, TC) { return _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZCAX() (TY, TZ, TC, TA, TX) { return _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZCAY() (TY, TZ, TC, TA, TY) { return _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZCAZ() (TY, TZ, TC, TA, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZCAW() (TY, TZ, TC, TA, TW) { return _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZCAA() (TY, TZ, TC, TA, TA) { return _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZCAB() (TY, TZ, TC, TA, TB) { return _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZCAC() (TY, TZ, TC, TA, TC) { return _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZCBX() (TY, TZ, TC, TB, TX) { return _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZCBY() (TY, TZ, TC, TB, TY) { return _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZCBZ() (TY, TZ, TC, TB, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZCBW() (TY, TZ, TC, TB, TW) { return _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZCBA() (TY, TZ, TC, TB, TA) { return _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZCBB() (TY, TZ, TC, TB, TB) { return _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZCBC() (TY, TZ, TC, TB, TC) { return _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZCCX() (TY, TZ, TC, TC, TX) { return _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZCCY() (TY, TZ, TC, TC, TY) { return _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZCCZ() (TY, TZ, TC, TC, TZ) { return _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZCCW() (TY, TZ, TC, TC, TW) { return _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZCCA() (TY, TZ, TC, TC, TA) { return _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZCCB() (TY, TZ, TC, TC, TB) { return _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YZCCC() (TY, TZ, TC, TC, TC) { return _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWXXX() (TY, TW, TX, TX, TX) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWXXY() (TY, TW, TX, TX, TY) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWXXZ() (TY, TW, TX, TX, TZ) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWXXW() (TY, TW, TX, TX, TW) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWXXA() (TY, TW, TX, TX, TA) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWXXB() (TY, TW, TX, TX, TB) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWXXC() (TY, TW, TX, TX, TC) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWXYX() (TY, TW, TX, TY, TX) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWXYY() (TY, TW, TX, TY, TY) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWXYZ() (TY, TW, TX, TY, TZ) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWXYW() (TY, TW, TX, TY, TW) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWXYA() (TY, TW, TX, TY, TA) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWXYB() (TY, TW, TX, TY, TB) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWXYC() (TY, TW, TX, TY, TC) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWXZX() (TY, TW, TX, TZ, TX) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWXZY() (TY, TW, TX, TZ, TY) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWXZZ() (TY, TW, TX, TZ, TZ) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWXZW() (TY, TW, TX, TZ, TW) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWXZA() (TY, TW, TX, TZ, TA) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWXZB() (TY, TW, TX, TZ, TB) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWXZC() (TY, TW, TX, TZ, TC) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWXWX() (TY, TW, TX, TW, TX) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWXWY() (TY, TW, TX, TW, TY) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWXWZ() (TY, TW, TX, TW, TZ) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWXWW() (TY, TW, TX, TW, TW) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWXWA() (TY, TW, TX, TW, TA) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWXWB() (TY, TW, TX, TW, TB) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWXWC() (TY, TW, TX, TW, TC) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWXAX() (TY, TW, TX, TA, TX) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWXAY() (TY, TW, TX, TA, TY) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWXAZ() (TY, TW, TX, TA, TZ) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWXAW() (TY, TW, TX, TA, TW) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWXAA() (TY, TW, TX, TA, TA) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWXAB() (TY, TW, TX, TA, TB) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWXAC() (TY, TW, TX, TA, TC) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWXBX() (TY, TW, TX, TB, TX) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWXBY() (TY, TW, TX, TB, TY) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWXBZ() (TY, TW, TX, TB, TZ) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWXBW() (TY, TW, TX, TB, TW) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWXBA() (TY, TW, TX, TB, TA) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWXBB() (TY, TW, TX, TB, TB) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWXBC() (TY, TW, TX, TB, TC) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWXCX() (TY, TW, TX, TC, TX) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWXCY() (TY, TW, TX, TC, TY) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWXCZ() (TY, TW, TX, TC, TZ) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWXCW() (TY, TW, TX, TC, TW) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWXCA() (TY, TW, TX, TC, TA) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWXCB() (TY, TW, TX, TC, TB) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWXCC() (TY, TW, TX, TC, TC) { return _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWYXX() (TY, TW, TY, TX, TX) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWYXY() (TY, TW, TY, TX, TY) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWYXZ() (TY, TW, TY, TX, TZ) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWYXW() (TY, TW, TY, TX, TW) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWYXA() (TY, TW, TY, TX, TA) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWYXB() (TY, TW, TY, TX, TB) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWYXC() (TY, TW, TY, TX, TC) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWYYX() (TY, TW, TY, TY, TX) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWYYY() (TY, TW, TY, TY, TY) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWYYZ() (TY, TW, TY, TY, TZ) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWYYW() (TY, TW, TY, TY, TW) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWYYA() (TY, TW, TY, TY, TA) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWYYB() (TY, TW, TY, TY, TB) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWYYC() (TY, TW, TY, TY, TC) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWYZX() (TY, TW, TY, TZ, TX) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWYZY() (TY, TW, TY, TZ, TY) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWYZZ() (TY, TW, TY, TZ, TZ) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWYZW() (TY, TW, TY, TZ, TW) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWYZA() (TY, TW, TY, TZ, TA) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWYZB() (TY, TW, TY, TZ, TB) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWYZC() (TY, TW, TY, TZ, TC) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWYWX() (TY, TW, TY, TW, TX) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWYWY() (TY, TW, TY, TW, TY) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWYWZ() (TY, TW, TY, TW, TZ) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWYWW() (TY, TW, TY, TW, TW) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWYWA() (TY, TW, TY, TW, TA) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWYWB() (TY, TW, TY, TW, TB) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWYWC() (TY, TW, TY, TW, TC) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWYAX() (TY, TW, TY, TA, TX) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWYAY() (TY, TW, TY, TA, TY) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWYAZ() (TY, TW, TY, TA, TZ) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWYAW() (TY, TW, TY, TA, TW) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWYAA() (TY, TW, TY, TA, TA) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWYAB() (TY, TW, TY, TA, TB) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWYAC() (TY, TW, TY, TA, TC) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWYBX() (TY, TW, TY, TB, TX) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWYBY() (TY, TW, TY, TB, TY) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWYBZ() (TY, TW, TY, TB, TZ) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWYBW() (TY, TW, TY, TB, TW) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWYBA() (TY, TW, TY, TB, TA) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWYBB() (TY, TW, TY, TB, TB) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWYBC() (TY, TW, TY, TB, TC) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWYCX() (TY, TW, TY, TC, TX) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWYCY() (TY, TW, TY, TC, TY) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWYCZ() (TY, TW, TY, TC, TZ) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWYCW() (TY, TW, TY, TC, TW) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWYCA() (TY, TW, TY, TC, TA) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWYCB() (TY, TW, TY, TC, TB) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWYCC() (TY, TW, TY, TC, TC) { return _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWZXX() (TY, TW, TZ, TX, TX) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWZXY() (TY, TW, TZ, TX, TY) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWZXZ() (TY, TW, TZ, TX, TZ) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWZXW() (TY, TW, TZ, TX, TW) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWZXA() (TY, TW, TZ, TX, TA) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWZXB() (TY, TW, TZ, TX, TB) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWZXC() (TY, TW, TZ, TX, TC) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWZYX() (TY, TW, TZ, TY, TX) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWZYY() (TY, TW, TZ, TY, TY) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWZYZ() (TY, TW, TZ, TY, TZ) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWZYW() (TY, TW, TZ, TY, TW) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWZYA() (TY, TW, TZ, TY, TA) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWZYB() (TY, TW, TZ, TY, TB) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWZYC() (TY, TW, TZ, TY, TC) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWZZX() (TY, TW, TZ, TZ, TX) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWZZY() (TY, TW, TZ, TZ, TY) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWZZZ() (TY, TW, TZ, TZ, TZ) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWZZW() (TY, TW, TZ, TZ, TW) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWZZA() (TY, TW, TZ, TZ, TA) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWZZB() (TY, TW, TZ, TZ, TB) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWZZC() (TY, TW, TZ, TZ, TC) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWZWX() (TY, TW, TZ, TW, TX) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWZWY() (TY, TW, TZ, TW, TY) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWZWZ() (TY, TW, TZ, TW, TZ) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWZWW() (TY, TW, TZ, TW, TW) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWZWA() (TY, TW, TZ, TW, TA) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWZWB() (TY, TW, TZ, TW, TB) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWZWC() (TY, TW, TZ, TW, TC) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWZAX() (TY, TW, TZ, TA, TX) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWZAY() (TY, TW, TZ, TA, TY) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWZAZ() (TY, TW, TZ, TA, TZ) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWZAW() (TY, TW, TZ, TA, TW) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWZAA() (TY, TW, TZ, TA, TA) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWZAB() (TY, TW, TZ, TA, TB) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWZAC() (TY, TW, TZ, TA, TC) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWZBX() (TY, TW, TZ, TB, TX) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWZBY() (TY, TW, TZ, TB, TY) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWZBZ() (TY, TW, TZ, TB, TZ) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWZBW() (TY, TW, TZ, TB, TW) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWZBA() (TY, TW, TZ, TB, TA) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWZBB() (TY, TW, TZ, TB, TB) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWZBC() (TY, TW, TZ, TB, TC) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWZCX() (TY, TW, TZ, TC, TX) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWZCY() (TY, TW, TZ, TC, TY) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWZCZ() (TY, TW, TZ, TC, TZ) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWZCW() (TY, TW, TZ, TC, TW) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWZCA() (TY, TW, TZ, TC, TA) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWZCB() (TY, TW, TZ, TC, TB) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWZCC() (TY, TW, TZ, TC, TC) { return _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWWXX() (TY, TW, TW, TX, TX) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWWXY() (TY, TW, TW, TX, TY) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWWXZ() (TY, TW, TW, TX, TZ) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWWXW() (TY, TW, TW, TX, TW) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWWXA() (TY, TW, TW, TX, TA) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWWXB() (TY, TW, TW, TX, TB) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWWXC() (TY, TW, TW, TX, TC) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWWYX() (TY, TW, TW, TY, TX) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWWYY() (TY, TW, TW, TY, TY) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWWYZ() (TY, TW, TW, TY, TZ) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWWYW() (TY, TW, TW, TY, TW) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWWYA() (TY, TW, TW, TY, TA) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWWYB() (TY, TW, TW, TY, TB) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWWYC() (TY, TW, TW, TY, TC) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWWZX() (TY, TW, TW, TZ, TX) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWWZY() (TY, TW, TW, TZ, TY) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWWZZ() (TY, TW, TW, TZ, TZ) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWWZW() (TY, TW, TW, TZ, TW) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWWZA() (TY, TW, TW, TZ, TA) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWWZB() (TY, TW, TW, TZ, TB) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWWZC() (TY, TW, TW, TZ, TC) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWWWX() (TY, TW, TW, TW, TX) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWWWY() (TY, TW, TW, TW, TY) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWWWZ() (TY, TW, TW, TW, TZ) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWWWW() (TY, TW, TW, TW, TW) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWWWA() (TY, TW, TW, TW, TA) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWWWB() (TY, TW, TW, TW, TB) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWWWC() (TY, TW, TW, TW, TC) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWWAX() (TY, TW, TW, TA, TX) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWWAY() (TY, TW, TW, TA, TY) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWWAZ() (TY, TW, TW, TA, TZ) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWWAW() (TY, TW, TW, TA, TW) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWWAA() (TY, TW, TW, TA, TA) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWWAB() (TY, TW, TW, TA, TB) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWWAC() (TY, TW, TW, TA, TC) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWWBX() (TY, TW, TW, TB, TX) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWWBY() (TY, TW, TW, TB, TY) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWWBZ() (TY, TW, TW, TB, TZ) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWWBW() (TY, TW, TW, TB, TW) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWWBA() (TY, TW, TW, TB, TA) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWWBB() (TY, TW, TW, TB, TB) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWWBC() (TY, TW, TW, TB, TC) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWWCX() (TY, TW, TW, TC, TX) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWWCY() (TY, TW, TW, TC, TY) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWWCZ() (TY, TW, TW, TC, TZ) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWWCW() (TY, TW, TW, TC, TW) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWWCA() (TY, TW, TW, TC, TA) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWWCB() (TY, TW, TW, TC, TB) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWWCC() (TY, TW, TW, TC, TC) { return _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWAXX() (TY, TW, TA, TX, TX) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWAXY() (TY, TW, TA, TX, TY) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWAXZ() (TY, TW, TA, TX, TZ) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWAXW() (TY, TW, TA, TX, TW) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWAXA() (TY, TW, TA, TX, TA) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWAXB() (TY, TW, TA, TX, TB) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWAXC() (TY, TW, TA, TX, TC) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWAYX() (TY, TW, TA, TY, TX) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWAYY() (TY, TW, TA, TY, TY) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWAYZ() (TY, TW, TA, TY, TZ) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWAYW() (TY, TW, TA, TY, TW) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWAYA() (TY, TW, TA, TY, TA) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWAYB() (TY, TW, TA, TY, TB) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWAYC() (TY, TW, TA, TY, TC) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWAZX() (TY, TW, TA, TZ, TX) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWAZY() (TY, TW, TA, TZ, TY) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWAZZ() (TY, TW, TA, TZ, TZ) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWAZW() (TY, TW, TA, TZ, TW) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWAZA() (TY, TW, TA, TZ, TA) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWAZB() (TY, TW, TA, TZ, TB) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWAZC() (TY, TW, TA, TZ, TC) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWAWX() (TY, TW, TA, TW, TX) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWAWY() (TY, TW, TA, TW, TY) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWAWZ() (TY, TW, TA, TW, TZ) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWAWW() (TY, TW, TA, TW, TW) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWAWA() (TY, TW, TA, TW, TA) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWAWB() (TY, TW, TA, TW, TB) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWAWC() (TY, TW, TA, TW, TC) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWAAX() (TY, TW, TA, TA, TX) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWAAY() (TY, TW, TA, TA, TY) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWAAZ() (TY, TW, TA, TA, TZ) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWAAW() (TY, TW, TA, TA, TW) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWAAA() (TY, TW, TA, TA, TA) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWAAB() (TY, TW, TA, TA, TB) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWAAC() (TY, TW, TA, TA, TC) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWABX() (TY, TW, TA, TB, TX) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWABY() (TY, TW, TA, TB, TY) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWABZ() (TY, TW, TA, TB, TZ) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWABW() (TY, TW, TA, TB, TW) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWABA() (TY, TW, TA, TB, TA) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWABB() (TY, TW, TA, TB, TB) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWABC() (TY, TW, TA, TB, TC) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWACX() (TY, TW, TA, TC, TX) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWACY() (TY, TW, TA, TC, TY) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWACZ() (TY, TW, TA, TC, TZ) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWACW() (TY, TW, TA, TC, TW) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWACA() (TY, TW, TA, TC, TA) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWACB() (TY, TW, TA, TC, TB) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWACC() (TY, TW, TA, TC, TC) { return _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWBXX() (TY, TW, TB, TX, TX) { return _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWBXY() (TY, TW, TB, TX, TY) { return _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWBXZ() (TY, TW, TB, TX, TZ) { return _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWBXW() (TY, TW, TB, TX, TW) { return _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWBXA() (TY, TW, TB, TX, TA) { return _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWBXB() (TY, TW, TB, TX, TB) { return _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWBXC() (TY, TW, TB, TX, TC) { return _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWBYX() (TY, TW, TB, TY, TX) { return _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWBYY() (TY, TW, TB, TY, TY) { return _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWBYZ() (TY, TW, TB, TY, TZ) { return _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWBYW() (TY, TW, TB, TY, TW) { return _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWBYA() (TY, TW, TB, TY, TA) { return _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWBYB() (TY, TW, TB, TY, TB) { return _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWBYC() (TY, TW, TB, TY, TC) { return _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWBZX() (TY, TW, TB, TZ, TX) { return _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWBZY() (TY, TW, TB, TZ, TY) { return _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWBZZ() (TY, TW, TB, TZ, TZ) { return _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWBZW() (TY, TW, TB, TZ, TW) { return _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWBZA() (TY, TW, TB, TZ, TA) { return _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWBZB() (TY, TW, TB, TZ, TB) { return _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWBZC() (TY, TW, TB, TZ, TC) { return _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWBWX() (TY, TW, TB, TW, TX) { return _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWBWY() (TY, TW, TB, TW, TY) { return _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWBWZ() (TY, TW, TB, TW, TZ) { return _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWBWW() (TY, TW, TB, TW, TW) { return _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWBWA() (TY, TW, TB, TW, TA) { return _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWBWB() (TY, TW, TB, TW, TB) { return _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWBWC() (TY, TW, TB, TW, TC) { return _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWBAX() (TY, TW, TB, TA, TX) { return _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWBAY() (TY, TW, TB, TA, TY) { return _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWBAZ() (TY, TW, TB, TA, TZ) { return _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWBAW() (TY, TW, TB, TA, TW) { return _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWBAA() (TY, TW, TB, TA, TA) { return _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWBAB() (TY, TW, TB, TA, TB) { return _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWBAC() (TY, TW, TB, TA, TC) { return _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWBBX() (TY, TW, TB, TB, TX) { return _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWBBY() (TY, TW, TB, TB, TY) { return _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWBBZ() (TY, TW, TB, TB, TZ) { return _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWBBW() (TY, TW, TB, TB, TW) { return _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWBBA() (TY, TW, TB, TB, TA) { return _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWBBB() (TY, TW, TB, TB, TB) { return _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWBBC() (TY, TW, TB, TB, TC) { return _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWBCX() (TY, TW, TB, TC, TX) { return _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWBCY() (TY, TW, TB, TC, TY) { return _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWBCZ() (TY, TW, TB, TC, TZ) { return _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWBCW() (TY, TW, TB, TC, TW) { return _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWBCA() (TY, TW, TB, TC, TA) { return _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWBCB() (TY, TW, TB, TC, TB) { return _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWBCC() (TY, TW, TB, TC, TC) { return _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWCXX() (TY, TW, TC, TX, TX) { return _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWCXY() (TY, TW, TC, TX, TY) { return _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWCXZ() (TY, TW, TC, TX, TZ) { return _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWCXW() (TY, TW, TC, TX, TW) { return _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWCXA() (TY, TW, TC, TX, TA) { return _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWCXB() (TY, TW, TC, TX, TB) { return _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWCXC() (TY, TW, TC, TX, TC) { return _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWCYX() (TY, TW, TC, TY, TX) { return _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWCYY() (TY, TW, TC, TY, TY) { return _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWCYZ() (TY, TW, TC, TY, TZ) { return _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWCYW() (TY, TW, TC, TY, TW) { return _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWCYA() (TY, TW, TC, TY, TA) { return _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWCYB() (TY, TW, TC, TY, TB) { return _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWCYC() (TY, TW, TC, TY, TC) { return _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWCZX() (TY, TW, TC, TZ, TX) { return _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWCZY() (TY, TW, TC, TZ, TY) { return _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWCZZ() (TY, TW, TC, TZ, TZ) { return _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWCZW() (TY, TW, TC, TZ, TW) { return _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWCZA() (TY, TW, TC, TZ, TA) { return _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWCZB() (TY, TW, TC, TZ, TB) { return _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWCZC() (TY, TW, TC, TZ, TC) { return _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWCWX() (TY, TW, TC, TW, TX) { return _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWCWY() (TY, TW, TC, TW, TY) { return _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWCWZ() (TY, TW, TC, TW, TZ) { return _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWCWW() (TY, TW, TC, TW, TW) { return _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWCWA() (TY, TW, TC, TW, TA) { return _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWCWB() (TY, TW, TC, TW, TB) { return _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWCWC() (TY, TW, TC, TW, TC) { return _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWCAX() (TY, TW, TC, TA, TX) { return _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWCAY() (TY, TW, TC, TA, TY) { return _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWCAZ() (TY, TW, TC, TA, TZ) { return _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWCAW() (TY, TW, TC, TA, TW) { return _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWCAA() (TY, TW, TC, TA, TA) { return _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWCAB() (TY, TW, TC, TA, TB) { return _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWCAC() (TY, TW, TC, TA, TC) { return _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWCBX() (TY, TW, TC, TB, TX) { return _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWCBY() (TY, TW, TC, TB, TY) { return _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWCBZ() (TY, TW, TC, TB, TZ) { return _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWCBW() (TY, TW, TC, TB, TW) { return _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWCBA() (TY, TW, TC, TB, TA) { return _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWCBB() (TY, TW, TC, TB, TB) { return _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWCBC() (TY, TW, TC, TB, TC) { return _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWCCX() (TY, TW, TC, TC, TX) { return _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWCCY() (TY, TW, TC, TC, TY) { return _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWCCZ() (TY, TW, TC, TC, TZ) { return _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWCCW() (TY, TW, TC, TC, TW) { return _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWCCA() (TY, TW, TC, TC, TA) { return _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWCCB() (TY, TW, TC, TC, TB) { return _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YWCCC() (TY, TW, TC, TC, TC) { return _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAXXX() (TY, TA, TX, TX, TX) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAXXY() (TY, TA, TX, TX, TY) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAXXZ() (TY, TA, TX, TX, TZ) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAXXW() (TY, TA, TX, TX, TW) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAXXA() (TY, TA, TX, TX, TA) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAXXB() (TY, TA, TX, TX, TB) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAXXC() (TY, TA, TX, TX, TC) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAXYX() (TY, TA, TX, TY, TX) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAXYY() (TY, TA, TX, TY, TY) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAXYZ() (TY, TA, TX, TY, TZ) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAXYW() (TY, TA, TX, TY, TW) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAXYA() (TY, TA, TX, TY, TA) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAXYB() (TY, TA, TX, TY, TB) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAXYC() (TY, TA, TX, TY, TC) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAXZX() (TY, TA, TX, TZ, TX) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAXZY() (TY, TA, TX, TZ, TY) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAXZZ() (TY, TA, TX, TZ, TZ) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAXZW() (TY, TA, TX, TZ, TW) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAXZA() (TY, TA, TX, TZ, TA) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAXZB() (TY, TA, TX, TZ, TB) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAXZC() (TY, TA, TX, TZ, TC) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAXWX() (TY, TA, TX, TW, TX) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAXWY() (TY, TA, TX, TW, TY) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAXWZ() (TY, TA, TX, TW, TZ) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAXWW() (TY, TA, TX, TW, TW) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAXWA() (TY, TA, TX, TW, TA) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAXWB() (TY, TA, TX, TW, TB) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAXWC() (TY, TA, TX, TW, TC) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAXAX() (TY, TA, TX, TA, TX) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAXAY() (TY, TA, TX, TA, TY) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAXAZ() (TY, TA, TX, TA, TZ) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAXAW() (TY, TA, TX, TA, TW) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAXAA() (TY, TA, TX, TA, TA) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAXAB() (TY, TA, TX, TA, TB) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAXAC() (TY, TA, TX, TA, TC) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAXBX() (TY, TA, TX, TB, TX) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAXBY() (TY, TA, TX, TB, TY) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAXBZ() (TY, TA, TX, TB, TZ) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAXBW() (TY, TA, TX, TB, TW) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAXBA() (TY, TA, TX, TB, TA) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAXBB() (TY, TA, TX, TB, TB) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAXBC() (TY, TA, TX, TB, TC) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAXCX() (TY, TA, TX, TC, TX) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAXCY() (TY, TA, TX, TC, TY) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAXCZ() (TY, TA, TX, TC, TZ) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAXCW() (TY, TA, TX, TC, TW) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAXCA() (TY, TA, TX, TC, TA) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAXCB() (TY, TA, TX, TC, TB) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAXCC() (TY, TA, TX, TC, TC) { return _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAYXX() (TY, TA, TY, TX, TX) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAYXY() (TY, TA, TY, TX, TY) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAYXZ() (TY, TA, TY, TX, TZ) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAYXW() (TY, TA, TY, TX, TW) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAYXA() (TY, TA, TY, TX, TA) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAYXB() (TY, TA, TY, TX, TB) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAYXC() (TY, TA, TY, TX, TC) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAYYX() (TY, TA, TY, TY, TX) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAYYY() (TY, TA, TY, TY, TY) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAYYZ() (TY, TA, TY, TY, TZ) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAYYW() (TY, TA, TY, TY, TW) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAYYA() (TY, TA, TY, TY, TA) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAYYB() (TY, TA, TY, TY, TB) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAYYC() (TY, TA, TY, TY, TC) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAYZX() (TY, TA, TY, TZ, TX) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAYZY() (TY, TA, TY, TZ, TY) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAYZZ() (TY, TA, TY, TZ, TZ) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAYZW() (TY, TA, TY, TZ, TW) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAYZA() (TY, TA, TY, TZ, TA) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAYZB() (TY, TA, TY, TZ, TB) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAYZC() (TY, TA, TY, TZ, TC) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAYWX() (TY, TA, TY, TW, TX) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAYWY() (TY, TA, TY, TW, TY) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAYWZ() (TY, TA, TY, TW, TZ) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAYWW() (TY, TA, TY, TW, TW) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAYWA() (TY, TA, TY, TW, TA) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAYWB() (TY, TA, TY, TW, TB) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAYWC() (TY, TA, TY, TW, TC) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAYAX() (TY, TA, TY, TA, TX) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAYAY() (TY, TA, TY, TA, TY) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAYAZ() (TY, TA, TY, TA, TZ) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAYAW() (TY, TA, TY, TA, TW) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAYAA() (TY, TA, TY, TA, TA) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAYAB() (TY, TA, TY, TA, TB) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAYAC() (TY, TA, TY, TA, TC) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAYBX() (TY, TA, TY, TB, TX) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAYBY() (TY, TA, TY, TB, TY) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAYBZ() (TY, TA, TY, TB, TZ) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAYBW() (TY, TA, TY, TB, TW) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAYBA() (TY, TA, TY, TB, TA) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAYBB() (TY, TA, TY, TB, TB) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAYBC() (TY, TA, TY, TB, TC) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAYCX() (TY, TA, TY, TC, TX) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAYCY() (TY, TA, TY, TC, TY) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAYCZ() (TY, TA, TY, TC, TZ) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAYCW() (TY, TA, TY, TC, TW) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAYCA() (TY, TA, TY, TC, TA) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAYCB() (TY, TA, TY, TC, TB) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAYCC() (TY, TA, TY, TC, TC) { return _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAZXX() (TY, TA, TZ, TX, TX) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAZXY() (TY, TA, TZ, TX, TY) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAZXZ() (TY, TA, TZ, TX, TZ) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAZXW() (TY, TA, TZ, TX, TW) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAZXA() (TY, TA, TZ, TX, TA) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAZXB() (TY, TA, TZ, TX, TB) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAZXC() (TY, TA, TZ, TX, TC) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAZYX() (TY, TA, TZ, TY, TX) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAZYY() (TY, TA, TZ, TY, TY) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAZYZ() (TY, TA, TZ, TY, TZ) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAZYW() (TY, TA, TZ, TY, TW) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAZYA() (TY, TA, TZ, TY, TA) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAZYB() (TY, TA, TZ, TY, TB) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAZYC() (TY, TA, TZ, TY, TC) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAZZX() (TY, TA, TZ, TZ, TX) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAZZY() (TY, TA, TZ, TZ, TY) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAZZZ() (TY, TA, TZ, TZ, TZ) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAZZW() (TY, TA, TZ, TZ, TW) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAZZA() (TY, TA, TZ, TZ, TA) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAZZB() (TY, TA, TZ, TZ, TB) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAZZC() (TY, TA, TZ, TZ, TC) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAZWX() (TY, TA, TZ, TW, TX) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAZWY() (TY, TA, TZ, TW, TY) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAZWZ() (TY, TA, TZ, TW, TZ) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAZWW() (TY, TA, TZ, TW, TW) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAZWA() (TY, TA, TZ, TW, TA) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAZWB() (TY, TA, TZ, TW, TB) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAZWC() (TY, TA, TZ, TW, TC) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAZAX() (TY, TA, TZ, TA, TX) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAZAY() (TY, TA, TZ, TA, TY) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAZAZ() (TY, TA, TZ, TA, TZ) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAZAW() (TY, TA, TZ, TA, TW) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAZAA() (TY, TA, TZ, TA, TA) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAZAB() (TY, TA, TZ, TA, TB) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAZAC() (TY, TA, TZ, TA, TC) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAZBX() (TY, TA, TZ, TB, TX) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAZBY() (TY, TA, TZ, TB, TY) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAZBZ() (TY, TA, TZ, TB, TZ) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAZBW() (TY, TA, TZ, TB, TW) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAZBA() (TY, TA, TZ, TB, TA) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAZBB() (TY, TA, TZ, TB, TB) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAZBC() (TY, TA, TZ, TB, TC) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAZCX() (TY, TA, TZ, TC, TX) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAZCY() (TY, TA, TZ, TC, TY) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAZCZ() (TY, TA, TZ, TC, TZ) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAZCW() (TY, TA, TZ, TC, TW) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAZCA() (TY, TA, TZ, TC, TA) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAZCB() (TY, TA, TZ, TC, TB) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAZCC() (TY, TA, TZ, TC, TC) { return _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAWXX() (TY, TA, TW, TX, TX) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAWXY() (TY, TA, TW, TX, TY) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAWXZ() (TY, TA, TW, TX, TZ) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAWXW() (TY, TA, TW, TX, TW) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAWXA() (TY, TA, TW, TX, TA) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAWXB() (TY, TA, TW, TX, TB) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAWXC() (TY, TA, TW, TX, TC) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAWYX() (TY, TA, TW, TY, TX) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAWYY() (TY, TA, TW, TY, TY) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAWYZ() (TY, TA, TW, TY, TZ) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAWYW() (TY, TA, TW, TY, TW) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAWYA() (TY, TA, TW, TY, TA) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAWYB() (TY, TA, TW, TY, TB) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAWYC() (TY, TA, TW, TY, TC) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAWZX() (TY, TA, TW, TZ, TX) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAWZY() (TY, TA, TW, TZ, TY) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAWZZ() (TY, TA, TW, TZ, TZ) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAWZW() (TY, TA, TW, TZ, TW) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAWZA() (TY, TA, TW, TZ, TA) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAWZB() (TY, TA, TW, TZ, TB) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAWZC() (TY, TA, TW, TZ, TC) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAWWX() (TY, TA, TW, TW, TX) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAWWY() (TY, TA, TW, TW, TY) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAWWZ() (TY, TA, TW, TW, TZ) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAWWW() (TY, TA, TW, TW, TW) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAWWA() (TY, TA, TW, TW, TA) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAWWB() (TY, TA, TW, TW, TB) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAWWC() (TY, TA, TW, TW, TC) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAWAX() (TY, TA, TW, TA, TX) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAWAY() (TY, TA, TW, TA, TY) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAWAZ() (TY, TA, TW, TA, TZ) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAWAW() (TY, TA, TW, TA, TW) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAWAA() (TY, TA, TW, TA, TA) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAWAB() (TY, TA, TW, TA, TB) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAWAC() (TY, TA, TW, TA, TC) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAWBX() (TY, TA, TW, TB, TX) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAWBY() (TY, TA, TW, TB, TY) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAWBZ() (TY, TA, TW, TB, TZ) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAWBW() (TY, TA, TW, TB, TW) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAWBA() (TY, TA, TW, TB, TA) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAWBB() (TY, TA, TW, TB, TB) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAWBC() (TY, TA, TW, TB, TC) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAWCX() (TY, TA, TW, TC, TX) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAWCY() (TY, TA, TW, TC, TY) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAWCZ() (TY, TA, TW, TC, TZ) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAWCW() (TY, TA, TW, TC, TW) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAWCA() (TY, TA, TW, TC, TA) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAWCB() (TY, TA, TW, TC, TB) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAWCC() (TY, TA, TW, TC, TC) { return _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAAXX() (TY, TA, TA, TX, TX) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAAXY() (TY, TA, TA, TX, TY) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAAXZ() (TY, TA, TA, TX, TZ) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAAXW() (TY, TA, TA, TX, TW) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAAXA() (TY, TA, TA, TX, TA) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAAXB() (TY, TA, TA, TX, TB) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAAXC() (TY, TA, TA, TX, TC) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAAYX() (TY, TA, TA, TY, TX) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAAYY() (TY, TA, TA, TY, TY) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAAYZ() (TY, TA, TA, TY, TZ) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAAYW() (TY, TA, TA, TY, TW) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAAYA() (TY, TA, TA, TY, TA) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAAYB() (TY, TA, TA, TY, TB) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAAYC() (TY, TA, TA, TY, TC) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAAZX() (TY, TA, TA, TZ, TX) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAAZY() (TY, TA, TA, TZ, TY) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAAZZ() (TY, TA, TA, TZ, TZ) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAAZW() (TY, TA, TA, TZ, TW) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAAZA() (TY, TA, TA, TZ, TA) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAAZB() (TY, TA, TA, TZ, TB) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAAZC() (TY, TA, TA, TZ, TC) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAAWX() (TY, TA, TA, TW, TX) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAAWY() (TY, TA, TA, TW, TY) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAAWZ() (TY, TA, TA, TW, TZ) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAAWW() (TY, TA, TA, TW, TW) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAAWA() (TY, TA, TA, TW, TA) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAAWB() (TY, TA, TA, TW, TB) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAAWC() (TY, TA, TA, TW, TC) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAAAX() (TY, TA, TA, TA, TX) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAAAY() (TY, TA, TA, TA, TY) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAAAZ() (TY, TA, TA, TA, TZ) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAAAW() (TY, TA, TA, TA, TW) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAAAA() (TY, TA, TA, TA, TA) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAAAB() (TY, TA, TA, TA, TB) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAAAC() (TY, TA, TA, TA, TC) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAABX() (TY, TA, TA, TB, TX) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAABY() (TY, TA, TA, TB, TY) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAABZ() (TY, TA, TA, TB, TZ) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAABW() (TY, TA, TA, TB, TW) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAABA() (TY, TA, TA, TB, TA) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAABB() (TY, TA, TA, TB, TB) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAABC() (TY, TA, TA, TB, TC) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAACX() (TY, TA, TA, TC, TX) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAACY() (TY, TA, TA, TC, TY) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAACZ() (TY, TA, TA, TC, TZ) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAACW() (TY, TA, TA, TC, TW) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAACA() (TY, TA, TA, TC, TA) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAACB() (TY, TA, TA, TC, TB) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YAACC() (TY, TA, TA, TC, TC) { return _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YABXX() (TY, TA, TB, TX, TX) { return _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YABXY() (TY, TA, TB, TX, TY) { return _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YABXZ() (TY, TA, TB, TX, TZ) { return _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YABXW() (TY, TA, TB, TX, TW) { return _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YABXA() (TY, TA, TB, TX, TA) { return _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YABXB() (TY, TA, TB, TX, TB) { return _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YABXC() (TY, TA, TB, TX, TC) { return _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YABYX() (TY, TA, TB, TY, TX) { return _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YABYY() (TY, TA, TB, TY, TY) { return _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YABYZ() (TY, TA, TB, TY, TZ) { return _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YABYW() (TY, TA, TB, TY, TW) { return _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YABYA() (TY, TA, TB, TY, TA) { return _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YABYB() (TY, TA, TB, TY, TB) { return _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YABYC() (TY, TA, TB, TY, TC) { return _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YABZX() (TY, TA, TB, TZ, TX) { return _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YABZY() (TY, TA, TB, TZ, TY) { return _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YABZZ() (TY, TA, TB, TZ, TZ) { return _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YABZW() (TY, TA, TB, TZ, TW) { return _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YABZA() (TY, TA, TB, TZ, TA) { return _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YABZB() (TY, TA, TB, TZ, TB) { return _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YABZC() (TY, TA, TB, TZ, TC) { return _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YABWX() (TY, TA, TB, TW, TX) { return _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YABWY() (TY, TA, TB, TW, TY) { return _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YABWZ() (TY, TA, TB, TW, TZ) { return _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YABWW() (TY, TA, TB, TW, TW) { return _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YABWA() (TY, TA, TB, TW, TA) { return _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YABWB() (TY, TA, TB, TW, TB) { return _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YABWC() (TY, TA, TB, TW, TC) { return _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YABAX() (TY, TA, TB, TA, TX) { return _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YABAY() (TY, TA, TB, TA, TY) { return _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YABAZ() (TY, TA, TB, TA, TZ) { return _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YABAW() (TY, TA, TB, TA, TW) { return _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YABAA() (TY, TA, TB, TA, TA) { return _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YABAB() (TY, TA, TB, TA, TB) { return _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YABAC() (TY, TA, TB, TA, TC) { return _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YABBX() (TY, TA, TB, TB, TX) { return _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YABBY() (TY, TA, TB, TB, TY) { return _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YABBZ() (TY, TA, TB, TB, TZ) { return _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YABBW() (TY, TA, TB, TB, TW) { return _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YABBA() (TY, TA, TB, TB, TA) { return _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YABBB() (TY, TA, TB, TB, TB) { return _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YABBC() (TY, TA, TB, TB, TC) { return _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YABCX() (TY, TA, TB, TC, TX) { return _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YABCY() (TY, TA, TB, TC, TY) { return _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YABCZ() (TY, TA, TB, TC, TZ) { return _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YABCW() (TY, TA, TB, TC, TW) { return _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YABCA() (TY, TA, TB, TC, TA) { return _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YABCB() (TY, TA, TB, TC, TB) { return _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YABCC() (TY, TA, TB, TC, TC) { return _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YACXX() (TY, TA, TC, TX, TX) { return _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YACXY() (TY, TA, TC, TX, TY) { return _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YACXZ() (TY, TA, TC, TX, TZ) { return _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YACXW() (TY, TA, TC, TX, TW) { return _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YACXA() (TY, TA, TC, TX, TA) { return _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YACXB() (TY, TA, TC, TX, TB) { return _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YACXC() (TY, TA, TC, TX, TC) { return _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YACYX() (TY, TA, TC, TY, TX) { return _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YACYY() (TY, TA, TC, TY, TY) { return _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YACYZ() (TY, TA, TC, TY, TZ) { return _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YACYW() (TY, TA, TC, TY, TW) { return _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YACYA() (TY, TA, TC, TY, TA) { return _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YACYB() (TY, TA, TC, TY, TB) { return _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YACYC() (TY, TA, TC, TY, TC) { return _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YACZX() (TY, TA, TC, TZ, TX) { return _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YACZY() (TY, TA, TC, TZ, TY) { return _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YACZZ() (TY, TA, TC, TZ, TZ) { return _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YACZW() (TY, TA, TC, TZ, TW) { return _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YACZA() (TY, TA, TC, TZ, TA) { return _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YACZB() (TY, TA, TC, TZ, TB) { return _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YACZC() (TY, TA, TC, TZ, TC) { return _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YACWX() (TY, TA, TC, TW, TX) { return _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YACWY() (TY, TA, TC, TW, TY) { return _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YACWZ() (TY, TA, TC, TW, TZ) { return _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YACWW() (TY, TA, TC, TW, TW) { return _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YACWA() (TY, TA, TC, TW, TA) { return _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YACWB() (TY, TA, TC, TW, TB) { return _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YACWC() (TY, TA, TC, TW, TC) { return _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YACAX() (TY, TA, TC, TA, TX) { return _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YACAY() (TY, TA, TC, TA, TY) { return _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YACAZ() (TY, TA, TC, TA, TZ) { return _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YACAW() (TY, TA, TC, TA, TW) { return _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YACAA() (TY, TA, TC, TA, TA) { return _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YACAB() (TY, TA, TC, TA, TB) { return _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YACAC() (TY, TA, TC, TA, TC) { return _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YACBX() (TY, TA, TC, TB, TX) { return _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YACBY() (TY, TA, TC, TB, TY) { return _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YACBZ() (TY, TA, TC, TB, TZ) { return _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YACBW() (TY, TA, TC, TB, TW) { return _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YACBA() (TY, TA, TC, TB, TA) { return _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YACBB() (TY, TA, TC, TB, TB) { return _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YACBC() (TY, TA, TC, TB, TC) { return _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YACCX() (TY, TA, TC, TC, TX) { return _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YACCY() (TY, TA, TC, TC, TY) { return _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YACCZ() (TY, TA, TC, TC, TZ) { return _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YACCW() (TY, TA, TC, TC, TW) { return _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YACCA() (TY, TA, TC, TC, TA) { return _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YACCB() (TY, TA, TC, TC, TB) { return _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YACCC() (TY, TA, TC, TC, TC) { return _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBXXX() (TY, TB, TX, TX, TX) { return _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBXXY() (TY, TB, TX, TX, TY) { return _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBXXZ() (TY, TB, TX, TX, TZ) { return _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBXXW() (TY, TB, TX, TX, TW) { return _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBXXA() (TY, TB, TX, TX, TA) { return _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBXXB() (TY, TB, TX, TX, TB) { return _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBXXC() (TY, TB, TX, TX, TC) { return _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBXYX() (TY, TB, TX, TY, TX) { return _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBXYY() (TY, TB, TX, TY, TY) { return _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBXYZ() (TY, TB, TX, TY, TZ) { return _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBXYW() (TY, TB, TX, TY, TW) { return _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBXYA() (TY, TB, TX, TY, TA) { return _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBXYB() (TY, TB, TX, TY, TB) { return _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBXYC() (TY, TB, TX, TY, TC) { return _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBXZX() (TY, TB, TX, TZ, TX) { return _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBXZY() (TY, TB, TX, TZ, TY) { return _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBXZZ() (TY, TB, TX, TZ, TZ) { return _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBXZW() (TY, TB, TX, TZ, TW) { return _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBXZA() (TY, TB, TX, TZ, TA) { return _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBXZB() (TY, TB, TX, TZ, TB) { return _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBXZC() (TY, TB, TX, TZ, TC) { return _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBXWX() (TY, TB, TX, TW, TX) { return _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBXWY() (TY, TB, TX, TW, TY) { return _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBXWZ() (TY, TB, TX, TW, TZ) { return _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBXWW() (TY, TB, TX, TW, TW) { return _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBXWA() (TY, TB, TX, TW, TA) { return _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBXWB() (TY, TB, TX, TW, TB) { return _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBXWC() (TY, TB, TX, TW, TC) { return _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBXAX() (TY, TB, TX, TA, TX) { return _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBXAY() (TY, TB, TX, TA, TY) { return _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBXAZ() (TY, TB, TX, TA, TZ) { return _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBXAW() (TY, TB, TX, TA, TW) { return _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBXAA() (TY, TB, TX, TA, TA) { return _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBXAB() (TY, TB, TX, TA, TB) { return _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBXAC() (TY, TB, TX, TA, TC) { return _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBXBX() (TY, TB, TX, TB, TX) { return _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBXBY() (TY, TB, TX, TB, TY) { return _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBXBZ() (TY, TB, TX, TB, TZ) { return _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBXBW() (TY, TB, TX, TB, TW) { return _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBXBA() (TY, TB, TX, TB, TA) { return _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBXBB() (TY, TB, TX, TB, TB) { return _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBXBC() (TY, TB, TX, TB, TC) { return _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBXCX() (TY, TB, TX, TC, TX) { return _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBXCY() (TY, TB, TX, TC, TY) { return _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBXCZ() (TY, TB, TX, TC, TZ) { return _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBXCW() (TY, TB, TX, TC, TW) { return _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBXCA() (TY, TB, TX, TC, TA) { return _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBXCB() (TY, TB, TX, TC, TB) { return _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBXCC() (TY, TB, TX, TC, TC) { return _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBYXX() (TY, TB, TY, TX, TX) { return _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBYXY() (TY, TB, TY, TX, TY) { return _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBYXZ() (TY, TB, TY, TX, TZ) { return _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBYXW() (TY, TB, TY, TX, TW) { return _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBYXA() (TY, TB, TY, TX, TA) { return _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBYXB() (TY, TB, TY, TX, TB) { return _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBYXC() (TY, TB, TY, TX, TC) { return _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBYYX() (TY, TB, TY, TY, TX) { return _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBYYY() (TY, TB, TY, TY, TY) { return _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBYYZ() (TY, TB, TY, TY, TZ) { return _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBYYW() (TY, TB, TY, TY, TW) { return _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBYYA() (TY, TB, TY, TY, TA) { return _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBYYB() (TY, TB, TY, TY, TB) { return _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBYYC() (TY, TB, TY, TY, TC) { return _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBYZX() (TY, TB, TY, TZ, TX) { return _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBYZY() (TY, TB, TY, TZ, TY) { return _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBYZZ() (TY, TB, TY, TZ, TZ) { return _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBYZW() (TY, TB, TY, TZ, TW) { return _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBYZA() (TY, TB, TY, TZ, TA) { return _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBYZB() (TY, TB, TY, TZ, TB) { return _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBYZC() (TY, TB, TY, TZ, TC) { return _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBYWX() (TY, TB, TY, TW, TX) { return _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBYWY() (TY, TB, TY, TW, TY) { return _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBYWZ() (TY, TB, TY, TW, TZ) { return _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBYWW() (TY, TB, TY, TW, TW) { return _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBYWA() (TY, TB, TY, TW, TA) { return _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBYWB() (TY, TB, TY, TW, TB) { return _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBYWC() (TY, TB, TY, TW, TC) { return _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBYAX() (TY, TB, TY, TA, TX) { return _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBYAY() (TY, TB, TY, TA, TY) { return _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBYAZ() (TY, TB, TY, TA, TZ) { return _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBYAW() (TY, TB, TY, TA, TW) { return _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBYAA() (TY, TB, TY, TA, TA) { return _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBYAB() (TY, TB, TY, TA, TB) { return _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBYAC() (TY, TB, TY, TA, TC) { return _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBYBX() (TY, TB, TY, TB, TX) { return _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBYBY() (TY, TB, TY, TB, TY) { return _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBYBZ() (TY, TB, TY, TB, TZ) { return _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBYBW() (TY, TB, TY, TB, TW) { return _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBYBA() (TY, TB, TY, TB, TA) { return _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBYBB() (TY, TB, TY, TB, TB) { return _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBYBC() (TY, TB, TY, TB, TC) { return _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBYCX() (TY, TB, TY, TC, TX) { return _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBYCY() (TY, TB, TY, TC, TY) { return _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBYCZ() (TY, TB, TY, TC, TZ) { return _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBYCW() (TY, TB, TY, TC, TW) { return _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBYCA() (TY, TB, TY, TC, TA) { return _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBYCB() (TY, TB, TY, TC, TB) { return _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBYCC() (TY, TB, TY, TC, TC) { return _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBZXX() (TY, TB, TZ, TX, TX) { return _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBZXY() (TY, TB, TZ, TX, TY) { return _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBZXZ() (TY, TB, TZ, TX, TZ) { return _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBZXW() (TY, TB, TZ, TX, TW) { return _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBZXA() (TY, TB, TZ, TX, TA) { return _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBZXB() (TY, TB, TZ, TX, TB) { return _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBZXC() (TY, TB, TZ, TX, TC) { return _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBZYX() (TY, TB, TZ, TY, TX) { return _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBZYY() (TY, TB, TZ, TY, TY) { return _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBZYZ() (TY, TB, TZ, TY, TZ) { return _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBZYW() (TY, TB, TZ, TY, TW) { return _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBZYA() (TY, TB, TZ, TY, TA) { return _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBZYB() (TY, TB, TZ, TY, TB) { return _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBZYC() (TY, TB, TZ, TY, TC) { return _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBZZX() (TY, TB, TZ, TZ, TX) { return _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBZZY() (TY, TB, TZ, TZ, TY) { return _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBZZZ() (TY, TB, TZ, TZ, TZ) { return _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBZZW() (TY, TB, TZ, TZ, TW) { return _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBZZA() (TY, TB, TZ, TZ, TA) { return _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBZZB() (TY, TB, TZ, TZ, TB) { return _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBZZC() (TY, TB, TZ, TZ, TC) { return _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBZWX() (TY, TB, TZ, TW, TX) { return _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBZWY() (TY, TB, TZ, TW, TY) { return _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBZWZ() (TY, TB, TZ, TW, TZ) { return _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBZWW() (TY, TB, TZ, TW, TW) { return _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBZWA() (TY, TB, TZ, TW, TA) { return _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBZWB() (TY, TB, TZ, TW, TB) { return _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBZWC() (TY, TB, TZ, TW, TC) { return _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBZAX() (TY, TB, TZ, TA, TX) { return _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBZAY() (TY, TB, TZ, TA, TY) { return _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBZAZ() (TY, TB, TZ, TA, TZ) { return _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBZAW() (TY, TB, TZ, TA, TW) { return _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBZAA() (TY, TB, TZ, TA, TA) { return _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBZAB() (TY, TB, TZ, TA, TB) { return _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBZAC() (TY, TB, TZ, TA, TC) { return _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBZBX() (TY, TB, TZ, TB, TX) { return _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBZBY() (TY, TB, TZ, TB, TY) { return _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBZBZ() (TY, TB, TZ, TB, TZ) { return _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBZBW() (TY, TB, TZ, TB, TW) { return _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBZBA() (TY, TB, TZ, TB, TA) { return _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBZBB() (TY, TB, TZ, TB, TB) { return _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBZBC() (TY, TB, TZ, TB, TC) { return _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBZCX() (TY, TB, TZ, TC, TX) { return _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBZCY() (TY, TB, TZ, TC, TY) { return _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBZCZ() (TY, TB, TZ, TC, TZ) { return _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBZCW() (TY, TB, TZ, TC, TW) { return _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBZCA() (TY, TB, TZ, TC, TA) { return _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBZCB() (TY, TB, TZ, TC, TB) { return _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBZCC() (TY, TB, TZ, TC, TC) { return _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBWXX() (TY, TB, TW, TX, TX) { return _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBWXY() (TY, TB, TW, TX, TY) { return _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBWXZ() (TY, TB, TW, TX, TZ) { return _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBWXW() (TY, TB, TW, TX, TW) { return _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBWXA() (TY, TB, TW, TX, TA) { return _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBWXB() (TY, TB, TW, TX, TB) { return _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBWXC() (TY, TB, TW, TX, TC) { return _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBWYX() (TY, TB, TW, TY, TX) { return _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBWYY() (TY, TB, TW, TY, TY) { return _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBWYZ() (TY, TB, TW, TY, TZ) { return _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBWYW() (TY, TB, TW, TY, TW) { return _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBWYA() (TY, TB, TW, TY, TA) { return _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBWYB() (TY, TB, TW, TY, TB) { return _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBWYC() (TY, TB, TW, TY, TC) { return _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBWZX() (TY, TB, TW, TZ, TX) { return _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBWZY() (TY, TB, TW, TZ, TY) { return _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBWZZ() (TY, TB, TW, TZ, TZ) { return _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBWZW() (TY, TB, TW, TZ, TW) { return _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBWZA() (TY, TB, TW, TZ, TA) { return _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBWZB() (TY, TB, TW, TZ, TB) { return _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBWZC() (TY, TB, TW, TZ, TC) { return _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBWWX() (TY, TB, TW, TW, TX) { return _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBWWY() (TY, TB, TW, TW, TY) { return _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBWWZ() (TY, TB, TW, TW, TZ) { return _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBWWW() (TY, TB, TW, TW, TW) { return _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBWWA() (TY, TB, TW, TW, TA) { return _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBWWB() (TY, TB, TW, TW, TB) { return _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBWWC() (TY, TB, TW, TW, TC) { return _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBWAX() (TY, TB, TW, TA, TX) { return _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBWAY() (TY, TB, TW, TA, TY) { return _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBWAZ() (TY, TB, TW, TA, TZ) { return _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBWAW() (TY, TB, TW, TA, TW) { return _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBWAA() (TY, TB, TW, TA, TA) { return _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBWAB() (TY, TB, TW, TA, TB) { return _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBWAC() (TY, TB, TW, TA, TC) { return _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBWBX() (TY, TB, TW, TB, TX) { return _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBWBY() (TY, TB, TW, TB, TY) { return _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBWBZ() (TY, TB, TW, TB, TZ) { return _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBWBW() (TY, TB, TW, TB, TW) { return _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBWBA() (TY, TB, TW, TB, TA) { return _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBWBB() (TY, TB, TW, TB, TB) { return _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBWBC() (TY, TB, TW, TB, TC) { return _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBWCX() (TY, TB, TW, TC, TX) { return _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBWCY() (TY, TB, TW, TC, TY) { return _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBWCZ() (TY, TB, TW, TC, TZ) { return _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBWCW() (TY, TB, TW, TC, TW) { return _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBWCA() (TY, TB, TW, TC, TA) { return _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBWCB() (TY, TB, TW, TC, TB) { return _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBWCC() (TY, TB, TW, TC, TC) { return _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBAXX() (TY, TB, TA, TX, TX) { return _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBAXY() (TY, TB, TA, TX, TY) { return _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBAXZ() (TY, TB, TA, TX, TZ) { return _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBAXW() (TY, TB, TA, TX, TW) { return _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBAXA() (TY, TB, TA, TX, TA) { return _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBAXB() (TY, TB, TA, TX, TB) { return _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBAXC() (TY, TB, TA, TX, TC) { return _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBAYX() (TY, TB, TA, TY, TX) { return _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBAYY() (TY, TB, TA, TY, TY) { return _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBAYZ() (TY, TB, TA, TY, TZ) { return _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBAYW() (TY, TB, TA, TY, TW) { return _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBAYA() (TY, TB, TA, TY, TA) { return _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBAYB() (TY, TB, TA, TY, TB) { return _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBAYC() (TY, TB, TA, TY, TC) { return _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBAZX() (TY, TB, TA, TZ, TX) { return _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBAZY() (TY, TB, TA, TZ, TY) { return _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBAZZ() (TY, TB, TA, TZ, TZ) { return _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBAZW() (TY, TB, TA, TZ, TW) { return _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBAZA() (TY, TB, TA, TZ, TA) { return _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBAZB() (TY, TB, TA, TZ, TB) { return _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBAZC() (TY, TB, TA, TZ, TC) { return _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBAWX() (TY, TB, TA, TW, TX) { return _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBAWY() (TY, TB, TA, TW, TY) { return _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBAWZ() (TY, TB, TA, TW, TZ) { return _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBAWW() (TY, TB, TA, TW, TW) { return _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBAWA() (TY, TB, TA, TW, TA) { return _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBAWB() (TY, TB, TA, TW, TB) { return _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBAWC() (TY, TB, TA, TW, TC) { return _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBAAX() (TY, TB, TA, TA, TX) { return _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBAAY() (TY, TB, TA, TA, TY) { return _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBAAZ() (TY, TB, TA, TA, TZ) { return _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBAAW() (TY, TB, TA, TA, TW) { return _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBAAA() (TY, TB, TA, TA, TA) { return _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBAAB() (TY, TB, TA, TA, TB) { return _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBAAC() (TY, TB, TA, TA, TC) { return _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBABX() (TY, TB, TA, TB, TX) { return _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBABY() (TY, TB, TA, TB, TY) { return _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBABZ() (TY, TB, TA, TB, TZ) { return _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBABW() (TY, TB, TA, TB, TW) { return _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBABA() (TY, TB, TA, TB, TA) { return _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBABB() (TY, TB, TA, TB, TB) { return _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBABC() (TY, TB, TA, TB, TC) { return _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBACX() (TY, TB, TA, TC, TX) { return _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBACY() (TY, TB, TA, TC, TY) { return _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBACZ() (TY, TB, TA, TC, TZ) { return _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBACW() (TY, TB, TA, TC, TW) { return _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBACA() (TY, TB, TA, TC, TA) { return _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBACB() (TY, TB, TA, TC, TB) { return _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBACC() (TY, TB, TA, TC, TC) { return _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBBXX() (TY, TB, TB, TX, TX) { return _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBBXY() (TY, TB, TB, TX, TY) { return _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBBXZ() (TY, TB, TB, TX, TZ) { return _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBBXW() (TY, TB, TB, TX, TW) { return _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBBXA() (TY, TB, TB, TX, TA) { return _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBBXB() (TY, TB, TB, TX, TB) { return _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBBXC() (TY, TB, TB, TX, TC) { return _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBBYX() (TY, TB, TB, TY, TX) { return _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBBYY() (TY, TB, TB, TY, TY) { return _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBBYZ() (TY, TB, TB, TY, TZ) { return _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBBYW() (TY, TB, TB, TY, TW) { return _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBBYA() (TY, TB, TB, TY, TA) { return _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBBYB() (TY, TB, TB, TY, TB) { return _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBBYC() (TY, TB, TB, TY, TC) { return _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBBZX() (TY, TB, TB, TZ, TX) { return _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBBZY() (TY, TB, TB, TZ, TY) { return _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBBZZ() (TY, TB, TB, TZ, TZ) { return _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBBZW() (TY, TB, TB, TZ, TW) { return _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBBZA() (TY, TB, TB, TZ, TA) { return _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBBZB() (TY, TB, TB, TZ, TB) { return _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBBZC() (TY, TB, TB, TZ, TC) { return _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBBWX() (TY, TB, TB, TW, TX) { return _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBBWY() (TY, TB, TB, TW, TY) { return _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBBWZ() (TY, TB, TB, TW, TZ) { return _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBBWW() (TY, TB, TB, TW, TW) { return _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBBWA() (TY, TB, TB, TW, TA) { return _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBBWB() (TY, TB, TB, TW, TB) { return _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBBWC() (TY, TB, TB, TW, TC) { return _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBBAX() (TY, TB, TB, TA, TX) { return _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBBAY() (TY, TB, TB, TA, TY) { return _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBBAZ() (TY, TB, TB, TA, TZ) { return _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBBAW() (TY, TB, TB, TA, TW) { return _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBBAA() (TY, TB, TB, TA, TA) { return _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBBAB() (TY, TB, TB, TA, TB) { return _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBBAC() (TY, TB, TB, TA, TC) { return _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBBBX() (TY, TB, TB, TB, TX) { return _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBBBY() (TY, TB, TB, TB, TY) { return _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBBBZ() (TY, TB, TB, TB, TZ) { return _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBBBW() (TY, TB, TB, TB, TW) { return _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBBBA() (TY, TB, TB, TB, TA) { return _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBBBB() (TY, TB, TB, TB, TB) { return _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBBBC() (TY, TB, TB, TB, TC) { return _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBBCX() (TY, TB, TB, TC, TX) { return _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBBCY() (TY, TB, TB, TC, TY) { return _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBBCZ() (TY, TB, TB, TC, TZ) { return _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBBCW() (TY, TB, TB, TC, TW) { return _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBBCA() (TY, TB, TB, TC, TA) { return _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBBCB() (TY, TB, TB, TC, TB) { return _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBBCC() (TY, TB, TB, TC, TC) { return _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBCXX() (TY, TB, TC, TX, TX) { return _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBCXY() (TY, TB, TC, TX, TY) { return _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBCXZ() (TY, TB, TC, TX, TZ) { return _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBCXW() (TY, TB, TC, TX, TW) { return _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBCXA() (TY, TB, TC, TX, TA) { return _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBCXB() (TY, TB, TC, TX, TB) { return _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBCXC() (TY, TB, TC, TX, TC) { return _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBCYX() (TY, TB, TC, TY, TX) { return _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBCYY() (TY, TB, TC, TY, TY) { return _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBCYZ() (TY, TB, TC, TY, TZ) { return _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBCYW() (TY, TB, TC, TY, TW) { return _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBCYA() (TY, TB, TC, TY, TA) { return _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBCYB() (TY, TB, TC, TY, TB) { return _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBCYC() (TY, TB, TC, TY, TC) { return _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBCZX() (TY, TB, TC, TZ, TX) { return _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBCZY() (TY, TB, TC, TZ, TY) { return _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBCZZ() (TY, TB, TC, TZ, TZ) { return _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBCZW() (TY, TB, TC, TZ, TW) { return _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBCZA() (TY, TB, TC, TZ, TA) { return _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBCZB() (TY, TB, TC, TZ, TB) { return _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBCZC() (TY, TB, TC, TZ, TC) { return _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBCWX() (TY, TB, TC, TW, TX) { return _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBCWY() (TY, TB, TC, TW, TY) { return _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBCWZ() (TY, TB, TC, TW, TZ) { return _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBCWW() (TY, TB, TC, TW, TW) { return _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBCWA() (TY, TB, TC, TW, TA) { return _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBCWB() (TY, TB, TC, TW, TB) { return _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBCWC() (TY, TB, TC, TW, TC) { return _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBCAX() (TY, TB, TC, TA, TX) { return _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBCAY() (TY, TB, TC, TA, TY) { return _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBCAZ() (TY, TB, TC, TA, TZ) { return _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBCAW() (TY, TB, TC, TA, TW) { return _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBCAA() (TY, TB, TC, TA, TA) { return _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBCAB() (TY, TB, TC, TA, TB) { return _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBCAC() (TY, TB, TC, TA, TC) { return _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBCBX() (TY, TB, TC, TB, TX) { return _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBCBY() (TY, TB, TC, TB, TY) { return _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBCBZ() (TY, TB, TC, TB, TZ) { return _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBCBW() (TY, TB, TC, TB, TW) { return _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBCBA() (TY, TB, TC, TB, TA) { return _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBCBB() (TY, TB, TC, TB, TB) { return _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBCBC() (TY, TB, TC, TB, TC) { return _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBCCX() (TY, TB, TC, TC, TX) { return _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBCCY() (TY, TB, TC, TC, TY) { return _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBCCZ() (TY, TB, TC, TC, TZ) { return _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBCCW() (TY, TB, TC, TC, TW) { return _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBCCA() (TY, TB, TC, TC, TA) { return _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBCCB() (TY, TB, TC, TC, TB) { return _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YBCCC() (TY, TB, TC, TC, TC) { return _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCXXX() (TY, TC, TX, TX, TX) { return _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCXXY() (TY, TC, TX, TX, TY) { return _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCXXZ() (TY, TC, TX, TX, TZ) { return _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCXXW() (TY, TC, TX, TX, TW) { return _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCXXA() (TY, TC, TX, TX, TA) { return _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCXXB() (TY, TC, TX, TX, TB) { return _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCXXC() (TY, TC, TX, TX, TC) { return _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCXYX() (TY, TC, TX, TY, TX) { return _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCXYY() (TY, TC, TX, TY, TY) { return _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCXYZ() (TY, TC, TX, TY, TZ) { return _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCXYW() (TY, TC, TX, TY, TW) { return _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCXYA() (TY, TC, TX, TY, TA) { return _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCXYB() (TY, TC, TX, TY, TB) { return _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCXYC() (TY, TC, TX, TY, TC) { return _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCXZX() (TY, TC, TX, TZ, TX) { return _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCXZY() (TY, TC, TX, TZ, TY) { return _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCXZZ() (TY, TC, TX, TZ, TZ) { return _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCXZW() (TY, TC, TX, TZ, TW) { return _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCXZA() (TY, TC, TX, TZ, TA) { return _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCXZB() (TY, TC, TX, TZ, TB) { return _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCXZC() (TY, TC, TX, TZ, TC) { return _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCXWX() (TY, TC, TX, TW, TX) { return _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCXWY() (TY, TC, TX, TW, TY) { return _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCXWZ() (TY, TC, TX, TW, TZ) { return _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCXWW() (TY, TC, TX, TW, TW) { return _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCXWA() (TY, TC, TX, TW, TA) { return _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCXWB() (TY, TC, TX, TW, TB) { return _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCXWC() (TY, TC, TX, TW, TC) { return _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCXAX() (TY, TC, TX, TA, TX) { return _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCXAY() (TY, TC, TX, TA, TY) { return _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCXAZ() (TY, TC, TX, TA, TZ) { return _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCXAW() (TY, TC, TX, TA, TW) { return _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCXAA() (TY, TC, TX, TA, TA) { return _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCXAB() (TY, TC, TX, TA, TB) { return _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCXAC() (TY, TC, TX, TA, TC) { return _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCXBX() (TY, TC, TX, TB, TX) { return _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCXBY() (TY, TC, TX, TB, TY) { return _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCXBZ() (TY, TC, TX, TB, TZ) { return _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCXBW() (TY, TC, TX, TB, TW) { return _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCXBA() (TY, TC, TX, TB, TA) { return _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCXBB() (TY, TC, TX, TB, TB) { return _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCXBC() (TY, TC, TX, TB, TC) { return _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCXCX() (TY, TC, TX, TC, TX) { return _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCXCY() (TY, TC, TX, TC, TY) { return _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCXCZ() (TY, TC, TX, TC, TZ) { return _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCXCW() (TY, TC, TX, TC, TW) { return _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCXCA() (TY, TC, TX, TC, TA) { return _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCXCB() (TY, TC, TX, TC, TB) { return _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCXCC() (TY, TC, TX, TC, TC) { return _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCYXX() (TY, TC, TY, TX, TX) { return _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCYXY() (TY, TC, TY, TX, TY) { return _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCYXZ() (TY, TC, TY, TX, TZ) { return _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCYXW() (TY, TC, TY, TX, TW) { return _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCYXA() (TY, TC, TY, TX, TA) { return _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCYXB() (TY, TC, TY, TX, TB) { return _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCYXC() (TY, TC, TY, TX, TC) { return _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCYYX() (TY, TC, TY, TY, TX) { return _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCYYY() (TY, TC, TY, TY, TY) { return _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCYYZ() (TY, TC, TY, TY, TZ) { return _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCYYW() (TY, TC, TY, TY, TW) { return _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCYYA() (TY, TC, TY, TY, TA) { return _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCYYB() (TY, TC, TY, TY, TB) { return _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCYYC() (TY, TC, TY, TY, TC) { return _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCYZX() (TY, TC, TY, TZ, TX) { return _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCYZY() (TY, TC, TY, TZ, TY) { return _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCYZZ() (TY, TC, TY, TZ, TZ) { return _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCYZW() (TY, TC, TY, TZ, TW) { return _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCYZA() (TY, TC, TY, TZ, TA) { return _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCYZB() (TY, TC, TY, TZ, TB) { return _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCYZC() (TY, TC, TY, TZ, TC) { return _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCYWX() (TY, TC, TY, TW, TX) { return _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCYWY() (TY, TC, TY, TW, TY) { return _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCYWZ() (TY, TC, TY, TW, TZ) { return _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCYWW() (TY, TC, TY, TW, TW) { return _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCYWA() (TY, TC, TY, TW, TA) { return _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCYWB() (TY, TC, TY, TW, TB) { return _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCYWC() (TY, TC, TY, TW, TC) { return _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCYAX() (TY, TC, TY, TA, TX) { return _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCYAY() (TY, TC, TY, TA, TY) { return _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCYAZ() (TY, TC, TY, TA, TZ) { return _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCYAW() (TY, TC, TY, TA, TW) { return _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCYAA() (TY, TC, TY, TA, TA) { return _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCYAB() (TY, TC, TY, TA, TB) { return _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCYAC() (TY, TC, TY, TA, TC) { return _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCYBX() (TY, TC, TY, TB, TX) { return _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCYBY() (TY, TC, TY, TB, TY) { return _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCYBZ() (TY, TC, TY, TB, TZ) { return _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCYBW() (TY, TC, TY, TB, TW) { return _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCYBA() (TY, TC, TY, TB, TA) { return _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCYBB() (TY, TC, TY, TB, TB) { return _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCYBC() (TY, TC, TY, TB, TC) { return _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCYCX() (TY, TC, TY, TC, TX) { return _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCYCY() (TY, TC, TY, TC, TY) { return _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCYCZ() (TY, TC, TY, TC, TZ) { return _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCYCW() (TY, TC, TY, TC, TW) { return _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCYCA() (TY, TC, TY, TC, TA) { return _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCYCB() (TY, TC, TY, TC, TB) { return _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCYCC() (TY, TC, TY, TC, TC) { return _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCZXX() (TY, TC, TZ, TX, TX) { return _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCZXY() (TY, TC, TZ, TX, TY) { return _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCZXZ() (TY, TC, TZ, TX, TZ) { return _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCZXW() (TY, TC, TZ, TX, TW) { return _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCZXA() (TY, TC, TZ, TX, TA) { return _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCZXB() (TY, TC, TZ, TX, TB) { return _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCZXC() (TY, TC, TZ, TX, TC) { return _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCZYX() (TY, TC, TZ, TY, TX) { return _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCZYY() (TY, TC, TZ, TY, TY) { return _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCZYZ() (TY, TC, TZ, TY, TZ) { return _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCZYW() (TY, TC, TZ, TY, TW) { return _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCZYA() (TY, TC, TZ, TY, TA) { return _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCZYB() (TY, TC, TZ, TY, TB) { return _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCZYC() (TY, TC, TZ, TY, TC) { return _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCZZX() (TY, TC, TZ, TZ, TX) { return _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCZZY() (TY, TC, TZ, TZ, TY) { return _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCZZZ() (TY, TC, TZ, TZ, TZ) { return _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCZZW() (TY, TC, TZ, TZ, TW) { return _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCZZA() (TY, TC, TZ, TZ, TA) { return _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCZZB() (TY, TC, TZ, TZ, TB) { return _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCZZC() (TY, TC, TZ, TZ, TC) { return _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCZWX() (TY, TC, TZ, TW, TX) { return _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCZWY() (TY, TC, TZ, TW, TY) { return _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCZWZ() (TY, TC, TZ, TW, TZ) { return _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCZWW() (TY, TC, TZ, TW, TW) { return _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCZWA() (TY, TC, TZ, TW, TA) { return _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCZWB() (TY, TC, TZ, TW, TB) { return _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCZWC() (TY, TC, TZ, TW, TC) { return _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCZAX() (TY, TC, TZ, TA, TX) { return _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCZAY() (TY, TC, TZ, TA, TY) { return _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCZAZ() (TY, TC, TZ, TA, TZ) { return _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCZAW() (TY, TC, TZ, TA, TW) { return _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCZAA() (TY, TC, TZ, TA, TA) { return _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCZAB() (TY, TC, TZ, TA, TB) { return _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCZAC() (TY, TC, TZ, TA, TC) { return _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCZBX() (TY, TC, TZ, TB, TX) { return _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCZBY() (TY, TC, TZ, TB, TY) { return _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCZBZ() (TY, TC, TZ, TB, TZ) { return _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCZBW() (TY, TC, TZ, TB, TW) { return _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCZBA() (TY, TC, TZ, TB, TA) { return _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCZBB() (TY, TC, TZ, TB, TB) { return _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCZBC() (TY, TC, TZ, TB, TC) { return _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCZCX() (TY, TC, TZ, TC, TX) { return _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCZCY() (TY, TC, TZ, TC, TY) { return _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCZCZ() (TY, TC, TZ, TC, TZ) { return _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCZCW() (TY, TC, TZ, TC, TW) { return _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCZCA() (TY, TC, TZ, TC, TA) { return _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCZCB() (TY, TC, TZ, TC, TB) { return _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCZCC() (TY, TC, TZ, TC, TC) { return _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCWXX() (TY, TC, TW, TX, TX) { return _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCWXY() (TY, TC, TW, TX, TY) { return _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCWXZ() (TY, TC, TW, TX, TZ) { return _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCWXW() (TY, TC, TW, TX, TW) { return _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCWXA() (TY, TC, TW, TX, TA) { return _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCWXB() (TY, TC, TW, TX, TB) { return _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCWXC() (TY, TC, TW, TX, TC) { return _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCWYX() (TY, TC, TW, TY, TX) { return _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCWYY() (TY, TC, TW, TY, TY) { return _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCWYZ() (TY, TC, TW, TY, TZ) { return _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCWYW() (TY, TC, TW, TY, TW) { return _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCWYA() (TY, TC, TW, TY, TA) { return _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCWYB() (TY, TC, TW, TY, TB) { return _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCWYC() (TY, TC, TW, TY, TC) { return _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCWZX() (TY, TC, TW, TZ, TX) { return _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCWZY() (TY, TC, TW, TZ, TY) { return _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCWZZ() (TY, TC, TW, TZ, TZ) { return _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCWZW() (TY, TC, TW, TZ, TW) { return _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCWZA() (TY, TC, TW, TZ, TA) { return _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCWZB() (TY, TC, TW, TZ, TB) { return _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCWZC() (TY, TC, TW, TZ, TC) { return _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCWWX() (TY, TC, TW, TW, TX) { return _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCWWY() (TY, TC, TW, TW, TY) { return _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCWWZ() (TY, TC, TW, TW, TZ) { return _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCWWW() (TY, TC, TW, TW, TW) { return _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCWWA() (TY, TC, TW, TW, TA) { return _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCWWB() (TY, TC, TW, TW, TB) { return _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCWWC() (TY, TC, TW, TW, TC) { return _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCWAX() (TY, TC, TW, TA, TX) { return _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCWAY() (TY, TC, TW, TA, TY) { return _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCWAZ() (TY, TC, TW, TA, TZ) { return _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCWAW() (TY, TC, TW, TA, TW) { return _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCWAA() (TY, TC, TW, TA, TA) { return _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCWAB() (TY, TC, TW, TA, TB) { return _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCWAC() (TY, TC, TW, TA, TC) { return _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCWBX() (TY, TC, TW, TB, TX) { return _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCWBY() (TY, TC, TW, TB, TY) { return _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCWBZ() (TY, TC, TW, TB, TZ) { return _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCWBW() (TY, TC, TW, TB, TW) { return _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCWBA() (TY, TC, TW, TB, TA) { return _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCWBB() (TY, TC, TW, TB, TB) { return _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCWBC() (TY, TC, TW, TB, TC) { return _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCWCX() (TY, TC, TW, TC, TX) { return _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCWCY() (TY, TC, TW, TC, TY) { return _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCWCZ() (TY, TC, TW, TC, TZ) { return _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCWCW() (TY, TC, TW, TC, TW) { return _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCWCA() (TY, TC, TW, TC, TA) { return _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCWCB() (TY, TC, TW, TC, TB) { return _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCWCC() (TY, TC, TW, TC, TC) { return _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCAXX() (TY, TC, TA, TX, TX) { return _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCAXY() (TY, TC, TA, TX, TY) { return _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCAXZ() (TY, TC, TA, TX, TZ) { return _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCAXW() (TY, TC, TA, TX, TW) { return _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCAXA() (TY, TC, TA, TX, TA) { return _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCAXB() (TY, TC, TA, TX, TB) { return _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCAXC() (TY, TC, TA, TX, TC) { return _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCAYX() (TY, TC, TA, TY, TX) { return _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCAYY() (TY, TC, TA, TY, TY) { return _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCAYZ() (TY, TC, TA, TY, TZ) { return _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCAYW() (TY, TC, TA, TY, TW) { return _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCAYA() (TY, TC, TA, TY, TA) { return _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCAYB() (TY, TC, TA, TY, TB) { return _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCAYC() (TY, TC, TA, TY, TC) { return _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCAZX() (TY, TC, TA, TZ, TX) { return _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCAZY() (TY, TC, TA, TZ, TY) { return _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCAZZ() (TY, TC, TA, TZ, TZ) { return _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCAZW() (TY, TC, TA, TZ, TW) { return _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCAZA() (TY, TC, TA, TZ, TA) { return _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCAZB() (TY, TC, TA, TZ, TB) { return _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCAZC() (TY, TC, TA, TZ, TC) { return _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCAWX() (TY, TC, TA, TW, TX) { return _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCAWY() (TY, TC, TA, TW, TY) { return _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCAWZ() (TY, TC, TA, TW, TZ) { return _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCAWW() (TY, TC, TA, TW, TW) { return _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCAWA() (TY, TC, TA, TW, TA) { return _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCAWB() (TY, TC, TA, TW, TB) { return _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCAWC() (TY, TC, TA, TW, TC) { return _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCAAX() (TY, TC, TA, TA, TX) { return _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCAAY() (TY, TC, TA, TA, TY) { return _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCAAZ() (TY, TC, TA, TA, TZ) { return _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCAAW() (TY, TC, TA, TA, TW) { return _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCAAA() (TY, TC, TA, TA, TA) { return _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCAAB() (TY, TC, TA, TA, TB) { return _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCAAC() (TY, TC, TA, TA, TC) { return _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCABX() (TY, TC, TA, TB, TX) { return _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCABY() (TY, TC, TA, TB, TY) { return _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCABZ() (TY, TC, TA, TB, TZ) { return _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCABW() (TY, TC, TA, TB, TW) { return _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCABA() (TY, TC, TA, TB, TA) { return _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCABB() (TY, TC, TA, TB, TB) { return _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCABC() (TY, TC, TA, TB, TC) { return _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCACX() (TY, TC, TA, TC, TX) { return _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCACY() (TY, TC, TA, TC, TY) { return _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCACZ() (TY, TC, TA, TC, TZ) { return _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCACW() (TY, TC, TA, TC, TW) { return _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCACA() (TY, TC, TA, TC, TA) { return _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCACB() (TY, TC, TA, TC, TB) { return _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCACC() (TY, TC, TA, TC, TC) { return _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCBXX() (TY, TC, TB, TX, TX) { return _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCBXY() (TY, TC, TB, TX, TY) { return _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCBXZ() (TY, TC, TB, TX, TZ) { return _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCBXW() (TY, TC, TB, TX, TW) { return _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCBXA() (TY, TC, TB, TX, TA) { return _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCBXB() (TY, TC, TB, TX, TB) { return _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCBXC() (TY, TC, TB, TX, TC) { return _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCBYX() (TY, TC, TB, TY, TX) { return _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCBYY() (TY, TC, TB, TY, TY) { return _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCBYZ() (TY, TC, TB, TY, TZ) { return _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCBYW() (TY, TC, TB, TY, TW) { return _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCBYA() (TY, TC, TB, TY, TA) { return _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCBYB() (TY, TC, TB, TY, TB) { return _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCBYC() (TY, TC, TB, TY, TC) { return _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCBZX() (TY, TC, TB, TZ, TX) { return _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCBZY() (TY, TC, TB, TZ, TY) { return _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCBZZ() (TY, TC, TB, TZ, TZ) { return _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCBZW() (TY, TC, TB, TZ, TW) { return _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCBZA() (TY, TC, TB, TZ, TA) { return _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCBZB() (TY, TC, TB, TZ, TB) { return _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCBZC() (TY, TC, TB, TZ, TC) { return _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCBWX() (TY, TC, TB, TW, TX) { return _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCBWY() (TY, TC, TB, TW, TY) { return _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCBWZ() (TY, TC, TB, TW, TZ) { return _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCBWW() (TY, TC, TB, TW, TW) { return _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCBWA() (TY, TC, TB, TW, TA) { return _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCBWB() (TY, TC, TB, TW, TB) { return _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCBWC() (TY, TC, TB, TW, TC) { return _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCBAX() (TY, TC, TB, TA, TX) { return _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCBAY() (TY, TC, TB, TA, TY) { return _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCBAZ() (TY, TC, TB, TA, TZ) { return _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCBAW() (TY, TC, TB, TA, TW) { return _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCBAA() (TY, TC, TB, TA, TA) { return _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCBAB() (TY, TC, TB, TA, TB) { return _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCBAC() (TY, TC, TB, TA, TC) { return _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCBBX() (TY, TC, TB, TB, TX) { return _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCBBY() (TY, TC, TB, TB, TY) { return _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCBBZ() (TY, TC, TB, TB, TZ) { return _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCBBW() (TY, TC, TB, TB, TW) { return _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCBBA() (TY, TC, TB, TB, TA) { return _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCBBB() (TY, TC, TB, TB, TB) { return _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCBBC() (TY, TC, TB, TB, TC) { return _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCBCX() (TY, TC, TB, TC, TX) { return _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCBCY() (TY, TC, TB, TC, TY) { return _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCBCZ() (TY, TC, TB, TC, TZ) { return _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCBCW() (TY, TC, TB, TC, TW) { return _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCBCA() (TY, TC, TB, TC, TA) { return _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCBCB() (TY, TC, TB, TC, TB) { return _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCBCC() (TY, TC, TB, TC, TC) { return _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCCXX() (TY, TC, TC, TX, TX) { return _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCCXY() (TY, TC, TC, TX, TY) { return _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCCXZ() (TY, TC, TC, TX, TZ) { return _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCCXW() (TY, TC, TC, TX, TW) { return _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCCXA() (TY, TC, TC, TX, TA) { return _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCCXB() (TY, TC, TC, TX, TB) { return _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCCXC() (TY, TC, TC, TX, TC) { return _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCCYX() (TY, TC, TC, TY, TX) { return _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCCYY() (TY, TC, TC, TY, TY) { return _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCCYZ() (TY, TC, TC, TY, TZ) { return _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCCYW() (TY, TC, TC, TY, TW) { return _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCCYA() (TY, TC, TC, TY, TA) { return _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCCYB() (TY, TC, TC, TY, TB) { return _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCCYC() (TY, TC, TC, TY, TC) { return _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCCZX() (TY, TC, TC, TZ, TX) { return _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCCZY() (TY, TC, TC, TZ, TY) { return _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCCZZ() (TY, TC, TC, TZ, TZ) { return _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCCZW() (TY, TC, TC, TZ, TW) { return _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCCZA() (TY, TC, TC, TZ, TA) { return _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCCZB() (TY, TC, TC, TZ, TB) { return _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCCZC() (TY, TC, TC, TZ, TC) { return _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCCWX() (TY, TC, TC, TW, TX) { return _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCCWY() (TY, TC, TC, TW, TY) { return _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCCWZ() (TY, TC, TC, TW, TZ) { return _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCCWW() (TY, TC, TC, TW, TW) { return _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCCWA() (TY, TC, TC, TW, TA) { return _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCCWB() (TY, TC, TC, TW, TB) { return _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCCWC() (TY, TC, TC, TW, TC) { return _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCCAX() (TY, TC, TC, TA, TX) { return _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCCAY() (TY, TC, TC, TA, TY) { return _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCCAZ() (TY, TC, TC, TA, TZ) { return _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCCAW() (TY, TC, TC, TA, TW) { return _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCCAA() (TY, TC, TC, TA, TA) { return _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCCAB() (TY, TC, TC, TA, TB) { return _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCCAC() (TY, TC, TC, TA, TC) { return _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCCBX() (TY, TC, TC, TB, TX) { return _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCCBY() (TY, TC, TC, TB, TY) { return _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCCBZ() (TY, TC, TC, TB, TZ) { return _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCCBW() (TY, TC, TC, TB, TW) { return _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCCBA() (TY, TC, TC, TB, TA) { return _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCCBB() (TY, TC, TC, TB, TB) { return _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCCBC() (TY, TC, TC, TB, TC) { return _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCCCX() (TY, TC, TC, TC, TX) { return _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCCCY() (TY, TC, TC, TC, TY) { return _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCCCZ() (TY, TC, TC, TC, TZ) { return _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCCCW() (TY, TC, TC, TC, TW) { return _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCCCA() (TY, TC, TC, TC, TA) { return _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCCCB() (TY, TC, TC, TC, TB) { return _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) YCCCC() (TY, TC, TC, TC, TC) { return _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXXXX() (TZ, TX, TX, TX, TX) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXXXY() (TZ, TX, TX, TX, TY) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXXXZ() (TZ, TX, TX, TX, TZ) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXXXW() (TZ, TX, TX, TX, TW) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXXXA() (TZ, TX, TX, TX, TA) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXXXB() (TZ, TX, TX, TX, TB) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXXXC() (TZ, TX, TX, TX, TC) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXXYX() (TZ, TX, TX, TY, TX) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXXYY() (TZ, TX, TX, TY, TY) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXXYZ() (TZ, TX, TX, TY, TZ) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXXYW() (TZ, TX, TX, TY, TW) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXXYA() (TZ, TX, TX, TY, TA) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXXYB() (TZ, TX, TX, TY, TB) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXXYC() (TZ, TX, TX, TY, TC) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXXZX() (TZ, TX, TX, TZ, TX) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXXZY() (TZ, TX, TX, TZ, TY) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXXZZ() (TZ, TX, TX, TZ, TZ) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXXZW() (TZ, TX, TX, TZ, TW) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXXZA() (TZ, TX, TX, TZ, TA) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXXZB() (TZ, TX, TX, TZ, TB) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXXZC() (TZ, TX, TX, TZ, TC) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXXWX() (TZ, TX, TX, TW, TX) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXXWY() (TZ, TX, TX, TW, TY) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXXWZ() (TZ, TX, TX, TW, TZ) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXXWW() (TZ, TX, TX, TW, TW) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXXWA() (TZ, TX, TX, TW, TA) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXXWB() (TZ, TX, TX, TW, TB) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXXWC() (TZ, TX, TX, TW, TC) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXXAX() (TZ, TX, TX, TA, TX) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXXAY() (TZ, TX, TX, TA, TY) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXXAZ() (TZ, TX, TX, TA, TZ) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXXAW() (TZ, TX, TX, TA, TW) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXXAA() (TZ, TX, TX, TA, TA) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXXAB() (TZ, TX, TX, TA, TB) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXXAC() (TZ, TX, TX, TA, TC) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXXBX() (TZ, TX, TX, TB, TX) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXXBY() (TZ, TX, TX, TB, TY) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXXBZ() (TZ, TX, TX, TB, TZ) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXXBW() (TZ, TX, TX, TB, TW) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXXBA() (TZ, TX, TX, TB, TA) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXXBB() (TZ, TX, TX, TB, TB) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXXBC() (TZ, TX, TX, TB, TC) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXXCX() (TZ, TX, TX, TC, TX) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXXCY() (TZ, TX, TX, TC, TY) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXXCZ() (TZ, TX, TX, TC, TZ) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXXCW() (TZ, TX, TX, TC, TW) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXXCA() (TZ, TX, TX, TC, TA) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXXCB() (TZ, TX, TX, TC, TB) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXXCC() (TZ, TX, TX, TC, TC) { return _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXYXX() (TZ, TX, TY, TX, TX) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXYXY() (TZ, TX, TY, TX, TY) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXYXZ() (TZ, TX, TY, TX, TZ) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXYXW() (TZ, TX, TY, TX, TW) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXYXA() (TZ, TX, TY, TX, TA) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXYXB() (TZ, TX, TY, TX, TB) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXYXC() (TZ, TX, TY, TX, TC) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXYYX() (TZ, TX, TY, TY, TX) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXYYY() (TZ, TX, TY, TY, TY) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXYYZ() (TZ, TX, TY, TY, TZ) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXYYW() (TZ, TX, TY, TY, TW) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXYYA() (TZ, TX, TY, TY, TA) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXYYB() (TZ, TX, TY, TY, TB) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXYYC() (TZ, TX, TY, TY, TC) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXYZX() (TZ, TX, TY, TZ, TX) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXYZY() (TZ, TX, TY, TZ, TY) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXYZZ() (TZ, TX, TY, TZ, TZ) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXYZW() (TZ, TX, TY, TZ, TW) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXYZA() (TZ, TX, TY, TZ, TA) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXYZB() (TZ, TX, TY, TZ, TB) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXYZC() (TZ, TX, TY, TZ, TC) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXYWX() (TZ, TX, TY, TW, TX) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXYWY() (TZ, TX, TY, TW, TY) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXYWZ() (TZ, TX, TY, TW, TZ) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXYWW() (TZ, TX, TY, TW, TW) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXYWA() (TZ, TX, TY, TW, TA) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXYWB() (TZ, TX, TY, TW, TB) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXYWC() (TZ, TX, TY, TW, TC) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXYAX() (TZ, TX, TY, TA, TX) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXYAY() (TZ, TX, TY, TA, TY) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXYAZ() (TZ, TX, TY, TA, TZ) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXYAW() (TZ, TX, TY, TA, TW) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXYAA() (TZ, TX, TY, TA, TA) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXYAB() (TZ, TX, TY, TA, TB) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXYAC() (TZ, TX, TY, TA, TC) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXYBX() (TZ, TX, TY, TB, TX) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXYBY() (TZ, TX, TY, TB, TY) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXYBZ() (TZ, TX, TY, TB, TZ) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXYBW() (TZ, TX, TY, TB, TW) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXYBA() (TZ, TX, TY, TB, TA) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXYBB() (TZ, TX, TY, TB, TB) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXYBC() (TZ, TX, TY, TB, TC) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXYCX() (TZ, TX, TY, TC, TX) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXYCY() (TZ, TX, TY, TC, TY) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXYCZ() (TZ, TX, TY, TC, TZ) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXYCW() (TZ, TX, TY, TC, TW) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXYCA() (TZ, TX, TY, TC, TA) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXYCB() (TZ, TX, TY, TC, TB) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXYCC() (TZ, TX, TY, TC, TC) { return _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXZXX() (TZ, TX, TZ, TX, TX) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXZXY() (TZ, TX, TZ, TX, TY) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXZXZ() (TZ, TX, TZ, TX, TZ) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXZXW() (TZ, TX, TZ, TX, TW) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXZXA() (TZ, TX, TZ, TX, TA) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXZXB() (TZ, TX, TZ, TX, TB) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXZXC() (TZ, TX, TZ, TX, TC) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXZYX() (TZ, TX, TZ, TY, TX) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXZYY() (TZ, TX, TZ, TY, TY) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXZYZ() (TZ, TX, TZ, TY, TZ) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXZYW() (TZ, TX, TZ, TY, TW) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXZYA() (TZ, TX, TZ, TY, TA) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXZYB() (TZ, TX, TZ, TY, TB) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXZYC() (TZ, TX, TZ, TY, TC) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXZZX() (TZ, TX, TZ, TZ, TX) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXZZY() (TZ, TX, TZ, TZ, TY) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXZZZ() (TZ, TX, TZ, TZ, TZ) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXZZW() (TZ, TX, TZ, TZ, TW) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXZZA() (TZ, TX, TZ, TZ, TA) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXZZB() (TZ, TX, TZ, TZ, TB) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXZZC() (TZ, TX, TZ, TZ, TC) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXZWX() (TZ, TX, TZ, TW, TX) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXZWY() (TZ, TX, TZ, TW, TY) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXZWZ() (TZ, TX, TZ, TW, TZ) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXZWW() (TZ, TX, TZ, TW, TW) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXZWA() (TZ, TX, TZ, TW, TA) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXZWB() (TZ, TX, TZ, TW, TB) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXZWC() (TZ, TX, TZ, TW, TC) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXZAX() (TZ, TX, TZ, TA, TX) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXZAY() (TZ, TX, TZ, TA, TY) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXZAZ() (TZ, TX, TZ, TA, TZ) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXZAW() (TZ, TX, TZ, TA, TW) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXZAA() (TZ, TX, TZ, TA, TA) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXZAB() (TZ, TX, TZ, TA, TB) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXZAC() (TZ, TX, TZ, TA, TC) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXZBX() (TZ, TX, TZ, TB, TX) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXZBY() (TZ, TX, TZ, TB, TY) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXZBZ() (TZ, TX, TZ, TB, TZ) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXZBW() (TZ, TX, TZ, TB, TW) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXZBA() (TZ, TX, TZ, TB, TA) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXZBB() (TZ, TX, TZ, TB, TB) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXZBC() (TZ, TX, TZ, TB, TC) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXZCX() (TZ, TX, TZ, TC, TX) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXZCY() (TZ, TX, TZ, TC, TY) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXZCZ() (TZ, TX, TZ, TC, TZ) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXZCW() (TZ, TX, TZ, TC, TW) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXZCA() (TZ, TX, TZ, TC, TA) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXZCB() (TZ, TX, TZ, TC, TB) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXZCC() (TZ, TX, TZ, TC, TC) { return _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXWXX() (TZ, TX, TW, TX, TX) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXWXY() (TZ, TX, TW, TX, TY) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXWXZ() (TZ, TX, TW, TX, TZ) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXWXW() (TZ, TX, TW, TX, TW) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXWXA() (TZ, TX, TW, TX, TA) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXWXB() (TZ, TX, TW, TX, TB) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXWXC() (TZ, TX, TW, TX, TC) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXWYX() (TZ, TX, TW, TY, TX) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXWYY() (TZ, TX, TW, TY, TY) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXWYZ() (TZ, TX, TW, TY, TZ) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXWYW() (TZ, TX, TW, TY, TW) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXWYA() (TZ, TX, TW, TY, TA) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXWYB() (TZ, TX, TW, TY, TB) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXWYC() (TZ, TX, TW, TY, TC) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXWZX() (TZ, TX, TW, TZ, TX) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXWZY() (TZ, TX, TW, TZ, TY) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXWZZ() (TZ, TX, TW, TZ, TZ) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXWZW() (TZ, TX, TW, TZ, TW) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXWZA() (TZ, TX, TW, TZ, TA) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXWZB() (TZ, TX, TW, TZ, TB) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXWZC() (TZ, TX, TW, TZ, TC) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXWWX() (TZ, TX, TW, TW, TX) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXWWY() (TZ, TX, TW, TW, TY) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXWWZ() (TZ, TX, TW, TW, TZ) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXWWW() (TZ, TX, TW, TW, TW) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXWWA() (TZ, TX, TW, TW, TA) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXWWB() (TZ, TX, TW, TW, TB) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXWWC() (TZ, TX, TW, TW, TC) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXWAX() (TZ, TX, TW, TA, TX) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXWAY() (TZ, TX, TW, TA, TY) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXWAZ() (TZ, TX, TW, TA, TZ) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXWAW() (TZ, TX, TW, TA, TW) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXWAA() (TZ, TX, TW, TA, TA) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXWAB() (TZ, TX, TW, TA, TB) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXWAC() (TZ, TX, TW, TA, TC) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXWBX() (TZ, TX, TW, TB, TX) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXWBY() (TZ, TX, TW, TB, TY) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXWBZ() (TZ, TX, TW, TB, TZ) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXWBW() (TZ, TX, TW, TB, TW) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXWBA() (TZ, TX, TW, TB, TA) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXWBB() (TZ, TX, TW, TB, TB) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXWBC() (TZ, TX, TW, TB, TC) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXWCX() (TZ, TX, TW, TC, TX) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXWCY() (TZ, TX, TW, TC, TY) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXWCZ() (TZ, TX, TW, TC, TZ) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXWCW() (TZ, TX, TW, TC, TW) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXWCA() (TZ, TX, TW, TC, TA) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXWCB() (TZ, TX, TW, TC, TB) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXWCC() (TZ, TX, TW, TC, TC) { return _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXAXX() (TZ, TX, TA, TX, TX) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXAXY() (TZ, TX, TA, TX, TY) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXAXZ() (TZ, TX, TA, TX, TZ) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXAXW() (TZ, TX, TA, TX, TW) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXAXA() (TZ, TX, TA, TX, TA) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXAXB() (TZ, TX, TA, TX, TB) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXAXC() (TZ, TX, TA, TX, TC) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXAYX() (TZ, TX, TA, TY, TX) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXAYY() (TZ, TX, TA, TY, TY) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXAYZ() (TZ, TX, TA, TY, TZ) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXAYW() (TZ, TX, TA, TY, TW) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXAYA() (TZ, TX, TA, TY, TA) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXAYB() (TZ, TX, TA, TY, TB) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXAYC() (TZ, TX, TA, TY, TC) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXAZX() (TZ, TX, TA, TZ, TX) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXAZY() (TZ, TX, TA, TZ, TY) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXAZZ() (TZ, TX, TA, TZ, TZ) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXAZW() (TZ, TX, TA, TZ, TW) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXAZA() (TZ, TX, TA, TZ, TA) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXAZB() (TZ, TX, TA, TZ, TB) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXAZC() (TZ, TX, TA, TZ, TC) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXAWX() (TZ, TX, TA, TW, TX) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXAWY() (TZ, TX, TA, TW, TY) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXAWZ() (TZ, TX, TA, TW, TZ) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXAWW() (TZ, TX, TA, TW, TW) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXAWA() (TZ, TX, TA, TW, TA) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXAWB() (TZ, TX, TA, TW, TB) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXAWC() (TZ, TX, TA, TW, TC) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXAAX() (TZ, TX, TA, TA, TX) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXAAY() (TZ, TX, TA, TA, TY) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXAAZ() (TZ, TX, TA, TA, TZ) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXAAW() (TZ, TX, TA, TA, TW) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXAAA() (TZ, TX, TA, TA, TA) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXAAB() (TZ, TX, TA, TA, TB) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXAAC() (TZ, TX, TA, TA, TC) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXABX() (TZ, TX, TA, TB, TX) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXABY() (TZ, TX, TA, TB, TY) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXABZ() (TZ, TX, TA, TB, TZ) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXABW() (TZ, TX, TA, TB, TW) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXABA() (TZ, TX, TA, TB, TA) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXABB() (TZ, TX, TA, TB, TB) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXABC() (TZ, TX, TA, TB, TC) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXACX() (TZ, TX, TA, TC, TX) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXACY() (TZ, TX, TA, TC, TY) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXACZ() (TZ, TX, TA, TC, TZ) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXACW() (TZ, TX, TA, TC, TW) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXACA() (TZ, TX, TA, TC, TA) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXACB() (TZ, TX, TA, TC, TB) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXACC() (TZ, TX, TA, TC, TC) { return _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXBXX() (TZ, TX, TB, TX, TX) { return _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXBXY() (TZ, TX, TB, TX, TY) { return _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXBXZ() (TZ, TX, TB, TX, TZ) { return _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXBXW() (TZ, TX, TB, TX, TW) { return _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXBXA() (TZ, TX, TB, TX, TA) { return _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXBXB() (TZ, TX, TB, TX, TB) { return _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXBXC() (TZ, TX, TB, TX, TC) { return _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXBYX() (TZ, TX, TB, TY, TX) { return _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXBYY() (TZ, TX, TB, TY, TY) { return _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXBYZ() (TZ, TX, TB, TY, TZ) { return _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXBYW() (TZ, TX, TB, TY, TW) { return _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXBYA() (TZ, TX, TB, TY, TA) { return _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXBYB() (TZ, TX, TB, TY, TB) { return _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXBYC() (TZ, TX, TB, TY, TC) { return _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXBZX() (TZ, TX, TB, TZ, TX) { return _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXBZY() (TZ, TX, TB, TZ, TY) { return _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXBZZ() (TZ, TX, TB, TZ, TZ) { return _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXBZW() (TZ, TX, TB, TZ, TW) { return _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXBZA() (TZ, TX, TB, TZ, TA) { return _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXBZB() (TZ, TX, TB, TZ, TB) { return _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXBZC() (TZ, TX, TB, TZ, TC) { return _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXBWX() (TZ, TX, TB, TW, TX) { return _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXBWY() (TZ, TX, TB, TW, TY) { return _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXBWZ() (TZ, TX, TB, TW, TZ) { return _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXBWW() (TZ, TX, TB, TW, TW) { return _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXBWA() (TZ, TX, TB, TW, TA) { return _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXBWB() (TZ, TX, TB, TW, TB) { return _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXBWC() (TZ, TX, TB, TW, TC) { return _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXBAX() (TZ, TX, TB, TA, TX) { return _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXBAY() (TZ, TX, TB, TA, TY) { return _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXBAZ() (TZ, TX, TB, TA, TZ) { return _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXBAW() (TZ, TX, TB, TA, TW) { return _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXBAA() (TZ, TX, TB, TA, TA) { return _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXBAB() (TZ, TX, TB, TA, TB) { return _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXBAC() (TZ, TX, TB, TA, TC) { return _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXBBX() (TZ, TX, TB, TB, TX) { return _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXBBY() (TZ, TX, TB, TB, TY) { return _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXBBZ() (TZ, TX, TB, TB, TZ) { return _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXBBW() (TZ, TX, TB, TB, TW) { return _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXBBA() (TZ, TX, TB, TB, TA) { return _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXBBB() (TZ, TX, TB, TB, TB) { return _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXBBC() (TZ, TX, TB, TB, TC) { return _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXBCX() (TZ, TX, TB, TC, TX) { return _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXBCY() (TZ, TX, TB, TC, TY) { return _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXBCZ() (TZ, TX, TB, TC, TZ) { return _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXBCW() (TZ, TX, TB, TC, TW) { return _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXBCA() (TZ, TX, TB, TC, TA) { return _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXBCB() (TZ, TX, TB, TC, TB) { return _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXBCC() (TZ, TX, TB, TC, TC) { return _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXCXX() (TZ, TX, TC, TX, TX) { return _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXCXY() (TZ, TX, TC, TX, TY) { return _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXCXZ() (TZ, TX, TC, TX, TZ) { return _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXCXW() (TZ, TX, TC, TX, TW) { return _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXCXA() (TZ, TX, TC, TX, TA) { return _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXCXB() (TZ, TX, TC, TX, TB) { return _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXCXC() (TZ, TX, TC, TX, TC) { return _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXCYX() (TZ, TX, TC, TY, TX) { return _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXCYY() (TZ, TX, TC, TY, TY) { return _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXCYZ() (TZ, TX, TC, TY, TZ) { return _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXCYW() (TZ, TX, TC, TY, TW) { return _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXCYA() (TZ, TX, TC, TY, TA) { return _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXCYB() (TZ, TX, TC, TY, TB) { return _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXCYC() (TZ, TX, TC, TY, TC) { return _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXCZX() (TZ, TX, TC, TZ, TX) { return _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXCZY() (TZ, TX, TC, TZ, TY) { return _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXCZZ() (TZ, TX, TC, TZ, TZ) { return _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXCZW() (TZ, TX, TC, TZ, TW) { return _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXCZA() (TZ, TX, TC, TZ, TA) { return _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXCZB() (TZ, TX, TC, TZ, TB) { return _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXCZC() (TZ, TX, TC, TZ, TC) { return _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXCWX() (TZ, TX, TC, TW, TX) { return _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXCWY() (TZ, TX, TC, TW, TY) { return _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXCWZ() (TZ, TX, TC, TW, TZ) { return _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXCWW() (TZ, TX, TC, TW, TW) { return _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXCWA() (TZ, TX, TC, TW, TA) { return _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXCWB() (TZ, TX, TC, TW, TB) { return _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXCWC() (TZ, TX, TC, TW, TC) { return _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXCAX() (TZ, TX, TC, TA, TX) { return _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXCAY() (TZ, TX, TC, TA, TY) { return _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXCAZ() (TZ, TX, TC, TA, TZ) { return _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXCAW() (TZ, TX, TC, TA, TW) { return _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXCAA() (TZ, TX, TC, TA, TA) { return _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXCAB() (TZ, TX, TC, TA, TB) { return _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXCAC() (TZ, TX, TC, TA, TC) { return _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXCBX() (TZ, TX, TC, TB, TX) { return _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXCBY() (TZ, TX, TC, TB, TY) { return _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXCBZ() (TZ, TX, TC, TB, TZ) { return _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXCBW() (TZ, TX, TC, TB, TW) { return _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXCBA() (TZ, TX, TC, TB, TA) { return _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXCBB() (TZ, TX, TC, TB, TB) { return _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXCBC() (TZ, TX, TC, TB, TC) { return _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXCCX() (TZ, TX, TC, TC, TX) { return _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXCCY() (TZ, TX, TC, TC, TY) { return _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXCCZ() (TZ, TX, TC, TC, TZ) { return _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXCCW() (TZ, TX, TC, TC, TW) { return _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXCCA() (TZ, TX, TC, TC, TA) { return _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXCCB() (TZ, TX, TC, TC, TB) { return _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZXCCC() (TZ, TX, TC, TC, TC) { return _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYXXX() (TZ, TY, TX, TX, TX) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYXXY() (TZ, TY, TX, TX, TY) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYXXZ() (TZ, TY, TX, TX, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYXXW() (TZ, TY, TX, TX, TW) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYXXA() (TZ, TY, TX, TX, TA) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYXXB() (TZ, TY, TX, TX, TB) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYXXC() (TZ, TY, TX, TX, TC) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYXYX() (TZ, TY, TX, TY, TX) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYXYY() (TZ, TY, TX, TY, TY) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYXYZ() (TZ, TY, TX, TY, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYXYW() (TZ, TY, TX, TY, TW) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYXYA() (TZ, TY, TX, TY, TA) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYXYB() (TZ, TY, TX, TY, TB) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYXYC() (TZ, TY, TX, TY, TC) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYXZX() (TZ, TY, TX, TZ, TX) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYXZY() (TZ, TY, TX, TZ, TY) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYXZZ() (TZ, TY, TX, TZ, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYXZW() (TZ, TY, TX, TZ, TW) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYXZA() (TZ, TY, TX, TZ, TA) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYXZB() (TZ, TY, TX, TZ, TB) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYXZC() (TZ, TY, TX, TZ, TC) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYXWX() (TZ, TY, TX, TW, TX) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYXWY() (TZ, TY, TX, TW, TY) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYXWZ() (TZ, TY, TX, TW, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYXWW() (TZ, TY, TX, TW, TW) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYXWA() (TZ, TY, TX, TW, TA) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYXWB() (TZ, TY, TX, TW, TB) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYXWC() (TZ, TY, TX, TW, TC) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYXAX() (TZ, TY, TX, TA, TX) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYXAY() (TZ, TY, TX, TA, TY) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYXAZ() (TZ, TY, TX, TA, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYXAW() (TZ, TY, TX, TA, TW) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYXAA() (TZ, TY, TX, TA, TA) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYXAB() (TZ, TY, TX, TA, TB) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYXAC() (TZ, TY, TX, TA, TC) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYXBX() (TZ, TY, TX, TB, TX) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYXBY() (TZ, TY, TX, TB, TY) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYXBZ() (TZ, TY, TX, TB, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYXBW() (TZ, TY, TX, TB, TW) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYXBA() (TZ, TY, TX, TB, TA) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYXBB() (TZ, TY, TX, TB, TB) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYXBC() (TZ, TY, TX, TB, TC) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYXCX() (TZ, TY, TX, TC, TX) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYXCY() (TZ, TY, TX, TC, TY) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYXCZ() (TZ, TY, TX, TC, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYXCW() (TZ, TY, TX, TC, TW) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYXCA() (TZ, TY, TX, TC, TA) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYXCB() (TZ, TY, TX, TC, TB) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYXCC() (TZ, TY, TX, TC, TC) { return _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYYXX() (TZ, TY, TY, TX, TX) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYYXY() (TZ, TY, TY, TX, TY) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYYXZ() (TZ, TY, TY, TX, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYYXW() (TZ, TY, TY, TX, TW) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYYXA() (TZ, TY, TY, TX, TA) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYYXB() (TZ, TY, TY, TX, TB) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYYXC() (TZ, TY, TY, TX, TC) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYYYX() (TZ, TY, TY, TY, TX) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYYYY() (TZ, TY, TY, TY, TY) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYYYZ() (TZ, TY, TY, TY, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYYYW() (TZ, TY, TY, TY, TW) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYYYA() (TZ, TY, TY, TY, TA) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYYYB() (TZ, TY, TY, TY, TB) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYYYC() (TZ, TY, TY, TY, TC) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYYZX() (TZ, TY, TY, TZ, TX) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYYZY() (TZ, TY, TY, TZ, TY) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYYZZ() (TZ, TY, TY, TZ, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYYZW() (TZ, TY, TY, TZ, TW) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYYZA() (TZ, TY, TY, TZ, TA) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYYZB() (TZ, TY, TY, TZ, TB) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYYZC() (TZ, TY, TY, TZ, TC) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYYWX() (TZ, TY, TY, TW, TX) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYYWY() (TZ, TY, TY, TW, TY) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYYWZ() (TZ, TY, TY, TW, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYYWW() (TZ, TY, TY, TW, TW) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYYWA() (TZ, TY, TY, TW, TA) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYYWB() (TZ, TY, TY, TW, TB) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYYWC() (TZ, TY, TY, TW, TC) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYYAX() (TZ, TY, TY, TA, TX) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYYAY() (TZ, TY, TY, TA, TY) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYYAZ() (TZ, TY, TY, TA, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYYAW() (TZ, TY, TY, TA, TW) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYYAA() (TZ, TY, TY, TA, TA) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYYAB() (TZ, TY, TY, TA, TB) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYYAC() (TZ, TY, TY, TA, TC) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYYBX() (TZ, TY, TY, TB, TX) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYYBY() (TZ, TY, TY, TB, TY) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYYBZ() (TZ, TY, TY, TB, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYYBW() (TZ, TY, TY, TB, TW) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYYBA() (TZ, TY, TY, TB, TA) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYYBB() (TZ, TY, TY, TB, TB) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYYBC() (TZ, TY, TY, TB, TC) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYYCX() (TZ, TY, TY, TC, TX) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYYCY() (TZ, TY, TY, TC, TY) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYYCZ() (TZ, TY, TY, TC, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYYCW() (TZ, TY, TY, TC, TW) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYYCA() (TZ, TY, TY, TC, TA) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYYCB() (TZ, TY, TY, TC, TB) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYYCC() (TZ, TY, TY, TC, TC) { return _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYZXX() (TZ, TY, TZ, TX, TX) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYZXY() (TZ, TY, TZ, TX, TY) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYZXZ() (TZ, TY, TZ, TX, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYZXW() (TZ, TY, TZ, TX, TW) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYZXA() (TZ, TY, TZ, TX, TA) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYZXB() (TZ, TY, TZ, TX, TB) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYZXC() (TZ, TY, TZ, TX, TC) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYZYX() (TZ, TY, TZ, TY, TX) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYZYY() (TZ, TY, TZ, TY, TY) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYZYZ() (TZ, TY, TZ, TY, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYZYW() (TZ, TY, TZ, TY, TW) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYZYA() (TZ, TY, TZ, TY, TA) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYZYB() (TZ, TY, TZ, TY, TB) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYZYC() (TZ, TY, TZ, TY, TC) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYZZX() (TZ, TY, TZ, TZ, TX) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYZZY() (TZ, TY, TZ, TZ, TY) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYZZZ() (TZ, TY, TZ, TZ, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYZZW() (TZ, TY, TZ, TZ, TW) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYZZA() (TZ, TY, TZ, TZ, TA) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYZZB() (TZ, TY, TZ, TZ, TB) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYZZC() (TZ, TY, TZ, TZ, TC) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYZWX() (TZ, TY, TZ, TW, TX) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYZWY() (TZ, TY, TZ, TW, TY) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYZWZ() (TZ, TY, TZ, TW, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYZWW() (TZ, TY, TZ, TW, TW) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYZWA() (TZ, TY, TZ, TW, TA) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYZWB() (TZ, TY, TZ, TW, TB) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYZWC() (TZ, TY, TZ, TW, TC) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYZAX() (TZ, TY, TZ, TA, TX) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYZAY() (TZ, TY, TZ, TA, TY) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYZAZ() (TZ, TY, TZ, TA, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYZAW() (TZ, TY, TZ, TA, TW) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYZAA() (TZ, TY, TZ, TA, TA) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYZAB() (TZ, TY, TZ, TA, TB) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYZAC() (TZ, TY, TZ, TA, TC) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYZBX() (TZ, TY, TZ, TB, TX) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYZBY() (TZ, TY, TZ, TB, TY) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYZBZ() (TZ, TY, TZ, TB, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYZBW() (TZ, TY, TZ, TB, TW) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYZBA() (TZ, TY, TZ, TB, TA) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYZBB() (TZ, TY, TZ, TB, TB) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYZBC() (TZ, TY, TZ, TB, TC) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYZCX() (TZ, TY, TZ, TC, TX) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYZCY() (TZ, TY, TZ, TC, TY) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYZCZ() (TZ, TY, TZ, TC, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYZCW() (TZ, TY, TZ, TC, TW) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYZCA() (TZ, TY, TZ, TC, TA) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYZCB() (TZ, TY, TZ, TC, TB) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYZCC() (TZ, TY, TZ, TC, TC) { return _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYWXX() (TZ, TY, TW, TX, TX) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYWXY() (TZ, TY, TW, TX, TY) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYWXZ() (TZ, TY, TW, TX, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYWXW() (TZ, TY, TW, TX, TW) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYWXA() (TZ, TY, TW, TX, TA) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYWXB() (TZ, TY, TW, TX, TB) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYWXC() (TZ, TY, TW, TX, TC) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYWYX() (TZ, TY, TW, TY, TX) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYWYY() (TZ, TY, TW, TY, TY) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYWYZ() (TZ, TY, TW, TY, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYWYW() (TZ, TY, TW, TY, TW) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYWYA() (TZ, TY, TW, TY, TA) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYWYB() (TZ, TY, TW, TY, TB) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYWYC() (TZ, TY, TW, TY, TC) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYWZX() (TZ, TY, TW, TZ, TX) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYWZY() (TZ, TY, TW, TZ, TY) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYWZZ() (TZ, TY, TW, TZ, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYWZW() (TZ, TY, TW, TZ, TW) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYWZA() (TZ, TY, TW, TZ, TA) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYWZB() (TZ, TY, TW, TZ, TB) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYWZC() (TZ, TY, TW, TZ, TC) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYWWX() (TZ, TY, TW, TW, TX) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYWWY() (TZ, TY, TW, TW, TY) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYWWZ() (TZ, TY, TW, TW, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYWWW() (TZ, TY, TW, TW, TW) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYWWA() (TZ, TY, TW, TW, TA) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYWWB() (TZ, TY, TW, TW, TB) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYWWC() (TZ, TY, TW, TW, TC) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYWAX() (TZ, TY, TW, TA, TX) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYWAY() (TZ, TY, TW, TA, TY) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYWAZ() (TZ, TY, TW, TA, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYWAW() (TZ, TY, TW, TA, TW) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYWAA() (TZ, TY, TW, TA, TA) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYWAB() (TZ, TY, TW, TA, TB) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYWAC() (TZ, TY, TW, TA, TC) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYWBX() (TZ, TY, TW, TB, TX) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYWBY() (TZ, TY, TW, TB, TY) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYWBZ() (TZ, TY, TW, TB, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYWBW() (TZ, TY, TW, TB, TW) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYWBA() (TZ, TY, TW, TB, TA) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYWBB() (TZ, TY, TW, TB, TB) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYWBC() (TZ, TY, TW, TB, TC) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYWCX() (TZ, TY, TW, TC, TX) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYWCY() (TZ, TY, TW, TC, TY) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYWCZ() (TZ, TY, TW, TC, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYWCW() (TZ, TY, TW, TC, TW) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYWCA() (TZ, TY, TW, TC, TA) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYWCB() (TZ, TY, TW, TC, TB) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYWCC() (TZ, TY, TW, TC, TC) { return _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYAXX() (TZ, TY, TA, TX, TX) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYAXY() (TZ, TY, TA, TX, TY) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYAXZ() (TZ, TY, TA, TX, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYAXW() (TZ, TY, TA, TX, TW) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYAXA() (TZ, TY, TA, TX, TA) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYAXB() (TZ, TY, TA, TX, TB) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYAXC() (TZ, TY, TA, TX, TC) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYAYX() (TZ, TY, TA, TY, TX) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYAYY() (TZ, TY, TA, TY, TY) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYAYZ() (TZ, TY, TA, TY, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYAYW() (TZ, TY, TA, TY, TW) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYAYA() (TZ, TY, TA, TY, TA) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYAYB() (TZ, TY, TA, TY, TB) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYAYC() (TZ, TY, TA, TY, TC) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYAZX() (TZ, TY, TA, TZ, TX) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYAZY() (TZ, TY, TA, TZ, TY) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYAZZ() (TZ, TY, TA, TZ, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYAZW() (TZ, TY, TA, TZ, TW) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYAZA() (TZ, TY, TA, TZ, TA) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYAZB() (TZ, TY, TA, TZ, TB) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYAZC() (TZ, TY, TA, TZ, TC) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYAWX() (TZ, TY, TA, TW, TX) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYAWY() (TZ, TY, TA, TW, TY) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYAWZ() (TZ, TY, TA, TW, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYAWW() (TZ, TY, TA, TW, TW) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYAWA() (TZ, TY, TA, TW, TA) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYAWB() (TZ, TY, TA, TW, TB) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYAWC() (TZ, TY, TA, TW, TC) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYAAX() (TZ, TY, TA, TA, TX) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYAAY() (TZ, TY, TA, TA, TY) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYAAZ() (TZ, TY, TA, TA, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYAAW() (TZ, TY, TA, TA, TW) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYAAA() (TZ, TY, TA, TA, TA) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYAAB() (TZ, TY, TA, TA, TB) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYAAC() (TZ, TY, TA, TA, TC) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYABX() (TZ, TY, TA, TB, TX) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYABY() (TZ, TY, TA, TB, TY) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYABZ() (TZ, TY, TA, TB, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYABW() (TZ, TY, TA, TB, TW) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYABA() (TZ, TY, TA, TB, TA) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYABB() (TZ, TY, TA, TB, TB) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYABC() (TZ, TY, TA, TB, TC) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYACX() (TZ, TY, TA, TC, TX) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYACY() (TZ, TY, TA, TC, TY) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYACZ() (TZ, TY, TA, TC, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYACW() (TZ, TY, TA, TC, TW) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYACA() (TZ, TY, TA, TC, TA) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYACB() (TZ, TY, TA, TC, TB) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYACC() (TZ, TY, TA, TC, TC) { return _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYBXX() (TZ, TY, TB, TX, TX) { return _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYBXY() (TZ, TY, TB, TX, TY) { return _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYBXZ() (TZ, TY, TB, TX, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYBXW() (TZ, TY, TB, TX, TW) { return _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYBXA() (TZ, TY, TB, TX, TA) { return _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYBXB() (TZ, TY, TB, TX, TB) { return _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYBXC() (TZ, TY, TB, TX, TC) { return _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYBYX() (TZ, TY, TB, TY, TX) { return _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYBYY() (TZ, TY, TB, TY, TY) { return _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYBYZ() (TZ, TY, TB, TY, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYBYW() (TZ, TY, TB, TY, TW) { return _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYBYA() (TZ, TY, TB, TY, TA) { return _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYBYB() (TZ, TY, TB, TY, TB) { return _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYBYC() (TZ, TY, TB, TY, TC) { return _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYBZX() (TZ, TY, TB, TZ, TX) { return _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYBZY() (TZ, TY, TB, TZ, TY) { return _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYBZZ() (TZ, TY, TB, TZ, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYBZW() (TZ, TY, TB, TZ, TW) { return _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYBZA() (TZ, TY, TB, TZ, TA) { return _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYBZB() (TZ, TY, TB, TZ, TB) { return _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYBZC() (TZ, TY, TB, TZ, TC) { return _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYBWX() (TZ, TY, TB, TW, TX) { return _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYBWY() (TZ, TY, TB, TW, TY) { return _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYBWZ() (TZ, TY, TB, TW, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYBWW() (TZ, TY, TB, TW, TW) { return _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYBWA() (TZ, TY, TB, TW, TA) { return _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYBWB() (TZ, TY, TB, TW, TB) { return _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYBWC() (TZ, TY, TB, TW, TC) { return _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYBAX() (TZ, TY, TB, TA, TX) { return _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYBAY() (TZ, TY, TB, TA, TY) { return _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYBAZ() (TZ, TY, TB, TA, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYBAW() (TZ, TY, TB, TA, TW) { return _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYBAA() (TZ, TY, TB, TA, TA) { return _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYBAB() (TZ, TY, TB, TA, TB) { return _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYBAC() (TZ, TY, TB, TA, TC) { return _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYBBX() (TZ, TY, TB, TB, TX) { return _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYBBY() (TZ, TY, TB, TB, TY) { return _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYBBZ() (TZ, TY, TB, TB, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYBBW() (TZ, TY, TB, TB, TW) { return _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYBBA() (TZ, TY, TB, TB, TA) { return _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYBBB() (TZ, TY, TB, TB, TB) { return _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYBBC() (TZ, TY, TB, TB, TC) { return _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYBCX() (TZ, TY, TB, TC, TX) { return _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYBCY() (TZ, TY, TB, TC, TY) { return _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYBCZ() (TZ, TY, TB, TC, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYBCW() (TZ, TY, TB, TC, TW) { return _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYBCA() (TZ, TY, TB, TC, TA) { return _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYBCB() (TZ, TY, TB, TC, TB) { return _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYBCC() (TZ, TY, TB, TC, TC) { return _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYCXX() (TZ, TY, TC, TX, TX) { return _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYCXY() (TZ, TY, TC, TX, TY) { return _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYCXZ() (TZ, TY, TC, TX, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYCXW() (TZ, TY, TC, TX, TW) { return _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYCXA() (TZ, TY, TC, TX, TA) { return _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYCXB() (TZ, TY, TC, TX, TB) { return _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYCXC() (TZ, TY, TC, TX, TC) { return _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYCYX() (TZ, TY, TC, TY, TX) { return _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYCYY() (TZ, TY, TC, TY, TY) { return _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYCYZ() (TZ, TY, TC, TY, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYCYW() (TZ, TY, TC, TY, TW) { return _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYCYA() (TZ, TY, TC, TY, TA) { return _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYCYB() (TZ, TY, TC, TY, TB) { return _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYCYC() (TZ, TY, TC, TY, TC) { return _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYCZX() (TZ, TY, TC, TZ, TX) { return _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYCZY() (TZ, TY, TC, TZ, TY) { return _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYCZZ() (TZ, TY, TC, TZ, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYCZW() (TZ, TY, TC, TZ, TW) { return _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYCZA() (TZ, TY, TC, TZ, TA) { return _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYCZB() (TZ, TY, TC, TZ, TB) { return _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYCZC() (TZ, TY, TC, TZ, TC) { return _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYCWX() (TZ, TY, TC, TW, TX) { return _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYCWY() (TZ, TY, TC, TW, TY) { return _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYCWZ() (TZ, TY, TC, TW, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYCWW() (TZ, TY, TC, TW, TW) { return _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYCWA() (TZ, TY, TC, TW, TA) { return _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYCWB() (TZ, TY, TC, TW, TB) { return _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYCWC() (TZ, TY, TC, TW, TC) { return _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYCAX() (TZ, TY, TC, TA, TX) { return _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYCAY() (TZ, TY, TC, TA, TY) { return _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYCAZ() (TZ, TY, TC, TA, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYCAW() (TZ, TY, TC, TA, TW) { return _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYCAA() (TZ, TY, TC, TA, TA) { return _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYCAB() (TZ, TY, TC, TA, TB) { return _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYCAC() (TZ, TY, TC, TA, TC) { return _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYCBX() (TZ, TY, TC, TB, TX) { return _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYCBY() (TZ, TY, TC, TB, TY) { return _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYCBZ() (TZ, TY, TC, TB, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYCBW() (TZ, TY, TC, TB, TW) { return _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYCBA() (TZ, TY, TC, TB, TA) { return _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYCBB() (TZ, TY, TC, TB, TB) { return _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYCBC() (TZ, TY, TC, TB, TC) { return _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYCCX() (TZ, TY, TC, TC, TX) { return _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYCCY() (TZ, TY, TC, TC, TY) { return _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYCCZ() (TZ, TY, TC, TC, TZ) { return _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYCCW() (TZ, TY, TC, TC, TW) { return _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYCCA() (TZ, TY, TC, TC, TA) { return _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYCCB() (TZ, TY, TC, TC, TB) { return _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZYCCC() (TZ, TY, TC, TC, TC) { return _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZXXX() (TZ, TZ, TX, TX, TX) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZXXY() (TZ, TZ, TX, TX, TY) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZXXZ() (TZ, TZ, TX, TX, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZXXW() (TZ, TZ, TX, TX, TW) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZXXA() (TZ, TZ, TX, TX, TA) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZXXB() (TZ, TZ, TX, TX, TB) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZXXC() (TZ, TZ, TX, TX, TC) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZXYX() (TZ, TZ, TX, TY, TX) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZXYY() (TZ, TZ, TX, TY, TY) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZXYZ() (TZ, TZ, TX, TY, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZXYW() (TZ, TZ, TX, TY, TW) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZXYA() (TZ, TZ, TX, TY, TA) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZXYB() (TZ, TZ, TX, TY, TB) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZXYC() (TZ, TZ, TX, TY, TC) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZXZX() (TZ, TZ, TX, TZ, TX) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZXZY() (TZ, TZ, TX, TZ, TY) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZXZZ() (TZ, TZ, TX, TZ, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZXZW() (TZ, TZ, TX, TZ, TW) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZXZA() (TZ, TZ, TX, TZ, TA) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZXZB() (TZ, TZ, TX, TZ, TB) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZXZC() (TZ, TZ, TX, TZ, TC) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZXWX() (TZ, TZ, TX, TW, TX) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZXWY() (TZ, TZ, TX, TW, TY) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZXWZ() (TZ, TZ, TX, TW, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZXWW() (TZ, TZ, TX, TW, TW) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZXWA() (TZ, TZ, TX, TW, TA) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZXWB() (TZ, TZ, TX, TW, TB) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZXWC() (TZ, TZ, TX, TW, TC) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZXAX() (TZ, TZ, TX, TA, TX) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZXAY() (TZ, TZ, TX, TA, TY) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZXAZ() (TZ, TZ, TX, TA, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZXAW() (TZ, TZ, TX, TA, TW) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZXAA() (TZ, TZ, TX, TA, TA) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZXAB() (TZ, TZ, TX, TA, TB) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZXAC() (TZ, TZ, TX, TA, TC) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZXBX() (TZ, TZ, TX, TB, TX) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZXBY() (TZ, TZ, TX, TB, TY) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZXBZ() (TZ, TZ, TX, TB, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZXBW() (TZ, TZ, TX, TB, TW) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZXBA() (TZ, TZ, TX, TB, TA) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZXBB() (TZ, TZ, TX, TB, TB) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZXBC() (TZ, TZ, TX, TB, TC) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZXCX() (TZ, TZ, TX, TC, TX) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZXCY() (TZ, TZ, TX, TC, TY) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZXCZ() (TZ, TZ, TX, TC, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZXCW() (TZ, TZ, TX, TC, TW) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZXCA() (TZ, TZ, TX, TC, TA) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZXCB() (TZ, TZ, TX, TC, TB) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZXCC() (TZ, TZ, TX, TC, TC) { return _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZYXX() (TZ, TZ, TY, TX, TX) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZYXY() (TZ, TZ, TY, TX, TY) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZYXZ() (TZ, TZ, TY, TX, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZYXW() (TZ, TZ, TY, TX, TW) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZYXA() (TZ, TZ, TY, TX, TA) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZYXB() (TZ, TZ, TY, TX, TB) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZYXC() (TZ, TZ, TY, TX, TC) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZYYX() (TZ, TZ, TY, TY, TX) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZYYY() (TZ, TZ, TY, TY, TY) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZYYZ() (TZ, TZ, TY, TY, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZYYW() (TZ, TZ, TY, TY, TW) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZYYA() (TZ, TZ, TY, TY, TA) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZYYB() (TZ, TZ, TY, TY, TB) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZYYC() (TZ, TZ, TY, TY, TC) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZYZX() (TZ, TZ, TY, TZ, TX) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZYZY() (TZ, TZ, TY, TZ, TY) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZYZZ() (TZ, TZ, TY, TZ, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZYZW() (TZ, TZ, TY, TZ, TW) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZYZA() (TZ, TZ, TY, TZ, TA) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZYZB() (TZ, TZ, TY, TZ, TB) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZYZC() (TZ, TZ, TY, TZ, TC) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZYWX() (TZ, TZ, TY, TW, TX) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZYWY() (TZ, TZ, TY, TW, TY) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZYWZ() (TZ, TZ, TY, TW, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZYWW() (TZ, TZ, TY, TW, TW) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZYWA() (TZ, TZ, TY, TW, TA) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZYWB() (TZ, TZ, TY, TW, TB) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZYWC() (TZ, TZ, TY, TW, TC) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZYAX() (TZ, TZ, TY, TA, TX) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZYAY() (TZ, TZ, TY, TA, TY) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZYAZ() (TZ, TZ, TY, TA, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZYAW() (TZ, TZ, TY, TA, TW) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZYAA() (TZ, TZ, TY, TA, TA) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZYAB() (TZ, TZ, TY, TA, TB) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZYAC() (TZ, TZ, TY, TA, TC) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZYBX() (TZ, TZ, TY, TB, TX) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZYBY() (TZ, TZ, TY, TB, TY) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZYBZ() (TZ, TZ, TY, TB, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZYBW() (TZ, TZ, TY, TB, TW) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZYBA() (TZ, TZ, TY, TB, TA) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZYBB() (TZ, TZ, TY, TB, TB) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZYBC() (TZ, TZ, TY, TB, TC) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZYCX() (TZ, TZ, TY, TC, TX) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZYCY() (TZ, TZ, TY, TC, TY) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZYCZ() (TZ, TZ, TY, TC, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZYCW() (TZ, TZ, TY, TC, TW) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZYCA() (TZ, TZ, TY, TC, TA) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZYCB() (TZ, TZ, TY, TC, TB) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZYCC() (TZ, TZ, TY, TC, TC) { return _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZZXX() (TZ, TZ, TZ, TX, TX) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZZXY() (TZ, TZ, TZ, TX, TY) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZZXZ() (TZ, TZ, TZ, TX, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZZXW() (TZ, TZ, TZ, TX, TW) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZZXA() (TZ, TZ, TZ, TX, TA) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZZXB() (TZ, TZ, TZ, TX, TB) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZZXC() (TZ, TZ, TZ, TX, TC) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZZYX() (TZ, TZ, TZ, TY, TX) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZZYY() (TZ, TZ, TZ, TY, TY) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZZYZ() (TZ, TZ, TZ, TY, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZZYW() (TZ, TZ, TZ, TY, TW) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZZYA() (TZ, TZ, TZ, TY, TA) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZZYB() (TZ, TZ, TZ, TY, TB) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZZYC() (TZ, TZ, TZ, TY, TC) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZZZX() (TZ, TZ, TZ, TZ, TX) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZZZY() (TZ, TZ, TZ, TZ, TY) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZZZZ() (TZ, TZ, TZ, TZ, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZZZW() (TZ, TZ, TZ, TZ, TW) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZZZA() (TZ, TZ, TZ, TZ, TA) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZZZB() (TZ, TZ, TZ, TZ, TB) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZZZC() (TZ, TZ, TZ, TZ, TC) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZZWX() (TZ, TZ, TZ, TW, TX) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZZWY() (TZ, TZ, TZ, TW, TY) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZZWZ() (TZ, TZ, TZ, TW, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZZWW() (TZ, TZ, TZ, TW, TW) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZZWA() (TZ, TZ, TZ, TW, TA) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZZWB() (TZ, TZ, TZ, TW, TB) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZZWC() (TZ, TZ, TZ, TW, TC) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZZAX() (TZ, TZ, TZ, TA, TX) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZZAY() (TZ, TZ, TZ, TA, TY) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZZAZ() (TZ, TZ, TZ, TA, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZZAW() (TZ, TZ, TZ, TA, TW) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZZAA() (TZ, TZ, TZ, TA, TA) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZZAB() (TZ, TZ, TZ, TA, TB) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZZAC() (TZ, TZ, TZ, TA, TC) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZZBX() (TZ, TZ, TZ, TB, TX) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZZBY() (TZ, TZ, TZ, TB, TY) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZZBZ() (TZ, TZ, TZ, TB, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZZBW() (TZ, TZ, TZ, TB, TW) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZZBA() (TZ, TZ, TZ, TB, TA) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZZBB() (TZ, TZ, TZ, TB, TB) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZZBC() (TZ, TZ, TZ, TB, TC) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZZCX() (TZ, TZ, TZ, TC, TX) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZZCY() (TZ, TZ, TZ, TC, TY) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZZCZ() (TZ, TZ, TZ, TC, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZZCW() (TZ, TZ, TZ, TC, TW) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZZCA() (TZ, TZ, TZ, TC, TA) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZZCB() (TZ, TZ, TZ, TC, TB) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZZCC() (TZ, TZ, TZ, TC, TC) { return _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZWXX() (TZ, TZ, TW, TX, TX) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZWXY() (TZ, TZ, TW, TX, TY) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZWXZ() (TZ, TZ, TW, TX, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZWXW() (TZ, TZ, TW, TX, TW) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZWXA() (TZ, TZ, TW, TX, TA) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZWXB() (TZ, TZ, TW, TX, TB) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZWXC() (TZ, TZ, TW, TX, TC) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZWYX() (TZ, TZ, TW, TY, TX) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZWYY() (TZ, TZ, TW, TY, TY) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZWYZ() (TZ, TZ, TW, TY, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZWYW() (TZ, TZ, TW, TY, TW) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZWYA() (TZ, TZ, TW, TY, TA) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZWYB() (TZ, TZ, TW, TY, TB) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZWYC() (TZ, TZ, TW, TY, TC) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZWZX() (TZ, TZ, TW, TZ, TX) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZWZY() (TZ, TZ, TW, TZ, TY) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZWZZ() (TZ, TZ, TW, TZ, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZWZW() (TZ, TZ, TW, TZ, TW) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZWZA() (TZ, TZ, TW, TZ, TA) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZWZB() (TZ, TZ, TW, TZ, TB) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZWZC() (TZ, TZ, TW, TZ, TC) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZWWX() (TZ, TZ, TW, TW, TX) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZWWY() (TZ, TZ, TW, TW, TY) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZWWZ() (TZ, TZ, TW, TW, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZWWW() (TZ, TZ, TW, TW, TW) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZWWA() (TZ, TZ, TW, TW, TA) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZWWB() (TZ, TZ, TW, TW, TB) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZWWC() (TZ, TZ, TW, TW, TC) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZWAX() (TZ, TZ, TW, TA, TX) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZWAY() (TZ, TZ, TW, TA, TY) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZWAZ() (TZ, TZ, TW, TA, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZWAW() (TZ, TZ, TW, TA, TW) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZWAA() (TZ, TZ, TW, TA, TA) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZWAB() (TZ, TZ, TW, TA, TB) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZWAC() (TZ, TZ, TW, TA, TC) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZWBX() (TZ, TZ, TW, TB, TX) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZWBY() (TZ, TZ, TW, TB, TY) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZWBZ() (TZ, TZ, TW, TB, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZWBW() (TZ, TZ, TW, TB, TW) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZWBA() (TZ, TZ, TW, TB, TA) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZWBB() (TZ, TZ, TW, TB, TB) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZWBC() (TZ, TZ, TW, TB, TC) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZWCX() (TZ, TZ, TW, TC, TX) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZWCY() (TZ, TZ, TW, TC, TY) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZWCZ() (TZ, TZ, TW, TC, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZWCW() (TZ, TZ, TW, TC, TW) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZWCA() (TZ, TZ, TW, TC, TA) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZWCB() (TZ, TZ, TW, TC, TB) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZWCC() (TZ, TZ, TW, TC, TC) { return _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZAXX() (TZ, TZ, TA, TX, TX) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZAXY() (TZ, TZ, TA, TX, TY) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZAXZ() (TZ, TZ, TA, TX, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZAXW() (TZ, TZ, TA, TX, TW) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZAXA() (TZ, TZ, TA, TX, TA) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZAXB() (TZ, TZ, TA, TX, TB) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZAXC() (TZ, TZ, TA, TX, TC) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZAYX() (TZ, TZ, TA, TY, TX) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZAYY() (TZ, TZ, TA, TY, TY) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZAYZ() (TZ, TZ, TA, TY, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZAYW() (TZ, TZ, TA, TY, TW) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZAYA() (TZ, TZ, TA, TY, TA) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZAYB() (TZ, TZ, TA, TY, TB) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZAYC() (TZ, TZ, TA, TY, TC) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZAZX() (TZ, TZ, TA, TZ, TX) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZAZY() (TZ, TZ, TA, TZ, TY) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZAZZ() (TZ, TZ, TA, TZ, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZAZW() (TZ, TZ, TA, TZ, TW) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZAZA() (TZ, TZ, TA, TZ, TA) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZAZB() (TZ, TZ, TA, TZ, TB) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZAZC() (TZ, TZ, TA, TZ, TC) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZAWX() (TZ, TZ, TA, TW, TX) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZAWY() (TZ, TZ, TA, TW, TY) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZAWZ() (TZ, TZ, TA, TW, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZAWW() (TZ, TZ, TA, TW, TW) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZAWA() (TZ, TZ, TA, TW, TA) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZAWB() (TZ, TZ, TA, TW, TB) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZAWC() (TZ, TZ, TA, TW, TC) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZAAX() (TZ, TZ, TA, TA, TX) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZAAY() (TZ, TZ, TA, TA, TY) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZAAZ() (TZ, TZ, TA, TA, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZAAW() (TZ, TZ, TA, TA, TW) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZAAA() (TZ, TZ, TA, TA, TA) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZAAB() (TZ, TZ, TA, TA, TB) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZAAC() (TZ, TZ, TA, TA, TC) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZABX() (TZ, TZ, TA, TB, TX) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZABY() (TZ, TZ, TA, TB, TY) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZABZ() (TZ, TZ, TA, TB, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZABW() (TZ, TZ, TA, TB, TW) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZABA() (TZ, TZ, TA, TB, TA) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZABB() (TZ, TZ, TA, TB, TB) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZABC() (TZ, TZ, TA, TB, TC) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZACX() (TZ, TZ, TA, TC, TX) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZACY() (TZ, TZ, TA, TC, TY) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZACZ() (TZ, TZ, TA, TC, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZACW() (TZ, TZ, TA, TC, TW) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZACA() (TZ, TZ, TA, TC, TA) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZACB() (TZ, TZ, TA, TC, TB) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZACC() (TZ, TZ, TA, TC, TC) { return _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZBXX() (TZ, TZ, TB, TX, TX) { return _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZBXY() (TZ, TZ, TB, TX, TY) { return _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZBXZ() (TZ, TZ, TB, TX, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZBXW() (TZ, TZ, TB, TX, TW) { return _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZBXA() (TZ, TZ, TB, TX, TA) { return _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZBXB() (TZ, TZ, TB, TX, TB) { return _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZBXC() (TZ, TZ, TB, TX, TC) { return _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZBYX() (TZ, TZ, TB, TY, TX) { return _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZBYY() (TZ, TZ, TB, TY, TY) { return _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZBYZ() (TZ, TZ, TB, TY, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZBYW() (TZ, TZ, TB, TY, TW) { return _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZBYA() (TZ, TZ, TB, TY, TA) { return _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZBYB() (TZ, TZ, TB, TY, TB) { return _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZBYC() (TZ, TZ, TB, TY, TC) { return _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZBZX() (TZ, TZ, TB, TZ, TX) { return _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZBZY() (TZ, TZ, TB, TZ, TY) { return _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZBZZ() (TZ, TZ, TB, TZ, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZBZW() (TZ, TZ, TB, TZ, TW) { return _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZBZA() (TZ, TZ, TB, TZ, TA) { return _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZBZB() (TZ, TZ, TB, TZ, TB) { return _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZBZC() (TZ, TZ, TB, TZ, TC) { return _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZBWX() (TZ, TZ, TB, TW, TX) { return _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZBWY() (TZ, TZ, TB, TW, TY) { return _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZBWZ() (TZ, TZ, TB, TW, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZBWW() (TZ, TZ, TB, TW, TW) { return _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZBWA() (TZ, TZ, TB, TW, TA) { return _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZBWB() (TZ, TZ, TB, TW, TB) { return _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZBWC() (TZ, TZ, TB, TW, TC) { return _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZBAX() (TZ, TZ, TB, TA, TX) { return _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZBAY() (TZ, TZ, TB, TA, TY) { return _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZBAZ() (TZ, TZ, TB, TA, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZBAW() (TZ, TZ, TB, TA, TW) { return _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZBAA() (TZ, TZ, TB, TA, TA) { return _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZBAB() (TZ, TZ, TB, TA, TB) { return _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZBAC() (TZ, TZ, TB, TA, TC) { return _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZBBX() (TZ, TZ, TB, TB, TX) { return _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZBBY() (TZ, TZ, TB, TB, TY) { return _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZBBZ() (TZ, TZ, TB, TB, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZBBW() (TZ, TZ, TB, TB, TW) { return _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZBBA() (TZ, TZ, TB, TB, TA) { return _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZBBB() (TZ, TZ, TB, TB, TB) { return _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZBBC() (TZ, TZ, TB, TB, TC) { return _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZBCX() (TZ, TZ, TB, TC, TX) { return _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZBCY() (TZ, TZ, TB, TC, TY) { return _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZBCZ() (TZ, TZ, TB, TC, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZBCW() (TZ, TZ, TB, TC, TW) { return _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZBCA() (TZ, TZ, TB, TC, TA) { return _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZBCB() (TZ, TZ, TB, TC, TB) { return _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZBCC() (TZ, TZ, TB, TC, TC) { return _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZCXX() (TZ, TZ, TC, TX, TX) { return _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZCXY() (TZ, TZ, TC, TX, TY) { return _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZCXZ() (TZ, TZ, TC, TX, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZCXW() (TZ, TZ, TC, TX, TW) { return _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZCXA() (TZ, TZ, TC, TX, TA) { return _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZCXB() (TZ, TZ, TC, TX, TB) { return _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZCXC() (TZ, TZ, TC, TX, TC) { return _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZCYX() (TZ, TZ, TC, TY, TX) { return _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZCYY() (TZ, TZ, TC, TY, TY) { return _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZCYZ() (TZ, TZ, TC, TY, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZCYW() (TZ, TZ, TC, TY, TW) { return _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZCYA() (TZ, TZ, TC, TY, TA) { return _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZCYB() (TZ, TZ, TC, TY, TB) { return _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZCYC() (TZ, TZ, TC, TY, TC) { return _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZCZX() (TZ, TZ, TC, TZ, TX) { return _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZCZY() (TZ, TZ, TC, TZ, TY) { return _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZCZZ() (TZ, TZ, TC, TZ, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZCZW() (TZ, TZ, TC, TZ, TW) { return _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZCZA() (TZ, TZ, TC, TZ, TA) { return _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZCZB() (TZ, TZ, TC, TZ, TB) { return _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZCZC() (TZ, TZ, TC, TZ, TC) { return _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZCWX() (TZ, TZ, TC, TW, TX) { return _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZCWY() (TZ, TZ, TC, TW, TY) { return _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZCWZ() (TZ, TZ, TC, TW, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZCWW() (TZ, TZ, TC, TW, TW) { return _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZCWA() (TZ, TZ, TC, TW, TA) { return _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZCWB() (TZ, TZ, TC, TW, TB) { return _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZCWC() (TZ, TZ, TC, TW, TC) { return _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZCAX() (TZ, TZ, TC, TA, TX) { return _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZCAY() (TZ, TZ, TC, TA, TY) { return _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZCAZ() (TZ, TZ, TC, TA, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZCAW() (TZ, TZ, TC, TA, TW) { return _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZCAA() (TZ, TZ, TC, TA, TA) { return _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZCAB() (TZ, TZ, TC, TA, TB) { return _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZCAC() (TZ, TZ, TC, TA, TC) { return _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZCBX() (TZ, TZ, TC, TB, TX) { return _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZCBY() (TZ, TZ, TC, TB, TY) { return _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZCBZ() (TZ, TZ, TC, TB, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZCBW() (TZ, TZ, TC, TB, TW) { return _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZCBA() (TZ, TZ, TC, TB, TA) { return _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZCBB() (TZ, TZ, TC, TB, TB) { return _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZCBC() (TZ, TZ, TC, TB, TC) { return _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZCCX() (TZ, TZ, TC, TC, TX) { return _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZCCY() (TZ, TZ, TC, TC, TY) { return _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZCCZ() (TZ, TZ, TC, TC, TZ) { return _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZCCW() (TZ, TZ, TC, TC, TW) { return _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZCCA() (TZ, TZ, TC, TC, TA) { return _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZCCB() (TZ, TZ, TC, TC, TB) { return _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZZCCC() (TZ, TZ, TC, TC, TC) { return _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWXXX() (TZ, TW, TX, TX, TX) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWXXY() (TZ, TW, TX, TX, TY) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWXXZ() (TZ, TW, TX, TX, TZ) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWXXW() (TZ, TW, TX, TX, TW) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWXXA() (TZ, TW, TX, TX, TA) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWXXB() (TZ, TW, TX, TX, TB) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWXXC() (TZ, TW, TX, TX, TC) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWXYX() (TZ, TW, TX, TY, TX) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWXYY() (TZ, TW, TX, TY, TY) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWXYZ() (TZ, TW, TX, TY, TZ) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWXYW() (TZ, TW, TX, TY, TW) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWXYA() (TZ, TW, TX, TY, TA) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWXYB() (TZ, TW, TX, TY, TB) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWXYC() (TZ, TW, TX, TY, TC) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWXZX() (TZ, TW, TX, TZ, TX) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWXZY() (TZ, TW, TX, TZ, TY) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWXZZ() (TZ, TW, TX, TZ, TZ) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWXZW() (TZ, TW, TX, TZ, TW) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWXZA() (TZ, TW, TX, TZ, TA) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWXZB() (TZ, TW, TX, TZ, TB) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWXZC() (TZ, TW, TX, TZ, TC) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWXWX() (TZ, TW, TX, TW, TX) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWXWY() (TZ, TW, TX, TW, TY) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWXWZ() (TZ, TW, TX, TW, TZ) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWXWW() (TZ, TW, TX, TW, TW) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWXWA() (TZ, TW, TX, TW, TA) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWXWB() (TZ, TW, TX, TW, TB) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWXWC() (TZ, TW, TX, TW, TC) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWXAX() (TZ, TW, TX, TA, TX) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWXAY() (TZ, TW, TX, TA, TY) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWXAZ() (TZ, TW, TX, TA, TZ) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWXAW() (TZ, TW, TX, TA, TW) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWXAA() (TZ, TW, TX, TA, TA) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWXAB() (TZ, TW, TX, TA, TB) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWXAC() (TZ, TW, TX, TA, TC) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWXBX() (TZ, TW, TX, TB, TX) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWXBY() (TZ, TW, TX, TB, TY) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWXBZ() (TZ, TW, TX, TB, TZ) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWXBW() (TZ, TW, TX, TB, TW) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWXBA() (TZ, TW, TX, TB, TA) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWXBB() (TZ, TW, TX, TB, TB) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWXBC() (TZ, TW, TX, TB, TC) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWXCX() (TZ, TW, TX, TC, TX) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWXCY() (TZ, TW, TX, TC, TY) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWXCZ() (TZ, TW, TX, TC, TZ) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWXCW() (TZ, TW, TX, TC, TW) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWXCA() (TZ, TW, TX, TC, TA) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWXCB() (TZ, TW, TX, TC, TB) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWXCC() (TZ, TW, TX, TC, TC) { return _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWYXX() (TZ, TW, TY, TX, TX) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWYXY() (TZ, TW, TY, TX, TY) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWYXZ() (TZ, TW, TY, TX, TZ) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWYXW() (TZ, TW, TY, TX, TW) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWYXA() (TZ, TW, TY, TX, TA) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWYXB() (TZ, TW, TY, TX, TB) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWYXC() (TZ, TW, TY, TX, TC) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWYYX() (TZ, TW, TY, TY, TX) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWYYY() (TZ, TW, TY, TY, TY) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWYYZ() (TZ, TW, TY, TY, TZ) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWYYW() (TZ, TW, TY, TY, TW) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWYYA() (TZ, TW, TY, TY, TA) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWYYB() (TZ, TW, TY, TY, TB) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWYYC() (TZ, TW, TY, TY, TC) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWYZX() (TZ, TW, TY, TZ, TX) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWYZY() (TZ, TW, TY, TZ, TY) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWYZZ() (TZ, TW, TY, TZ, TZ) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWYZW() (TZ, TW, TY, TZ, TW) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWYZA() (TZ, TW, TY, TZ, TA) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWYZB() (TZ, TW, TY, TZ, TB) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWYZC() (TZ, TW, TY, TZ, TC) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWYWX() (TZ, TW, TY, TW, TX) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWYWY() (TZ, TW, TY, TW, TY) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWYWZ() (TZ, TW, TY, TW, TZ) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWYWW() (TZ, TW, TY, TW, TW) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWYWA() (TZ, TW, TY, TW, TA) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWYWB() (TZ, TW, TY, TW, TB) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWYWC() (TZ, TW, TY, TW, TC) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWYAX() (TZ, TW, TY, TA, TX) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWYAY() (TZ, TW, TY, TA, TY) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWYAZ() (TZ, TW, TY, TA, TZ) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWYAW() (TZ, TW, TY, TA, TW) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWYAA() (TZ, TW, TY, TA, TA) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWYAB() (TZ, TW, TY, TA, TB) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWYAC() (TZ, TW, TY, TA, TC) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWYBX() (TZ, TW, TY, TB, TX) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWYBY() (TZ, TW, TY, TB, TY) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWYBZ() (TZ, TW, TY, TB, TZ) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWYBW() (TZ, TW, TY, TB, TW) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWYBA() (TZ, TW, TY, TB, TA) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWYBB() (TZ, TW, TY, TB, TB) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWYBC() (TZ, TW, TY, TB, TC) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWYCX() (TZ, TW, TY, TC, TX) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWYCY() (TZ, TW, TY, TC, TY) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWYCZ() (TZ, TW, TY, TC, TZ) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWYCW() (TZ, TW, TY, TC, TW) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWYCA() (TZ, TW, TY, TC, TA) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWYCB() (TZ, TW, TY, TC, TB) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWYCC() (TZ, TW, TY, TC, TC) { return _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWZXX() (TZ, TW, TZ, TX, TX) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWZXY() (TZ, TW, TZ, TX, TY) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWZXZ() (TZ, TW, TZ, TX, TZ) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWZXW() (TZ, TW, TZ, TX, TW) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWZXA() (TZ, TW, TZ, TX, TA) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWZXB() (TZ, TW, TZ, TX, TB) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWZXC() (TZ, TW, TZ, TX, TC) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWZYX() (TZ, TW, TZ, TY, TX) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWZYY() (TZ, TW, TZ, TY, TY) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWZYZ() (TZ, TW, TZ, TY, TZ) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWZYW() (TZ, TW, TZ, TY, TW) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWZYA() (TZ, TW, TZ, TY, TA) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWZYB() (TZ, TW, TZ, TY, TB) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWZYC() (TZ, TW, TZ, TY, TC) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWZZX() (TZ, TW, TZ, TZ, TX) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWZZY() (TZ, TW, TZ, TZ, TY) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWZZZ() (TZ, TW, TZ, TZ, TZ) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWZZW() (TZ, TW, TZ, TZ, TW) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWZZA() (TZ, TW, TZ, TZ, TA) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWZZB() (TZ, TW, TZ, TZ, TB) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWZZC() (TZ, TW, TZ, TZ, TC) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWZWX() (TZ, TW, TZ, TW, TX) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWZWY() (TZ, TW, TZ, TW, TY) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWZWZ() (TZ, TW, TZ, TW, TZ) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWZWW() (TZ, TW, TZ, TW, TW) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWZWA() (TZ, TW, TZ, TW, TA) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWZWB() (TZ, TW, TZ, TW, TB) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWZWC() (TZ, TW, TZ, TW, TC) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWZAX() (TZ, TW, TZ, TA, TX) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWZAY() (TZ, TW, TZ, TA, TY) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWZAZ() (TZ, TW, TZ, TA, TZ) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWZAW() (TZ, TW, TZ, TA, TW) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWZAA() (TZ, TW, TZ, TA, TA) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWZAB() (TZ, TW, TZ, TA, TB) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWZAC() (TZ, TW, TZ, TA, TC) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWZBX() (TZ, TW, TZ, TB, TX) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWZBY() (TZ, TW, TZ, TB, TY) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWZBZ() (TZ, TW, TZ, TB, TZ) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWZBW() (TZ, TW, TZ, TB, TW) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWZBA() (TZ, TW, TZ, TB, TA) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWZBB() (TZ, TW, TZ, TB, TB) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWZBC() (TZ, TW, TZ, TB, TC) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWZCX() (TZ, TW, TZ, TC, TX) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWZCY() (TZ, TW, TZ, TC, TY) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWZCZ() (TZ, TW, TZ, TC, TZ) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWZCW() (TZ, TW, TZ, TC, TW) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWZCA() (TZ, TW, TZ, TC, TA) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWZCB() (TZ, TW, TZ, TC, TB) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWZCC() (TZ, TW, TZ, TC, TC) { return _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWWXX() (TZ, TW, TW, TX, TX) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWWXY() (TZ, TW, TW, TX, TY) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWWXZ() (TZ, TW, TW, TX, TZ) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWWXW() (TZ, TW, TW, TX, TW) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWWXA() (TZ, TW, TW, TX, TA) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWWXB() (TZ, TW, TW, TX, TB) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWWXC() (TZ, TW, TW, TX, TC) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWWYX() (TZ, TW, TW, TY, TX) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWWYY() (TZ, TW, TW, TY, TY) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWWYZ() (TZ, TW, TW, TY, TZ) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWWYW() (TZ, TW, TW, TY, TW) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWWYA() (TZ, TW, TW, TY, TA) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWWYB() (TZ, TW, TW, TY, TB) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWWYC() (TZ, TW, TW, TY, TC) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWWZX() (TZ, TW, TW, TZ, TX) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWWZY() (TZ, TW, TW, TZ, TY) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWWZZ() (TZ, TW, TW, TZ, TZ) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWWZW() (TZ, TW, TW, TZ, TW) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWWZA() (TZ, TW, TW, TZ, TA) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWWZB() (TZ, TW, TW, TZ, TB) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWWZC() (TZ, TW, TW, TZ, TC) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWWWX() (TZ, TW, TW, TW, TX) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWWWY() (TZ, TW, TW, TW, TY) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWWWZ() (TZ, TW, TW, TW, TZ) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWWWW() (TZ, TW, TW, TW, TW) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWWWA() (TZ, TW, TW, TW, TA) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWWWB() (TZ, TW, TW, TW, TB) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWWWC() (TZ, TW, TW, TW, TC) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWWAX() (TZ, TW, TW, TA, TX) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWWAY() (TZ, TW, TW, TA, TY) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWWAZ() (TZ, TW, TW, TA, TZ) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWWAW() (TZ, TW, TW, TA, TW) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWWAA() (TZ, TW, TW, TA, TA) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWWAB() (TZ, TW, TW, TA, TB) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWWAC() (TZ, TW, TW, TA, TC) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWWBX() (TZ, TW, TW, TB, TX) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWWBY() (TZ, TW, TW, TB, TY) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWWBZ() (TZ, TW, TW, TB, TZ) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWWBW() (TZ, TW, TW, TB, TW) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWWBA() (TZ, TW, TW, TB, TA) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWWBB() (TZ, TW, TW, TB, TB) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWWBC() (TZ, TW, TW, TB, TC) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWWCX() (TZ, TW, TW, TC, TX) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWWCY() (TZ, TW, TW, TC, TY) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWWCZ() (TZ, TW, TW, TC, TZ) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWWCW() (TZ, TW, TW, TC, TW) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWWCA() (TZ, TW, TW, TC, TA) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWWCB() (TZ, TW, TW, TC, TB) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWWCC() (TZ, TW, TW, TC, TC) { return _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWAXX() (TZ, TW, TA, TX, TX) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWAXY() (TZ, TW, TA, TX, TY) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWAXZ() (TZ, TW, TA, TX, TZ) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWAXW() (TZ, TW, TA, TX, TW) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWAXA() (TZ, TW, TA, TX, TA) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWAXB() (TZ, TW, TA, TX, TB) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWAXC() (TZ, TW, TA, TX, TC) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWAYX() (TZ, TW, TA, TY, TX) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWAYY() (TZ, TW, TA, TY, TY) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWAYZ() (TZ, TW, TA, TY, TZ) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWAYW() (TZ, TW, TA, TY, TW) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWAYA() (TZ, TW, TA, TY, TA) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWAYB() (TZ, TW, TA, TY, TB) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWAYC() (TZ, TW, TA, TY, TC) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWAZX() (TZ, TW, TA, TZ, TX) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWAZY() (TZ, TW, TA, TZ, TY) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWAZZ() (TZ, TW, TA, TZ, TZ) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWAZW() (TZ, TW, TA, TZ, TW) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWAZA() (TZ, TW, TA, TZ, TA) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWAZB() (TZ, TW, TA, TZ, TB) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWAZC() (TZ, TW, TA, TZ, TC) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWAWX() (TZ, TW, TA, TW, TX) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWAWY() (TZ, TW, TA, TW, TY) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWAWZ() (TZ, TW, TA, TW, TZ) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWAWW() (TZ, TW, TA, TW, TW) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWAWA() (TZ, TW, TA, TW, TA) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWAWB() (TZ, TW, TA, TW, TB) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWAWC() (TZ, TW, TA, TW, TC) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWAAX() (TZ, TW, TA, TA, TX) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWAAY() (TZ, TW, TA, TA, TY) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWAAZ() (TZ, TW, TA, TA, TZ) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWAAW() (TZ, TW, TA, TA, TW) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWAAA() (TZ, TW, TA, TA, TA) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWAAB() (TZ, TW, TA, TA, TB) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWAAC() (TZ, TW, TA, TA, TC) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWABX() (TZ, TW, TA, TB, TX) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWABY() (TZ, TW, TA, TB, TY) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWABZ() (TZ, TW, TA, TB, TZ) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWABW() (TZ, TW, TA, TB, TW) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWABA() (TZ, TW, TA, TB, TA) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWABB() (TZ, TW, TA, TB, TB) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWABC() (TZ, TW, TA, TB, TC) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWACX() (TZ, TW, TA, TC, TX) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWACY() (TZ, TW, TA, TC, TY) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWACZ() (TZ, TW, TA, TC, TZ) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWACW() (TZ, TW, TA, TC, TW) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWACA() (TZ, TW, TA, TC, TA) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWACB() (TZ, TW, TA, TC, TB) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWACC() (TZ, TW, TA, TC, TC) { return _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWBXX() (TZ, TW, TB, TX, TX) { return _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWBXY() (TZ, TW, TB, TX, TY) { return _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWBXZ() (TZ, TW, TB, TX, TZ) { return _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWBXW() (TZ, TW, TB, TX, TW) { return _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWBXA() (TZ, TW, TB, TX, TA) { return _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWBXB() (TZ, TW, TB, TX, TB) { return _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWBXC() (TZ, TW, TB, TX, TC) { return _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWBYX() (TZ, TW, TB, TY, TX) { return _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWBYY() (TZ, TW, TB, TY, TY) { return _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWBYZ() (TZ, TW, TB, TY, TZ) { return _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWBYW() (TZ, TW, TB, TY, TW) { return _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWBYA() (TZ, TW, TB, TY, TA) { return _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWBYB() (TZ, TW, TB, TY, TB) { return _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWBYC() (TZ, TW, TB, TY, TC) { return _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWBZX() (TZ, TW, TB, TZ, TX) { return _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWBZY() (TZ, TW, TB, TZ, TY) { return _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWBZZ() (TZ, TW, TB, TZ, TZ) { return _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWBZW() (TZ, TW, TB, TZ, TW) { return _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWBZA() (TZ, TW, TB, TZ, TA) { return _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWBZB() (TZ, TW, TB, TZ, TB) { return _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWBZC() (TZ, TW, TB, TZ, TC) { return _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWBWX() (TZ, TW, TB, TW, TX) { return _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWBWY() (TZ, TW, TB, TW, TY) { return _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWBWZ() (TZ, TW, TB, TW, TZ) { return _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWBWW() (TZ, TW, TB, TW, TW) { return _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWBWA() (TZ, TW, TB, TW, TA) { return _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWBWB() (TZ, TW, TB, TW, TB) { return _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWBWC() (TZ, TW, TB, TW, TC) { return _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWBAX() (TZ, TW, TB, TA, TX) { return _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWBAY() (TZ, TW, TB, TA, TY) { return _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWBAZ() (TZ, TW, TB, TA, TZ) { return _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWBAW() (TZ, TW, TB, TA, TW) { return _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWBAA() (TZ, TW, TB, TA, TA) { return _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWBAB() (TZ, TW, TB, TA, TB) { return _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWBAC() (TZ, TW, TB, TA, TC) { return _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWBBX() (TZ, TW, TB, TB, TX) { return _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWBBY() (TZ, TW, TB, TB, TY) { return _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWBBZ() (TZ, TW, TB, TB, TZ) { return _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWBBW() (TZ, TW, TB, TB, TW) { return _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWBBA() (TZ, TW, TB, TB, TA) { return _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWBBB() (TZ, TW, TB, TB, TB) { return _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWBBC() (TZ, TW, TB, TB, TC) { return _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWBCX() (TZ, TW, TB, TC, TX) { return _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWBCY() (TZ, TW, TB, TC, TY) { return _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWBCZ() (TZ, TW, TB, TC, TZ) { return _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWBCW() (TZ, TW, TB, TC, TW) { return _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWBCA() (TZ, TW, TB, TC, TA) { return _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWBCB() (TZ, TW, TB, TC, TB) { return _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWBCC() (TZ, TW, TB, TC, TC) { return _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWCXX() (TZ, TW, TC, TX, TX) { return _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWCXY() (TZ, TW, TC, TX, TY) { return _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWCXZ() (TZ, TW, TC, TX, TZ) { return _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWCXW() (TZ, TW, TC, TX, TW) { return _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWCXA() (TZ, TW, TC, TX, TA) { return _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWCXB() (TZ, TW, TC, TX, TB) { return _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWCXC() (TZ, TW, TC, TX, TC) { return _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWCYX() (TZ, TW, TC, TY, TX) { return _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWCYY() (TZ, TW, TC, TY, TY) { return _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWCYZ() (TZ, TW, TC, TY, TZ) { return _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWCYW() (TZ, TW, TC, TY, TW) { return _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWCYA() (TZ, TW, TC, TY, TA) { return _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWCYB() (TZ, TW, TC, TY, TB) { return _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWCYC() (TZ, TW, TC, TY, TC) { return _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWCZX() (TZ, TW, TC, TZ, TX) { return _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWCZY() (TZ, TW, TC, TZ, TY) { return _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWCZZ() (TZ, TW, TC, TZ, TZ) { return _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWCZW() (TZ, TW, TC, TZ, TW) { return _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWCZA() (TZ, TW, TC, TZ, TA) { return _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWCZB() (TZ, TW, TC, TZ, TB) { return _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWCZC() (TZ, TW, TC, TZ, TC) { return _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWCWX() (TZ, TW, TC, TW, TX) { return _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWCWY() (TZ, TW, TC, TW, TY) { return _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWCWZ() (TZ, TW, TC, TW, TZ) { return _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWCWW() (TZ, TW, TC, TW, TW) { return _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWCWA() (TZ, TW, TC, TW, TA) { return _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWCWB() (TZ, TW, TC, TW, TB) { return _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWCWC() (TZ, TW, TC, TW, TC) { return _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWCAX() (TZ, TW, TC, TA, TX) { return _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWCAY() (TZ, TW, TC, TA, TY) { return _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWCAZ() (TZ, TW, TC, TA, TZ) { return _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWCAW() (TZ, TW, TC, TA, TW) { return _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWCAA() (TZ, TW, TC, TA, TA) { return _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWCAB() (TZ, TW, TC, TA, TB) { return _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWCAC() (TZ, TW, TC, TA, TC) { return _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWCBX() (TZ, TW, TC, TB, TX) { return _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWCBY() (TZ, TW, TC, TB, TY) { return _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWCBZ() (TZ, TW, TC, TB, TZ) { return _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWCBW() (TZ, TW, TC, TB, TW) { return _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWCBA() (TZ, TW, TC, TB, TA) { return _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWCBB() (TZ, TW, TC, TB, TB) { return _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWCBC() (TZ, TW, TC, TB, TC) { return _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWCCX() (TZ, TW, TC, TC, TX) { return _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWCCY() (TZ, TW, TC, TC, TY) { return _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWCCZ() (TZ, TW, TC, TC, TZ) { return _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWCCW() (TZ, TW, TC, TC, TW) { return _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWCCA() (TZ, TW, TC, TC, TA) { return _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWCCB() (TZ, TW, TC, TC, TB) { return _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZWCCC() (TZ, TW, TC, TC, TC) { return _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAXXX() (TZ, TA, TX, TX, TX) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAXXY() (TZ, TA, TX, TX, TY) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAXXZ() (TZ, TA, TX, TX, TZ) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAXXW() (TZ, TA, TX, TX, TW) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAXXA() (TZ, TA, TX, TX, TA) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAXXB() (TZ, TA, TX, TX, TB) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAXXC() (TZ, TA, TX, TX, TC) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAXYX() (TZ, TA, TX, TY, TX) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAXYY() (TZ, TA, TX, TY, TY) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAXYZ() (TZ, TA, TX, TY, TZ) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAXYW() (TZ, TA, TX, TY, TW) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAXYA() (TZ, TA, TX, TY, TA) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAXYB() (TZ, TA, TX, TY, TB) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAXYC() (TZ, TA, TX, TY, TC) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAXZX() (TZ, TA, TX, TZ, TX) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAXZY() (TZ, TA, TX, TZ, TY) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAXZZ() (TZ, TA, TX, TZ, TZ) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAXZW() (TZ, TA, TX, TZ, TW) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAXZA() (TZ, TA, TX, TZ, TA) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAXZB() (TZ, TA, TX, TZ, TB) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAXZC() (TZ, TA, TX, TZ, TC) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAXWX() (TZ, TA, TX, TW, TX) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAXWY() (TZ, TA, TX, TW, TY) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAXWZ() (TZ, TA, TX, TW, TZ) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAXWW() (TZ, TA, TX, TW, TW) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAXWA() (TZ, TA, TX, TW, TA) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAXWB() (TZ, TA, TX, TW, TB) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAXWC() (TZ, TA, TX, TW, TC) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAXAX() (TZ, TA, TX, TA, TX) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAXAY() (TZ, TA, TX, TA, TY) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAXAZ() (TZ, TA, TX, TA, TZ) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAXAW() (TZ, TA, TX, TA, TW) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAXAA() (TZ, TA, TX, TA, TA) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAXAB() (TZ, TA, TX, TA, TB) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAXAC() (TZ, TA, TX, TA, TC) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAXBX() (TZ, TA, TX, TB, TX) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAXBY() (TZ, TA, TX, TB, TY) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAXBZ() (TZ, TA, TX, TB, TZ) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAXBW() (TZ, TA, TX, TB, TW) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAXBA() (TZ, TA, TX, TB, TA) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAXBB() (TZ, TA, TX, TB, TB) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAXBC() (TZ, TA, TX, TB, TC) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAXCX() (TZ, TA, TX, TC, TX) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAXCY() (TZ, TA, TX, TC, TY) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAXCZ() (TZ, TA, TX, TC, TZ) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAXCW() (TZ, TA, TX, TC, TW) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAXCA() (TZ, TA, TX, TC, TA) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAXCB() (TZ, TA, TX, TC, TB) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAXCC() (TZ, TA, TX, TC, TC) { return _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAYXX() (TZ, TA, TY, TX, TX) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAYXY() (TZ, TA, TY, TX, TY) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAYXZ() (TZ, TA, TY, TX, TZ) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAYXW() (TZ, TA, TY, TX, TW) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAYXA() (TZ, TA, TY, TX, TA) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAYXB() (TZ, TA, TY, TX, TB) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAYXC() (TZ, TA, TY, TX, TC) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAYYX() (TZ, TA, TY, TY, TX) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAYYY() (TZ, TA, TY, TY, TY) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAYYZ() (TZ, TA, TY, TY, TZ) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAYYW() (TZ, TA, TY, TY, TW) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAYYA() (TZ, TA, TY, TY, TA) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAYYB() (TZ, TA, TY, TY, TB) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAYYC() (TZ, TA, TY, TY, TC) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAYZX() (TZ, TA, TY, TZ, TX) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAYZY() (TZ, TA, TY, TZ, TY) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAYZZ() (TZ, TA, TY, TZ, TZ) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAYZW() (TZ, TA, TY, TZ, TW) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAYZA() (TZ, TA, TY, TZ, TA) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAYZB() (TZ, TA, TY, TZ, TB) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAYZC() (TZ, TA, TY, TZ, TC) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAYWX() (TZ, TA, TY, TW, TX) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAYWY() (TZ, TA, TY, TW, TY) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAYWZ() (TZ, TA, TY, TW, TZ) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAYWW() (TZ, TA, TY, TW, TW) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAYWA() (TZ, TA, TY, TW, TA) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAYWB() (TZ, TA, TY, TW, TB) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAYWC() (TZ, TA, TY, TW, TC) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAYAX() (TZ, TA, TY, TA, TX) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAYAY() (TZ, TA, TY, TA, TY) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAYAZ() (TZ, TA, TY, TA, TZ) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAYAW() (TZ, TA, TY, TA, TW) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAYAA() (TZ, TA, TY, TA, TA) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAYAB() (TZ, TA, TY, TA, TB) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAYAC() (TZ, TA, TY, TA, TC) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAYBX() (TZ, TA, TY, TB, TX) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAYBY() (TZ, TA, TY, TB, TY) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAYBZ() (TZ, TA, TY, TB, TZ) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAYBW() (TZ, TA, TY, TB, TW) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAYBA() (TZ, TA, TY, TB, TA) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAYBB() (TZ, TA, TY, TB, TB) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAYBC() (TZ, TA, TY, TB, TC) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAYCX() (TZ, TA, TY, TC, TX) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAYCY() (TZ, TA, TY, TC, TY) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAYCZ() (TZ, TA, TY, TC, TZ) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAYCW() (TZ, TA, TY, TC, TW) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAYCA() (TZ, TA, TY, TC, TA) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAYCB() (TZ, TA, TY, TC, TB) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAYCC() (TZ, TA, TY, TC, TC) { return _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAZXX() (TZ, TA, TZ, TX, TX) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAZXY() (TZ, TA, TZ, TX, TY) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAZXZ() (TZ, TA, TZ, TX, TZ) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAZXW() (TZ, TA, TZ, TX, TW) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAZXA() (TZ, TA, TZ, TX, TA) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAZXB() (TZ, TA, TZ, TX, TB) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAZXC() (TZ, TA, TZ, TX, TC) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAZYX() (TZ, TA, TZ, TY, TX) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAZYY() (TZ, TA, TZ, TY, TY) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAZYZ() (TZ, TA, TZ, TY, TZ) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAZYW() (TZ, TA, TZ, TY, TW) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAZYA() (TZ, TA, TZ, TY, TA) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAZYB() (TZ, TA, TZ, TY, TB) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAZYC() (TZ, TA, TZ, TY, TC) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAZZX() (TZ, TA, TZ, TZ, TX) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAZZY() (TZ, TA, TZ, TZ, TY) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAZZZ() (TZ, TA, TZ, TZ, TZ) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAZZW() (TZ, TA, TZ, TZ, TW) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAZZA() (TZ, TA, TZ, TZ, TA) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAZZB() (TZ, TA, TZ, TZ, TB) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAZZC() (TZ, TA, TZ, TZ, TC) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAZWX() (TZ, TA, TZ, TW, TX) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAZWY() (TZ, TA, TZ, TW, TY) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAZWZ() (TZ, TA, TZ, TW, TZ) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAZWW() (TZ, TA, TZ, TW, TW) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAZWA() (TZ, TA, TZ, TW, TA) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAZWB() (TZ, TA, TZ, TW, TB) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAZWC() (TZ, TA, TZ, TW, TC) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAZAX() (TZ, TA, TZ, TA, TX) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAZAY() (TZ, TA, TZ, TA, TY) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAZAZ() (TZ, TA, TZ, TA, TZ) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAZAW() (TZ, TA, TZ, TA, TW) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAZAA() (TZ, TA, TZ, TA, TA) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAZAB() (TZ, TA, TZ, TA, TB) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAZAC() (TZ, TA, TZ, TA, TC) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAZBX() (TZ, TA, TZ, TB, TX) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAZBY() (TZ, TA, TZ, TB, TY) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAZBZ() (TZ, TA, TZ, TB, TZ) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAZBW() (TZ, TA, TZ, TB, TW) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAZBA() (TZ, TA, TZ, TB, TA) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAZBB() (TZ, TA, TZ, TB, TB) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAZBC() (TZ, TA, TZ, TB, TC) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAZCX() (TZ, TA, TZ, TC, TX) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAZCY() (TZ, TA, TZ, TC, TY) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAZCZ() (TZ, TA, TZ, TC, TZ) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAZCW() (TZ, TA, TZ, TC, TW) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAZCA() (TZ, TA, TZ, TC, TA) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAZCB() (TZ, TA, TZ, TC, TB) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAZCC() (TZ, TA, TZ, TC, TC) { return _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAWXX() (TZ, TA, TW, TX, TX) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAWXY() (TZ, TA, TW, TX, TY) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAWXZ() (TZ, TA, TW, TX, TZ) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAWXW() (TZ, TA, TW, TX, TW) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAWXA() (TZ, TA, TW, TX, TA) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAWXB() (TZ, TA, TW, TX, TB) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAWXC() (TZ, TA, TW, TX, TC) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAWYX() (TZ, TA, TW, TY, TX) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAWYY() (TZ, TA, TW, TY, TY) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAWYZ() (TZ, TA, TW, TY, TZ) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAWYW() (TZ, TA, TW, TY, TW) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAWYA() (TZ, TA, TW, TY, TA) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAWYB() (TZ, TA, TW, TY, TB) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAWYC() (TZ, TA, TW, TY, TC) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAWZX() (TZ, TA, TW, TZ, TX) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAWZY() (TZ, TA, TW, TZ, TY) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAWZZ() (TZ, TA, TW, TZ, TZ) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAWZW() (TZ, TA, TW, TZ, TW) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAWZA() (TZ, TA, TW, TZ, TA) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAWZB() (TZ, TA, TW, TZ, TB) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAWZC() (TZ, TA, TW, TZ, TC) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAWWX() (TZ, TA, TW, TW, TX) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAWWY() (TZ, TA, TW, TW, TY) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAWWZ() (TZ, TA, TW, TW, TZ) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAWWW() (TZ, TA, TW, TW, TW) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAWWA() (TZ, TA, TW, TW, TA) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAWWB() (TZ, TA, TW, TW, TB) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAWWC() (TZ, TA, TW, TW, TC) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAWAX() (TZ, TA, TW, TA, TX) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAWAY() (TZ, TA, TW, TA, TY) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAWAZ() (TZ, TA, TW, TA, TZ) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAWAW() (TZ, TA, TW, TA, TW) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAWAA() (TZ, TA, TW, TA, TA) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAWAB() (TZ, TA, TW, TA, TB) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAWAC() (TZ, TA, TW, TA, TC) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAWBX() (TZ, TA, TW, TB, TX) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAWBY() (TZ, TA, TW, TB, TY) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAWBZ() (TZ, TA, TW, TB, TZ) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAWBW() (TZ, TA, TW, TB, TW) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAWBA() (TZ, TA, TW, TB, TA) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAWBB() (TZ, TA, TW, TB, TB) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAWBC() (TZ, TA, TW, TB, TC) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAWCX() (TZ, TA, TW, TC, TX) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAWCY() (TZ, TA, TW, TC, TY) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAWCZ() (TZ, TA, TW, TC, TZ) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAWCW() (TZ, TA, TW, TC, TW) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAWCA() (TZ, TA, TW, TC, TA) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAWCB() (TZ, TA, TW, TC, TB) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAWCC() (TZ, TA, TW, TC, TC) { return _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAAXX() (TZ, TA, TA, TX, TX) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAAXY() (TZ, TA, TA, TX, TY) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAAXZ() (TZ, TA, TA, TX, TZ) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAAXW() (TZ, TA, TA, TX, TW) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAAXA() (TZ, TA, TA, TX, TA) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAAXB() (TZ, TA, TA, TX, TB) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAAXC() (TZ, TA, TA, TX, TC) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAAYX() (TZ, TA, TA, TY, TX) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAAYY() (TZ, TA, TA, TY, TY) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAAYZ() (TZ, TA, TA, TY, TZ) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAAYW() (TZ, TA, TA, TY, TW) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAAYA() (TZ, TA, TA, TY, TA) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAAYB() (TZ, TA, TA, TY, TB) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAAYC() (TZ, TA, TA, TY, TC) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAAZX() (TZ, TA, TA, TZ, TX) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAAZY() (TZ, TA, TA, TZ, TY) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAAZZ() (TZ, TA, TA, TZ, TZ) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAAZW() (TZ, TA, TA, TZ, TW) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAAZA() (TZ, TA, TA, TZ, TA) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAAZB() (TZ, TA, TA, TZ, TB) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAAZC() (TZ, TA, TA, TZ, TC) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAAWX() (TZ, TA, TA, TW, TX) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAAWY() (TZ, TA, TA, TW, TY) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAAWZ() (TZ, TA, TA, TW, TZ) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAAWW() (TZ, TA, TA, TW, TW) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAAWA() (TZ, TA, TA, TW, TA) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAAWB() (TZ, TA, TA, TW, TB) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAAWC() (TZ, TA, TA, TW, TC) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAAAX() (TZ, TA, TA, TA, TX) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAAAY() (TZ, TA, TA, TA, TY) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAAAZ() (TZ, TA, TA, TA, TZ) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAAAW() (TZ, TA, TA, TA, TW) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAAAA() (TZ, TA, TA, TA, TA) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAAAB() (TZ, TA, TA, TA, TB) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAAAC() (TZ, TA, TA, TA, TC) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAABX() (TZ, TA, TA, TB, TX) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAABY() (TZ, TA, TA, TB, TY) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAABZ() (TZ, TA, TA, TB, TZ) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAABW() (TZ, TA, TA, TB, TW) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAABA() (TZ, TA, TA, TB, TA) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAABB() (TZ, TA, TA, TB, TB) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAABC() (TZ, TA, TA, TB, TC) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAACX() (TZ, TA, TA, TC, TX) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAACY() (TZ, TA, TA, TC, TY) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAACZ() (TZ, TA, TA, TC, TZ) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAACW() (TZ, TA, TA, TC, TW) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAACA() (TZ, TA, TA, TC, TA) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAACB() (TZ, TA, TA, TC, TB) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZAACC() (TZ, TA, TA, TC, TC) { return _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZABXX() (TZ, TA, TB, TX, TX) { return _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZABXY() (TZ, TA, TB, TX, TY) { return _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZABXZ() (TZ, TA, TB, TX, TZ) { return _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZABXW() (TZ, TA, TB, TX, TW) { return _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZABXA() (TZ, TA, TB, TX, TA) { return _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZABXB() (TZ, TA, TB, TX, TB) { return _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZABXC() (TZ, TA, TB, TX, TC) { return _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZABYX() (TZ, TA, TB, TY, TX) { return _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZABYY() (TZ, TA, TB, TY, TY) { return _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZABYZ() (TZ, TA, TB, TY, TZ) { return _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZABYW() (TZ, TA, TB, TY, TW) { return _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZABYA() (TZ, TA, TB, TY, TA) { return _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZABYB() (TZ, TA, TB, TY, TB) { return _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZABYC() (TZ, TA, TB, TY, TC) { return _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZABZX() (TZ, TA, TB, TZ, TX) { return _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZABZY() (TZ, TA, TB, TZ, TY) { return _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZABZZ() (TZ, TA, TB, TZ, TZ) { return _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZABZW() (TZ, TA, TB, TZ, TW) { return _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZABZA() (TZ, TA, TB, TZ, TA) { return _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZABZB() (TZ, TA, TB, TZ, TB) { return _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZABZC() (TZ, TA, TB, TZ, TC) { return _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZABWX() (TZ, TA, TB, TW, TX) { return _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZABWY() (TZ, TA, TB, TW, TY) { return _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZABWZ() (TZ, TA, TB, TW, TZ) { return _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZABWW() (TZ, TA, TB, TW, TW) { return _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZABWA() (TZ, TA, TB, TW, TA) { return _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZABWB() (TZ, TA, TB, TW, TB) { return _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZABWC() (TZ, TA, TB, TW, TC) { return _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZABAX() (TZ, TA, TB, TA, TX) { return _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZABAY() (TZ, TA, TB, TA, TY) { return _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZABAZ() (TZ, TA, TB, TA, TZ) { return _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZABAW() (TZ, TA, TB, TA, TW) { return _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZABAA() (TZ, TA, TB, TA, TA) { return _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZABAB() (TZ, TA, TB, TA, TB) { return _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZABAC() (TZ, TA, TB, TA, TC) { return _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZABBX() (TZ, TA, TB, TB, TX) { return _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZABBY() (TZ, TA, TB, TB, TY) { return _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZABBZ() (TZ, TA, TB, TB, TZ) { return _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZABBW() (TZ, TA, TB, TB, TW) { return _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZABBA() (TZ, TA, TB, TB, TA) { return _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZABBB() (TZ, TA, TB, TB, TB) { return _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZABBC() (TZ, TA, TB, TB, TC) { return _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZABCX() (TZ, TA, TB, TC, TX) { return _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZABCY() (TZ, TA, TB, TC, TY) { return _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZABCZ() (TZ, TA, TB, TC, TZ) { return _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZABCW() (TZ, TA, TB, TC, TW) { return _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZABCA() (TZ, TA, TB, TC, TA) { return _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZABCB() (TZ, TA, TB, TC, TB) { return _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZABCC() (TZ, TA, TB, TC, TC) { return _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZACXX() (TZ, TA, TC, TX, TX) { return _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZACXY() (TZ, TA, TC, TX, TY) { return _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZACXZ() (TZ, TA, TC, TX, TZ) { return _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZACXW() (TZ, TA, TC, TX, TW) { return _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZACXA() (TZ, TA, TC, TX, TA) { return _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZACXB() (TZ, TA, TC, TX, TB) { return _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZACXC() (TZ, TA, TC, TX, TC) { return _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZACYX() (TZ, TA, TC, TY, TX) { return _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZACYY() (TZ, TA, TC, TY, TY) { return _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZACYZ() (TZ, TA, TC, TY, TZ) { return _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZACYW() (TZ, TA, TC, TY, TW) { return _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZACYA() (TZ, TA, TC, TY, TA) { return _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZACYB() (TZ, TA, TC, TY, TB) { return _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZACYC() (TZ, TA, TC, TY, TC) { return _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZACZX() (TZ, TA, TC, TZ, TX) { return _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZACZY() (TZ, TA, TC, TZ, TY) { return _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZACZZ() (TZ, TA, TC, TZ, TZ) { return _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZACZW() (TZ, TA, TC, TZ, TW) { return _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZACZA() (TZ, TA, TC, TZ, TA) { return _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZACZB() (TZ, TA, TC, TZ, TB) { return _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZACZC() (TZ, TA, TC, TZ, TC) { return _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZACWX() (TZ, TA, TC, TW, TX) { return _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZACWY() (TZ, TA, TC, TW, TY) { return _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZACWZ() (TZ, TA, TC, TW, TZ) { return _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZACWW() (TZ, TA, TC, TW, TW) { return _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZACWA() (TZ, TA, TC, TW, TA) { return _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZACWB() (TZ, TA, TC, TW, TB) { return _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZACWC() (TZ, TA, TC, TW, TC) { return _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZACAX() (TZ, TA, TC, TA, TX) { return _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZACAY() (TZ, TA, TC, TA, TY) { return _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZACAZ() (TZ, TA, TC, TA, TZ) { return _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZACAW() (TZ, TA, TC, TA, TW) { return _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZACAA() (TZ, TA, TC, TA, TA) { return _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZACAB() (TZ, TA, TC, TA, TB) { return _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZACAC() (TZ, TA, TC, TA, TC) { return _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZACBX() (TZ, TA, TC, TB, TX) { return _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZACBY() (TZ, TA, TC, TB, TY) { return _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZACBZ() (TZ, TA, TC, TB, TZ) { return _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZACBW() (TZ, TA, TC, TB, TW) { return _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZACBA() (TZ, TA, TC, TB, TA) { return _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZACBB() (TZ, TA, TC, TB, TB) { return _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZACBC() (TZ, TA, TC, TB, TC) { return _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZACCX() (TZ, TA, TC, TC, TX) { return _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZACCY() (TZ, TA, TC, TC, TY) { return _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZACCZ() (TZ, TA, TC, TC, TZ) { return _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZACCW() (TZ, TA, TC, TC, TW) { return _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZACCA() (TZ, TA, TC, TC, TA) { return _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZACCB() (TZ, TA, TC, TC, TB) { return _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZACCC() (TZ, TA, TC, TC, TC) { return _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBXXX() (TZ, TB, TX, TX, TX) { return _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBXXY() (TZ, TB, TX, TX, TY) { return _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBXXZ() (TZ, TB, TX, TX, TZ) { return _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBXXW() (TZ, TB, TX, TX, TW) { return _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBXXA() (TZ, TB, TX, TX, TA) { return _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBXXB() (TZ, TB, TX, TX, TB) { return _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBXXC() (TZ, TB, TX, TX, TC) { return _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBXYX() (TZ, TB, TX, TY, TX) { return _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBXYY() (TZ, TB, TX, TY, TY) { return _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBXYZ() (TZ, TB, TX, TY, TZ) { return _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBXYW() (TZ, TB, TX, TY, TW) { return _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBXYA() (TZ, TB, TX, TY, TA) { return _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBXYB() (TZ, TB, TX, TY, TB) { return _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBXYC() (TZ, TB, TX, TY, TC) { return _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBXZX() (TZ, TB, TX, TZ, TX) { return _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBXZY() (TZ, TB, TX, TZ, TY) { return _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBXZZ() (TZ, TB, TX, TZ, TZ) { return _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBXZW() (TZ, TB, TX, TZ, TW) { return _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBXZA() (TZ, TB, TX, TZ, TA) { return _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBXZB() (TZ, TB, TX, TZ, TB) { return _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBXZC() (TZ, TB, TX, TZ, TC) { return _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBXWX() (TZ, TB, TX, TW, TX) { return _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBXWY() (TZ, TB, TX, TW, TY) { return _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBXWZ() (TZ, TB, TX, TW, TZ) { return _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBXWW() (TZ, TB, TX, TW, TW) { return _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBXWA() (TZ, TB, TX, TW, TA) { return _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBXWB() (TZ, TB, TX, TW, TB) { return _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBXWC() (TZ, TB, TX, TW, TC) { return _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBXAX() (TZ, TB, TX, TA, TX) { return _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBXAY() (TZ, TB, TX, TA, TY) { return _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBXAZ() (TZ, TB, TX, TA, TZ) { return _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBXAW() (TZ, TB, TX, TA, TW) { return _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBXAA() (TZ, TB, TX, TA, TA) { return _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBXAB() (TZ, TB, TX, TA, TB) { return _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBXAC() (TZ, TB, TX, TA, TC) { return _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBXBX() (TZ, TB, TX, TB, TX) { return _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBXBY() (TZ, TB, TX, TB, TY) { return _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBXBZ() (TZ, TB, TX, TB, TZ) { return _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBXBW() (TZ, TB, TX, TB, TW) { return _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBXBA() (TZ, TB, TX, TB, TA) { return _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBXBB() (TZ, TB, TX, TB, TB) { return _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBXBC() (TZ, TB, TX, TB, TC) { return _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBXCX() (TZ, TB, TX, TC, TX) { return _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBXCY() (TZ, TB, TX, TC, TY) { return _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBXCZ() (TZ, TB, TX, TC, TZ) { return _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBXCW() (TZ, TB, TX, TC, TW) { return _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBXCA() (TZ, TB, TX, TC, TA) { return _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBXCB() (TZ, TB, TX, TC, TB) { return _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBXCC() (TZ, TB, TX, TC, TC) { return _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBYXX() (TZ, TB, TY, TX, TX) { return _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBYXY() (TZ, TB, TY, TX, TY) { return _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBYXZ() (TZ, TB, TY, TX, TZ) { return _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBYXW() (TZ, TB, TY, TX, TW) { return _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBYXA() (TZ, TB, TY, TX, TA) { return _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBYXB() (TZ, TB, TY, TX, TB) { return _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBYXC() (TZ, TB, TY, TX, TC) { return _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBYYX() (TZ, TB, TY, TY, TX) { return _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBYYY() (TZ, TB, TY, TY, TY) { return _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBYYZ() (TZ, TB, TY, TY, TZ) { return _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBYYW() (TZ, TB, TY, TY, TW) { return _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBYYA() (TZ, TB, TY, TY, TA) { return _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBYYB() (TZ, TB, TY, TY, TB) { return _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBYYC() (TZ, TB, TY, TY, TC) { return _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBYZX() (TZ, TB, TY, TZ, TX) { return _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBYZY() (TZ, TB, TY, TZ, TY) { return _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBYZZ() (TZ, TB, TY, TZ, TZ) { return _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBYZW() (TZ, TB, TY, TZ, TW) { return _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBYZA() (TZ, TB, TY, TZ, TA) { return _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBYZB() (TZ, TB, TY, TZ, TB) { return _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBYZC() (TZ, TB, TY, TZ, TC) { return _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBYWX() (TZ, TB, TY, TW, TX) { return _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBYWY() (TZ, TB, TY, TW, TY) { return _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBYWZ() (TZ, TB, TY, TW, TZ) { return _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBYWW() (TZ, TB, TY, TW, TW) { return _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBYWA() (TZ, TB, TY, TW, TA) { return _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBYWB() (TZ, TB, TY, TW, TB) { return _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBYWC() (TZ, TB, TY, TW, TC) { return _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBYAX() (TZ, TB, TY, TA, TX) { return _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBYAY() (TZ, TB, TY, TA, TY) { return _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBYAZ() (TZ, TB, TY, TA, TZ) { return _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBYAW() (TZ, TB, TY, TA, TW) { return _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBYAA() (TZ, TB, TY, TA, TA) { return _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBYAB() (TZ, TB, TY, TA, TB) { return _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBYAC() (TZ, TB, TY, TA, TC) { return _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBYBX() (TZ, TB, TY, TB, TX) { return _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBYBY() (TZ, TB, TY, TB, TY) { return _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBYBZ() (TZ, TB, TY, TB, TZ) { return _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBYBW() (TZ, TB, TY, TB, TW) { return _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBYBA() (TZ, TB, TY, TB, TA) { return _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBYBB() (TZ, TB, TY, TB, TB) { return _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBYBC() (TZ, TB, TY, TB, TC) { return _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBYCX() (TZ, TB, TY, TC, TX) { return _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBYCY() (TZ, TB, TY, TC, TY) { return _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBYCZ() (TZ, TB, TY, TC, TZ) { return _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBYCW() (TZ, TB, TY, TC, TW) { return _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBYCA() (TZ, TB, TY, TC, TA) { return _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBYCB() (TZ, TB, TY, TC, TB) { return _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBYCC() (TZ, TB, TY, TC, TC) { return _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBZXX() (TZ, TB, TZ, TX, TX) { return _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBZXY() (TZ, TB, TZ, TX, TY) { return _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBZXZ() (TZ, TB, TZ, TX, TZ) { return _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBZXW() (TZ, TB, TZ, TX, TW) { return _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBZXA() (TZ, TB, TZ, TX, TA) { return _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBZXB() (TZ, TB, TZ, TX, TB) { return _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBZXC() (TZ, TB, TZ, TX, TC) { return _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBZYX() (TZ, TB, TZ, TY, TX) { return _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBZYY() (TZ, TB, TZ, TY, TY) { return _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBZYZ() (TZ, TB, TZ, TY, TZ) { return _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBZYW() (TZ, TB, TZ, TY, TW) { return _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBZYA() (TZ, TB, TZ, TY, TA) { return _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBZYB() (TZ, TB, TZ, TY, TB) { return _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBZYC() (TZ, TB, TZ, TY, TC) { return _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBZZX() (TZ, TB, TZ, TZ, TX) { return _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBZZY() (TZ, TB, TZ, TZ, TY) { return _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBZZZ() (TZ, TB, TZ, TZ, TZ) { return _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBZZW() (TZ, TB, TZ, TZ, TW) { return _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBZZA() (TZ, TB, TZ, TZ, TA) { return _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBZZB() (TZ, TB, TZ, TZ, TB) { return _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBZZC() (TZ, TB, TZ, TZ, TC) { return _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBZWX() (TZ, TB, TZ, TW, TX) { return _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBZWY() (TZ, TB, TZ, TW, TY) { return _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBZWZ() (TZ, TB, TZ, TW, TZ) { return _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBZWW() (TZ, TB, TZ, TW, TW) { return _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBZWA() (TZ, TB, TZ, TW, TA) { return _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBZWB() (TZ, TB, TZ, TW, TB) { return _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBZWC() (TZ, TB, TZ, TW, TC) { return _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBZAX() (TZ, TB, TZ, TA, TX) { return _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBZAY() (TZ, TB, TZ, TA, TY) { return _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBZAZ() (TZ, TB, TZ, TA, TZ) { return _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBZAW() (TZ, TB, TZ, TA, TW) { return _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBZAA() (TZ, TB, TZ, TA, TA) { return _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBZAB() (TZ, TB, TZ, TA, TB) { return _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBZAC() (TZ, TB, TZ, TA, TC) { return _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBZBX() (TZ, TB, TZ, TB, TX) { return _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBZBY() (TZ, TB, TZ, TB, TY) { return _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBZBZ() (TZ, TB, TZ, TB, TZ) { return _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBZBW() (TZ, TB, TZ, TB, TW) { return _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBZBA() (TZ, TB, TZ, TB, TA) { return _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBZBB() (TZ, TB, TZ, TB, TB) { return _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBZBC() (TZ, TB, TZ, TB, TC) { return _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBZCX() (TZ, TB, TZ, TC, TX) { return _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBZCY() (TZ, TB, TZ, TC, TY) { return _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBZCZ() (TZ, TB, TZ, TC, TZ) { return _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBZCW() (TZ, TB, TZ, TC, TW) { return _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBZCA() (TZ, TB, TZ, TC, TA) { return _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBZCB() (TZ, TB, TZ, TC, TB) { return _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBZCC() (TZ, TB, TZ, TC, TC) { return _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBWXX() (TZ, TB, TW, TX, TX) { return _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBWXY() (TZ, TB, TW, TX, TY) { return _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBWXZ() (TZ, TB, TW, TX, TZ) { return _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBWXW() (TZ, TB, TW, TX, TW) { return _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBWXA() (TZ, TB, TW, TX, TA) { return _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBWXB() (TZ, TB, TW, TX, TB) { return _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBWXC() (TZ, TB, TW, TX, TC) { return _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBWYX() (TZ, TB, TW, TY, TX) { return _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBWYY() (TZ, TB, TW, TY, TY) { return _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBWYZ() (TZ, TB, TW, TY, TZ) { return _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBWYW() (TZ, TB, TW, TY, TW) { return _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBWYA() (TZ, TB, TW, TY, TA) { return _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBWYB() (TZ, TB, TW, TY, TB) { return _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBWYC() (TZ, TB, TW, TY, TC) { return _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBWZX() (TZ, TB, TW, TZ, TX) { return _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBWZY() (TZ, TB, TW, TZ, TY) { return _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBWZZ() (TZ, TB, TW, TZ, TZ) { return _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBWZW() (TZ, TB, TW, TZ, TW) { return _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBWZA() (TZ, TB, TW, TZ, TA) { return _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBWZB() (TZ, TB, TW, TZ, TB) { return _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBWZC() (TZ, TB, TW, TZ, TC) { return _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBWWX() (TZ, TB, TW, TW, TX) { return _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBWWY() (TZ, TB, TW, TW, TY) { return _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBWWZ() (TZ, TB, TW, TW, TZ) { return _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBWWW() (TZ, TB, TW, TW, TW) { return _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBWWA() (TZ, TB, TW, TW, TA) { return _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBWWB() (TZ, TB, TW, TW, TB) { return _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBWWC() (TZ, TB, TW, TW, TC) { return _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBWAX() (TZ, TB, TW, TA, TX) { return _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBWAY() (TZ, TB, TW, TA, TY) { return _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBWAZ() (TZ, TB, TW, TA, TZ) { return _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBWAW() (TZ, TB, TW, TA, TW) { return _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBWAA() (TZ, TB, TW, TA, TA) { return _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBWAB() (TZ, TB, TW, TA, TB) { return _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBWAC() (TZ, TB, TW, TA, TC) { return _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBWBX() (TZ, TB, TW, TB, TX) { return _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBWBY() (TZ, TB, TW, TB, TY) { return _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBWBZ() (TZ, TB, TW, TB, TZ) { return _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBWBW() (TZ, TB, TW, TB, TW) { return _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBWBA() (TZ, TB, TW, TB, TA) { return _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBWBB() (TZ, TB, TW, TB, TB) { return _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBWBC() (TZ, TB, TW, TB, TC) { return _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBWCX() (TZ, TB, TW, TC, TX) { return _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBWCY() (TZ, TB, TW, TC, TY) { return _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBWCZ() (TZ, TB, TW, TC, TZ) { return _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBWCW() (TZ, TB, TW, TC, TW) { return _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBWCA() (TZ, TB, TW, TC, TA) { return _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBWCB() (TZ, TB, TW, TC, TB) { return _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBWCC() (TZ, TB, TW, TC, TC) { return _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBAXX() (TZ, TB, TA, TX, TX) { return _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBAXY() (TZ, TB, TA, TX, TY) { return _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBAXZ() (TZ, TB, TA, TX, TZ) { return _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBAXW() (TZ, TB, TA, TX, TW) { return _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBAXA() (TZ, TB, TA, TX, TA) { return _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBAXB() (TZ, TB, TA, TX, TB) { return _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBAXC() (TZ, TB, TA, TX, TC) { return _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBAYX() (TZ, TB, TA, TY, TX) { return _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBAYY() (TZ, TB, TA, TY, TY) { return _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBAYZ() (TZ, TB, TA, TY, TZ) { return _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBAYW() (TZ, TB, TA, TY, TW) { return _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBAYA() (TZ, TB, TA, TY, TA) { return _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBAYB() (TZ, TB, TA, TY, TB) { return _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBAYC() (TZ, TB, TA, TY, TC) { return _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBAZX() (TZ, TB, TA, TZ, TX) { return _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBAZY() (TZ, TB, TA, TZ, TY) { return _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBAZZ() (TZ, TB, TA, TZ, TZ) { return _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBAZW() (TZ, TB, TA, TZ, TW) { return _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBAZA() (TZ, TB, TA, TZ, TA) { return _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBAZB() (TZ, TB, TA, TZ, TB) { return _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBAZC() (TZ, TB, TA, TZ, TC) { return _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBAWX() (TZ, TB, TA, TW, TX) { return _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBAWY() (TZ, TB, TA, TW, TY) { return _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBAWZ() (TZ, TB, TA, TW, TZ) { return _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBAWW() (TZ, TB, TA, TW, TW) { return _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBAWA() (TZ, TB, TA, TW, TA) { return _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBAWB() (TZ, TB, TA, TW, TB) { return _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBAWC() (TZ, TB, TA, TW, TC) { return _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBAAX() (TZ, TB, TA, TA, TX) { return _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBAAY() (TZ, TB, TA, TA, TY) { return _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBAAZ() (TZ, TB, TA, TA, TZ) { return _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBAAW() (TZ, TB, TA, TA, TW) { return _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBAAA() (TZ, TB, TA, TA, TA) { return _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBAAB() (TZ, TB, TA, TA, TB) { return _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBAAC() (TZ, TB, TA, TA, TC) { return _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBABX() (TZ, TB, TA, TB, TX) { return _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBABY() (TZ, TB, TA, TB, TY) { return _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBABZ() (TZ, TB, TA, TB, TZ) { return _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBABW() (TZ, TB, TA, TB, TW) { return _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBABA() (TZ, TB, TA, TB, TA) { return _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBABB() (TZ, TB, TA, TB, TB) { return _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBABC() (TZ, TB, TA, TB, TC) { return _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBACX() (TZ, TB, TA, TC, TX) { return _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBACY() (TZ, TB, TA, TC, TY) { return _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBACZ() (TZ, TB, TA, TC, TZ) { return _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBACW() (TZ, TB, TA, TC, TW) { return _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBACA() (TZ, TB, TA, TC, TA) { return _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBACB() (TZ, TB, TA, TC, TB) { return _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBACC() (TZ, TB, TA, TC, TC) { return _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBBXX() (TZ, TB, TB, TX, TX) { return _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBBXY() (TZ, TB, TB, TX, TY) { return _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBBXZ() (TZ, TB, TB, TX, TZ) { return _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBBXW() (TZ, TB, TB, TX, TW) { return _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBBXA() (TZ, TB, TB, TX, TA) { return _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBBXB() (TZ, TB, TB, TX, TB) { return _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBBXC() (TZ, TB, TB, TX, TC) { return _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBBYX() (TZ, TB, TB, TY, TX) { return _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBBYY() (TZ, TB, TB, TY, TY) { return _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBBYZ() (TZ, TB, TB, TY, TZ) { return _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBBYW() (TZ, TB, TB, TY, TW) { return _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBBYA() (TZ, TB, TB, TY, TA) { return _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBBYB() (TZ, TB, TB, TY, TB) { return _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBBYC() (TZ, TB, TB, TY, TC) { return _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBBZX() (TZ, TB, TB, TZ, TX) { return _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBBZY() (TZ, TB, TB, TZ, TY) { return _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBBZZ() (TZ, TB, TB, TZ, TZ) { return _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBBZW() (TZ, TB, TB, TZ, TW) { return _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBBZA() (TZ, TB, TB, TZ, TA) { return _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBBZB() (TZ, TB, TB, TZ, TB) { return _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBBZC() (TZ, TB, TB, TZ, TC) { return _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBBWX() (TZ, TB, TB, TW, TX) { return _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBBWY() (TZ, TB, TB, TW, TY) { return _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBBWZ() (TZ, TB, TB, TW, TZ) { return _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBBWW() (TZ, TB, TB, TW, TW) { return _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBBWA() (TZ, TB, TB, TW, TA) { return _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBBWB() (TZ, TB, TB, TW, TB) { return _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBBWC() (TZ, TB, TB, TW, TC) { return _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBBAX() (TZ, TB, TB, TA, TX) { return _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBBAY() (TZ, TB, TB, TA, TY) { return _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBBAZ() (TZ, TB, TB, TA, TZ) { return _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBBAW() (TZ, TB, TB, TA, TW) { return _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBBAA() (TZ, TB, TB, TA, TA) { return _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBBAB() (TZ, TB, TB, TA, TB) { return _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBBAC() (TZ, TB, TB, TA, TC) { return _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBBBX() (TZ, TB, TB, TB, TX) { return _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBBBY() (TZ, TB, TB, TB, TY) { return _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBBBZ() (TZ, TB, TB, TB, TZ) { return _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBBBW() (TZ, TB, TB, TB, TW) { return _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBBBA() (TZ, TB, TB, TB, TA) { return _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBBBB() (TZ, TB, TB, TB, TB) { return _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBBBC() (TZ, TB, TB, TB, TC) { return _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBBCX() (TZ, TB, TB, TC, TX) { return _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBBCY() (TZ, TB, TB, TC, TY) { return _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBBCZ() (TZ, TB, TB, TC, TZ) { return _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBBCW() (TZ, TB, TB, TC, TW) { return _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBBCA() (TZ, TB, TB, TC, TA) { return _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBBCB() (TZ, TB, TB, TC, TB) { return _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBBCC() (TZ, TB, TB, TC, TC) { return _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBCXX() (TZ, TB, TC, TX, TX) { return _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBCXY() (TZ, TB, TC, TX, TY) { return _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBCXZ() (TZ, TB, TC, TX, TZ) { return _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBCXW() (TZ, TB, TC, TX, TW) { return _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBCXA() (TZ, TB, TC, TX, TA) { return _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBCXB() (TZ, TB, TC, TX, TB) { return _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBCXC() (TZ, TB, TC, TX, TC) { return _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBCYX() (TZ, TB, TC, TY, TX) { return _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBCYY() (TZ, TB, TC, TY, TY) { return _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBCYZ() (TZ, TB, TC, TY, TZ) { return _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBCYW() (TZ, TB, TC, TY, TW) { return _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBCYA() (TZ, TB, TC, TY, TA) { return _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBCYB() (TZ, TB, TC, TY, TB) { return _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBCYC() (TZ, TB, TC, TY, TC) { return _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBCZX() (TZ, TB, TC, TZ, TX) { return _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBCZY() (TZ, TB, TC, TZ, TY) { return _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBCZZ() (TZ, TB, TC, TZ, TZ) { return _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBCZW() (TZ, TB, TC, TZ, TW) { return _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBCZA() (TZ, TB, TC, TZ, TA) { return _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBCZB() (TZ, TB, TC, TZ, TB) { return _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBCZC() (TZ, TB, TC, TZ, TC) { return _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBCWX() (TZ, TB, TC, TW, TX) { return _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBCWY() (TZ, TB, TC, TW, TY) { return _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBCWZ() (TZ, TB, TC, TW, TZ) { return _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBCWW() (TZ, TB, TC, TW, TW) { return _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBCWA() (TZ, TB, TC, TW, TA) { return _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBCWB() (TZ, TB, TC, TW, TB) { return _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBCWC() (TZ, TB, TC, TW, TC) { return _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBCAX() (TZ, TB, TC, TA, TX) { return _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBCAY() (TZ, TB, TC, TA, TY) { return _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBCAZ() (TZ, TB, TC, TA, TZ) { return _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBCAW() (TZ, TB, TC, TA, TW) { return _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBCAA() (TZ, TB, TC, TA, TA) { return _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBCAB() (TZ, TB, TC, TA, TB) { return _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBCAC() (TZ, TB, TC, TA, TC) { return _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBCBX() (TZ, TB, TC, TB, TX) { return _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBCBY() (TZ, TB, TC, TB, TY) { return _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBCBZ() (TZ, TB, TC, TB, TZ) { return _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBCBW() (TZ, TB, TC, TB, TW) { return _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBCBA() (TZ, TB, TC, TB, TA) { return _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBCBB() (TZ, TB, TC, TB, TB) { return _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBCBC() (TZ, TB, TC, TB, TC) { return _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBCCX() (TZ, TB, TC, TC, TX) { return _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBCCY() (TZ, TB, TC, TC, TY) { return _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBCCZ() (TZ, TB, TC, TC, TZ) { return _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBCCW() (TZ, TB, TC, TC, TW) { return _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBCCA() (TZ, TB, TC, TC, TA) { return _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBCCB() (TZ, TB, TC, TC, TB) { return _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZBCCC() (TZ, TB, TC, TC, TC) { return _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCXXX() (TZ, TC, TX, TX, TX) { return _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCXXY() (TZ, TC, TX, TX, TY) { return _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCXXZ() (TZ, TC, TX, TX, TZ) { return _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCXXW() (TZ, TC, TX, TX, TW) { return _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCXXA() (TZ, TC, TX, TX, TA) { return _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCXXB() (TZ, TC, TX, TX, TB) { return _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCXXC() (TZ, TC, TX, TX, TC) { return _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCXYX() (TZ, TC, TX, TY, TX) { return _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCXYY() (TZ, TC, TX, TY, TY) { return _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCXYZ() (TZ, TC, TX, TY, TZ) { return _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCXYW() (TZ, TC, TX, TY, TW) { return _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCXYA() (TZ, TC, TX, TY, TA) { return _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCXYB() (TZ, TC, TX, TY, TB) { return _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCXYC() (TZ, TC, TX, TY, TC) { return _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCXZX() (TZ, TC, TX, TZ, TX) { return _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCXZY() (TZ, TC, TX, TZ, TY) { return _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCXZZ() (TZ, TC, TX, TZ, TZ) { return _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCXZW() (TZ, TC, TX, TZ, TW) { return _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCXZA() (TZ, TC, TX, TZ, TA) { return _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCXZB() (TZ, TC, TX, TZ, TB) { return _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCXZC() (TZ, TC, TX, TZ, TC) { return _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCXWX() (TZ, TC, TX, TW, TX) { return _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCXWY() (TZ, TC, TX, TW, TY) { return _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCXWZ() (TZ, TC, TX, TW, TZ) { return _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCXWW() (TZ, TC, TX, TW, TW) { return _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCXWA() (TZ, TC, TX, TW, TA) { return _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCXWB() (TZ, TC, TX, TW, TB) { return _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCXWC() (TZ, TC, TX, TW, TC) { return _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCXAX() (TZ, TC, TX, TA, TX) { return _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCXAY() (TZ, TC, TX, TA, TY) { return _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCXAZ() (TZ, TC, TX, TA, TZ) { return _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCXAW() (TZ, TC, TX, TA, TW) { return _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCXAA() (TZ, TC, TX, TA, TA) { return _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCXAB() (TZ, TC, TX, TA, TB) { return _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCXAC() (TZ, TC, TX, TA, TC) { return _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCXBX() (TZ, TC, TX, TB, TX) { return _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCXBY() (TZ, TC, TX, TB, TY) { return _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCXBZ() (TZ, TC, TX, TB, TZ) { return _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCXBW() (TZ, TC, TX, TB, TW) { return _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCXBA() (TZ, TC, TX, TB, TA) { return _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCXBB() (TZ, TC, TX, TB, TB) { return _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCXBC() (TZ, TC, TX, TB, TC) { return _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCXCX() (TZ, TC, TX, TC, TX) { return _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCXCY() (TZ, TC, TX, TC, TY) { return _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCXCZ() (TZ, TC, TX, TC, TZ) { return _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCXCW() (TZ, TC, TX, TC, TW) { return _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCXCA() (TZ, TC, TX, TC, TA) { return _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCXCB() (TZ, TC, TX, TC, TB) { return _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCXCC() (TZ, TC, TX, TC, TC) { return _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCYXX() (TZ, TC, TY, TX, TX) { return _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCYXY() (TZ, TC, TY, TX, TY) { return _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCYXZ() (TZ, TC, TY, TX, TZ) { return _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCYXW() (TZ, TC, TY, TX, TW) { return _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCYXA() (TZ, TC, TY, TX, TA) { return _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCYXB() (TZ, TC, TY, TX, TB) { return _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCYXC() (TZ, TC, TY, TX, TC) { return _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCYYX() (TZ, TC, TY, TY, TX) { return _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCYYY() (TZ, TC, TY, TY, TY) { return _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCYYZ() (TZ, TC, TY, TY, TZ) { return _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCYYW() (TZ, TC, TY, TY, TW) { return _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCYYA() (TZ, TC, TY, TY, TA) { return _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCYYB() (TZ, TC, TY, TY, TB) { return _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCYYC() (TZ, TC, TY, TY, TC) { return _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCYZX() (TZ, TC, TY, TZ, TX) { return _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCYZY() (TZ, TC, TY, TZ, TY) { return _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCYZZ() (TZ, TC, TY, TZ, TZ) { return _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCYZW() (TZ, TC, TY, TZ, TW) { return _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCYZA() (TZ, TC, TY, TZ, TA) { return _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCYZB() (TZ, TC, TY, TZ, TB) { return _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCYZC() (TZ, TC, TY, TZ, TC) { return _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCYWX() (TZ, TC, TY, TW, TX) { return _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCYWY() (TZ, TC, TY, TW, TY) { return _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCYWZ() (TZ, TC, TY, TW, TZ) { return _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCYWW() (TZ, TC, TY, TW, TW) { return _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCYWA() (TZ, TC, TY, TW, TA) { return _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCYWB() (TZ, TC, TY, TW, TB) { return _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCYWC() (TZ, TC, TY, TW, TC) { return _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCYAX() (TZ, TC, TY, TA, TX) { return _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCYAY() (TZ, TC, TY, TA, TY) { return _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCYAZ() (TZ, TC, TY, TA, TZ) { return _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCYAW() (TZ, TC, TY, TA, TW) { return _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCYAA() (TZ, TC, TY, TA, TA) { return _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCYAB() (TZ, TC, TY, TA, TB) { return _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCYAC() (TZ, TC, TY, TA, TC) { return _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCYBX() (TZ, TC, TY, TB, TX) { return _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCYBY() (TZ, TC, TY, TB, TY) { return _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCYBZ() (TZ, TC, TY, TB, TZ) { return _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCYBW() (TZ, TC, TY, TB, TW) { return _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCYBA() (TZ, TC, TY, TB, TA) { return _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCYBB() (TZ, TC, TY, TB, TB) { return _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCYBC() (TZ, TC, TY, TB, TC) { return _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCYCX() (TZ, TC, TY, TC, TX) { return _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCYCY() (TZ, TC, TY, TC, TY) { return _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCYCZ() (TZ, TC, TY, TC, TZ) { return _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCYCW() (TZ, TC, TY, TC, TW) { return _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCYCA() (TZ, TC, TY, TC, TA) { return _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCYCB() (TZ, TC, TY, TC, TB) { return _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCYCC() (TZ, TC, TY, TC, TC) { return _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCZXX() (TZ, TC, TZ, TX, TX) { return _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCZXY() (TZ, TC, TZ, TX, TY) { return _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCZXZ() (TZ, TC, TZ, TX, TZ) { return _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCZXW() (TZ, TC, TZ, TX, TW) { return _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCZXA() (TZ, TC, TZ, TX, TA) { return _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCZXB() (TZ, TC, TZ, TX, TB) { return _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCZXC() (TZ, TC, TZ, TX, TC) { return _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCZYX() (TZ, TC, TZ, TY, TX) { return _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCZYY() (TZ, TC, TZ, TY, TY) { return _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCZYZ() (TZ, TC, TZ, TY, TZ) { return _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCZYW() (TZ, TC, TZ, TY, TW) { return _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCZYA() (TZ, TC, TZ, TY, TA) { return _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCZYB() (TZ, TC, TZ, TY, TB) { return _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCZYC() (TZ, TC, TZ, TY, TC) { return _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCZZX() (TZ, TC, TZ, TZ, TX) { return _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCZZY() (TZ, TC, TZ, TZ, TY) { return _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCZZZ() (TZ, TC, TZ, TZ, TZ) { return _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCZZW() (TZ, TC, TZ, TZ, TW) { return _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCZZA() (TZ, TC, TZ, TZ, TA) { return _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCZZB() (TZ, TC, TZ, TZ, TB) { return _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCZZC() (TZ, TC, TZ, TZ, TC) { return _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCZWX() (TZ, TC, TZ, TW, TX) { return _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCZWY() (TZ, TC, TZ, TW, TY) { return _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCZWZ() (TZ, TC, TZ, TW, TZ) { return _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCZWW() (TZ, TC, TZ, TW, TW) { return _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCZWA() (TZ, TC, TZ, TW, TA) { return _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCZWB() (TZ, TC, TZ, TW, TB) { return _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCZWC() (TZ, TC, TZ, TW, TC) { return _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCZAX() (TZ, TC, TZ, TA, TX) { return _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCZAY() (TZ, TC, TZ, TA, TY) { return _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCZAZ() (TZ, TC, TZ, TA, TZ) { return _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCZAW() (TZ, TC, TZ, TA, TW) { return _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCZAA() (TZ, TC, TZ, TA, TA) { return _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCZAB() (TZ, TC, TZ, TA, TB) { return _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCZAC() (TZ, TC, TZ, TA, TC) { return _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCZBX() (TZ, TC, TZ, TB, TX) { return _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCZBY() (TZ, TC, TZ, TB, TY) { return _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCZBZ() (TZ, TC, TZ, TB, TZ) { return _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCZBW() (TZ, TC, TZ, TB, TW) { return _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCZBA() (TZ, TC, TZ, TB, TA) { return _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCZBB() (TZ, TC, TZ, TB, TB) { return _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCZBC() (TZ, TC, TZ, TB, TC) { return _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCZCX() (TZ, TC, TZ, TC, TX) { return _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCZCY() (TZ, TC, TZ, TC, TY) { return _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCZCZ() (TZ, TC, TZ, TC, TZ) { return _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCZCW() (TZ, TC, TZ, TC, TW) { return _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCZCA() (TZ, TC, TZ, TC, TA) { return _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCZCB() (TZ, TC, TZ, TC, TB) { return _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCZCC() (TZ, TC, TZ, TC, TC) { return _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCWXX() (TZ, TC, TW, TX, TX) { return _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCWXY() (TZ, TC, TW, TX, TY) { return _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCWXZ() (TZ, TC, TW, TX, TZ) { return _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCWXW() (TZ, TC, TW, TX, TW) { return _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCWXA() (TZ, TC, TW, TX, TA) { return _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCWXB() (TZ, TC, TW, TX, TB) { return _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCWXC() (TZ, TC, TW, TX, TC) { return _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCWYX() (TZ, TC, TW, TY, TX) { return _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCWYY() (TZ, TC, TW, TY, TY) { return _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCWYZ() (TZ, TC, TW, TY, TZ) { return _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCWYW() (TZ, TC, TW, TY, TW) { return _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCWYA() (TZ, TC, TW, TY, TA) { return _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCWYB() (TZ, TC, TW, TY, TB) { return _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCWYC() (TZ, TC, TW, TY, TC) { return _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCWZX() (TZ, TC, TW, TZ, TX) { return _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCWZY() (TZ, TC, TW, TZ, TY) { return _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCWZZ() (TZ, TC, TW, TZ, TZ) { return _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCWZW() (TZ, TC, TW, TZ, TW) { return _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCWZA() (TZ, TC, TW, TZ, TA) { return _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCWZB() (TZ, TC, TW, TZ, TB) { return _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCWZC() (TZ, TC, TW, TZ, TC) { return _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCWWX() (TZ, TC, TW, TW, TX) { return _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCWWY() (TZ, TC, TW, TW, TY) { return _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCWWZ() (TZ, TC, TW, TW, TZ) { return _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCWWW() (TZ, TC, TW, TW, TW) { return _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCWWA() (TZ, TC, TW, TW, TA) { return _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCWWB() (TZ, TC, TW, TW, TB) { return _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCWWC() (TZ, TC, TW, TW, TC) { return _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCWAX() (TZ, TC, TW, TA, TX) { return _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCWAY() (TZ, TC, TW, TA, TY) { return _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCWAZ() (TZ, TC, TW, TA, TZ) { return _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCWAW() (TZ, TC, TW, TA, TW) { return _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCWAA() (TZ, TC, TW, TA, TA) { return _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCWAB() (TZ, TC, TW, TA, TB) { return _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCWAC() (TZ, TC, TW, TA, TC) { return _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCWBX() (TZ, TC, TW, TB, TX) { return _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCWBY() (TZ, TC, TW, TB, TY) { return _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCWBZ() (TZ, TC, TW, TB, TZ) { return _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCWBW() (TZ, TC, TW, TB, TW) { return _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCWBA() (TZ, TC, TW, TB, TA) { return _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCWBB() (TZ, TC, TW, TB, TB) { return _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCWBC() (TZ, TC, TW, TB, TC) { return _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCWCX() (TZ, TC, TW, TC, TX) { return _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCWCY() (TZ, TC, TW, TC, TY) { return _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCWCZ() (TZ, TC, TW, TC, TZ) { return _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCWCW() (TZ, TC, TW, TC, TW) { return _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCWCA() (TZ, TC, TW, TC, TA) { return _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCWCB() (TZ, TC, TW, TC, TB) { return _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCWCC() (TZ, TC, TW, TC, TC) { return _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCAXX() (TZ, TC, TA, TX, TX) { return _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCAXY() (TZ, TC, TA, TX, TY) { return _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCAXZ() (TZ, TC, TA, TX, TZ) { return _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCAXW() (TZ, TC, TA, TX, TW) { return _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCAXA() (TZ, TC, TA, TX, TA) { return _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCAXB() (TZ, TC, TA, TX, TB) { return _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCAXC() (TZ, TC, TA, TX, TC) { return _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCAYX() (TZ, TC, TA, TY, TX) { return _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCAYY() (TZ, TC, TA, TY, TY) { return _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCAYZ() (TZ, TC, TA, TY, TZ) { return _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCAYW() (TZ, TC, TA, TY, TW) { return _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCAYA() (TZ, TC, TA, TY, TA) { return _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCAYB() (TZ, TC, TA, TY, TB) { return _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCAYC() (TZ, TC, TA, TY, TC) { return _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCAZX() (TZ, TC, TA, TZ, TX) { return _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCAZY() (TZ, TC, TA, TZ, TY) { return _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCAZZ() (TZ, TC, TA, TZ, TZ) { return _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCAZW() (TZ, TC, TA, TZ, TW) { return _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCAZA() (TZ, TC, TA, TZ, TA) { return _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCAZB() (TZ, TC, TA, TZ, TB) { return _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCAZC() (TZ, TC, TA, TZ, TC) { return _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCAWX() (TZ, TC, TA, TW, TX) { return _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCAWY() (TZ, TC, TA, TW, TY) { return _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCAWZ() (TZ, TC, TA, TW, TZ) { return _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCAWW() (TZ, TC, TA, TW, TW) { return _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCAWA() (TZ, TC, TA, TW, TA) { return _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCAWB() (TZ, TC, TA, TW, TB) { return _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCAWC() (TZ, TC, TA, TW, TC) { return _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCAAX() (TZ, TC, TA, TA, TX) { return _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCAAY() (TZ, TC, TA, TA, TY) { return _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCAAZ() (TZ, TC, TA, TA, TZ) { return _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCAAW() (TZ, TC, TA, TA, TW) { return _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCAAA() (TZ, TC, TA, TA, TA) { return _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCAAB() (TZ, TC, TA, TA, TB) { return _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCAAC() (TZ, TC, TA, TA, TC) { return _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCABX() (TZ, TC, TA, TB, TX) { return _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCABY() (TZ, TC, TA, TB, TY) { return _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCABZ() (TZ, TC, TA, TB, TZ) { return _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCABW() (TZ, TC, TA, TB, TW) { return _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCABA() (TZ, TC, TA, TB, TA) { return _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCABB() (TZ, TC, TA, TB, TB) { return _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCABC() (TZ, TC, TA, TB, TC) { return _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCACX() (TZ, TC, TA, TC, TX) { return _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCACY() (TZ, TC, TA, TC, TY) { return _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCACZ() (TZ, TC, TA, TC, TZ) { return _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCACW() (TZ, TC, TA, TC, TW) { return _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCACA() (TZ, TC, TA, TC, TA) { return _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCACB() (TZ, TC, TA, TC, TB) { return _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCACC() (TZ, TC, TA, TC, TC) { return _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCBXX() (TZ, TC, TB, TX, TX) { return _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCBXY() (TZ, TC, TB, TX, TY) { return _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCBXZ() (TZ, TC, TB, TX, TZ) { return _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCBXW() (TZ, TC, TB, TX, TW) { return _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCBXA() (TZ, TC, TB, TX, TA) { return _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCBXB() (TZ, TC, TB, TX, TB) { return _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCBXC() (TZ, TC, TB, TX, TC) { return _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCBYX() (TZ, TC, TB, TY, TX) { return _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCBYY() (TZ, TC, TB, TY, TY) { return _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCBYZ() (TZ, TC, TB, TY, TZ) { return _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCBYW() (TZ, TC, TB, TY, TW) { return _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCBYA() (TZ, TC, TB, TY, TA) { return _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCBYB() (TZ, TC, TB, TY, TB) { return _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCBYC() (TZ, TC, TB, TY, TC) { return _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCBZX() (TZ, TC, TB, TZ, TX) { return _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCBZY() (TZ, TC, TB, TZ, TY) { return _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCBZZ() (TZ, TC, TB, TZ, TZ) { return _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCBZW() (TZ, TC, TB, TZ, TW) { return _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCBZA() (TZ, TC, TB, TZ, TA) { return _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCBZB() (TZ, TC, TB, TZ, TB) { return _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCBZC() (TZ, TC, TB, TZ, TC) { return _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCBWX() (TZ, TC, TB, TW, TX) { return _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCBWY() (TZ, TC, TB, TW, TY) { return _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCBWZ() (TZ, TC, TB, TW, TZ) { return _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCBWW() (TZ, TC, TB, TW, TW) { return _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCBWA() (TZ, TC, TB, TW, TA) { return _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCBWB() (TZ, TC, TB, TW, TB) { return _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCBWC() (TZ, TC, TB, TW, TC) { return _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCBAX() (TZ, TC, TB, TA, TX) { return _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCBAY() (TZ, TC, TB, TA, TY) { return _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCBAZ() (TZ, TC, TB, TA, TZ) { return _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCBAW() (TZ, TC, TB, TA, TW) { return _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCBAA() (TZ, TC, TB, TA, TA) { return _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCBAB() (TZ, TC, TB, TA, TB) { return _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCBAC() (TZ, TC, TB, TA, TC) { return _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCBBX() (TZ, TC, TB, TB, TX) { return _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCBBY() (TZ, TC, TB, TB, TY) { return _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCBBZ() (TZ, TC, TB, TB, TZ) { return _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCBBW() (TZ, TC, TB, TB, TW) { return _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCBBA() (TZ, TC, TB, TB, TA) { return _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCBBB() (TZ, TC, TB, TB, TB) { return _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCBBC() (TZ, TC, TB, TB, TC) { return _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCBCX() (TZ, TC, TB, TC, TX) { return _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCBCY() (TZ, TC, TB, TC, TY) { return _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCBCZ() (TZ, TC, TB, TC, TZ) { return _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCBCW() (TZ, TC, TB, TC, TW) { return _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCBCA() (TZ, TC, TB, TC, TA) { return _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCBCB() (TZ, TC, TB, TC, TB) { return _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCBCC() (TZ, TC, TB, TC, TC) { return _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCCXX() (TZ, TC, TC, TX, TX) { return _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCCXY() (TZ, TC, TC, TX, TY) { return _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCCXZ() (TZ, TC, TC, TX, TZ) { return _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCCXW() (TZ, TC, TC, TX, TW) { return _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCCXA() (TZ, TC, TC, TX, TA) { return _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCCXB() (TZ, TC, TC, TX, TB) { return _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCCXC() (TZ, TC, TC, TX, TC) { return _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCCYX() (TZ, TC, TC, TY, TX) { return _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCCYY() (TZ, TC, TC, TY, TY) { return _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCCYZ() (TZ, TC, TC, TY, TZ) { return _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCCYW() (TZ, TC, TC, TY, TW) { return _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCCYA() (TZ, TC, TC, TY, TA) { return _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCCYB() (TZ, TC, TC, TY, TB) { return _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCCYC() (TZ, TC, TC, TY, TC) { return _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCCZX() (TZ, TC, TC, TZ, TX) { return _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCCZY() (TZ, TC, TC, TZ, TY) { return _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCCZZ() (TZ, TC, TC, TZ, TZ) { return _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCCZW() (TZ, TC, TC, TZ, TW) { return _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCCZA() (TZ, TC, TC, TZ, TA) { return _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCCZB() (TZ, TC, TC, TZ, TB) { return _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCCZC() (TZ, TC, TC, TZ, TC) { return _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCCWX() (TZ, TC, TC, TW, TX) { return _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCCWY() (TZ, TC, TC, TW, TY) { return _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCCWZ() (TZ, TC, TC, TW, TZ) { return _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCCWW() (TZ, TC, TC, TW, TW) { return _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCCWA() (TZ, TC, TC, TW, TA) { return _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCCWB() (TZ, TC, TC, TW, TB) { return _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCCWC() (TZ, TC, TC, TW, TC) { return _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCCAX() (TZ, TC, TC, TA, TX) { return _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCCAY() (TZ, TC, TC, TA, TY) { return _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCCAZ() (TZ, TC, TC, TA, TZ) { return _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCCAW() (TZ, TC, TC, TA, TW) { return _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCCAA() (TZ, TC, TC, TA, TA) { return _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCCAB() (TZ, TC, TC, TA, TB) { return _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCCAC() (TZ, TC, TC, TA, TC) { return _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCCBX() (TZ, TC, TC, TB, TX) { return _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCCBY() (TZ, TC, TC, TB, TY) { return _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCCBZ() (TZ, TC, TC, TB, TZ) { return _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCCBW() (TZ, TC, TC, TB, TW) { return _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCCBA() (TZ, TC, TC, TB, TA) { return _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCCBB() (TZ, TC, TC, TB, TB) { return _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCCBC() (TZ, TC, TC, TB, TC) { return _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCCCX() (TZ, TC, TC, TC, TX) { return _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCCCY() (TZ, TC, TC, TC, TY) { return _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCCCZ() (TZ, TC, TC, TC, TZ) { return _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCCCW() (TZ, TC, TC, TC, TW) { return _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCCCA() (TZ, TC, TC, TC, TA) { return _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCCCB() (TZ, TC, TC, TC, TB) { return _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ZCCCC() (TZ, TC, TC, TC, TC) { return _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXXXX() (TW, TX, TX, TX, TX) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXXXY() (TW, TX, TX, TX, TY) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXXXZ() (TW, TX, TX, TX, TZ) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXXXW() (TW, TX, TX, TX, TW) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXXXA() (TW, TX, TX, TX, TA) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXXXB() (TW, TX, TX, TX, TB) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXXXC() (TW, TX, TX, TX, TC) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXXYX() (TW, TX, TX, TY, TX) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXXYY() (TW, TX, TX, TY, TY) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXXYZ() (TW, TX, TX, TY, TZ) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXXYW() (TW, TX, TX, TY, TW) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXXYA() (TW, TX, TX, TY, TA) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXXYB() (TW, TX, TX, TY, TB) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXXYC() (TW, TX, TX, TY, TC) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXXZX() (TW, TX, TX, TZ, TX) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXXZY() (TW, TX, TX, TZ, TY) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXXZZ() (TW, TX, TX, TZ, TZ) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXXZW() (TW, TX, TX, TZ, TW) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXXZA() (TW, TX, TX, TZ, TA) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXXZB() (TW, TX, TX, TZ, TB) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXXZC() (TW, TX, TX, TZ, TC) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXXWX() (TW, TX, TX, TW, TX) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXXWY() (TW, TX, TX, TW, TY) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXXWZ() (TW, TX, TX, TW, TZ) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXXWW() (TW, TX, TX, TW, TW) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXXWA() (TW, TX, TX, TW, TA) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXXWB() (TW, TX, TX, TW, TB) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXXWC() (TW, TX, TX, TW, TC) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXXAX() (TW, TX, TX, TA, TX) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXXAY() (TW, TX, TX, TA, TY) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXXAZ() (TW, TX, TX, TA, TZ) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXXAW() (TW, TX, TX, TA, TW) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXXAA() (TW, TX, TX, TA, TA) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXXAB() (TW, TX, TX, TA, TB) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXXAC() (TW, TX, TX, TA, TC) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXXBX() (TW, TX, TX, TB, TX) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXXBY() (TW, TX, TX, TB, TY) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXXBZ() (TW, TX, TX, TB, TZ) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXXBW() (TW, TX, TX, TB, TW) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXXBA() (TW, TX, TX, TB, TA) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXXBB() (TW, TX, TX, TB, TB) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXXBC() (TW, TX, TX, TB, TC) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXXCX() (TW, TX, TX, TC, TX) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXXCY() (TW, TX, TX, TC, TY) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXXCZ() (TW, TX, TX, TC, TZ) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXXCW() (TW, TX, TX, TC, TW) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXXCA() (TW, TX, TX, TC, TA) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXXCB() (TW, TX, TX, TC, TB) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXXCC() (TW, TX, TX, TC, TC) { return _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXYXX() (TW, TX, TY, TX, TX) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXYXY() (TW, TX, TY, TX, TY) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXYXZ() (TW, TX, TY, TX, TZ) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXYXW() (TW, TX, TY, TX, TW) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXYXA() (TW, TX, TY, TX, TA) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXYXB() (TW, TX, TY, TX, TB) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXYXC() (TW, TX, TY, TX, TC) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXYYX() (TW, TX, TY, TY, TX) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXYYY() (TW, TX, TY, TY, TY) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXYYZ() (TW, TX, TY, TY, TZ) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXYYW() (TW, TX, TY, TY, TW) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXYYA() (TW, TX, TY, TY, TA) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXYYB() (TW, TX, TY, TY, TB) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXYYC() (TW, TX, TY, TY, TC) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXYZX() (TW, TX, TY, TZ, TX) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXYZY() (TW, TX, TY, TZ, TY) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXYZZ() (TW, TX, TY, TZ, TZ) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXYZW() (TW, TX, TY, TZ, TW) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXYZA() (TW, TX, TY, TZ, TA) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXYZB() (TW, TX, TY, TZ, TB) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXYZC() (TW, TX, TY, TZ, TC) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXYWX() (TW, TX, TY, TW, TX) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXYWY() (TW, TX, TY, TW, TY) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXYWZ() (TW, TX, TY, TW, TZ) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXYWW() (TW, TX, TY, TW, TW) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXYWA() (TW, TX, TY, TW, TA) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXYWB() (TW, TX, TY, TW, TB) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXYWC() (TW, TX, TY, TW, TC) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXYAX() (TW, TX, TY, TA, TX) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXYAY() (TW, TX, TY, TA, TY) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXYAZ() (TW, TX, TY, TA, TZ) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXYAW() (TW, TX, TY, TA, TW) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXYAA() (TW, TX, TY, TA, TA) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXYAB() (TW, TX, TY, TA, TB) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXYAC() (TW, TX, TY, TA, TC) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXYBX() (TW, TX, TY, TB, TX) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXYBY() (TW, TX, TY, TB, TY) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXYBZ() (TW, TX, TY, TB, TZ) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXYBW() (TW, TX, TY, TB, TW) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXYBA() (TW, TX, TY, TB, TA) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXYBB() (TW, TX, TY, TB, TB) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXYBC() (TW, TX, TY, TB, TC) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXYCX() (TW, TX, TY, TC, TX) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXYCY() (TW, TX, TY, TC, TY) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXYCZ() (TW, TX, TY, TC, TZ) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXYCW() (TW, TX, TY, TC, TW) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXYCA() (TW, TX, TY, TC, TA) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXYCB() (TW, TX, TY, TC, TB) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXYCC() (TW, TX, TY, TC, TC) { return _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXZXX() (TW, TX, TZ, TX, TX) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXZXY() (TW, TX, TZ, TX, TY) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXZXZ() (TW, TX, TZ, TX, TZ) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXZXW() (TW, TX, TZ, TX, TW) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXZXA() (TW, TX, TZ, TX, TA) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXZXB() (TW, TX, TZ, TX, TB) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXZXC() (TW, TX, TZ, TX, TC) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXZYX() (TW, TX, TZ, TY, TX) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXZYY() (TW, TX, TZ, TY, TY) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXZYZ() (TW, TX, TZ, TY, TZ) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXZYW() (TW, TX, TZ, TY, TW) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXZYA() (TW, TX, TZ, TY, TA) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXZYB() (TW, TX, TZ, TY, TB) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXZYC() (TW, TX, TZ, TY, TC) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXZZX() (TW, TX, TZ, TZ, TX) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXZZY() (TW, TX, TZ, TZ, TY) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXZZZ() (TW, TX, TZ, TZ, TZ) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXZZW() (TW, TX, TZ, TZ, TW) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXZZA() (TW, TX, TZ, TZ, TA) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXZZB() (TW, TX, TZ, TZ, TB) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXZZC() (TW, TX, TZ, TZ, TC) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXZWX() (TW, TX, TZ, TW, TX) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXZWY() (TW, TX, TZ, TW, TY) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXZWZ() (TW, TX, TZ, TW, TZ) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXZWW() (TW, TX, TZ, TW, TW) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXZWA() (TW, TX, TZ, TW, TA) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXZWB() (TW, TX, TZ, TW, TB) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXZWC() (TW, TX, TZ, TW, TC) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXZAX() (TW, TX, TZ, TA, TX) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXZAY() (TW, TX, TZ, TA, TY) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXZAZ() (TW, TX, TZ, TA, TZ) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXZAW() (TW, TX, TZ, TA, TW) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXZAA() (TW, TX, TZ, TA, TA) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXZAB() (TW, TX, TZ, TA, TB) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXZAC() (TW, TX, TZ, TA, TC) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXZBX() (TW, TX, TZ, TB, TX) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXZBY() (TW, TX, TZ, TB, TY) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXZBZ() (TW, TX, TZ, TB, TZ) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXZBW() (TW, TX, TZ, TB, TW) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXZBA() (TW, TX, TZ, TB, TA) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXZBB() (TW, TX, TZ, TB, TB) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXZBC() (TW, TX, TZ, TB, TC) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXZCX() (TW, TX, TZ, TC, TX) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXZCY() (TW, TX, TZ, TC, TY) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXZCZ() (TW, TX, TZ, TC, TZ) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXZCW() (TW, TX, TZ, TC, TW) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXZCA() (TW, TX, TZ, TC, TA) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXZCB() (TW, TX, TZ, TC, TB) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXZCC() (TW, TX, TZ, TC, TC) { return _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXWXX() (TW, TX, TW, TX, TX) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXWXY() (TW, TX, TW, TX, TY) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXWXZ() (TW, TX, TW, TX, TZ) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXWXW() (TW, TX, TW, TX, TW) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXWXA() (TW, TX, TW, TX, TA) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXWXB() (TW, TX, TW, TX, TB) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXWXC() (TW, TX, TW, TX, TC) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXWYX() (TW, TX, TW, TY, TX) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXWYY() (TW, TX, TW, TY, TY) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXWYZ() (TW, TX, TW, TY, TZ) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXWYW() (TW, TX, TW, TY, TW) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXWYA() (TW, TX, TW, TY, TA) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXWYB() (TW, TX, TW, TY, TB) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXWYC() (TW, TX, TW, TY, TC) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXWZX() (TW, TX, TW, TZ, TX) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXWZY() (TW, TX, TW, TZ, TY) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXWZZ() (TW, TX, TW, TZ, TZ) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXWZW() (TW, TX, TW, TZ, TW) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXWZA() (TW, TX, TW, TZ, TA) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXWZB() (TW, TX, TW, TZ, TB) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXWZC() (TW, TX, TW, TZ, TC) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXWWX() (TW, TX, TW, TW, TX) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXWWY() (TW, TX, TW, TW, TY) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXWWZ() (TW, TX, TW, TW, TZ) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXWWW() (TW, TX, TW, TW, TW) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXWWA() (TW, TX, TW, TW, TA) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXWWB() (TW, TX, TW, TW, TB) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXWWC() (TW, TX, TW, TW, TC) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXWAX() (TW, TX, TW, TA, TX) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXWAY() (TW, TX, TW, TA, TY) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXWAZ() (TW, TX, TW, TA, TZ) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXWAW() (TW, TX, TW, TA, TW) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXWAA() (TW, TX, TW, TA, TA) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXWAB() (TW, TX, TW, TA, TB) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXWAC() (TW, TX, TW, TA, TC) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXWBX() (TW, TX, TW, TB, TX) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXWBY() (TW, TX, TW, TB, TY) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXWBZ() (TW, TX, TW, TB, TZ) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXWBW() (TW, TX, TW, TB, TW) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXWBA() (TW, TX, TW, TB, TA) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXWBB() (TW, TX, TW, TB, TB) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXWBC() (TW, TX, TW, TB, TC) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXWCX() (TW, TX, TW, TC, TX) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXWCY() (TW, TX, TW, TC, TY) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXWCZ() (TW, TX, TW, TC, TZ) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXWCW() (TW, TX, TW, TC, TW) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXWCA() (TW, TX, TW, TC, TA) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXWCB() (TW, TX, TW, TC, TB) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXWCC() (TW, TX, TW, TC, TC) { return _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXAXX() (TW, TX, TA, TX, TX) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXAXY() (TW, TX, TA, TX, TY) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXAXZ() (TW, TX, TA, TX, TZ) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXAXW() (TW, TX, TA, TX, TW) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXAXA() (TW, TX, TA, TX, TA) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXAXB() (TW, TX, TA, TX, TB) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXAXC() (TW, TX, TA, TX, TC) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXAYX() (TW, TX, TA, TY, TX) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXAYY() (TW, TX, TA, TY, TY) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXAYZ() (TW, TX, TA, TY, TZ) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXAYW() (TW, TX, TA, TY, TW) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXAYA() (TW, TX, TA, TY, TA) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXAYB() (TW, TX, TA, TY, TB) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXAYC() (TW, TX, TA, TY, TC) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXAZX() (TW, TX, TA, TZ, TX) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXAZY() (TW, TX, TA, TZ, TY) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXAZZ() (TW, TX, TA, TZ, TZ) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXAZW() (TW, TX, TA, TZ, TW) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXAZA() (TW, TX, TA, TZ, TA) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXAZB() (TW, TX, TA, TZ, TB) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXAZC() (TW, TX, TA, TZ, TC) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXAWX() (TW, TX, TA, TW, TX) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXAWY() (TW, TX, TA, TW, TY) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXAWZ() (TW, TX, TA, TW, TZ) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXAWW() (TW, TX, TA, TW, TW) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXAWA() (TW, TX, TA, TW, TA) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXAWB() (TW, TX, TA, TW, TB) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXAWC() (TW, TX, TA, TW, TC) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXAAX() (TW, TX, TA, TA, TX) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXAAY() (TW, TX, TA, TA, TY) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXAAZ() (TW, TX, TA, TA, TZ) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXAAW() (TW, TX, TA, TA, TW) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXAAA() (TW, TX, TA, TA, TA) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXAAB() (TW, TX, TA, TA, TB) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXAAC() (TW, TX, TA, TA, TC) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXABX() (TW, TX, TA, TB, TX) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXABY() (TW, TX, TA, TB, TY) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXABZ() (TW, TX, TA, TB, TZ) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXABW() (TW, TX, TA, TB, TW) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXABA() (TW, TX, TA, TB, TA) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXABB() (TW, TX, TA, TB, TB) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXABC() (TW, TX, TA, TB, TC) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXACX() (TW, TX, TA, TC, TX) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXACY() (TW, TX, TA, TC, TY) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXACZ() (TW, TX, TA, TC, TZ) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXACW() (TW, TX, TA, TC, TW) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXACA() (TW, TX, TA, TC, TA) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXACB() (TW, TX, TA, TC, TB) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXACC() (TW, TX, TA, TC, TC) { return _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXBXX() (TW, TX, TB, TX, TX) { return _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXBXY() (TW, TX, TB, TX, TY) { return _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXBXZ() (TW, TX, TB, TX, TZ) { return _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXBXW() (TW, TX, TB, TX, TW) { return _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXBXA() (TW, TX, TB, TX, TA) { return _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXBXB() (TW, TX, TB, TX, TB) { return _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXBXC() (TW, TX, TB, TX, TC) { return _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXBYX() (TW, TX, TB, TY, TX) { return _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXBYY() (TW, TX, TB, TY, TY) { return _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXBYZ() (TW, TX, TB, TY, TZ) { return _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXBYW() (TW, TX, TB, TY, TW) { return _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXBYA() (TW, TX, TB, TY, TA) { return _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXBYB() (TW, TX, TB, TY, TB) { return _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXBYC() (TW, TX, TB, TY, TC) { return _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXBZX() (TW, TX, TB, TZ, TX) { return _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXBZY() (TW, TX, TB, TZ, TY) { return _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXBZZ() (TW, TX, TB, TZ, TZ) { return _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXBZW() (TW, TX, TB, TZ, TW) { return _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXBZA() (TW, TX, TB, TZ, TA) { return _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXBZB() (TW, TX, TB, TZ, TB) { return _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXBZC() (TW, TX, TB, TZ, TC) { return _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXBWX() (TW, TX, TB, TW, TX) { return _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXBWY() (TW, TX, TB, TW, TY) { return _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXBWZ() (TW, TX, TB, TW, TZ) { return _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXBWW() (TW, TX, TB, TW, TW) { return _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXBWA() (TW, TX, TB, TW, TA) { return _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXBWB() (TW, TX, TB, TW, TB) { return _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXBWC() (TW, TX, TB, TW, TC) { return _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXBAX() (TW, TX, TB, TA, TX) { return _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXBAY() (TW, TX, TB, TA, TY) { return _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXBAZ() (TW, TX, TB, TA, TZ) { return _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXBAW() (TW, TX, TB, TA, TW) { return _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXBAA() (TW, TX, TB, TA, TA) { return _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXBAB() (TW, TX, TB, TA, TB) { return _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXBAC() (TW, TX, TB, TA, TC) { return _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXBBX() (TW, TX, TB, TB, TX) { return _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXBBY() (TW, TX, TB, TB, TY) { return _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXBBZ() (TW, TX, TB, TB, TZ) { return _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXBBW() (TW, TX, TB, TB, TW) { return _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXBBA() (TW, TX, TB, TB, TA) { return _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXBBB() (TW, TX, TB, TB, TB) { return _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXBBC() (TW, TX, TB, TB, TC) { return _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXBCX() (TW, TX, TB, TC, TX) { return _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXBCY() (TW, TX, TB, TC, TY) { return _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXBCZ() (TW, TX, TB, TC, TZ) { return _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXBCW() (TW, TX, TB, TC, TW) { return _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXBCA() (TW, TX, TB, TC, TA) { return _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXBCB() (TW, TX, TB, TC, TB) { return _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXBCC() (TW, TX, TB, TC, TC) { return _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXCXX() (TW, TX, TC, TX, TX) { return _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXCXY() (TW, TX, TC, TX, TY) { return _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXCXZ() (TW, TX, TC, TX, TZ) { return _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXCXW() (TW, TX, TC, TX, TW) { return _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXCXA() (TW, TX, TC, TX, TA) { return _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXCXB() (TW, TX, TC, TX, TB) { return _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXCXC() (TW, TX, TC, TX, TC) { return _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXCYX() (TW, TX, TC, TY, TX) { return _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXCYY() (TW, TX, TC, TY, TY) { return _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXCYZ() (TW, TX, TC, TY, TZ) { return _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXCYW() (TW, TX, TC, TY, TW) { return _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXCYA() (TW, TX, TC, TY, TA) { return _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXCYB() (TW, TX, TC, TY, TB) { return _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXCYC() (TW, TX, TC, TY, TC) { return _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXCZX() (TW, TX, TC, TZ, TX) { return _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXCZY() (TW, TX, TC, TZ, TY) { return _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXCZZ() (TW, TX, TC, TZ, TZ) { return _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXCZW() (TW, TX, TC, TZ, TW) { return _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXCZA() (TW, TX, TC, TZ, TA) { return _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXCZB() (TW, TX, TC, TZ, TB) { return _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXCZC() (TW, TX, TC, TZ, TC) { return _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXCWX() (TW, TX, TC, TW, TX) { return _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXCWY() (TW, TX, TC, TW, TY) { return _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXCWZ() (TW, TX, TC, TW, TZ) { return _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXCWW() (TW, TX, TC, TW, TW) { return _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXCWA() (TW, TX, TC, TW, TA) { return _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXCWB() (TW, TX, TC, TW, TB) { return _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXCWC() (TW, TX, TC, TW, TC) { return _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXCAX() (TW, TX, TC, TA, TX) { return _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXCAY() (TW, TX, TC, TA, TY) { return _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXCAZ() (TW, TX, TC, TA, TZ) { return _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXCAW() (TW, TX, TC, TA, TW) { return _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXCAA() (TW, TX, TC, TA, TA) { return _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXCAB() (TW, TX, TC, TA, TB) { return _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXCAC() (TW, TX, TC, TA, TC) { return _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXCBX() (TW, TX, TC, TB, TX) { return _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXCBY() (TW, TX, TC, TB, TY) { return _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXCBZ() (TW, TX, TC, TB, TZ) { return _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXCBW() (TW, TX, TC, TB, TW) { return _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXCBA() (TW, TX, TC, TB, TA) { return _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXCBB() (TW, TX, TC, TB, TB) { return _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXCBC() (TW, TX, TC, TB, TC) { return _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXCCX() (TW, TX, TC, TC, TX) { return _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXCCY() (TW, TX, TC, TC, TY) { return _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXCCZ() (TW, TX, TC, TC, TZ) { return _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXCCW() (TW, TX, TC, TC, TW) { return _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXCCA() (TW, TX, TC, TC, TA) { return _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXCCB() (TW, TX, TC, TC, TB) { return _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WXCCC() (TW, TX, TC, TC, TC) { return _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYXXX() (TW, TY, TX, TX, TX) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYXXY() (TW, TY, TX, TX, TY) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYXXZ() (TW, TY, TX, TX, TZ) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYXXW() (TW, TY, TX, TX, TW) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYXXA() (TW, TY, TX, TX, TA) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYXXB() (TW, TY, TX, TX, TB) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYXXC() (TW, TY, TX, TX, TC) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYXYX() (TW, TY, TX, TY, TX) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYXYY() (TW, TY, TX, TY, TY) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYXYZ() (TW, TY, TX, TY, TZ) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYXYW() (TW, TY, TX, TY, TW) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYXYA() (TW, TY, TX, TY, TA) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYXYB() (TW, TY, TX, TY, TB) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYXYC() (TW, TY, TX, TY, TC) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYXZX() (TW, TY, TX, TZ, TX) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYXZY() (TW, TY, TX, TZ, TY) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYXZZ() (TW, TY, TX, TZ, TZ) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYXZW() (TW, TY, TX, TZ, TW) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYXZA() (TW, TY, TX, TZ, TA) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYXZB() (TW, TY, TX, TZ, TB) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYXZC() (TW, TY, TX, TZ, TC) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYXWX() (TW, TY, TX, TW, TX) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYXWY() (TW, TY, TX, TW, TY) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYXWZ() (TW, TY, TX, TW, TZ) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYXWW() (TW, TY, TX, TW, TW) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYXWA() (TW, TY, TX, TW, TA) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYXWB() (TW, TY, TX, TW, TB) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYXWC() (TW, TY, TX, TW, TC) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYXAX() (TW, TY, TX, TA, TX) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYXAY() (TW, TY, TX, TA, TY) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYXAZ() (TW, TY, TX, TA, TZ) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYXAW() (TW, TY, TX, TA, TW) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYXAA() (TW, TY, TX, TA, TA) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYXAB() (TW, TY, TX, TA, TB) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYXAC() (TW, TY, TX, TA, TC) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYXBX() (TW, TY, TX, TB, TX) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYXBY() (TW, TY, TX, TB, TY) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYXBZ() (TW, TY, TX, TB, TZ) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYXBW() (TW, TY, TX, TB, TW) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYXBA() (TW, TY, TX, TB, TA) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYXBB() (TW, TY, TX, TB, TB) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYXBC() (TW, TY, TX, TB, TC) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYXCX() (TW, TY, TX, TC, TX) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYXCY() (TW, TY, TX, TC, TY) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYXCZ() (TW, TY, TX, TC, TZ) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYXCW() (TW, TY, TX, TC, TW) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYXCA() (TW, TY, TX, TC, TA) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYXCB() (TW, TY, TX, TC, TB) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYXCC() (TW, TY, TX, TC, TC) { return _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYYXX() (TW, TY, TY, TX, TX) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYYXY() (TW, TY, TY, TX, TY) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYYXZ() (TW, TY, TY, TX, TZ) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYYXW() (TW, TY, TY, TX, TW) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYYXA() (TW, TY, TY, TX, TA) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYYXB() (TW, TY, TY, TX, TB) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYYXC() (TW, TY, TY, TX, TC) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYYYX() (TW, TY, TY, TY, TX) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYYYY() (TW, TY, TY, TY, TY) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYYYZ() (TW, TY, TY, TY, TZ) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYYYW() (TW, TY, TY, TY, TW) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYYYA() (TW, TY, TY, TY, TA) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYYYB() (TW, TY, TY, TY, TB) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYYYC() (TW, TY, TY, TY, TC) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYYZX() (TW, TY, TY, TZ, TX) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYYZY() (TW, TY, TY, TZ, TY) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYYZZ() (TW, TY, TY, TZ, TZ) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYYZW() (TW, TY, TY, TZ, TW) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYYZA() (TW, TY, TY, TZ, TA) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYYZB() (TW, TY, TY, TZ, TB) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYYZC() (TW, TY, TY, TZ, TC) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYYWX() (TW, TY, TY, TW, TX) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYYWY() (TW, TY, TY, TW, TY) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYYWZ() (TW, TY, TY, TW, TZ) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYYWW() (TW, TY, TY, TW, TW) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYYWA() (TW, TY, TY, TW, TA) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYYWB() (TW, TY, TY, TW, TB) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYYWC() (TW, TY, TY, TW, TC) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYYAX() (TW, TY, TY, TA, TX) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYYAY() (TW, TY, TY, TA, TY) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYYAZ() (TW, TY, TY, TA, TZ) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYYAW() (TW, TY, TY, TA, TW) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYYAA() (TW, TY, TY, TA, TA) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYYAB() (TW, TY, TY, TA, TB) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYYAC() (TW, TY, TY, TA, TC) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYYBX() (TW, TY, TY, TB, TX) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYYBY() (TW, TY, TY, TB, TY) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYYBZ() (TW, TY, TY, TB, TZ) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYYBW() (TW, TY, TY, TB, TW) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYYBA() (TW, TY, TY, TB, TA) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYYBB() (TW, TY, TY, TB, TB) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYYBC() (TW, TY, TY, TB, TC) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYYCX() (TW, TY, TY, TC, TX) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYYCY() (TW, TY, TY, TC, TY) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYYCZ() (TW, TY, TY, TC, TZ) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYYCW() (TW, TY, TY, TC, TW) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYYCA() (TW, TY, TY, TC, TA) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYYCB() (TW, TY, TY, TC, TB) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYYCC() (TW, TY, TY, TC, TC) { return _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYZXX() (TW, TY, TZ, TX, TX) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYZXY() (TW, TY, TZ, TX, TY) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYZXZ() (TW, TY, TZ, TX, TZ) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYZXW() (TW, TY, TZ, TX, TW) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYZXA() (TW, TY, TZ, TX, TA) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYZXB() (TW, TY, TZ, TX, TB) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYZXC() (TW, TY, TZ, TX, TC) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYZYX() (TW, TY, TZ, TY, TX) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYZYY() (TW, TY, TZ, TY, TY) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYZYZ() (TW, TY, TZ, TY, TZ) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYZYW() (TW, TY, TZ, TY, TW) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYZYA() (TW, TY, TZ, TY, TA) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYZYB() (TW, TY, TZ, TY, TB) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYZYC() (TW, TY, TZ, TY, TC) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYZZX() (TW, TY, TZ, TZ, TX) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYZZY() (TW, TY, TZ, TZ, TY) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYZZZ() (TW, TY, TZ, TZ, TZ) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYZZW() (TW, TY, TZ, TZ, TW) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYZZA() (TW, TY, TZ, TZ, TA) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYZZB() (TW, TY, TZ, TZ, TB) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYZZC() (TW, TY, TZ, TZ, TC) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYZWX() (TW, TY, TZ, TW, TX) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYZWY() (TW, TY, TZ, TW, TY) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYZWZ() (TW, TY, TZ, TW, TZ) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYZWW() (TW, TY, TZ, TW, TW) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYZWA() (TW, TY, TZ, TW, TA) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYZWB() (TW, TY, TZ, TW, TB) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYZWC() (TW, TY, TZ, TW, TC) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYZAX() (TW, TY, TZ, TA, TX) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYZAY() (TW, TY, TZ, TA, TY) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYZAZ() (TW, TY, TZ, TA, TZ) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYZAW() (TW, TY, TZ, TA, TW) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYZAA() (TW, TY, TZ, TA, TA) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYZAB() (TW, TY, TZ, TA, TB) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYZAC() (TW, TY, TZ, TA, TC) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYZBX() (TW, TY, TZ, TB, TX) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYZBY() (TW, TY, TZ, TB, TY) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYZBZ() (TW, TY, TZ, TB, TZ) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYZBW() (TW, TY, TZ, TB, TW) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYZBA() (TW, TY, TZ, TB, TA) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYZBB() (TW, TY, TZ, TB, TB) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYZBC() (TW, TY, TZ, TB, TC) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYZCX() (TW, TY, TZ, TC, TX) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYZCY() (TW, TY, TZ, TC, TY) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYZCZ() (TW, TY, TZ, TC, TZ) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYZCW() (TW, TY, TZ, TC, TW) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYZCA() (TW, TY, TZ, TC, TA) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYZCB() (TW, TY, TZ, TC, TB) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYZCC() (TW, TY, TZ, TC, TC) { return _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYWXX() (TW, TY, TW, TX, TX) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYWXY() (TW, TY, TW, TX, TY) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYWXZ() (TW, TY, TW, TX, TZ) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYWXW() (TW, TY, TW, TX, TW) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYWXA() (TW, TY, TW, TX, TA) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYWXB() (TW, TY, TW, TX, TB) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYWXC() (TW, TY, TW, TX, TC) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYWYX() (TW, TY, TW, TY, TX) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYWYY() (TW, TY, TW, TY, TY) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYWYZ() (TW, TY, TW, TY, TZ) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYWYW() (TW, TY, TW, TY, TW) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYWYA() (TW, TY, TW, TY, TA) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYWYB() (TW, TY, TW, TY, TB) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYWYC() (TW, TY, TW, TY, TC) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYWZX() (TW, TY, TW, TZ, TX) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYWZY() (TW, TY, TW, TZ, TY) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYWZZ() (TW, TY, TW, TZ, TZ) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYWZW() (TW, TY, TW, TZ, TW) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYWZA() (TW, TY, TW, TZ, TA) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYWZB() (TW, TY, TW, TZ, TB) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYWZC() (TW, TY, TW, TZ, TC) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYWWX() (TW, TY, TW, TW, TX) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYWWY() (TW, TY, TW, TW, TY) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYWWZ() (TW, TY, TW, TW, TZ) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYWWW() (TW, TY, TW, TW, TW) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYWWA() (TW, TY, TW, TW, TA) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYWWB() (TW, TY, TW, TW, TB) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYWWC() (TW, TY, TW, TW, TC) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYWAX() (TW, TY, TW, TA, TX) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYWAY() (TW, TY, TW, TA, TY) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYWAZ() (TW, TY, TW, TA, TZ) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYWAW() (TW, TY, TW, TA, TW) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYWAA() (TW, TY, TW, TA, TA) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYWAB() (TW, TY, TW, TA, TB) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYWAC() (TW, TY, TW, TA, TC) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYWBX() (TW, TY, TW, TB, TX) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYWBY() (TW, TY, TW, TB, TY) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYWBZ() (TW, TY, TW, TB, TZ) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYWBW() (TW, TY, TW, TB, TW) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYWBA() (TW, TY, TW, TB, TA) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYWBB() (TW, TY, TW, TB, TB) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYWBC() (TW, TY, TW, TB, TC) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYWCX() (TW, TY, TW, TC, TX) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYWCY() (TW, TY, TW, TC, TY) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYWCZ() (TW, TY, TW, TC, TZ) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYWCW() (TW, TY, TW, TC, TW) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYWCA() (TW, TY, TW, TC, TA) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYWCB() (TW, TY, TW, TC, TB) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYWCC() (TW, TY, TW, TC, TC) { return _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYAXX() (TW, TY, TA, TX, TX) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYAXY() (TW, TY, TA, TX, TY) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYAXZ() (TW, TY, TA, TX, TZ) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYAXW() (TW, TY, TA, TX, TW) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYAXA() (TW, TY, TA, TX, TA) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYAXB() (TW, TY, TA, TX, TB) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYAXC() (TW, TY, TA, TX, TC) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYAYX() (TW, TY, TA, TY, TX) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYAYY() (TW, TY, TA, TY, TY) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYAYZ() (TW, TY, TA, TY, TZ) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYAYW() (TW, TY, TA, TY, TW) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYAYA() (TW, TY, TA, TY, TA) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYAYB() (TW, TY, TA, TY, TB) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYAYC() (TW, TY, TA, TY, TC) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYAZX() (TW, TY, TA, TZ, TX) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYAZY() (TW, TY, TA, TZ, TY) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYAZZ() (TW, TY, TA, TZ, TZ) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYAZW() (TW, TY, TA, TZ, TW) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYAZA() (TW, TY, TA, TZ, TA) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYAZB() (TW, TY, TA, TZ, TB) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYAZC() (TW, TY, TA, TZ, TC) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYAWX() (TW, TY, TA, TW, TX) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYAWY() (TW, TY, TA, TW, TY) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYAWZ() (TW, TY, TA, TW, TZ) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYAWW() (TW, TY, TA, TW, TW) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYAWA() (TW, TY, TA, TW, TA) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYAWB() (TW, TY, TA, TW, TB) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYAWC() (TW, TY, TA, TW, TC) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYAAX() (TW, TY, TA, TA, TX) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYAAY() (TW, TY, TA, TA, TY) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYAAZ() (TW, TY, TA, TA, TZ) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYAAW() (TW, TY, TA, TA, TW) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYAAA() (TW, TY, TA, TA, TA) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYAAB() (TW, TY, TA, TA, TB) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYAAC() (TW, TY, TA, TA, TC) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYABX() (TW, TY, TA, TB, TX) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYABY() (TW, TY, TA, TB, TY) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYABZ() (TW, TY, TA, TB, TZ) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYABW() (TW, TY, TA, TB, TW) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYABA() (TW, TY, TA, TB, TA) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYABB() (TW, TY, TA, TB, TB) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYABC() (TW, TY, TA, TB, TC) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYACX() (TW, TY, TA, TC, TX) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYACY() (TW, TY, TA, TC, TY) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYACZ() (TW, TY, TA, TC, TZ) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYACW() (TW, TY, TA, TC, TW) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYACA() (TW, TY, TA, TC, TA) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYACB() (TW, TY, TA, TC, TB) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYACC() (TW, TY, TA, TC, TC) { return _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYBXX() (TW, TY, TB, TX, TX) { return _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYBXY() (TW, TY, TB, TX, TY) { return _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYBXZ() (TW, TY, TB, TX, TZ) { return _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYBXW() (TW, TY, TB, TX, TW) { return _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYBXA() (TW, TY, TB, TX, TA) { return _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYBXB() (TW, TY, TB, TX, TB) { return _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYBXC() (TW, TY, TB, TX, TC) { return _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYBYX() (TW, TY, TB, TY, TX) { return _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYBYY() (TW, TY, TB, TY, TY) { return _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYBYZ() (TW, TY, TB, TY, TZ) { return _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYBYW() (TW, TY, TB, TY, TW) { return _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYBYA() (TW, TY, TB, TY, TA) { return _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYBYB() (TW, TY, TB, TY, TB) { return _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYBYC() (TW, TY, TB, TY, TC) { return _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYBZX() (TW, TY, TB, TZ, TX) { return _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYBZY() (TW, TY, TB, TZ, TY) { return _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYBZZ() (TW, TY, TB, TZ, TZ) { return _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYBZW() (TW, TY, TB, TZ, TW) { return _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYBZA() (TW, TY, TB, TZ, TA) { return _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYBZB() (TW, TY, TB, TZ, TB) { return _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYBZC() (TW, TY, TB, TZ, TC) { return _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYBWX() (TW, TY, TB, TW, TX) { return _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYBWY() (TW, TY, TB, TW, TY) { return _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYBWZ() (TW, TY, TB, TW, TZ) { return _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYBWW() (TW, TY, TB, TW, TW) { return _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYBWA() (TW, TY, TB, TW, TA) { return _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYBWB() (TW, TY, TB, TW, TB) { return _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYBWC() (TW, TY, TB, TW, TC) { return _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYBAX() (TW, TY, TB, TA, TX) { return _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYBAY() (TW, TY, TB, TA, TY) { return _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYBAZ() (TW, TY, TB, TA, TZ) { return _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYBAW() (TW, TY, TB, TA, TW) { return _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYBAA() (TW, TY, TB, TA, TA) { return _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYBAB() (TW, TY, TB, TA, TB) { return _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYBAC() (TW, TY, TB, TA, TC) { return _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYBBX() (TW, TY, TB, TB, TX) { return _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYBBY() (TW, TY, TB, TB, TY) { return _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYBBZ() (TW, TY, TB, TB, TZ) { return _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYBBW() (TW, TY, TB, TB, TW) { return _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYBBA() (TW, TY, TB, TB, TA) { return _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYBBB() (TW, TY, TB, TB, TB) { return _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYBBC() (TW, TY, TB, TB, TC) { return _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYBCX() (TW, TY, TB, TC, TX) { return _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYBCY() (TW, TY, TB, TC, TY) { return _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYBCZ() (TW, TY, TB, TC, TZ) { return _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYBCW() (TW, TY, TB, TC, TW) { return _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYBCA() (TW, TY, TB, TC, TA) { return _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYBCB() (TW, TY, TB, TC, TB) { return _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYBCC() (TW, TY, TB, TC, TC) { return _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYCXX() (TW, TY, TC, TX, TX) { return _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYCXY() (TW, TY, TC, TX, TY) { return _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYCXZ() (TW, TY, TC, TX, TZ) { return _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYCXW() (TW, TY, TC, TX, TW) { return _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYCXA() (TW, TY, TC, TX, TA) { return _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYCXB() (TW, TY, TC, TX, TB) { return _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYCXC() (TW, TY, TC, TX, TC) { return _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYCYX() (TW, TY, TC, TY, TX) { return _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYCYY() (TW, TY, TC, TY, TY) { return _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYCYZ() (TW, TY, TC, TY, TZ) { return _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYCYW() (TW, TY, TC, TY, TW) { return _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYCYA() (TW, TY, TC, TY, TA) { return _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYCYB() (TW, TY, TC, TY, TB) { return _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYCYC() (TW, TY, TC, TY, TC) { return _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYCZX() (TW, TY, TC, TZ, TX) { return _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYCZY() (TW, TY, TC, TZ, TY) { return _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYCZZ() (TW, TY, TC, TZ, TZ) { return _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYCZW() (TW, TY, TC, TZ, TW) { return _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYCZA() (TW, TY, TC, TZ, TA) { return _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYCZB() (TW, TY, TC, TZ, TB) { return _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYCZC() (TW, TY, TC, TZ, TC) { return _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYCWX() (TW, TY, TC, TW, TX) { return _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYCWY() (TW, TY, TC, TW, TY) { return _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYCWZ() (TW, TY, TC, TW, TZ) { return _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYCWW() (TW, TY, TC, TW, TW) { return _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYCWA() (TW, TY, TC, TW, TA) { return _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYCWB() (TW, TY, TC, TW, TB) { return _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYCWC() (TW, TY, TC, TW, TC) { return _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYCAX() (TW, TY, TC, TA, TX) { return _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYCAY() (TW, TY, TC, TA, TY) { return _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYCAZ() (TW, TY, TC, TA, TZ) { return _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYCAW() (TW, TY, TC, TA, TW) { return _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYCAA() (TW, TY, TC, TA, TA) { return _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYCAB() (TW, TY, TC, TA, TB) { return _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYCAC() (TW, TY, TC, TA, TC) { return _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYCBX() (TW, TY, TC, TB, TX) { return _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYCBY() (TW, TY, TC, TB, TY) { return _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYCBZ() (TW, TY, TC, TB, TZ) { return _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYCBW() (TW, TY, TC, TB, TW) { return _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYCBA() (TW, TY, TC, TB, TA) { return _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYCBB() (TW, TY, TC, TB, TB) { return _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYCBC() (TW, TY, TC, TB, TC) { return _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYCCX() (TW, TY, TC, TC, TX) { return _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYCCY() (TW, TY, TC, TC, TY) { return _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYCCZ() (TW, TY, TC, TC, TZ) { return _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYCCW() (TW, TY, TC, TC, TW) { return _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYCCA() (TW, TY, TC, TC, TA) { return _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYCCB() (TW, TY, TC, TC, TB) { return _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WYCCC() (TW, TY, TC, TC, TC) { return _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZXXX() (TW, TZ, TX, TX, TX) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZXXY() (TW, TZ, TX, TX, TY) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZXXZ() (TW, TZ, TX, TX, TZ) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZXXW() (TW, TZ, TX, TX, TW) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZXXA() (TW, TZ, TX, TX, TA) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZXXB() (TW, TZ, TX, TX, TB) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZXXC() (TW, TZ, TX, TX, TC) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZXYX() (TW, TZ, TX, TY, TX) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZXYY() (TW, TZ, TX, TY, TY) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZXYZ() (TW, TZ, TX, TY, TZ) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZXYW() (TW, TZ, TX, TY, TW) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZXYA() (TW, TZ, TX, TY, TA) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZXYB() (TW, TZ, TX, TY, TB) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZXYC() (TW, TZ, TX, TY, TC) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZXZX() (TW, TZ, TX, TZ, TX) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZXZY() (TW, TZ, TX, TZ, TY) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZXZZ() (TW, TZ, TX, TZ, TZ) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZXZW() (TW, TZ, TX, TZ, TW) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZXZA() (TW, TZ, TX, TZ, TA) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZXZB() (TW, TZ, TX, TZ, TB) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZXZC() (TW, TZ, TX, TZ, TC) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZXWX() (TW, TZ, TX, TW, TX) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZXWY() (TW, TZ, TX, TW, TY) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZXWZ() (TW, TZ, TX, TW, TZ) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZXWW() (TW, TZ, TX, TW, TW) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZXWA() (TW, TZ, TX, TW, TA) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZXWB() (TW, TZ, TX, TW, TB) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZXWC() (TW, TZ, TX, TW, TC) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZXAX() (TW, TZ, TX, TA, TX) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZXAY() (TW, TZ, TX, TA, TY) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZXAZ() (TW, TZ, TX, TA, TZ) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZXAW() (TW, TZ, TX, TA, TW) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZXAA() (TW, TZ, TX, TA, TA) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZXAB() (TW, TZ, TX, TA, TB) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZXAC() (TW, TZ, TX, TA, TC) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZXBX() (TW, TZ, TX, TB, TX) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZXBY() (TW, TZ, TX, TB, TY) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZXBZ() (TW, TZ, TX, TB, TZ) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZXBW() (TW, TZ, TX, TB, TW) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZXBA() (TW, TZ, TX, TB, TA) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZXBB() (TW, TZ, TX, TB, TB) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZXBC() (TW, TZ, TX, TB, TC) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZXCX() (TW, TZ, TX, TC, TX) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZXCY() (TW, TZ, TX, TC, TY) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZXCZ() (TW, TZ, TX, TC, TZ) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZXCW() (TW, TZ, TX, TC, TW) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZXCA() (TW, TZ, TX, TC, TA) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZXCB() (TW, TZ, TX, TC, TB) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZXCC() (TW, TZ, TX, TC, TC) { return _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZYXX() (TW, TZ, TY, TX, TX) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZYXY() (TW, TZ, TY, TX, TY) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZYXZ() (TW, TZ, TY, TX, TZ) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZYXW() (TW, TZ, TY, TX, TW) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZYXA() (TW, TZ, TY, TX, TA) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZYXB() (TW, TZ, TY, TX, TB) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZYXC() (TW, TZ, TY, TX, TC) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZYYX() (TW, TZ, TY, TY, TX) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZYYY() (TW, TZ, TY, TY, TY) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZYYZ() (TW, TZ, TY, TY, TZ) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZYYW() (TW, TZ, TY, TY, TW) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZYYA() (TW, TZ, TY, TY, TA) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZYYB() (TW, TZ, TY, TY, TB) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZYYC() (TW, TZ, TY, TY, TC) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZYZX() (TW, TZ, TY, TZ, TX) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZYZY() (TW, TZ, TY, TZ, TY) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZYZZ() (TW, TZ, TY, TZ, TZ) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZYZW() (TW, TZ, TY, TZ, TW) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZYZA() (TW, TZ, TY, TZ, TA) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZYZB() (TW, TZ, TY, TZ, TB) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZYZC() (TW, TZ, TY, TZ, TC) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZYWX() (TW, TZ, TY, TW, TX) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZYWY() (TW, TZ, TY, TW, TY) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZYWZ() (TW, TZ, TY, TW, TZ) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZYWW() (TW, TZ, TY, TW, TW) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZYWA() (TW, TZ, TY, TW, TA) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZYWB() (TW, TZ, TY, TW, TB) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZYWC() (TW, TZ, TY, TW, TC) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZYAX() (TW, TZ, TY, TA, TX) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZYAY() (TW, TZ, TY, TA, TY) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZYAZ() (TW, TZ, TY, TA, TZ) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZYAW() (TW, TZ, TY, TA, TW) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZYAA() (TW, TZ, TY, TA, TA) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZYAB() (TW, TZ, TY, TA, TB) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZYAC() (TW, TZ, TY, TA, TC) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZYBX() (TW, TZ, TY, TB, TX) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZYBY() (TW, TZ, TY, TB, TY) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZYBZ() (TW, TZ, TY, TB, TZ) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZYBW() (TW, TZ, TY, TB, TW) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZYBA() (TW, TZ, TY, TB, TA) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZYBB() (TW, TZ, TY, TB, TB) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZYBC() (TW, TZ, TY, TB, TC) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZYCX() (TW, TZ, TY, TC, TX) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZYCY() (TW, TZ, TY, TC, TY) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZYCZ() (TW, TZ, TY, TC, TZ) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZYCW() (TW, TZ, TY, TC, TW) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZYCA() (TW, TZ, TY, TC, TA) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZYCB() (TW, TZ, TY, TC, TB) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZYCC() (TW, TZ, TY, TC, TC) { return _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZZXX() (TW, TZ, TZ, TX, TX) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZZXY() (TW, TZ, TZ, TX, TY) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZZXZ() (TW, TZ, TZ, TX, TZ) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZZXW() (TW, TZ, TZ, TX, TW) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZZXA() (TW, TZ, TZ, TX, TA) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZZXB() (TW, TZ, TZ, TX, TB) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZZXC() (TW, TZ, TZ, TX, TC) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZZYX() (TW, TZ, TZ, TY, TX) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZZYY() (TW, TZ, TZ, TY, TY) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZZYZ() (TW, TZ, TZ, TY, TZ) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZZYW() (TW, TZ, TZ, TY, TW) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZZYA() (TW, TZ, TZ, TY, TA) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZZYB() (TW, TZ, TZ, TY, TB) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZZYC() (TW, TZ, TZ, TY, TC) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZZZX() (TW, TZ, TZ, TZ, TX) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZZZY() (TW, TZ, TZ, TZ, TY) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZZZZ() (TW, TZ, TZ, TZ, TZ) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZZZW() (TW, TZ, TZ, TZ, TW) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZZZA() (TW, TZ, TZ, TZ, TA) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZZZB() (TW, TZ, TZ, TZ, TB) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZZZC() (TW, TZ, TZ, TZ, TC) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZZWX() (TW, TZ, TZ, TW, TX) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZZWY() (TW, TZ, TZ, TW, TY) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZZWZ() (TW, TZ, TZ, TW, TZ) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZZWW() (TW, TZ, TZ, TW, TW) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZZWA() (TW, TZ, TZ, TW, TA) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZZWB() (TW, TZ, TZ, TW, TB) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZZWC() (TW, TZ, TZ, TW, TC) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZZAX() (TW, TZ, TZ, TA, TX) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZZAY() (TW, TZ, TZ, TA, TY) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZZAZ() (TW, TZ, TZ, TA, TZ) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZZAW() (TW, TZ, TZ, TA, TW) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZZAA() (TW, TZ, TZ, TA, TA) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZZAB() (TW, TZ, TZ, TA, TB) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZZAC() (TW, TZ, TZ, TA, TC) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZZBX() (TW, TZ, TZ, TB, TX) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZZBY() (TW, TZ, TZ, TB, TY) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZZBZ() (TW, TZ, TZ, TB, TZ) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZZBW() (TW, TZ, TZ, TB, TW) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZZBA() (TW, TZ, TZ, TB, TA) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZZBB() (TW, TZ, TZ, TB, TB) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZZBC() (TW, TZ, TZ, TB, TC) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZZCX() (TW, TZ, TZ, TC, TX) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZZCY() (TW, TZ, TZ, TC, TY) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZZCZ() (TW, TZ, TZ, TC, TZ) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZZCW() (TW, TZ, TZ, TC, TW) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZZCA() (TW, TZ, TZ, TC, TA) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZZCB() (TW, TZ, TZ, TC, TB) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZZCC() (TW, TZ, TZ, TC, TC) { return _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZWXX() (TW, TZ, TW, TX, TX) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZWXY() (TW, TZ, TW, TX, TY) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZWXZ() (TW, TZ, TW, TX, TZ) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZWXW() (TW, TZ, TW, TX, TW) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZWXA() (TW, TZ, TW, TX, TA) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZWXB() (TW, TZ, TW, TX, TB) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZWXC() (TW, TZ, TW, TX, TC) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZWYX() (TW, TZ, TW, TY, TX) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZWYY() (TW, TZ, TW, TY, TY) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZWYZ() (TW, TZ, TW, TY, TZ) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZWYW() (TW, TZ, TW, TY, TW) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZWYA() (TW, TZ, TW, TY, TA) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZWYB() (TW, TZ, TW, TY, TB) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZWYC() (TW, TZ, TW, TY, TC) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZWZX() (TW, TZ, TW, TZ, TX) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZWZY() (TW, TZ, TW, TZ, TY) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZWZZ() (TW, TZ, TW, TZ, TZ) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZWZW() (TW, TZ, TW, TZ, TW) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZWZA() (TW, TZ, TW, TZ, TA) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZWZB() (TW, TZ, TW, TZ, TB) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZWZC() (TW, TZ, TW, TZ, TC) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZWWX() (TW, TZ, TW, TW, TX) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZWWY() (TW, TZ, TW, TW, TY) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZWWZ() (TW, TZ, TW, TW, TZ) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZWWW() (TW, TZ, TW, TW, TW) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZWWA() (TW, TZ, TW, TW, TA) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZWWB() (TW, TZ, TW, TW, TB) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZWWC() (TW, TZ, TW, TW, TC) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZWAX() (TW, TZ, TW, TA, TX) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZWAY() (TW, TZ, TW, TA, TY) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZWAZ() (TW, TZ, TW, TA, TZ) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZWAW() (TW, TZ, TW, TA, TW) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZWAA() (TW, TZ, TW, TA, TA) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZWAB() (TW, TZ, TW, TA, TB) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZWAC() (TW, TZ, TW, TA, TC) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZWBX() (TW, TZ, TW, TB, TX) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZWBY() (TW, TZ, TW, TB, TY) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZWBZ() (TW, TZ, TW, TB, TZ) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZWBW() (TW, TZ, TW, TB, TW) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZWBA() (TW, TZ, TW, TB, TA) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZWBB() (TW, TZ, TW, TB, TB) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZWBC() (TW, TZ, TW, TB, TC) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZWCX() (TW, TZ, TW, TC, TX) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZWCY() (TW, TZ, TW, TC, TY) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZWCZ() (TW, TZ, TW, TC, TZ) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZWCW() (TW, TZ, TW, TC, TW) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZWCA() (TW, TZ, TW, TC, TA) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZWCB() (TW, TZ, TW, TC, TB) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZWCC() (TW, TZ, TW, TC, TC) { return _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZAXX() (TW, TZ, TA, TX, TX) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZAXY() (TW, TZ, TA, TX, TY) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZAXZ() (TW, TZ, TA, TX, TZ) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZAXW() (TW, TZ, TA, TX, TW) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZAXA() (TW, TZ, TA, TX, TA) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZAXB() (TW, TZ, TA, TX, TB) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZAXC() (TW, TZ, TA, TX, TC) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZAYX() (TW, TZ, TA, TY, TX) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZAYY() (TW, TZ, TA, TY, TY) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZAYZ() (TW, TZ, TA, TY, TZ) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZAYW() (TW, TZ, TA, TY, TW) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZAYA() (TW, TZ, TA, TY, TA) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZAYB() (TW, TZ, TA, TY, TB) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZAYC() (TW, TZ, TA, TY, TC) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZAZX() (TW, TZ, TA, TZ, TX) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZAZY() (TW, TZ, TA, TZ, TY) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZAZZ() (TW, TZ, TA, TZ, TZ) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZAZW() (TW, TZ, TA, TZ, TW) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZAZA() (TW, TZ, TA, TZ, TA) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZAZB() (TW, TZ, TA, TZ, TB) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZAZC() (TW, TZ, TA, TZ, TC) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZAWX() (TW, TZ, TA, TW, TX) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZAWY() (TW, TZ, TA, TW, TY) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZAWZ() (TW, TZ, TA, TW, TZ) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZAWW() (TW, TZ, TA, TW, TW) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZAWA() (TW, TZ, TA, TW, TA) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZAWB() (TW, TZ, TA, TW, TB) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZAWC() (TW, TZ, TA, TW, TC) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZAAX() (TW, TZ, TA, TA, TX) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZAAY() (TW, TZ, TA, TA, TY) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZAAZ() (TW, TZ, TA, TA, TZ) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZAAW() (TW, TZ, TA, TA, TW) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZAAA() (TW, TZ, TA, TA, TA) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZAAB() (TW, TZ, TA, TA, TB) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZAAC() (TW, TZ, TA, TA, TC) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZABX() (TW, TZ, TA, TB, TX) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZABY() (TW, TZ, TA, TB, TY) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZABZ() (TW, TZ, TA, TB, TZ) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZABW() (TW, TZ, TA, TB, TW) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZABA() (TW, TZ, TA, TB, TA) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZABB() (TW, TZ, TA, TB, TB) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZABC() (TW, TZ, TA, TB, TC) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZACX() (TW, TZ, TA, TC, TX) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZACY() (TW, TZ, TA, TC, TY) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZACZ() (TW, TZ, TA, TC, TZ) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZACW() (TW, TZ, TA, TC, TW) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZACA() (TW, TZ, TA, TC, TA) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZACB() (TW, TZ, TA, TC, TB) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZACC() (TW, TZ, TA, TC, TC) { return _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZBXX() (TW, TZ, TB, TX, TX) { return _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZBXY() (TW, TZ, TB, TX, TY) { return _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZBXZ() (TW, TZ, TB, TX, TZ) { return _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZBXW() (TW, TZ, TB, TX, TW) { return _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZBXA() (TW, TZ, TB, TX, TA) { return _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZBXB() (TW, TZ, TB, TX, TB) { return _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZBXC() (TW, TZ, TB, TX, TC) { return _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZBYX() (TW, TZ, TB, TY, TX) { return _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZBYY() (TW, TZ, TB, TY, TY) { return _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZBYZ() (TW, TZ, TB, TY, TZ) { return _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZBYW() (TW, TZ, TB, TY, TW) { return _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZBYA() (TW, TZ, TB, TY, TA) { return _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZBYB() (TW, TZ, TB, TY, TB) { return _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZBYC() (TW, TZ, TB, TY, TC) { return _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZBZX() (TW, TZ, TB, TZ, TX) { return _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZBZY() (TW, TZ, TB, TZ, TY) { return _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZBZZ() (TW, TZ, TB, TZ, TZ) { return _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZBZW() (TW, TZ, TB, TZ, TW) { return _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZBZA() (TW, TZ, TB, TZ, TA) { return _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZBZB() (TW, TZ, TB, TZ, TB) { return _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZBZC() (TW, TZ, TB, TZ, TC) { return _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZBWX() (TW, TZ, TB, TW, TX) { return _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZBWY() (TW, TZ, TB, TW, TY) { return _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZBWZ() (TW, TZ, TB, TW, TZ) { return _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZBWW() (TW, TZ, TB, TW, TW) { return _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZBWA() (TW, TZ, TB, TW, TA) { return _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZBWB() (TW, TZ, TB, TW, TB) { return _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZBWC() (TW, TZ, TB, TW, TC) { return _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZBAX() (TW, TZ, TB, TA, TX) { return _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZBAY() (TW, TZ, TB, TA, TY) { return _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZBAZ() (TW, TZ, TB, TA, TZ) { return _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZBAW() (TW, TZ, TB, TA, TW) { return _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZBAA() (TW, TZ, TB, TA, TA) { return _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZBAB() (TW, TZ, TB, TA, TB) { return _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZBAC() (TW, TZ, TB, TA, TC) { return _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZBBX() (TW, TZ, TB, TB, TX) { return _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZBBY() (TW, TZ, TB, TB, TY) { return _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZBBZ() (TW, TZ, TB, TB, TZ) { return _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZBBW() (TW, TZ, TB, TB, TW) { return _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZBBA() (TW, TZ, TB, TB, TA) { return _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZBBB() (TW, TZ, TB, TB, TB) { return _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZBBC() (TW, TZ, TB, TB, TC) { return _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZBCX() (TW, TZ, TB, TC, TX) { return _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZBCY() (TW, TZ, TB, TC, TY) { return _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZBCZ() (TW, TZ, TB, TC, TZ) { return _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZBCW() (TW, TZ, TB, TC, TW) { return _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZBCA() (TW, TZ, TB, TC, TA) { return _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZBCB() (TW, TZ, TB, TC, TB) { return _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZBCC() (TW, TZ, TB, TC, TC) { return _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZCXX() (TW, TZ, TC, TX, TX) { return _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZCXY() (TW, TZ, TC, TX, TY) { return _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZCXZ() (TW, TZ, TC, TX, TZ) { return _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZCXW() (TW, TZ, TC, TX, TW) { return _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZCXA() (TW, TZ, TC, TX, TA) { return _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZCXB() (TW, TZ, TC, TX, TB) { return _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZCXC() (TW, TZ, TC, TX, TC) { return _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZCYX() (TW, TZ, TC, TY, TX) { return _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZCYY() (TW, TZ, TC, TY, TY) { return _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZCYZ() (TW, TZ, TC, TY, TZ) { return _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZCYW() (TW, TZ, TC, TY, TW) { return _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZCYA() (TW, TZ, TC, TY, TA) { return _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZCYB() (TW, TZ, TC, TY, TB) { return _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZCYC() (TW, TZ, TC, TY, TC) { return _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZCZX() (TW, TZ, TC, TZ, TX) { return _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZCZY() (TW, TZ, TC, TZ, TY) { return _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZCZZ() (TW, TZ, TC, TZ, TZ) { return _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZCZW() (TW, TZ, TC, TZ, TW) { return _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZCZA() (TW, TZ, TC, TZ, TA) { return _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZCZB() (TW, TZ, TC, TZ, TB) { return _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZCZC() (TW, TZ, TC, TZ, TC) { return _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZCWX() (TW, TZ, TC, TW, TX) { return _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZCWY() (TW, TZ, TC, TW, TY) { return _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZCWZ() (TW, TZ, TC, TW, TZ) { return _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZCWW() (TW, TZ, TC, TW, TW) { return _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZCWA() (TW, TZ, TC, TW, TA) { return _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZCWB() (TW, TZ, TC, TW, TB) { return _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZCWC() (TW, TZ, TC, TW, TC) { return _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZCAX() (TW, TZ, TC, TA, TX) { return _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZCAY() (TW, TZ, TC, TA, TY) { return _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZCAZ() (TW, TZ, TC, TA, TZ) { return _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZCAW() (TW, TZ, TC, TA, TW) { return _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZCAA() (TW, TZ, TC, TA, TA) { return _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZCAB() (TW, TZ, TC, TA, TB) { return _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZCAC() (TW, TZ, TC, TA, TC) { return _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZCBX() (TW, TZ, TC, TB, TX) { return _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZCBY() (TW, TZ, TC, TB, TY) { return _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZCBZ() (TW, TZ, TC, TB, TZ) { return _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZCBW() (TW, TZ, TC, TB, TW) { return _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZCBA() (TW, TZ, TC, TB, TA) { return _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZCBB() (TW, TZ, TC, TB, TB) { return _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZCBC() (TW, TZ, TC, TB, TC) { return _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZCCX() (TW, TZ, TC, TC, TX) { return _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZCCY() (TW, TZ, TC, TC, TY) { return _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZCCZ() (TW, TZ, TC, TC, TZ) { return _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZCCW() (TW, TZ, TC, TC, TW) { return _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZCCA() (TW, TZ, TC, TC, TA) { return _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZCCB() (TW, TZ, TC, TC, TB) { return _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WZCCC() (TW, TZ, TC, TC, TC) { return _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWXXX() (TW, TW, TX, TX, TX) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWXXY() (TW, TW, TX, TX, TY) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWXXZ() (TW, TW, TX, TX, TZ) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWXXW() (TW, TW, TX, TX, TW) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWXXA() (TW, TW, TX, TX, TA) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWXXB() (TW, TW, TX, TX, TB) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWXXC() (TW, TW, TX, TX, TC) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWXYX() (TW, TW, TX, TY, TX) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWXYY() (TW, TW, TX, TY, TY) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWXYZ() (TW, TW, TX, TY, TZ) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWXYW() (TW, TW, TX, TY, TW) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWXYA() (TW, TW, TX, TY, TA) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWXYB() (TW, TW, TX, TY, TB) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWXYC() (TW, TW, TX, TY, TC) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWXZX() (TW, TW, TX, TZ, TX) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWXZY() (TW, TW, TX, TZ, TY) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWXZZ() (TW, TW, TX, TZ, TZ) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWXZW() (TW, TW, TX, TZ, TW) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWXZA() (TW, TW, TX, TZ, TA) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWXZB() (TW, TW, TX, TZ, TB) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWXZC() (TW, TW, TX, TZ, TC) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWXWX() (TW, TW, TX, TW, TX) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWXWY() (TW, TW, TX, TW, TY) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWXWZ() (TW, TW, TX, TW, TZ) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWXWW() (TW, TW, TX, TW, TW) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWXWA() (TW, TW, TX, TW, TA) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWXWB() (TW, TW, TX, TW, TB) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWXWC() (TW, TW, TX, TW, TC) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWXAX() (TW, TW, TX, TA, TX) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWXAY() (TW, TW, TX, TA, TY) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWXAZ() (TW, TW, TX, TA, TZ) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWXAW() (TW, TW, TX, TA, TW) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWXAA() (TW, TW, TX, TA, TA) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWXAB() (TW, TW, TX, TA, TB) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWXAC() (TW, TW, TX, TA, TC) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWXBX() (TW, TW, TX, TB, TX) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWXBY() (TW, TW, TX, TB, TY) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWXBZ() (TW, TW, TX, TB, TZ) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWXBW() (TW, TW, TX, TB, TW) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWXBA() (TW, TW, TX, TB, TA) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWXBB() (TW, TW, TX, TB, TB) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWXBC() (TW, TW, TX, TB, TC) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWXCX() (TW, TW, TX, TC, TX) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWXCY() (TW, TW, TX, TC, TY) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWXCZ() (TW, TW, TX, TC, TZ) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWXCW() (TW, TW, TX, TC, TW) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWXCA() (TW, TW, TX, TC, TA) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWXCB() (TW, TW, TX, TC, TB) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWXCC() (TW, TW, TX, TC, TC) { return _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWYXX() (TW, TW, TY, TX, TX) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWYXY() (TW, TW, TY, TX, TY) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWYXZ() (TW, TW, TY, TX, TZ) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWYXW() (TW, TW, TY, TX, TW) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWYXA() (TW, TW, TY, TX, TA) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWYXB() (TW, TW, TY, TX, TB) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWYXC() (TW, TW, TY, TX, TC) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWYYX() (TW, TW, TY, TY, TX) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWYYY() (TW, TW, TY, TY, TY) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWYYZ() (TW, TW, TY, TY, TZ) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWYYW() (TW, TW, TY, TY, TW) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWYYA() (TW, TW, TY, TY, TA) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWYYB() (TW, TW, TY, TY, TB) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWYYC() (TW, TW, TY, TY, TC) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWYZX() (TW, TW, TY, TZ, TX) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWYZY() (TW, TW, TY, TZ, TY) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWYZZ() (TW, TW, TY, TZ, TZ) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWYZW() (TW, TW, TY, TZ, TW) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWYZA() (TW, TW, TY, TZ, TA) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWYZB() (TW, TW, TY, TZ, TB) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWYZC() (TW, TW, TY, TZ, TC) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWYWX() (TW, TW, TY, TW, TX) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWYWY() (TW, TW, TY, TW, TY) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWYWZ() (TW, TW, TY, TW, TZ) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWYWW() (TW, TW, TY, TW, TW) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWYWA() (TW, TW, TY, TW, TA) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWYWB() (TW, TW, TY, TW, TB) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWYWC() (TW, TW, TY, TW, TC) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWYAX() (TW, TW, TY, TA, TX) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWYAY() (TW, TW, TY, TA, TY) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWYAZ() (TW, TW, TY, TA, TZ) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWYAW() (TW, TW, TY, TA, TW) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWYAA() (TW, TW, TY, TA, TA) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWYAB() (TW, TW, TY, TA, TB) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWYAC() (TW, TW, TY, TA, TC) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWYBX() (TW, TW, TY, TB, TX) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWYBY() (TW, TW, TY, TB, TY) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWYBZ() (TW, TW, TY, TB, TZ) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWYBW() (TW, TW, TY, TB, TW) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWYBA() (TW, TW, TY, TB, TA) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWYBB() (TW, TW, TY, TB, TB) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWYBC() (TW, TW, TY, TB, TC) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWYCX() (TW, TW, TY, TC, TX) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWYCY() (TW, TW, TY, TC, TY) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWYCZ() (TW, TW, TY, TC, TZ) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWYCW() (TW, TW, TY, TC, TW) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWYCA() (TW, TW, TY, TC, TA) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWYCB() (TW, TW, TY, TC, TB) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWYCC() (TW, TW, TY, TC, TC) { return _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWZXX() (TW, TW, TZ, TX, TX) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWZXY() (TW, TW, TZ, TX, TY) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWZXZ() (TW, TW, TZ, TX, TZ) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWZXW() (TW, TW, TZ, TX, TW) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWZXA() (TW, TW, TZ, TX, TA) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWZXB() (TW, TW, TZ, TX, TB) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWZXC() (TW, TW, TZ, TX, TC) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWZYX() (TW, TW, TZ, TY, TX) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWZYY() (TW, TW, TZ, TY, TY) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWZYZ() (TW, TW, TZ, TY, TZ) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWZYW() (TW, TW, TZ, TY, TW) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWZYA() (TW, TW, TZ, TY, TA) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWZYB() (TW, TW, TZ, TY, TB) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWZYC() (TW, TW, TZ, TY, TC) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWZZX() (TW, TW, TZ, TZ, TX) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWZZY() (TW, TW, TZ, TZ, TY) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWZZZ() (TW, TW, TZ, TZ, TZ) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWZZW() (TW, TW, TZ, TZ, TW) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWZZA() (TW, TW, TZ, TZ, TA) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWZZB() (TW, TW, TZ, TZ, TB) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWZZC() (TW, TW, TZ, TZ, TC) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWZWX() (TW, TW, TZ, TW, TX) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWZWY() (TW, TW, TZ, TW, TY) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWZWZ() (TW, TW, TZ, TW, TZ) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWZWW() (TW, TW, TZ, TW, TW) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWZWA() (TW, TW, TZ, TW, TA) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWZWB() (TW, TW, TZ, TW, TB) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWZWC() (TW, TW, TZ, TW, TC) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWZAX() (TW, TW, TZ, TA, TX) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWZAY() (TW, TW, TZ, TA, TY) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWZAZ() (TW, TW, TZ, TA, TZ) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWZAW() (TW, TW, TZ, TA, TW) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWZAA() (TW, TW, TZ, TA, TA) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWZAB() (TW, TW, TZ, TA, TB) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWZAC() (TW, TW, TZ, TA, TC) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWZBX() (TW, TW, TZ, TB, TX) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWZBY() (TW, TW, TZ, TB, TY) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWZBZ() (TW, TW, TZ, TB, TZ) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWZBW() (TW, TW, TZ, TB, TW) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWZBA() (TW, TW, TZ, TB, TA) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWZBB() (TW, TW, TZ, TB, TB) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWZBC() (TW, TW, TZ, TB, TC) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWZCX() (TW, TW, TZ, TC, TX) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWZCY() (TW, TW, TZ, TC, TY) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWZCZ() (TW, TW, TZ, TC, TZ) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWZCW() (TW, TW, TZ, TC, TW) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWZCA() (TW, TW, TZ, TC, TA) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWZCB() (TW, TW, TZ, TC, TB) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWZCC() (TW, TW, TZ, TC, TC) { return _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWWXX() (TW, TW, TW, TX, TX) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWWXY() (TW, TW, TW, TX, TY) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWWXZ() (TW, TW, TW, TX, TZ) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWWXW() (TW, TW, TW, TX, TW) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWWXA() (TW, TW, TW, TX, TA) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWWXB() (TW, TW, TW, TX, TB) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWWXC() (TW, TW, TW, TX, TC) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWWYX() (TW, TW, TW, TY, TX) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWWYY() (TW, TW, TW, TY, TY) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWWYZ() (TW, TW, TW, TY, TZ) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWWYW() (TW, TW, TW, TY, TW) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWWYA() (TW, TW, TW, TY, TA) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWWYB() (TW, TW, TW, TY, TB) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWWYC() (TW, TW, TW, TY, TC) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWWZX() (TW, TW, TW, TZ, TX) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWWZY() (TW, TW, TW, TZ, TY) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWWZZ() (TW, TW, TW, TZ, TZ) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWWZW() (TW, TW, TW, TZ, TW) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWWZA() (TW, TW, TW, TZ, TA) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWWZB() (TW, TW, TW, TZ, TB) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWWZC() (TW, TW, TW, TZ, TC) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWWWX() (TW, TW, TW, TW, TX) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWWWY() (TW, TW, TW, TW, TY) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWWWZ() (TW, TW, TW, TW, TZ) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWWWW() (TW, TW, TW, TW, TW) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWWWA() (TW, TW, TW, TW, TA) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWWWB() (TW, TW, TW, TW, TB) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWWWC() (TW, TW, TW, TW, TC) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWWAX() (TW, TW, TW, TA, TX) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWWAY() (TW, TW, TW, TA, TY) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWWAZ() (TW, TW, TW, TA, TZ) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWWAW() (TW, TW, TW, TA, TW) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWWAA() (TW, TW, TW, TA, TA) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWWAB() (TW, TW, TW, TA, TB) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWWAC() (TW, TW, TW, TA, TC) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWWBX() (TW, TW, TW, TB, TX) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWWBY() (TW, TW, TW, TB, TY) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWWBZ() (TW, TW, TW, TB, TZ) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWWBW() (TW, TW, TW, TB, TW) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWWBA() (TW, TW, TW, TB, TA) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWWBB() (TW, TW, TW, TB, TB) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWWBC() (TW, TW, TW, TB, TC) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWWCX() (TW, TW, TW, TC, TX) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWWCY() (TW, TW, TW, TC, TY) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWWCZ() (TW, TW, TW, TC, TZ) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWWCW() (TW, TW, TW, TC, TW) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWWCA() (TW, TW, TW, TC, TA) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWWCB() (TW, TW, TW, TC, TB) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWWCC() (TW, TW, TW, TC, TC) { return _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWAXX() (TW, TW, TA, TX, TX) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWAXY() (TW, TW, TA, TX, TY) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWAXZ() (TW, TW, TA, TX, TZ) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWAXW() (TW, TW, TA, TX, TW) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWAXA() (TW, TW, TA, TX, TA) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWAXB() (TW, TW, TA, TX, TB) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWAXC() (TW, TW, TA, TX, TC) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWAYX() (TW, TW, TA, TY, TX) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWAYY() (TW, TW, TA, TY, TY) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWAYZ() (TW, TW, TA, TY, TZ) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWAYW() (TW, TW, TA, TY, TW) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWAYA() (TW, TW, TA, TY, TA) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWAYB() (TW, TW, TA, TY, TB) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWAYC() (TW, TW, TA, TY, TC) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWAZX() (TW, TW, TA, TZ, TX) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWAZY() (TW, TW, TA, TZ, TY) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWAZZ() (TW, TW, TA, TZ, TZ) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWAZW() (TW, TW, TA, TZ, TW) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWAZA() (TW, TW, TA, TZ, TA) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWAZB() (TW, TW, TA, TZ, TB) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWAZC() (TW, TW, TA, TZ, TC) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWAWX() (TW, TW, TA, TW, TX) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWAWY() (TW, TW, TA, TW, TY) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWAWZ() (TW, TW, TA, TW, TZ) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWAWW() (TW, TW, TA, TW, TW) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWAWA() (TW, TW, TA, TW, TA) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWAWB() (TW, TW, TA, TW, TB) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWAWC() (TW, TW, TA, TW, TC) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWAAX() (TW, TW, TA, TA, TX) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWAAY() (TW, TW, TA, TA, TY) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWAAZ() (TW, TW, TA, TA, TZ) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWAAW() (TW, TW, TA, TA, TW) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWAAA() (TW, TW, TA, TA, TA) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWAAB() (TW, TW, TA, TA, TB) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWAAC() (TW, TW, TA, TA, TC) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWABX() (TW, TW, TA, TB, TX) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWABY() (TW, TW, TA, TB, TY) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWABZ() (TW, TW, TA, TB, TZ) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWABW() (TW, TW, TA, TB, TW) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWABA() (TW, TW, TA, TB, TA) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWABB() (TW, TW, TA, TB, TB) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWABC() (TW, TW, TA, TB, TC) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWACX() (TW, TW, TA, TC, TX) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWACY() (TW, TW, TA, TC, TY) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWACZ() (TW, TW, TA, TC, TZ) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWACW() (TW, TW, TA, TC, TW) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWACA() (TW, TW, TA, TC, TA) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWACB() (TW, TW, TA, TC, TB) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWACC() (TW, TW, TA, TC, TC) { return _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWBXX() (TW, TW, TB, TX, TX) { return _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWBXY() (TW, TW, TB, TX, TY) { return _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWBXZ() (TW, TW, TB, TX, TZ) { return _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWBXW() (TW, TW, TB, TX, TW) { return _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWBXA() (TW, TW, TB, TX, TA) { return _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWBXB() (TW, TW, TB, TX, TB) { return _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWBXC() (TW, TW, TB, TX, TC) { return _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWBYX() (TW, TW, TB, TY, TX) { return _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWBYY() (TW, TW, TB, TY, TY) { return _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWBYZ() (TW, TW, TB, TY, TZ) { return _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWBYW() (TW, TW, TB, TY, TW) { return _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWBYA() (TW, TW, TB, TY, TA) { return _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWBYB() (TW, TW, TB, TY, TB) { return _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWBYC() (TW, TW, TB, TY, TC) { return _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWBZX() (TW, TW, TB, TZ, TX) { return _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWBZY() (TW, TW, TB, TZ, TY) { return _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWBZZ() (TW, TW, TB, TZ, TZ) { return _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWBZW() (TW, TW, TB, TZ, TW) { return _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWBZA() (TW, TW, TB, TZ, TA) { return _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWBZB() (TW, TW, TB, TZ, TB) { return _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWBZC() (TW, TW, TB, TZ, TC) { return _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWBWX() (TW, TW, TB, TW, TX) { return _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWBWY() (TW, TW, TB, TW, TY) { return _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWBWZ() (TW, TW, TB, TW, TZ) { return _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWBWW() (TW, TW, TB, TW, TW) { return _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWBWA() (TW, TW, TB, TW, TA) { return _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWBWB() (TW, TW, TB, TW, TB) { return _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWBWC() (TW, TW, TB, TW, TC) { return _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWBAX() (TW, TW, TB, TA, TX) { return _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWBAY() (TW, TW, TB, TA, TY) { return _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWBAZ() (TW, TW, TB, TA, TZ) { return _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWBAW() (TW, TW, TB, TA, TW) { return _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWBAA() (TW, TW, TB, TA, TA) { return _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWBAB() (TW, TW, TB, TA, TB) { return _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWBAC() (TW, TW, TB, TA, TC) { return _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWBBX() (TW, TW, TB, TB, TX) { return _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWBBY() (TW, TW, TB, TB, TY) { return _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWBBZ() (TW, TW, TB, TB, TZ) { return _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWBBW() (TW, TW, TB, TB, TW) { return _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWBBA() (TW, TW, TB, TB, TA) { return _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWBBB() (TW, TW, TB, TB, TB) { return _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWBBC() (TW, TW, TB, TB, TC) { return _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWBCX() (TW, TW, TB, TC, TX) { return _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWBCY() (TW, TW, TB, TC, TY) { return _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWBCZ() (TW, TW, TB, TC, TZ) { return _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWBCW() (TW, TW, TB, TC, TW) { return _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWBCA() (TW, TW, TB, TC, TA) { return _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWBCB() (TW, TW, TB, TC, TB) { return _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWBCC() (TW, TW, TB, TC, TC) { return _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWCXX() (TW, TW, TC, TX, TX) { return _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWCXY() (TW, TW, TC, TX, TY) { return _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWCXZ() (TW, TW, TC, TX, TZ) { return _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWCXW() (TW, TW, TC, TX, TW) { return _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWCXA() (TW, TW, TC, TX, TA) { return _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWCXB() (TW, TW, TC, TX, TB) { return _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWCXC() (TW, TW, TC, TX, TC) { return _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWCYX() (TW, TW, TC, TY, TX) { return _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWCYY() (TW, TW, TC, TY, TY) { return _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWCYZ() (TW, TW, TC, TY, TZ) { return _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWCYW() (TW, TW, TC, TY, TW) { return _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWCYA() (TW, TW, TC, TY, TA) { return _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWCYB() (TW, TW, TC, TY, TB) { return _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWCYC() (TW, TW, TC, TY, TC) { return _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWCZX() (TW, TW, TC, TZ, TX) { return _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWCZY() (TW, TW, TC, TZ, TY) { return _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWCZZ() (TW, TW, TC, TZ, TZ) { return _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWCZW() (TW, TW, TC, TZ, TW) { return _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWCZA() (TW, TW, TC, TZ, TA) { return _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWCZB() (TW, TW, TC, TZ, TB) { return _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWCZC() (TW, TW, TC, TZ, TC) { return _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWCWX() (TW, TW, TC, TW, TX) { return _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWCWY() (TW, TW, TC, TW, TY) { return _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWCWZ() (TW, TW, TC, TW, TZ) { return _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWCWW() (TW, TW, TC, TW, TW) { return _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWCWA() (TW, TW, TC, TW, TA) { return _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWCWB() (TW, TW, TC, TW, TB) { return _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWCWC() (TW, TW, TC, TW, TC) { return _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWCAX() (TW, TW, TC, TA, TX) { return _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWCAY() (TW, TW, TC, TA, TY) { return _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWCAZ() (TW, TW, TC, TA, TZ) { return _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWCAW() (TW, TW, TC, TA, TW) { return _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWCAA() (TW, TW, TC, TA, TA) { return _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWCAB() (TW, TW, TC, TA, TB) { return _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWCAC() (TW, TW, TC, TA, TC) { return _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWCBX() (TW, TW, TC, TB, TX) { return _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWCBY() (TW, TW, TC, TB, TY) { return _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWCBZ() (TW, TW, TC, TB, TZ) { return _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWCBW() (TW, TW, TC, TB, TW) { return _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWCBA() (TW, TW, TC, TB, TA) { return _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWCBB() (TW, TW, TC, TB, TB) { return _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWCBC() (TW, TW, TC, TB, TC) { return _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWCCX() (TW, TW, TC, TC, TX) { return _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWCCY() (TW, TW, TC, TC, TY) { return _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWCCZ() (TW, TW, TC, TC, TZ) { return _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWCCW() (TW, TW, TC, TC, TW) { return _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWCCA() (TW, TW, TC, TC, TA) { return _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWCCB() (TW, TW, TC, TC, TB) { return _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WWCCC() (TW, TW, TC, TC, TC) { return _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAXXX() (TW, TA, TX, TX, TX) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAXXY() (TW, TA, TX, TX, TY) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAXXZ() (TW, TA, TX, TX, TZ) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAXXW() (TW, TA, TX, TX, TW) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAXXA() (TW, TA, TX, TX, TA) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAXXB() (TW, TA, TX, TX, TB) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAXXC() (TW, TA, TX, TX, TC) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAXYX() (TW, TA, TX, TY, TX) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAXYY() (TW, TA, TX, TY, TY) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAXYZ() (TW, TA, TX, TY, TZ) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAXYW() (TW, TA, TX, TY, TW) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAXYA() (TW, TA, TX, TY, TA) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAXYB() (TW, TA, TX, TY, TB) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAXYC() (TW, TA, TX, TY, TC) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAXZX() (TW, TA, TX, TZ, TX) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAXZY() (TW, TA, TX, TZ, TY) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAXZZ() (TW, TA, TX, TZ, TZ) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAXZW() (TW, TA, TX, TZ, TW) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAXZA() (TW, TA, TX, TZ, TA) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAXZB() (TW, TA, TX, TZ, TB) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAXZC() (TW, TA, TX, TZ, TC) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAXWX() (TW, TA, TX, TW, TX) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAXWY() (TW, TA, TX, TW, TY) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAXWZ() (TW, TA, TX, TW, TZ) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAXWW() (TW, TA, TX, TW, TW) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAXWA() (TW, TA, TX, TW, TA) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAXWB() (TW, TA, TX, TW, TB) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAXWC() (TW, TA, TX, TW, TC) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAXAX() (TW, TA, TX, TA, TX) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAXAY() (TW, TA, TX, TA, TY) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAXAZ() (TW, TA, TX, TA, TZ) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAXAW() (TW, TA, TX, TA, TW) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAXAA() (TW, TA, TX, TA, TA) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAXAB() (TW, TA, TX, TA, TB) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAXAC() (TW, TA, TX, TA, TC) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAXBX() (TW, TA, TX, TB, TX) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAXBY() (TW, TA, TX, TB, TY) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAXBZ() (TW, TA, TX, TB, TZ) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAXBW() (TW, TA, TX, TB, TW) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAXBA() (TW, TA, TX, TB, TA) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAXBB() (TW, TA, TX, TB, TB) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAXBC() (TW, TA, TX, TB, TC) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAXCX() (TW, TA, TX, TC, TX) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAXCY() (TW, TA, TX, TC, TY) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAXCZ() (TW, TA, TX, TC, TZ) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAXCW() (TW, TA, TX, TC, TW) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAXCA() (TW, TA, TX, TC, TA) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAXCB() (TW, TA, TX, TC, TB) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAXCC() (TW, TA, TX, TC, TC) { return _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAYXX() (TW, TA, TY, TX, TX) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAYXY() (TW, TA, TY, TX, TY) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAYXZ() (TW, TA, TY, TX, TZ) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAYXW() (TW, TA, TY, TX, TW) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAYXA() (TW, TA, TY, TX, TA) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAYXB() (TW, TA, TY, TX, TB) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAYXC() (TW, TA, TY, TX, TC) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAYYX() (TW, TA, TY, TY, TX) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAYYY() (TW, TA, TY, TY, TY) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAYYZ() (TW, TA, TY, TY, TZ) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAYYW() (TW, TA, TY, TY, TW) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAYYA() (TW, TA, TY, TY, TA) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAYYB() (TW, TA, TY, TY, TB) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAYYC() (TW, TA, TY, TY, TC) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAYZX() (TW, TA, TY, TZ, TX) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAYZY() (TW, TA, TY, TZ, TY) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAYZZ() (TW, TA, TY, TZ, TZ) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAYZW() (TW, TA, TY, TZ, TW) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAYZA() (TW, TA, TY, TZ, TA) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAYZB() (TW, TA, TY, TZ, TB) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAYZC() (TW, TA, TY, TZ, TC) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAYWX() (TW, TA, TY, TW, TX) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAYWY() (TW, TA, TY, TW, TY) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAYWZ() (TW, TA, TY, TW, TZ) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAYWW() (TW, TA, TY, TW, TW) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAYWA() (TW, TA, TY, TW, TA) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAYWB() (TW, TA, TY, TW, TB) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAYWC() (TW, TA, TY, TW, TC) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAYAX() (TW, TA, TY, TA, TX) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAYAY() (TW, TA, TY, TA, TY) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAYAZ() (TW, TA, TY, TA, TZ) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAYAW() (TW, TA, TY, TA, TW) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAYAA() (TW, TA, TY, TA, TA) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAYAB() (TW, TA, TY, TA, TB) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAYAC() (TW, TA, TY, TA, TC) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAYBX() (TW, TA, TY, TB, TX) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAYBY() (TW, TA, TY, TB, TY) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAYBZ() (TW, TA, TY, TB, TZ) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAYBW() (TW, TA, TY, TB, TW) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAYBA() (TW, TA, TY, TB, TA) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAYBB() (TW, TA, TY, TB, TB) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAYBC() (TW, TA, TY, TB, TC) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAYCX() (TW, TA, TY, TC, TX) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAYCY() (TW, TA, TY, TC, TY) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAYCZ() (TW, TA, TY, TC, TZ) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAYCW() (TW, TA, TY, TC, TW) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAYCA() (TW, TA, TY, TC, TA) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAYCB() (TW, TA, TY, TC, TB) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAYCC() (TW, TA, TY, TC, TC) { return _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAZXX() (TW, TA, TZ, TX, TX) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAZXY() (TW, TA, TZ, TX, TY) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAZXZ() (TW, TA, TZ, TX, TZ) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAZXW() (TW, TA, TZ, TX, TW) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAZXA() (TW, TA, TZ, TX, TA) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAZXB() (TW, TA, TZ, TX, TB) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAZXC() (TW, TA, TZ, TX, TC) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAZYX() (TW, TA, TZ, TY, TX) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAZYY() (TW, TA, TZ, TY, TY) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAZYZ() (TW, TA, TZ, TY, TZ) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAZYW() (TW, TA, TZ, TY, TW) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAZYA() (TW, TA, TZ, TY, TA) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAZYB() (TW, TA, TZ, TY, TB) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAZYC() (TW, TA, TZ, TY, TC) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAZZX() (TW, TA, TZ, TZ, TX) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAZZY() (TW, TA, TZ, TZ, TY) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAZZZ() (TW, TA, TZ, TZ, TZ) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAZZW() (TW, TA, TZ, TZ, TW) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAZZA() (TW, TA, TZ, TZ, TA) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAZZB() (TW, TA, TZ, TZ, TB) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAZZC() (TW, TA, TZ, TZ, TC) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAZWX() (TW, TA, TZ, TW, TX) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAZWY() (TW, TA, TZ, TW, TY) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAZWZ() (TW, TA, TZ, TW, TZ) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAZWW() (TW, TA, TZ, TW, TW) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAZWA() (TW, TA, TZ, TW, TA) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAZWB() (TW, TA, TZ, TW, TB) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAZWC() (TW, TA, TZ, TW, TC) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAZAX() (TW, TA, TZ, TA, TX) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAZAY() (TW, TA, TZ, TA, TY) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAZAZ() (TW, TA, TZ, TA, TZ) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAZAW() (TW, TA, TZ, TA, TW) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAZAA() (TW, TA, TZ, TA, TA) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAZAB() (TW, TA, TZ, TA, TB) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAZAC() (TW, TA, TZ, TA, TC) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAZBX() (TW, TA, TZ, TB, TX) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAZBY() (TW, TA, TZ, TB, TY) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAZBZ() (TW, TA, TZ, TB, TZ) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAZBW() (TW, TA, TZ, TB, TW) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAZBA() (TW, TA, TZ, TB, TA) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAZBB() (TW, TA, TZ, TB, TB) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAZBC() (TW, TA, TZ, TB, TC) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAZCX() (TW, TA, TZ, TC, TX) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAZCY() (TW, TA, TZ, TC, TY) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAZCZ() (TW, TA, TZ, TC, TZ) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAZCW() (TW, TA, TZ, TC, TW) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAZCA() (TW, TA, TZ, TC, TA) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAZCB() (TW, TA, TZ, TC, TB) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAZCC() (TW, TA, TZ, TC, TC) { return _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAWXX() (TW, TA, TW, TX, TX) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAWXY() (TW, TA, TW, TX, TY) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAWXZ() (TW, TA, TW, TX, TZ) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAWXW() (TW, TA, TW, TX, TW) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAWXA() (TW, TA, TW, TX, TA) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAWXB() (TW, TA, TW, TX, TB) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAWXC() (TW, TA, TW, TX, TC) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAWYX() (TW, TA, TW, TY, TX) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAWYY() (TW, TA, TW, TY, TY) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAWYZ() (TW, TA, TW, TY, TZ) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAWYW() (TW, TA, TW, TY, TW) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAWYA() (TW, TA, TW, TY, TA) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAWYB() (TW, TA, TW, TY, TB) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAWYC() (TW, TA, TW, TY, TC) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAWZX() (TW, TA, TW, TZ, TX) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAWZY() (TW, TA, TW, TZ, TY) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAWZZ() (TW, TA, TW, TZ, TZ) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAWZW() (TW, TA, TW, TZ, TW) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAWZA() (TW, TA, TW, TZ, TA) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAWZB() (TW, TA, TW, TZ, TB) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAWZC() (TW, TA, TW, TZ, TC) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAWWX() (TW, TA, TW, TW, TX) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAWWY() (TW, TA, TW, TW, TY) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAWWZ() (TW, TA, TW, TW, TZ) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAWWW() (TW, TA, TW, TW, TW) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAWWA() (TW, TA, TW, TW, TA) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAWWB() (TW, TA, TW, TW, TB) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAWWC() (TW, TA, TW, TW, TC) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAWAX() (TW, TA, TW, TA, TX) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAWAY() (TW, TA, TW, TA, TY) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAWAZ() (TW, TA, TW, TA, TZ) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAWAW() (TW, TA, TW, TA, TW) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAWAA() (TW, TA, TW, TA, TA) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAWAB() (TW, TA, TW, TA, TB) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAWAC() (TW, TA, TW, TA, TC) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAWBX() (TW, TA, TW, TB, TX) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAWBY() (TW, TA, TW, TB, TY) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAWBZ() (TW, TA, TW, TB, TZ) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAWBW() (TW, TA, TW, TB, TW) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAWBA() (TW, TA, TW, TB, TA) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAWBB() (TW, TA, TW, TB, TB) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAWBC() (TW, TA, TW, TB, TC) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAWCX() (TW, TA, TW, TC, TX) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAWCY() (TW, TA, TW, TC, TY) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAWCZ() (TW, TA, TW, TC, TZ) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAWCW() (TW, TA, TW, TC, TW) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAWCA() (TW, TA, TW, TC, TA) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAWCB() (TW, TA, TW, TC, TB) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAWCC() (TW, TA, TW, TC, TC) { return _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAAXX() (TW, TA, TA, TX, TX) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAAXY() (TW, TA, TA, TX, TY) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAAXZ() (TW, TA, TA, TX, TZ) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAAXW() (TW, TA, TA, TX, TW) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAAXA() (TW, TA, TA, TX, TA) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAAXB() (TW, TA, TA, TX, TB) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAAXC() (TW, TA, TA, TX, TC) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAAYX() (TW, TA, TA, TY, TX) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAAYY() (TW, TA, TA, TY, TY) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAAYZ() (TW, TA, TA, TY, TZ) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAAYW() (TW, TA, TA, TY, TW) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAAYA() (TW, TA, TA, TY, TA) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAAYB() (TW, TA, TA, TY, TB) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAAYC() (TW, TA, TA, TY, TC) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAAZX() (TW, TA, TA, TZ, TX) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAAZY() (TW, TA, TA, TZ, TY) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAAZZ() (TW, TA, TA, TZ, TZ) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAAZW() (TW, TA, TA, TZ, TW) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAAZA() (TW, TA, TA, TZ, TA) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAAZB() (TW, TA, TA, TZ, TB) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAAZC() (TW, TA, TA, TZ, TC) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAAWX() (TW, TA, TA, TW, TX) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAAWY() (TW, TA, TA, TW, TY) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAAWZ() (TW, TA, TA, TW, TZ) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAAWW() (TW, TA, TA, TW, TW) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAAWA() (TW, TA, TA, TW, TA) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAAWB() (TW, TA, TA, TW, TB) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAAWC() (TW, TA, TA, TW, TC) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAAAX() (TW, TA, TA, TA, TX) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAAAY() (TW, TA, TA, TA, TY) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAAAZ() (TW, TA, TA, TA, TZ) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAAAW() (TW, TA, TA, TA, TW) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAAAA() (TW, TA, TA, TA, TA) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAAAB() (TW, TA, TA, TA, TB) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAAAC() (TW, TA, TA, TA, TC) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAABX() (TW, TA, TA, TB, TX) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAABY() (TW, TA, TA, TB, TY) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAABZ() (TW, TA, TA, TB, TZ) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAABW() (TW, TA, TA, TB, TW) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAABA() (TW, TA, TA, TB, TA) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAABB() (TW, TA, TA, TB, TB) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAABC() (TW, TA, TA, TB, TC) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAACX() (TW, TA, TA, TC, TX) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAACY() (TW, TA, TA, TC, TY) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAACZ() (TW, TA, TA, TC, TZ) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAACW() (TW, TA, TA, TC, TW) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAACA() (TW, TA, TA, TC, TA) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAACB() (TW, TA, TA, TC, TB) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WAACC() (TW, TA, TA, TC, TC) { return _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WABXX() (TW, TA, TB, TX, TX) { return _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WABXY() (TW, TA, TB, TX, TY) { return _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WABXZ() (TW, TA, TB, TX, TZ) { return _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WABXW() (TW, TA, TB, TX, TW) { return _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WABXA() (TW, TA, TB, TX, TA) { return _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WABXB() (TW, TA, TB, TX, TB) { return _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WABXC() (TW, TA, TB, TX, TC) { return _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WABYX() (TW, TA, TB, TY, TX) { return _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WABYY() (TW, TA, TB, TY, TY) { return _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WABYZ() (TW, TA, TB, TY, TZ) { return _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WABYW() (TW, TA, TB, TY, TW) { return _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WABYA() (TW, TA, TB, TY, TA) { return _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WABYB() (TW, TA, TB, TY, TB) { return _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WABYC() (TW, TA, TB, TY, TC) { return _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WABZX() (TW, TA, TB, TZ, TX) { return _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WABZY() (TW, TA, TB, TZ, TY) { return _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WABZZ() (TW, TA, TB, TZ, TZ) { return _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WABZW() (TW, TA, TB, TZ, TW) { return _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WABZA() (TW, TA, TB, TZ, TA) { return _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WABZB() (TW, TA, TB, TZ, TB) { return _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WABZC() (TW, TA, TB, TZ, TC) { return _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WABWX() (TW, TA, TB, TW, TX) { return _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WABWY() (TW, TA, TB, TW, TY) { return _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WABWZ() (TW, TA, TB, TW, TZ) { return _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WABWW() (TW, TA, TB, TW, TW) { return _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WABWA() (TW, TA, TB, TW, TA) { return _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WABWB() (TW, TA, TB, TW, TB) { return _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WABWC() (TW, TA, TB, TW, TC) { return _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WABAX() (TW, TA, TB, TA, TX) { return _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WABAY() (TW, TA, TB, TA, TY) { return _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WABAZ() (TW, TA, TB, TA, TZ) { return _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WABAW() (TW, TA, TB, TA, TW) { return _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WABAA() (TW, TA, TB, TA, TA) { return _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WABAB() (TW, TA, TB, TA, TB) { return _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WABAC() (TW, TA, TB, TA, TC) { return _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WABBX() (TW, TA, TB, TB, TX) { return _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WABBY() (TW, TA, TB, TB, TY) { return _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WABBZ() (TW, TA, TB, TB, TZ) { return _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WABBW() (TW, TA, TB, TB, TW) { return _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WABBA() (TW, TA, TB, TB, TA) { return _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WABBB() (TW, TA, TB, TB, TB) { return _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WABBC() (TW, TA, TB, TB, TC) { return _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WABCX() (TW, TA, TB, TC, TX) { return _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WABCY() (TW, TA, TB, TC, TY) { return _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WABCZ() (TW, TA, TB, TC, TZ) { return _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WABCW() (TW, TA, TB, TC, TW) { return _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WABCA() (TW, TA, TB, TC, TA) { return _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WABCB() (TW, TA, TB, TC, TB) { return _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WABCC() (TW, TA, TB, TC, TC) { return _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WACXX() (TW, TA, TC, TX, TX) { return _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WACXY() (TW, TA, TC, TX, TY) { return _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WACXZ() (TW, TA, TC, TX, TZ) { return _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WACXW() (TW, TA, TC, TX, TW) { return _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WACXA() (TW, TA, TC, TX, TA) { return _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WACXB() (TW, TA, TC, TX, TB) { return _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WACXC() (TW, TA, TC, TX, TC) { return _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WACYX() (TW, TA, TC, TY, TX) { return _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WACYY() (TW, TA, TC, TY, TY) { return _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WACYZ() (TW, TA, TC, TY, TZ) { return _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WACYW() (TW, TA, TC, TY, TW) { return _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WACYA() (TW, TA, TC, TY, TA) { return _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WACYB() (TW, TA, TC, TY, TB) { return _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WACYC() (TW, TA, TC, TY, TC) { return _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WACZX() (TW, TA, TC, TZ, TX) { return _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WACZY() (TW, TA, TC, TZ, TY) { return _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WACZZ() (TW, TA, TC, TZ, TZ) { return _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WACZW() (TW, TA, TC, TZ, TW) { return _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WACZA() (TW, TA, TC, TZ, TA) { return _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WACZB() (TW, TA, TC, TZ, TB) { return _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WACZC() (TW, TA, TC, TZ, TC) { return _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WACWX() (TW, TA, TC, TW, TX) { return _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WACWY() (TW, TA, TC, TW, TY) { return _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WACWZ() (TW, TA, TC, TW, TZ) { return _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WACWW() (TW, TA, TC, TW, TW) { return _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WACWA() (TW, TA, TC, TW, TA) { return _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WACWB() (TW, TA, TC, TW, TB) { return _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WACWC() (TW, TA, TC, TW, TC) { return _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WACAX() (TW, TA, TC, TA, TX) { return _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WACAY() (TW, TA, TC, TA, TY) { return _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WACAZ() (TW, TA, TC, TA, TZ) { return _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WACAW() (TW, TA, TC, TA, TW) { return _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WACAA() (TW, TA, TC, TA, TA) { return _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WACAB() (TW, TA, TC, TA, TB) { return _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WACAC() (TW, TA, TC, TA, TC) { return _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WACBX() (TW, TA, TC, TB, TX) { return _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WACBY() (TW, TA, TC, TB, TY) { return _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WACBZ() (TW, TA, TC, TB, TZ) { return _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WACBW() (TW, TA, TC, TB, TW) { return _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WACBA() (TW, TA, TC, TB, TA) { return _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WACBB() (TW, TA, TC, TB, TB) { return _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WACBC() (TW, TA, TC, TB, TC) { return _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WACCX() (TW, TA, TC, TC, TX) { return _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WACCY() (TW, TA, TC, TC, TY) { return _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WACCZ() (TW, TA, TC, TC, TZ) { return _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WACCW() (TW, TA, TC, TC, TW) { return _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WACCA() (TW, TA, TC, TC, TA) { return _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WACCB() (TW, TA, TC, TC, TB) { return _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WACCC() (TW, TA, TC, TC, TC) { return _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBXXX() (TW, TB, TX, TX, TX) { return _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBXXY() (TW, TB, TX, TX, TY) { return _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBXXZ() (TW, TB, TX, TX, TZ) { return _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBXXW() (TW, TB, TX, TX, TW) { return _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBXXA() (TW, TB, TX, TX, TA) { return _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBXXB() (TW, TB, TX, TX, TB) { return _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBXXC() (TW, TB, TX, TX, TC) { return _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBXYX() (TW, TB, TX, TY, TX) { return _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBXYY() (TW, TB, TX, TY, TY) { return _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBXYZ() (TW, TB, TX, TY, TZ) { return _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBXYW() (TW, TB, TX, TY, TW) { return _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBXYA() (TW, TB, TX, TY, TA) { return _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBXYB() (TW, TB, TX, TY, TB) { return _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBXYC() (TW, TB, TX, TY, TC) { return _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBXZX() (TW, TB, TX, TZ, TX) { return _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBXZY() (TW, TB, TX, TZ, TY) { return _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBXZZ() (TW, TB, TX, TZ, TZ) { return _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBXZW() (TW, TB, TX, TZ, TW) { return _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBXZA() (TW, TB, TX, TZ, TA) { return _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBXZB() (TW, TB, TX, TZ, TB) { return _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBXZC() (TW, TB, TX, TZ, TC) { return _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBXWX() (TW, TB, TX, TW, TX) { return _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBXWY() (TW, TB, TX, TW, TY) { return _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBXWZ() (TW, TB, TX, TW, TZ) { return _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBXWW() (TW, TB, TX, TW, TW) { return _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBXWA() (TW, TB, TX, TW, TA) { return _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBXWB() (TW, TB, TX, TW, TB) { return _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBXWC() (TW, TB, TX, TW, TC) { return _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBXAX() (TW, TB, TX, TA, TX) { return _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBXAY() (TW, TB, TX, TA, TY) { return _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBXAZ() (TW, TB, TX, TA, TZ) { return _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBXAW() (TW, TB, TX, TA, TW) { return _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBXAA() (TW, TB, TX, TA, TA) { return _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBXAB() (TW, TB, TX, TA, TB) { return _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBXAC() (TW, TB, TX, TA, TC) { return _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBXBX() (TW, TB, TX, TB, TX) { return _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBXBY() (TW, TB, TX, TB, TY) { return _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBXBZ() (TW, TB, TX, TB, TZ) { return _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBXBW() (TW, TB, TX, TB, TW) { return _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBXBA() (TW, TB, TX, TB, TA) { return _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBXBB() (TW, TB, TX, TB, TB) { return _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBXBC() (TW, TB, TX, TB, TC) { return _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBXCX() (TW, TB, TX, TC, TX) { return _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBXCY() (TW, TB, TX, TC, TY) { return _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBXCZ() (TW, TB, TX, TC, TZ) { return _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBXCW() (TW, TB, TX, TC, TW) { return _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBXCA() (TW, TB, TX, TC, TA) { return _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBXCB() (TW, TB, TX, TC, TB) { return _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBXCC() (TW, TB, TX, TC, TC) { return _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBYXX() (TW, TB, TY, TX, TX) { return _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBYXY() (TW, TB, TY, TX, TY) { return _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBYXZ() (TW, TB, TY, TX, TZ) { return _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBYXW() (TW, TB, TY, TX, TW) { return _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBYXA() (TW, TB, TY, TX, TA) { return _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBYXB() (TW, TB, TY, TX, TB) { return _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBYXC() (TW, TB, TY, TX, TC) { return _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBYYX() (TW, TB, TY, TY, TX) { return _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBYYY() (TW, TB, TY, TY, TY) { return _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBYYZ() (TW, TB, TY, TY, TZ) { return _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBYYW() (TW, TB, TY, TY, TW) { return _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBYYA() (TW, TB, TY, TY, TA) { return _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBYYB() (TW, TB, TY, TY, TB) { return _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBYYC() (TW, TB, TY, TY, TC) { return _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBYZX() (TW, TB, TY, TZ, TX) { return _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBYZY() (TW, TB, TY, TZ, TY) { return _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBYZZ() (TW, TB, TY, TZ, TZ) { return _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBYZW() (TW, TB, TY, TZ, TW) { return _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBYZA() (TW, TB, TY, TZ, TA) { return _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBYZB() (TW, TB, TY, TZ, TB) { return _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBYZC() (TW, TB, TY, TZ, TC) { return _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBYWX() (TW, TB, TY, TW, TX) { return _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBYWY() (TW, TB, TY, TW, TY) { return _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBYWZ() (TW, TB, TY, TW, TZ) { return _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBYWW() (TW, TB, TY, TW, TW) { return _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBYWA() (TW, TB, TY, TW, TA) { return _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBYWB() (TW, TB, TY, TW, TB) { return _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBYWC() (TW, TB, TY, TW, TC) { return _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBYAX() (TW, TB, TY, TA, TX) { return _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBYAY() (TW, TB, TY, TA, TY) { return _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBYAZ() (TW, TB, TY, TA, TZ) { return _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBYAW() (TW, TB, TY, TA, TW) { return _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBYAA() (TW, TB, TY, TA, TA) { return _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBYAB() (TW, TB, TY, TA, TB) { return _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBYAC() (TW, TB, TY, TA, TC) { return _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBYBX() (TW, TB, TY, TB, TX) { return _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBYBY() (TW, TB, TY, TB, TY) { return _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBYBZ() (TW, TB, TY, TB, TZ) { return _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBYBW() (TW, TB, TY, TB, TW) { return _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBYBA() (TW, TB, TY, TB, TA) { return _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBYBB() (TW, TB, TY, TB, TB) { return _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBYBC() (TW, TB, TY, TB, TC) { return _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBYCX() (TW, TB, TY, TC, TX) { return _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBYCY() (TW, TB, TY, TC, TY) { return _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBYCZ() (TW, TB, TY, TC, TZ) { return _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBYCW() (TW, TB, TY, TC, TW) { return _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBYCA() (TW, TB, TY, TC, TA) { return _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBYCB() (TW, TB, TY, TC, TB) { return _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBYCC() (TW, TB, TY, TC, TC) { return _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBZXX() (TW, TB, TZ, TX, TX) { return _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBZXY() (TW, TB, TZ, TX, TY) { return _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBZXZ() (TW, TB, TZ, TX, TZ) { return _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBZXW() (TW, TB, TZ, TX, TW) { return _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBZXA() (TW, TB, TZ, TX, TA) { return _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBZXB() (TW, TB, TZ, TX, TB) { return _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBZXC() (TW, TB, TZ, TX, TC) { return _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBZYX() (TW, TB, TZ, TY, TX) { return _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBZYY() (TW, TB, TZ, TY, TY) { return _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBZYZ() (TW, TB, TZ, TY, TZ) { return _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBZYW() (TW, TB, TZ, TY, TW) { return _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBZYA() (TW, TB, TZ, TY, TA) { return _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBZYB() (TW, TB, TZ, TY, TB) { return _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBZYC() (TW, TB, TZ, TY, TC) { return _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBZZX() (TW, TB, TZ, TZ, TX) { return _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBZZY() (TW, TB, TZ, TZ, TY) { return _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBZZZ() (TW, TB, TZ, TZ, TZ) { return _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBZZW() (TW, TB, TZ, TZ, TW) { return _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBZZA() (TW, TB, TZ, TZ, TA) { return _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBZZB() (TW, TB, TZ, TZ, TB) { return _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBZZC() (TW, TB, TZ, TZ, TC) { return _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBZWX() (TW, TB, TZ, TW, TX) { return _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBZWY() (TW, TB, TZ, TW, TY) { return _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBZWZ() (TW, TB, TZ, TW, TZ) { return _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBZWW() (TW, TB, TZ, TW, TW) { return _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBZWA() (TW, TB, TZ, TW, TA) { return _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBZWB() (TW, TB, TZ, TW, TB) { return _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBZWC() (TW, TB, TZ, TW, TC) { return _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBZAX() (TW, TB, TZ, TA, TX) { return _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBZAY() (TW, TB, TZ, TA, TY) { return _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBZAZ() (TW, TB, TZ, TA, TZ) { return _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBZAW() (TW, TB, TZ, TA, TW) { return _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBZAA() (TW, TB, TZ, TA, TA) { return _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBZAB() (TW, TB, TZ, TA, TB) { return _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBZAC() (TW, TB, TZ, TA, TC) { return _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBZBX() (TW, TB, TZ, TB, TX) { return _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBZBY() (TW, TB, TZ, TB, TY) { return _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBZBZ() (TW, TB, TZ, TB, TZ) { return _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBZBW() (TW, TB, TZ, TB, TW) { return _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBZBA() (TW, TB, TZ, TB, TA) { return _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBZBB() (TW, TB, TZ, TB, TB) { return _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBZBC() (TW, TB, TZ, TB, TC) { return _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBZCX() (TW, TB, TZ, TC, TX) { return _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBZCY() (TW, TB, TZ, TC, TY) { return _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBZCZ() (TW, TB, TZ, TC, TZ) { return _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBZCW() (TW, TB, TZ, TC, TW) { return _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBZCA() (TW, TB, TZ, TC, TA) { return _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBZCB() (TW, TB, TZ, TC, TB) { return _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBZCC() (TW, TB, TZ, TC, TC) { return _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBWXX() (TW, TB, TW, TX, TX) { return _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBWXY() (TW, TB, TW, TX, TY) { return _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBWXZ() (TW, TB, TW, TX, TZ) { return _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBWXW() (TW, TB, TW, TX, TW) { return _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBWXA() (TW, TB, TW, TX, TA) { return _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBWXB() (TW, TB, TW, TX, TB) { return _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBWXC() (TW, TB, TW, TX, TC) { return _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBWYX() (TW, TB, TW, TY, TX) { return _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBWYY() (TW, TB, TW, TY, TY) { return _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBWYZ() (TW, TB, TW, TY, TZ) { return _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBWYW() (TW, TB, TW, TY, TW) { return _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBWYA() (TW, TB, TW, TY, TA) { return _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBWYB() (TW, TB, TW, TY, TB) { return _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBWYC() (TW, TB, TW, TY, TC) { return _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBWZX() (TW, TB, TW, TZ, TX) { return _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBWZY() (TW, TB, TW, TZ, TY) { return _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBWZZ() (TW, TB, TW, TZ, TZ) { return _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBWZW() (TW, TB, TW, TZ, TW) { return _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBWZA() (TW, TB, TW, TZ, TA) { return _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBWZB() (TW, TB, TW, TZ, TB) { return _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBWZC() (TW, TB, TW, TZ, TC) { return _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBWWX() (TW, TB, TW, TW, TX) { return _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBWWY() (TW, TB, TW, TW, TY) { return _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBWWZ() (TW, TB, TW, TW, TZ) { return _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBWWW() (TW, TB, TW, TW, TW) { return _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBWWA() (TW, TB, TW, TW, TA) { return _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBWWB() (TW, TB, TW, TW, TB) { return _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBWWC() (TW, TB, TW, TW, TC) { return _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBWAX() (TW, TB, TW, TA, TX) { return _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBWAY() (TW, TB, TW, TA, TY) { return _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBWAZ() (TW, TB, TW, TA, TZ) { return _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBWAW() (TW, TB, TW, TA, TW) { return _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBWAA() (TW, TB, TW, TA, TA) { return _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBWAB() (TW, TB, TW, TA, TB) { return _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBWAC() (TW, TB, TW, TA, TC) { return _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBWBX() (TW, TB, TW, TB, TX) { return _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBWBY() (TW, TB, TW, TB, TY) { return _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBWBZ() (TW, TB, TW, TB, TZ) { return _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBWBW() (TW, TB, TW, TB, TW) { return _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBWBA() (TW, TB, TW, TB, TA) { return _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBWBB() (TW, TB, TW, TB, TB) { return _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBWBC() (TW, TB, TW, TB, TC) { return _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBWCX() (TW, TB, TW, TC, TX) { return _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBWCY() (TW, TB, TW, TC, TY) { return _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBWCZ() (TW, TB, TW, TC, TZ) { return _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBWCW() (TW, TB, TW, TC, TW) { return _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBWCA() (TW, TB, TW, TC, TA) { return _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBWCB() (TW, TB, TW, TC, TB) { return _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBWCC() (TW, TB, TW, TC, TC) { return _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBAXX() (TW, TB, TA, TX, TX) { return _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBAXY() (TW, TB, TA, TX, TY) { return _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBAXZ() (TW, TB, TA, TX, TZ) { return _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBAXW() (TW, TB, TA, TX, TW) { return _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBAXA() (TW, TB, TA, TX, TA) { return _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBAXB() (TW, TB, TA, TX, TB) { return _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBAXC() (TW, TB, TA, TX, TC) { return _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBAYX() (TW, TB, TA, TY, TX) { return _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBAYY() (TW, TB, TA, TY, TY) { return _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBAYZ() (TW, TB, TA, TY, TZ) { return _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBAYW() (TW, TB, TA, TY, TW) { return _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBAYA() (TW, TB, TA, TY, TA) { return _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBAYB() (TW, TB, TA, TY, TB) { return _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBAYC() (TW, TB, TA, TY, TC) { return _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBAZX() (TW, TB, TA, TZ, TX) { return _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBAZY() (TW, TB, TA, TZ, TY) { return _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBAZZ() (TW, TB, TA, TZ, TZ) { return _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBAZW() (TW, TB, TA, TZ, TW) { return _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBAZA() (TW, TB, TA, TZ, TA) { return _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBAZB() (TW, TB, TA, TZ, TB) { return _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBAZC() (TW, TB, TA, TZ, TC) { return _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBAWX() (TW, TB, TA, TW, TX) { return _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBAWY() (TW, TB, TA, TW, TY) { return _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBAWZ() (TW, TB, TA, TW, TZ) { return _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBAWW() (TW, TB, TA, TW, TW) { return _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBAWA() (TW, TB, TA, TW, TA) { return _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBAWB() (TW, TB, TA, TW, TB) { return _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBAWC() (TW, TB, TA, TW, TC) { return _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBAAX() (TW, TB, TA, TA, TX) { return _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBAAY() (TW, TB, TA, TA, TY) { return _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBAAZ() (TW, TB, TA, TA, TZ) { return _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBAAW() (TW, TB, TA, TA, TW) { return _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBAAA() (TW, TB, TA, TA, TA) { return _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBAAB() (TW, TB, TA, TA, TB) { return _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBAAC() (TW, TB, TA, TA, TC) { return _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBABX() (TW, TB, TA, TB, TX) { return _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBABY() (TW, TB, TA, TB, TY) { return _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBABZ() (TW, TB, TA, TB, TZ) { return _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBABW() (TW, TB, TA, TB, TW) { return _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBABA() (TW, TB, TA, TB, TA) { return _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBABB() (TW, TB, TA, TB, TB) { return _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBABC() (TW, TB, TA, TB, TC) { return _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBACX() (TW, TB, TA, TC, TX) { return _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBACY() (TW, TB, TA, TC, TY) { return _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBACZ() (TW, TB, TA, TC, TZ) { return _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBACW() (TW, TB, TA, TC, TW) { return _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBACA() (TW, TB, TA, TC, TA) { return _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBACB() (TW, TB, TA, TC, TB) { return _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBACC() (TW, TB, TA, TC, TC) { return _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBBXX() (TW, TB, TB, TX, TX) { return _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBBXY() (TW, TB, TB, TX, TY) { return _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBBXZ() (TW, TB, TB, TX, TZ) { return _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBBXW() (TW, TB, TB, TX, TW) { return _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBBXA() (TW, TB, TB, TX, TA) { return _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBBXB() (TW, TB, TB, TX, TB) { return _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBBXC() (TW, TB, TB, TX, TC) { return _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBBYX() (TW, TB, TB, TY, TX) { return _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBBYY() (TW, TB, TB, TY, TY) { return _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBBYZ() (TW, TB, TB, TY, TZ) { return _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBBYW() (TW, TB, TB, TY, TW) { return _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBBYA() (TW, TB, TB, TY, TA) { return _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBBYB() (TW, TB, TB, TY, TB) { return _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBBYC() (TW, TB, TB, TY, TC) { return _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBBZX() (TW, TB, TB, TZ, TX) { return _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBBZY() (TW, TB, TB, TZ, TY) { return _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBBZZ() (TW, TB, TB, TZ, TZ) { return _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBBZW() (TW, TB, TB, TZ, TW) { return _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBBZA() (TW, TB, TB, TZ, TA) { return _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBBZB() (TW, TB, TB, TZ, TB) { return _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBBZC() (TW, TB, TB, TZ, TC) { return _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBBWX() (TW, TB, TB, TW, TX) { return _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBBWY() (TW, TB, TB, TW, TY) { return _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBBWZ() (TW, TB, TB, TW, TZ) { return _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBBWW() (TW, TB, TB, TW, TW) { return _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBBWA() (TW, TB, TB, TW, TA) { return _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBBWB() (TW, TB, TB, TW, TB) { return _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBBWC() (TW, TB, TB, TW, TC) { return _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBBAX() (TW, TB, TB, TA, TX) { return _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBBAY() (TW, TB, TB, TA, TY) { return _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBBAZ() (TW, TB, TB, TA, TZ) { return _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBBAW() (TW, TB, TB, TA, TW) { return _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBBAA() (TW, TB, TB, TA, TA) { return _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBBAB() (TW, TB, TB, TA, TB) { return _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBBAC() (TW, TB, TB, TA, TC) { return _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBBBX() (TW, TB, TB, TB, TX) { return _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBBBY() (TW, TB, TB, TB, TY) { return _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBBBZ() (TW, TB, TB, TB, TZ) { return _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBBBW() (TW, TB, TB, TB, TW) { return _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBBBA() (TW, TB, TB, TB, TA) { return _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBBBB() (TW, TB, TB, TB, TB) { return _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBBBC() (TW, TB, TB, TB, TC) { return _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBBCX() (TW, TB, TB, TC, TX) { return _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBBCY() (TW, TB, TB, TC, TY) { return _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBBCZ() (TW, TB, TB, TC, TZ) { return _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBBCW() (TW, TB, TB, TC, TW) { return _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBBCA() (TW, TB, TB, TC, TA) { return _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBBCB() (TW, TB, TB, TC, TB) { return _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBBCC() (TW, TB, TB, TC, TC) { return _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBCXX() (TW, TB, TC, TX, TX) { return _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBCXY() (TW, TB, TC, TX, TY) { return _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBCXZ() (TW, TB, TC, TX, TZ) { return _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBCXW() (TW, TB, TC, TX, TW) { return _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBCXA() (TW, TB, TC, TX, TA) { return _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBCXB() (TW, TB, TC, TX, TB) { return _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBCXC() (TW, TB, TC, TX, TC) { return _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBCYX() (TW, TB, TC, TY, TX) { return _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBCYY() (TW, TB, TC, TY, TY) { return _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBCYZ() (TW, TB, TC, TY, TZ) { return _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBCYW() (TW, TB, TC, TY, TW) { return _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBCYA() (TW, TB, TC, TY, TA) { return _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBCYB() (TW, TB, TC, TY, TB) { return _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBCYC() (TW, TB, TC, TY, TC) { return _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBCZX() (TW, TB, TC, TZ, TX) { return _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBCZY() (TW, TB, TC, TZ, TY) { return _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBCZZ() (TW, TB, TC, TZ, TZ) { return _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBCZW() (TW, TB, TC, TZ, TW) { return _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBCZA() (TW, TB, TC, TZ, TA) { return _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBCZB() (TW, TB, TC, TZ, TB) { return _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBCZC() (TW, TB, TC, TZ, TC) { return _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBCWX() (TW, TB, TC, TW, TX) { return _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBCWY() (TW, TB, TC, TW, TY) { return _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBCWZ() (TW, TB, TC, TW, TZ) { return _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBCWW() (TW, TB, TC, TW, TW) { return _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBCWA() (TW, TB, TC, TW, TA) { return _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBCWB() (TW, TB, TC, TW, TB) { return _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBCWC() (TW, TB, TC, TW, TC) { return _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBCAX() (TW, TB, TC, TA, TX) { return _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBCAY() (TW, TB, TC, TA, TY) { return _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBCAZ() (TW, TB, TC, TA, TZ) { return _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBCAW() (TW, TB, TC, TA, TW) { return _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBCAA() (TW, TB, TC, TA, TA) { return _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBCAB() (TW, TB, TC, TA, TB) { return _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBCAC() (TW, TB, TC, TA, TC) { return _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBCBX() (TW, TB, TC, TB, TX) { return _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBCBY() (TW, TB, TC, TB, TY) { return _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBCBZ() (TW, TB, TC, TB, TZ) { return _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBCBW() (TW, TB, TC, TB, TW) { return _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBCBA() (TW, TB, TC, TB, TA) { return _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBCBB() (TW, TB, TC, TB, TB) { return _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBCBC() (TW, TB, TC, TB, TC) { return _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBCCX() (TW, TB, TC, TC, TX) { return _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBCCY() (TW, TB, TC, TC, TY) { return _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBCCZ() (TW, TB, TC, TC, TZ) { return _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBCCW() (TW, TB, TC, TC, TW) { return _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBCCA() (TW, TB, TC, TC, TA) { return _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBCCB() (TW, TB, TC, TC, TB) { return _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WBCCC() (TW, TB, TC, TC, TC) { return _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCXXX() (TW, TC, TX, TX, TX) { return _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCXXY() (TW, TC, TX, TX, TY) { return _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCXXZ() (TW, TC, TX, TX, TZ) { return _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCXXW() (TW, TC, TX, TX, TW) { return _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCXXA() (TW, TC, TX, TX, TA) { return _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCXXB() (TW, TC, TX, TX, TB) { return _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCXXC() (TW, TC, TX, TX, TC) { return _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCXYX() (TW, TC, TX, TY, TX) { return _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCXYY() (TW, TC, TX, TY, TY) { return _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCXYZ() (TW, TC, TX, TY, TZ) { return _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCXYW() (TW, TC, TX, TY, TW) { return _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCXYA() (TW, TC, TX, TY, TA) { return _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCXYB() (TW, TC, TX, TY, TB) { return _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCXYC() (TW, TC, TX, TY, TC) { return _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCXZX() (TW, TC, TX, TZ, TX) { return _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCXZY() (TW, TC, TX, TZ, TY) { return _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCXZZ() (TW, TC, TX, TZ, TZ) { return _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCXZW() (TW, TC, TX, TZ, TW) { return _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCXZA() (TW, TC, TX, TZ, TA) { return _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCXZB() (TW, TC, TX, TZ, TB) { return _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCXZC() (TW, TC, TX, TZ, TC) { return _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCXWX() (TW, TC, TX, TW, TX) { return _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCXWY() (TW, TC, TX, TW, TY) { return _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCXWZ() (TW, TC, TX, TW, TZ) { return _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCXWW() (TW, TC, TX, TW, TW) { return _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCXWA() (TW, TC, TX, TW, TA) { return _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCXWB() (TW, TC, TX, TW, TB) { return _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCXWC() (TW, TC, TX, TW, TC) { return _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCXAX() (TW, TC, TX, TA, TX) { return _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCXAY() (TW, TC, TX, TA, TY) { return _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCXAZ() (TW, TC, TX, TA, TZ) { return _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCXAW() (TW, TC, TX, TA, TW) { return _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCXAA() (TW, TC, TX, TA, TA) { return _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCXAB() (TW, TC, TX, TA, TB) { return _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCXAC() (TW, TC, TX, TA, TC) { return _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCXBX() (TW, TC, TX, TB, TX) { return _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCXBY() (TW, TC, TX, TB, TY) { return _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCXBZ() (TW, TC, TX, TB, TZ) { return _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCXBW() (TW, TC, TX, TB, TW) { return _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCXBA() (TW, TC, TX, TB, TA) { return _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCXBB() (TW, TC, TX, TB, TB) { return _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCXBC() (TW, TC, TX, TB, TC) { return _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCXCX() (TW, TC, TX, TC, TX) { return _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCXCY() (TW, TC, TX, TC, TY) { return _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCXCZ() (TW, TC, TX, TC, TZ) { return _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCXCW() (TW, TC, TX, TC, TW) { return _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCXCA() (TW, TC, TX, TC, TA) { return _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCXCB() (TW, TC, TX, TC, TB) { return _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCXCC() (TW, TC, TX, TC, TC) { return _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCYXX() (TW, TC, TY, TX, TX) { return _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCYXY() (TW, TC, TY, TX, TY) { return _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCYXZ() (TW, TC, TY, TX, TZ) { return _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCYXW() (TW, TC, TY, TX, TW) { return _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCYXA() (TW, TC, TY, TX, TA) { return _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCYXB() (TW, TC, TY, TX, TB) { return _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCYXC() (TW, TC, TY, TX, TC) { return _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCYYX() (TW, TC, TY, TY, TX) { return _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCYYY() (TW, TC, TY, TY, TY) { return _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCYYZ() (TW, TC, TY, TY, TZ) { return _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCYYW() (TW, TC, TY, TY, TW) { return _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCYYA() (TW, TC, TY, TY, TA) { return _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCYYB() (TW, TC, TY, TY, TB) { return _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCYYC() (TW, TC, TY, TY, TC) { return _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCYZX() (TW, TC, TY, TZ, TX) { return _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCYZY() (TW, TC, TY, TZ, TY) { return _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCYZZ() (TW, TC, TY, TZ, TZ) { return _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCYZW() (TW, TC, TY, TZ, TW) { return _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCYZA() (TW, TC, TY, TZ, TA) { return _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCYZB() (TW, TC, TY, TZ, TB) { return _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCYZC() (TW, TC, TY, TZ, TC) { return _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCYWX() (TW, TC, TY, TW, TX) { return _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCYWY() (TW, TC, TY, TW, TY) { return _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCYWZ() (TW, TC, TY, TW, TZ) { return _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCYWW() (TW, TC, TY, TW, TW) { return _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCYWA() (TW, TC, TY, TW, TA) { return _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCYWB() (TW, TC, TY, TW, TB) { return _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCYWC() (TW, TC, TY, TW, TC) { return _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCYAX() (TW, TC, TY, TA, TX) { return _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCYAY() (TW, TC, TY, TA, TY) { return _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCYAZ() (TW, TC, TY, TA, TZ) { return _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCYAW() (TW, TC, TY, TA, TW) { return _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCYAA() (TW, TC, TY, TA, TA) { return _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCYAB() (TW, TC, TY, TA, TB) { return _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCYAC() (TW, TC, TY, TA, TC) { return _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCYBX() (TW, TC, TY, TB, TX) { return _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCYBY() (TW, TC, TY, TB, TY) { return _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCYBZ() (TW, TC, TY, TB, TZ) { return _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCYBW() (TW, TC, TY, TB, TW) { return _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCYBA() (TW, TC, TY, TB, TA) { return _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCYBB() (TW, TC, TY, TB, TB) { return _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCYBC() (TW, TC, TY, TB, TC) { return _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCYCX() (TW, TC, TY, TC, TX) { return _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCYCY() (TW, TC, TY, TC, TY) { return _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCYCZ() (TW, TC, TY, TC, TZ) { return _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCYCW() (TW, TC, TY, TC, TW) { return _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCYCA() (TW, TC, TY, TC, TA) { return _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCYCB() (TW, TC, TY, TC, TB) { return _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCYCC() (TW, TC, TY, TC, TC) { return _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCZXX() (TW, TC, TZ, TX, TX) { return _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCZXY() (TW, TC, TZ, TX, TY) { return _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCZXZ() (TW, TC, TZ, TX, TZ) { return _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCZXW() (TW, TC, TZ, TX, TW) { return _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCZXA() (TW, TC, TZ, TX, TA) { return _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCZXB() (TW, TC, TZ, TX, TB) { return _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCZXC() (TW, TC, TZ, TX, TC) { return _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCZYX() (TW, TC, TZ, TY, TX) { return _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCZYY() (TW, TC, TZ, TY, TY) { return _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCZYZ() (TW, TC, TZ, TY, TZ) { return _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCZYW() (TW, TC, TZ, TY, TW) { return _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCZYA() (TW, TC, TZ, TY, TA) { return _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCZYB() (TW, TC, TZ, TY, TB) { return _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCZYC() (TW, TC, TZ, TY, TC) { return _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCZZX() (TW, TC, TZ, TZ, TX) { return _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCZZY() (TW, TC, TZ, TZ, TY) { return _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCZZZ() (TW, TC, TZ, TZ, TZ) { return _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCZZW() (TW, TC, TZ, TZ, TW) { return _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCZZA() (TW, TC, TZ, TZ, TA) { return _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCZZB() (TW, TC, TZ, TZ, TB) { return _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCZZC() (TW, TC, TZ, TZ, TC) { return _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCZWX() (TW, TC, TZ, TW, TX) { return _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCZWY() (TW, TC, TZ, TW, TY) { return _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCZWZ() (TW, TC, TZ, TW, TZ) { return _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCZWW() (TW, TC, TZ, TW, TW) { return _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCZWA() (TW, TC, TZ, TW, TA) { return _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCZWB() (TW, TC, TZ, TW, TB) { return _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCZWC() (TW, TC, TZ, TW, TC) { return _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCZAX() (TW, TC, TZ, TA, TX) { return _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCZAY() (TW, TC, TZ, TA, TY) { return _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCZAZ() (TW, TC, TZ, TA, TZ) { return _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCZAW() (TW, TC, TZ, TA, TW) { return _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCZAA() (TW, TC, TZ, TA, TA) { return _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCZAB() (TW, TC, TZ, TA, TB) { return _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCZAC() (TW, TC, TZ, TA, TC) { return _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCZBX() (TW, TC, TZ, TB, TX) { return _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCZBY() (TW, TC, TZ, TB, TY) { return _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCZBZ() (TW, TC, TZ, TB, TZ) { return _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCZBW() (TW, TC, TZ, TB, TW) { return _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCZBA() (TW, TC, TZ, TB, TA) { return _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCZBB() (TW, TC, TZ, TB, TB) { return _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCZBC() (TW, TC, TZ, TB, TC) { return _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCZCX() (TW, TC, TZ, TC, TX) { return _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCZCY() (TW, TC, TZ, TC, TY) { return _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCZCZ() (TW, TC, TZ, TC, TZ) { return _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCZCW() (TW, TC, TZ, TC, TW) { return _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCZCA() (TW, TC, TZ, TC, TA) { return _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCZCB() (TW, TC, TZ, TC, TB) { return _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCZCC() (TW, TC, TZ, TC, TC) { return _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCWXX() (TW, TC, TW, TX, TX) { return _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCWXY() (TW, TC, TW, TX, TY) { return _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCWXZ() (TW, TC, TW, TX, TZ) { return _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCWXW() (TW, TC, TW, TX, TW) { return _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCWXA() (TW, TC, TW, TX, TA) { return _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCWXB() (TW, TC, TW, TX, TB) { return _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCWXC() (TW, TC, TW, TX, TC) { return _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCWYX() (TW, TC, TW, TY, TX) { return _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCWYY() (TW, TC, TW, TY, TY) { return _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCWYZ() (TW, TC, TW, TY, TZ) { return _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCWYW() (TW, TC, TW, TY, TW) { return _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCWYA() (TW, TC, TW, TY, TA) { return _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCWYB() (TW, TC, TW, TY, TB) { return _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCWYC() (TW, TC, TW, TY, TC) { return _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCWZX() (TW, TC, TW, TZ, TX) { return _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCWZY() (TW, TC, TW, TZ, TY) { return _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCWZZ() (TW, TC, TW, TZ, TZ) { return _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCWZW() (TW, TC, TW, TZ, TW) { return _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCWZA() (TW, TC, TW, TZ, TA) { return _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCWZB() (TW, TC, TW, TZ, TB) { return _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCWZC() (TW, TC, TW, TZ, TC) { return _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCWWX() (TW, TC, TW, TW, TX) { return _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCWWY() (TW, TC, TW, TW, TY) { return _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCWWZ() (TW, TC, TW, TW, TZ) { return _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCWWW() (TW, TC, TW, TW, TW) { return _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCWWA() (TW, TC, TW, TW, TA) { return _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCWWB() (TW, TC, TW, TW, TB) { return _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCWWC() (TW, TC, TW, TW, TC) { return _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCWAX() (TW, TC, TW, TA, TX) { return _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCWAY() (TW, TC, TW, TA, TY) { return _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCWAZ() (TW, TC, TW, TA, TZ) { return _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCWAW() (TW, TC, TW, TA, TW) { return _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCWAA() (TW, TC, TW, TA, TA) { return _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCWAB() (TW, TC, TW, TA, TB) { return _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCWAC() (TW, TC, TW, TA, TC) { return _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCWBX() (TW, TC, TW, TB, TX) { return _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCWBY() (TW, TC, TW, TB, TY) { return _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCWBZ() (TW, TC, TW, TB, TZ) { return _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCWBW() (TW, TC, TW, TB, TW) { return _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCWBA() (TW, TC, TW, TB, TA) { return _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCWBB() (TW, TC, TW, TB, TB) { return _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCWBC() (TW, TC, TW, TB, TC) { return _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCWCX() (TW, TC, TW, TC, TX) { return _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCWCY() (TW, TC, TW, TC, TY) { return _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCWCZ() (TW, TC, TW, TC, TZ) { return _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCWCW() (TW, TC, TW, TC, TW) { return _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCWCA() (TW, TC, TW, TC, TA) { return _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCWCB() (TW, TC, TW, TC, TB) { return _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCWCC() (TW, TC, TW, TC, TC) { return _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCAXX() (TW, TC, TA, TX, TX) { return _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCAXY() (TW, TC, TA, TX, TY) { return _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCAXZ() (TW, TC, TA, TX, TZ) { return _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCAXW() (TW, TC, TA, TX, TW) { return _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCAXA() (TW, TC, TA, TX, TA) { return _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCAXB() (TW, TC, TA, TX, TB) { return _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCAXC() (TW, TC, TA, TX, TC) { return _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCAYX() (TW, TC, TA, TY, TX) { return _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCAYY() (TW, TC, TA, TY, TY) { return _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCAYZ() (TW, TC, TA, TY, TZ) { return _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCAYW() (TW, TC, TA, TY, TW) { return _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCAYA() (TW, TC, TA, TY, TA) { return _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCAYB() (TW, TC, TA, TY, TB) { return _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCAYC() (TW, TC, TA, TY, TC) { return _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCAZX() (TW, TC, TA, TZ, TX) { return _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCAZY() (TW, TC, TA, TZ, TY) { return _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCAZZ() (TW, TC, TA, TZ, TZ) { return _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCAZW() (TW, TC, TA, TZ, TW) { return _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCAZA() (TW, TC, TA, TZ, TA) { return _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCAZB() (TW, TC, TA, TZ, TB) { return _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCAZC() (TW, TC, TA, TZ, TC) { return _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCAWX() (TW, TC, TA, TW, TX) { return _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCAWY() (TW, TC, TA, TW, TY) { return _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCAWZ() (TW, TC, TA, TW, TZ) { return _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCAWW() (TW, TC, TA, TW, TW) { return _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCAWA() (TW, TC, TA, TW, TA) { return _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCAWB() (TW, TC, TA, TW, TB) { return _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCAWC() (TW, TC, TA, TW, TC) { return _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCAAX() (TW, TC, TA, TA, TX) { return _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCAAY() (TW, TC, TA, TA, TY) { return _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCAAZ() (TW, TC, TA, TA, TZ) { return _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCAAW() (TW, TC, TA, TA, TW) { return _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCAAA() (TW, TC, TA, TA, TA) { return _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCAAB() (TW, TC, TA, TA, TB) { return _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCAAC() (TW, TC, TA, TA, TC) { return _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCABX() (TW, TC, TA, TB, TX) { return _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCABY() (TW, TC, TA, TB, TY) { return _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCABZ() (TW, TC, TA, TB, TZ) { return _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCABW() (TW, TC, TA, TB, TW) { return _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCABA() (TW, TC, TA, TB, TA) { return _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCABB() (TW, TC, TA, TB, TB) { return _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCABC() (TW, TC, TA, TB, TC) { return _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCACX() (TW, TC, TA, TC, TX) { return _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCACY() (TW, TC, TA, TC, TY) { return _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCACZ() (TW, TC, TA, TC, TZ) { return _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCACW() (TW, TC, TA, TC, TW) { return _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCACA() (TW, TC, TA, TC, TA) { return _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCACB() (TW, TC, TA, TC, TB) { return _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCACC() (TW, TC, TA, TC, TC) { return _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCBXX() (TW, TC, TB, TX, TX) { return _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCBXY() (TW, TC, TB, TX, TY) { return _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCBXZ() (TW, TC, TB, TX, TZ) { return _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCBXW() (TW, TC, TB, TX, TW) { return _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCBXA() (TW, TC, TB, TX, TA) { return _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCBXB() (TW, TC, TB, TX, TB) { return _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCBXC() (TW, TC, TB, TX, TC) { return _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCBYX() (TW, TC, TB, TY, TX) { return _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCBYY() (TW, TC, TB, TY, TY) { return _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCBYZ() (TW, TC, TB, TY, TZ) { return _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCBYW() (TW, TC, TB, TY, TW) { return _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCBYA() (TW, TC, TB, TY, TA) { return _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCBYB() (TW, TC, TB, TY, TB) { return _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCBYC() (TW, TC, TB, TY, TC) { return _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCBZX() (TW, TC, TB, TZ, TX) { return _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCBZY() (TW, TC, TB, TZ, TY) { return _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCBZZ() (TW, TC, TB, TZ, TZ) { return _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCBZW() (TW, TC, TB, TZ, TW) { return _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCBZA() (TW, TC, TB, TZ, TA) { return _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCBZB() (TW, TC, TB, TZ, TB) { return _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCBZC() (TW, TC, TB, TZ, TC) { return _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCBWX() (TW, TC, TB, TW, TX) { return _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCBWY() (TW, TC, TB, TW, TY) { return _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCBWZ() (TW, TC, TB, TW, TZ) { return _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCBWW() (TW, TC, TB, TW, TW) { return _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCBWA() (TW, TC, TB, TW, TA) { return _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCBWB() (TW, TC, TB, TW, TB) { return _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCBWC() (TW, TC, TB, TW, TC) { return _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCBAX() (TW, TC, TB, TA, TX) { return _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCBAY() (TW, TC, TB, TA, TY) { return _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCBAZ() (TW, TC, TB, TA, TZ) { return _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCBAW() (TW, TC, TB, TA, TW) { return _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCBAA() (TW, TC, TB, TA, TA) { return _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCBAB() (TW, TC, TB, TA, TB) { return _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCBAC() (TW, TC, TB, TA, TC) { return _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCBBX() (TW, TC, TB, TB, TX) { return _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCBBY() (TW, TC, TB, TB, TY) { return _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCBBZ() (TW, TC, TB, TB, TZ) { return _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCBBW() (TW, TC, TB, TB, TW) { return _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCBBA() (TW, TC, TB, TB, TA) { return _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCBBB() (TW, TC, TB, TB, TB) { return _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCBBC() (TW, TC, TB, TB, TC) { return _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCBCX() (TW, TC, TB, TC, TX) { return _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCBCY() (TW, TC, TB, TC, TY) { return _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCBCZ() (TW, TC, TB, TC, TZ) { return _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCBCW() (TW, TC, TB, TC, TW) { return _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCBCA() (TW, TC, TB, TC, TA) { return _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCBCB() (TW, TC, TB, TC, TB) { return _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCBCC() (TW, TC, TB, TC, TC) { return _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCCXX() (TW, TC, TC, TX, TX) { return _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCCXY() (TW, TC, TC, TX, TY) { return _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCCXZ() (TW, TC, TC, TX, TZ) { return _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCCXW() (TW, TC, TC, TX, TW) { return _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCCXA() (TW, TC, TC, TX, TA) { return _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCCXB() (TW, TC, TC, TX, TB) { return _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCCXC() (TW, TC, TC, TX, TC) { return _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCCYX() (TW, TC, TC, TY, TX) { return _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCCYY() (TW, TC, TC, TY, TY) { return _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCCYZ() (TW, TC, TC, TY, TZ) { return _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCCYW() (TW, TC, TC, TY, TW) { return _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCCYA() (TW, TC, TC, TY, TA) { return _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCCYB() (TW, TC, TC, TY, TB) { return _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCCYC() (TW, TC, TC, TY, TC) { return _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCCZX() (TW, TC, TC, TZ, TX) { return _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCCZY() (TW, TC, TC, TZ, TY) { return _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCCZZ() (TW, TC, TC, TZ, TZ) { return _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCCZW() (TW, TC, TC, TZ, TW) { return _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCCZA() (TW, TC, TC, TZ, TA) { return _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCCZB() (TW, TC, TC, TZ, TB) { return _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCCZC() (TW, TC, TC, TZ, TC) { return _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCCWX() (TW, TC, TC, TW, TX) { return _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCCWY() (TW, TC, TC, TW, TY) { return _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCCWZ() (TW, TC, TC, TW, TZ) { return _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCCWW() (TW, TC, TC, TW, TW) { return _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCCWA() (TW, TC, TC, TW, TA) { return _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCCWB() (TW, TC, TC, TW, TB) { return _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCCWC() (TW, TC, TC, TW, TC) { return _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCCAX() (TW, TC, TC, TA, TX) { return _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCCAY() (TW, TC, TC, TA, TY) { return _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCCAZ() (TW, TC, TC, TA, TZ) { return _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCCAW() (TW, TC, TC, TA, TW) { return _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCCAA() (TW, TC, TC, TA, TA) { return _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCCAB() (TW, TC, TC, TA, TB) { return _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCCAC() (TW, TC, TC, TA, TC) { return _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCCBX() (TW, TC, TC, TB, TX) { return _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCCBY() (TW, TC, TC, TB, TY) { return _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCCBZ() (TW, TC, TC, TB, TZ) { return _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCCBW() (TW, TC, TC, TB, TW) { return _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCCBA() (TW, TC, TC, TB, TA) { return _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCCBB() (TW, TC, TC, TB, TB) { return _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCCBC() (TW, TC, TC, TB, TC) { return _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCCCX() (TW, TC, TC, TC, TX) { return _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCCCY() (TW, TC, TC, TC, TY) { return _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCCCZ() (TW, TC, TC, TC, TZ) { return _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCCCW() (TW, TC, TC, TC, TW) { return _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCCCA() (TW, TC, TC, TC, TA) { return _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCCCB() (TW, TC, TC, TC, TB) { return _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) WCCCC() (TW, TC, TC, TC, TC) { return _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXXXX() (TA, TX, TX, TX, TX) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXXXY() (TA, TX, TX, TX, TY) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXXXZ() (TA, TX, TX, TX, TZ) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXXXW() (TA, TX, TX, TX, TW) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXXXA() (TA, TX, TX, TX, TA) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXXXB() (TA, TX, TX, TX, TB) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXXXC() (TA, TX, TX, TX, TC) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXXYX() (TA, TX, TX, TY, TX) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXXYY() (TA, TX, TX, TY, TY) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXXYZ() (TA, TX, TX, TY, TZ) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXXYW() (TA, TX, TX, TY, TW) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXXYA() (TA, TX, TX, TY, TA) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXXYB() (TA, TX, TX, TY, TB) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXXYC() (TA, TX, TX, TY, TC) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXXZX() (TA, TX, TX, TZ, TX) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXXZY() (TA, TX, TX, TZ, TY) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXXZZ() (TA, TX, TX, TZ, TZ) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXXZW() (TA, TX, TX, TZ, TW) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXXZA() (TA, TX, TX, TZ, TA) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXXZB() (TA, TX, TX, TZ, TB) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXXZC() (TA, TX, TX, TZ, TC) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXXWX() (TA, TX, TX, TW, TX) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXXWY() (TA, TX, TX, TW, TY) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXXWZ() (TA, TX, TX, TW, TZ) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXXWW() (TA, TX, TX, TW, TW) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXXWA() (TA, TX, TX, TW, TA) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXXWB() (TA, TX, TX, TW, TB) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXXWC() (TA, TX, TX, TW, TC) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXXAX() (TA, TX, TX, TA, TX) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXXAY() (TA, TX, TX, TA, TY) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXXAZ() (TA, TX, TX, TA, TZ) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXXAW() (TA, TX, TX, TA, TW) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXXAA() (TA, TX, TX, TA, TA) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXXAB() (TA, TX, TX, TA, TB) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXXAC() (TA, TX, TX, TA, TC) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXXBX() (TA, TX, TX, TB, TX) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXXBY() (TA, TX, TX, TB, TY) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXXBZ() (TA, TX, TX, TB, TZ) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXXBW() (TA, TX, TX, TB, TW) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXXBA() (TA, TX, TX, TB, TA) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXXBB() (TA, TX, TX, TB, TB) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXXBC() (TA, TX, TX, TB, TC) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXXCX() (TA, TX, TX, TC, TX) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXXCY() (TA, TX, TX, TC, TY) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXXCZ() (TA, TX, TX, TC, TZ) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXXCW() (TA, TX, TX, TC, TW) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXXCA() (TA, TX, TX, TC, TA) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXXCB() (TA, TX, TX, TC, TB) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXXCC() (TA, TX, TX, TC, TC) { return _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXYXX() (TA, TX, TY, TX, TX) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXYXY() (TA, TX, TY, TX, TY) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXYXZ() (TA, TX, TY, TX, TZ) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXYXW() (TA, TX, TY, TX, TW) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXYXA() (TA, TX, TY, TX, TA) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXYXB() (TA, TX, TY, TX, TB) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXYXC() (TA, TX, TY, TX, TC) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXYYX() (TA, TX, TY, TY, TX) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXYYY() (TA, TX, TY, TY, TY) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXYYZ() (TA, TX, TY, TY, TZ) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXYYW() (TA, TX, TY, TY, TW) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXYYA() (TA, TX, TY, TY, TA) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXYYB() (TA, TX, TY, TY, TB) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXYYC() (TA, TX, TY, TY, TC) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXYZX() (TA, TX, TY, TZ, TX) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXYZY() (TA, TX, TY, TZ, TY) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXYZZ() (TA, TX, TY, TZ, TZ) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXYZW() (TA, TX, TY, TZ, TW) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXYZA() (TA, TX, TY, TZ, TA) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXYZB() (TA, TX, TY, TZ, TB) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXYZC() (TA, TX, TY, TZ, TC) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXYWX() (TA, TX, TY, TW, TX) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXYWY() (TA, TX, TY, TW, TY) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXYWZ() (TA, TX, TY, TW, TZ) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXYWW() (TA, TX, TY, TW, TW) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXYWA() (TA, TX, TY, TW, TA) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXYWB() (TA, TX, TY, TW, TB) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXYWC() (TA, TX, TY, TW, TC) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXYAX() (TA, TX, TY, TA, TX) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXYAY() (TA, TX, TY, TA, TY) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXYAZ() (TA, TX, TY, TA, TZ) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXYAW() (TA, TX, TY, TA, TW) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXYAA() (TA, TX, TY, TA, TA) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXYAB() (TA, TX, TY, TA, TB) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXYAC() (TA, TX, TY, TA, TC) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXYBX() (TA, TX, TY, TB, TX) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXYBY() (TA, TX, TY, TB, TY) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXYBZ() (TA, TX, TY, TB, TZ) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXYBW() (TA, TX, TY, TB, TW) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXYBA() (TA, TX, TY, TB, TA) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXYBB() (TA, TX, TY, TB, TB) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXYBC() (TA, TX, TY, TB, TC) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXYCX() (TA, TX, TY, TC, TX) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXYCY() (TA, TX, TY, TC, TY) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXYCZ() (TA, TX, TY, TC, TZ) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXYCW() (TA, TX, TY, TC, TW) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXYCA() (TA, TX, TY, TC, TA) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXYCB() (TA, TX, TY, TC, TB) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXYCC() (TA, TX, TY, TC, TC) { return _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXZXX() (TA, TX, TZ, TX, TX) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXZXY() (TA, TX, TZ, TX, TY) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXZXZ() (TA, TX, TZ, TX, TZ) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXZXW() (TA, TX, TZ, TX, TW) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXZXA() (TA, TX, TZ, TX, TA) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXZXB() (TA, TX, TZ, TX, TB) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXZXC() (TA, TX, TZ, TX, TC) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXZYX() (TA, TX, TZ, TY, TX) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXZYY() (TA, TX, TZ, TY, TY) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXZYZ() (TA, TX, TZ, TY, TZ) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXZYW() (TA, TX, TZ, TY, TW) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXZYA() (TA, TX, TZ, TY, TA) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXZYB() (TA, TX, TZ, TY, TB) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXZYC() (TA, TX, TZ, TY, TC) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXZZX() (TA, TX, TZ, TZ, TX) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXZZY() (TA, TX, TZ, TZ, TY) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXZZZ() (TA, TX, TZ, TZ, TZ) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXZZW() (TA, TX, TZ, TZ, TW) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXZZA() (TA, TX, TZ, TZ, TA) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXZZB() (TA, TX, TZ, TZ, TB) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXZZC() (TA, TX, TZ, TZ, TC) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXZWX() (TA, TX, TZ, TW, TX) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXZWY() (TA, TX, TZ, TW, TY) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXZWZ() (TA, TX, TZ, TW, TZ) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXZWW() (TA, TX, TZ, TW, TW) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXZWA() (TA, TX, TZ, TW, TA) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXZWB() (TA, TX, TZ, TW, TB) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXZWC() (TA, TX, TZ, TW, TC) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXZAX() (TA, TX, TZ, TA, TX) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXZAY() (TA, TX, TZ, TA, TY) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXZAZ() (TA, TX, TZ, TA, TZ) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXZAW() (TA, TX, TZ, TA, TW) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXZAA() (TA, TX, TZ, TA, TA) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXZAB() (TA, TX, TZ, TA, TB) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXZAC() (TA, TX, TZ, TA, TC) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXZBX() (TA, TX, TZ, TB, TX) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXZBY() (TA, TX, TZ, TB, TY) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXZBZ() (TA, TX, TZ, TB, TZ) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXZBW() (TA, TX, TZ, TB, TW) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXZBA() (TA, TX, TZ, TB, TA) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXZBB() (TA, TX, TZ, TB, TB) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXZBC() (TA, TX, TZ, TB, TC) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXZCX() (TA, TX, TZ, TC, TX) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXZCY() (TA, TX, TZ, TC, TY) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXZCZ() (TA, TX, TZ, TC, TZ) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXZCW() (TA, TX, TZ, TC, TW) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXZCA() (TA, TX, TZ, TC, TA) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXZCB() (TA, TX, TZ, TC, TB) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXZCC() (TA, TX, TZ, TC, TC) { return _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXWXX() (TA, TX, TW, TX, TX) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXWXY() (TA, TX, TW, TX, TY) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXWXZ() (TA, TX, TW, TX, TZ) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXWXW() (TA, TX, TW, TX, TW) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXWXA() (TA, TX, TW, TX, TA) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXWXB() (TA, TX, TW, TX, TB) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXWXC() (TA, TX, TW, TX, TC) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXWYX() (TA, TX, TW, TY, TX) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXWYY() (TA, TX, TW, TY, TY) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXWYZ() (TA, TX, TW, TY, TZ) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXWYW() (TA, TX, TW, TY, TW) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXWYA() (TA, TX, TW, TY, TA) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXWYB() (TA, TX, TW, TY, TB) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXWYC() (TA, TX, TW, TY, TC) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXWZX() (TA, TX, TW, TZ, TX) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXWZY() (TA, TX, TW, TZ, TY) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXWZZ() (TA, TX, TW, TZ, TZ) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXWZW() (TA, TX, TW, TZ, TW) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXWZA() (TA, TX, TW, TZ, TA) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXWZB() (TA, TX, TW, TZ, TB) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXWZC() (TA, TX, TW, TZ, TC) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXWWX() (TA, TX, TW, TW, TX) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXWWY() (TA, TX, TW, TW, TY) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXWWZ() (TA, TX, TW, TW, TZ) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXWWW() (TA, TX, TW, TW, TW) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXWWA() (TA, TX, TW, TW, TA) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXWWB() (TA, TX, TW, TW, TB) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXWWC() (TA, TX, TW, TW, TC) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXWAX() (TA, TX, TW, TA, TX) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXWAY() (TA, TX, TW, TA, TY) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXWAZ() (TA, TX, TW, TA, TZ) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXWAW() (TA, TX, TW, TA, TW) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXWAA() (TA, TX, TW, TA, TA) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXWAB() (TA, TX, TW, TA, TB) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXWAC() (TA, TX, TW, TA, TC) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXWBX() (TA, TX, TW, TB, TX) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXWBY() (TA, TX, TW, TB, TY) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXWBZ() (TA, TX, TW, TB, TZ) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXWBW() (TA, TX, TW, TB, TW) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXWBA() (TA, TX, TW, TB, TA) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXWBB() (TA, TX, TW, TB, TB) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXWBC() (TA, TX, TW, TB, TC) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXWCX() (TA, TX, TW, TC, TX) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXWCY() (TA, TX, TW, TC, TY) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXWCZ() (TA, TX, TW, TC, TZ) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXWCW() (TA, TX, TW, TC, TW) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXWCA() (TA, TX, TW, TC, TA) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXWCB() (TA, TX, TW, TC, TB) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXWCC() (TA, TX, TW, TC, TC) { return _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXAXX() (TA, TX, TA, TX, TX) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXAXY() (TA, TX, TA, TX, TY) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXAXZ() (TA, TX, TA, TX, TZ) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXAXW() (TA, TX, TA, TX, TW) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXAXA() (TA, TX, TA, TX, TA) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXAXB() (TA, TX, TA, TX, TB) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXAXC() (TA, TX, TA, TX, TC) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXAYX() (TA, TX, TA, TY, TX) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXAYY() (TA, TX, TA, TY, TY) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXAYZ() (TA, TX, TA, TY, TZ) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXAYW() (TA, TX, TA, TY, TW) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXAYA() (TA, TX, TA, TY, TA) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXAYB() (TA, TX, TA, TY, TB) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXAYC() (TA, TX, TA, TY, TC) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXAZX() (TA, TX, TA, TZ, TX) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXAZY() (TA, TX, TA, TZ, TY) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXAZZ() (TA, TX, TA, TZ, TZ) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXAZW() (TA, TX, TA, TZ, TW) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXAZA() (TA, TX, TA, TZ, TA) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXAZB() (TA, TX, TA, TZ, TB) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXAZC() (TA, TX, TA, TZ, TC) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXAWX() (TA, TX, TA, TW, TX) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXAWY() (TA, TX, TA, TW, TY) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXAWZ() (TA, TX, TA, TW, TZ) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXAWW() (TA, TX, TA, TW, TW) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXAWA() (TA, TX, TA, TW, TA) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXAWB() (TA, TX, TA, TW, TB) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXAWC() (TA, TX, TA, TW, TC) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXAAX() (TA, TX, TA, TA, TX) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXAAY() (TA, TX, TA, TA, TY) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXAAZ() (TA, TX, TA, TA, TZ) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXAAW() (TA, TX, TA, TA, TW) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXAAA() (TA, TX, TA, TA, TA) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXAAB() (TA, TX, TA, TA, TB) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXAAC() (TA, TX, TA, TA, TC) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXABX() (TA, TX, TA, TB, TX) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXABY() (TA, TX, TA, TB, TY) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXABZ() (TA, TX, TA, TB, TZ) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXABW() (TA, TX, TA, TB, TW) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXABA() (TA, TX, TA, TB, TA) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXABB() (TA, TX, TA, TB, TB) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXABC() (TA, TX, TA, TB, TC) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXACX() (TA, TX, TA, TC, TX) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXACY() (TA, TX, TA, TC, TY) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXACZ() (TA, TX, TA, TC, TZ) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXACW() (TA, TX, TA, TC, TW) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXACA() (TA, TX, TA, TC, TA) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXACB() (TA, TX, TA, TC, TB) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXACC() (TA, TX, TA, TC, TC) { return _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXBXX() (TA, TX, TB, TX, TX) { return _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXBXY() (TA, TX, TB, TX, TY) { return _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXBXZ() (TA, TX, TB, TX, TZ) { return _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXBXW() (TA, TX, TB, TX, TW) { return _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXBXA() (TA, TX, TB, TX, TA) { return _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXBXB() (TA, TX, TB, TX, TB) { return _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXBXC() (TA, TX, TB, TX, TC) { return _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXBYX() (TA, TX, TB, TY, TX) { return _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXBYY() (TA, TX, TB, TY, TY) { return _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXBYZ() (TA, TX, TB, TY, TZ) { return _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXBYW() (TA, TX, TB, TY, TW) { return _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXBYA() (TA, TX, TB, TY, TA) { return _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXBYB() (TA, TX, TB, TY, TB) { return _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXBYC() (TA, TX, TB, TY, TC) { return _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXBZX() (TA, TX, TB, TZ, TX) { return _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXBZY() (TA, TX, TB, TZ, TY) { return _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXBZZ() (TA, TX, TB, TZ, TZ) { return _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXBZW() (TA, TX, TB, TZ, TW) { return _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXBZA() (TA, TX, TB, TZ, TA) { return _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXBZB() (TA, TX, TB, TZ, TB) { return _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXBZC() (TA, TX, TB, TZ, TC) { return _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXBWX() (TA, TX, TB, TW, TX) { return _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXBWY() (TA, TX, TB, TW, TY) { return _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXBWZ() (TA, TX, TB, TW, TZ) { return _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXBWW() (TA, TX, TB, TW, TW) { return _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXBWA() (TA, TX, TB, TW, TA) { return _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXBWB() (TA, TX, TB, TW, TB) { return _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXBWC() (TA, TX, TB, TW, TC) { return _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXBAX() (TA, TX, TB, TA, TX) { return _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXBAY() (TA, TX, TB, TA, TY) { return _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXBAZ() (TA, TX, TB, TA, TZ) { return _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXBAW() (TA, TX, TB, TA, TW) { return _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXBAA() (TA, TX, TB, TA, TA) { return _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXBAB() (TA, TX, TB, TA, TB) { return _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXBAC() (TA, TX, TB, TA, TC) { return _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXBBX() (TA, TX, TB, TB, TX) { return _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXBBY() (TA, TX, TB, TB, TY) { return _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXBBZ() (TA, TX, TB, TB, TZ) { return _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXBBW() (TA, TX, TB, TB, TW) { return _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXBBA() (TA, TX, TB, TB, TA) { return _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXBBB() (TA, TX, TB, TB, TB) { return _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXBBC() (TA, TX, TB, TB, TC) { return _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXBCX() (TA, TX, TB, TC, TX) { return _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXBCY() (TA, TX, TB, TC, TY) { return _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXBCZ() (TA, TX, TB, TC, TZ) { return _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXBCW() (TA, TX, TB, TC, TW) { return _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXBCA() (TA, TX, TB, TC, TA) { return _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXBCB() (TA, TX, TB, TC, TB) { return _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXBCC() (TA, TX, TB, TC, TC) { return _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXCXX() (TA, TX, TC, TX, TX) { return _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXCXY() (TA, TX, TC, TX, TY) { return _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXCXZ() (TA, TX, TC, TX, TZ) { return _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXCXW() (TA, TX, TC, TX, TW) { return _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXCXA() (TA, TX, TC, TX, TA) { return _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXCXB() (TA, TX, TC, TX, TB) { return _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXCXC() (TA, TX, TC, TX, TC) { return _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXCYX() (TA, TX, TC, TY, TX) { return _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXCYY() (TA, TX, TC, TY, TY) { return _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXCYZ() (TA, TX, TC, TY, TZ) { return _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXCYW() (TA, TX, TC, TY, TW) { return _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXCYA() (TA, TX, TC, TY, TA) { return _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXCYB() (TA, TX, TC, TY, TB) { return _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXCYC() (TA, TX, TC, TY, TC) { return _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXCZX() (TA, TX, TC, TZ, TX) { return _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXCZY() (TA, TX, TC, TZ, TY) { return _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXCZZ() (TA, TX, TC, TZ, TZ) { return _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXCZW() (TA, TX, TC, TZ, TW) { return _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXCZA() (TA, TX, TC, TZ, TA) { return _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXCZB() (TA, TX, TC, TZ, TB) { return _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXCZC() (TA, TX, TC, TZ, TC) { return _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXCWX() (TA, TX, TC, TW, TX) { return _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXCWY() (TA, TX, TC, TW, TY) { return _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXCWZ() (TA, TX, TC, TW, TZ) { return _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXCWW() (TA, TX, TC, TW, TW) { return _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXCWA() (TA, TX, TC, TW, TA) { return _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXCWB() (TA, TX, TC, TW, TB) { return _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXCWC() (TA, TX, TC, TW, TC) { return _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXCAX() (TA, TX, TC, TA, TX) { return _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXCAY() (TA, TX, TC, TA, TY) { return _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXCAZ() (TA, TX, TC, TA, TZ) { return _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXCAW() (TA, TX, TC, TA, TW) { return _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXCAA() (TA, TX, TC, TA, TA) { return _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXCAB() (TA, TX, TC, TA, TB) { return _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXCAC() (TA, TX, TC, TA, TC) { return _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXCBX() (TA, TX, TC, TB, TX) { return _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXCBY() (TA, TX, TC, TB, TY) { return _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXCBZ() (TA, TX, TC, TB, TZ) { return _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXCBW() (TA, TX, TC, TB, TW) { return _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXCBA() (TA, TX, TC, TB, TA) { return _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXCBB() (TA, TX, TC, TB, TB) { return _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXCBC() (TA, TX, TC, TB, TC) { return _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXCCX() (TA, TX, TC, TC, TX) { return _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXCCY() (TA, TX, TC, TC, TY) { return _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXCCZ() (TA, TX, TC, TC, TZ) { return _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXCCW() (TA, TX, TC, TC, TW) { return _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXCCA() (TA, TX, TC, TC, TA) { return _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXCCB() (TA, TX, TC, TC, TB) { return _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AXCCC() (TA, TX, TC, TC, TC) { return _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYXXX() (TA, TY, TX, TX, TX) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYXXY() (TA, TY, TX, TX, TY) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYXXZ() (TA, TY, TX, TX, TZ) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYXXW() (TA, TY, TX, TX, TW) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYXXA() (TA, TY, TX, TX, TA) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYXXB() (TA, TY, TX, TX, TB) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYXXC() (TA, TY, TX, TX, TC) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYXYX() (TA, TY, TX, TY, TX) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYXYY() (TA, TY, TX, TY, TY) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYXYZ() (TA, TY, TX, TY, TZ) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYXYW() (TA, TY, TX, TY, TW) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYXYA() (TA, TY, TX, TY, TA) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYXYB() (TA, TY, TX, TY, TB) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYXYC() (TA, TY, TX, TY, TC) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYXZX() (TA, TY, TX, TZ, TX) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYXZY() (TA, TY, TX, TZ, TY) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYXZZ() (TA, TY, TX, TZ, TZ) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYXZW() (TA, TY, TX, TZ, TW) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYXZA() (TA, TY, TX, TZ, TA) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYXZB() (TA, TY, TX, TZ, TB) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYXZC() (TA, TY, TX, TZ, TC) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYXWX() (TA, TY, TX, TW, TX) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYXWY() (TA, TY, TX, TW, TY) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYXWZ() (TA, TY, TX, TW, TZ) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYXWW() (TA, TY, TX, TW, TW) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYXWA() (TA, TY, TX, TW, TA) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYXWB() (TA, TY, TX, TW, TB) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYXWC() (TA, TY, TX, TW, TC) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYXAX() (TA, TY, TX, TA, TX) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYXAY() (TA, TY, TX, TA, TY) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYXAZ() (TA, TY, TX, TA, TZ) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYXAW() (TA, TY, TX, TA, TW) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYXAA() (TA, TY, TX, TA, TA) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYXAB() (TA, TY, TX, TA, TB) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYXAC() (TA, TY, TX, TA, TC) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYXBX() (TA, TY, TX, TB, TX) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYXBY() (TA, TY, TX, TB, TY) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYXBZ() (TA, TY, TX, TB, TZ) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYXBW() (TA, TY, TX, TB, TW) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYXBA() (TA, TY, TX, TB, TA) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYXBB() (TA, TY, TX, TB, TB) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYXBC() (TA, TY, TX, TB, TC) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYXCX() (TA, TY, TX, TC, TX) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYXCY() (TA, TY, TX, TC, TY) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYXCZ() (TA, TY, TX, TC, TZ) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYXCW() (TA, TY, TX, TC, TW) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYXCA() (TA, TY, TX, TC, TA) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYXCB() (TA, TY, TX, TC, TB) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYXCC() (TA, TY, TX, TC, TC) { return _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYYXX() (TA, TY, TY, TX, TX) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYYXY() (TA, TY, TY, TX, TY) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYYXZ() (TA, TY, TY, TX, TZ) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYYXW() (TA, TY, TY, TX, TW) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYYXA() (TA, TY, TY, TX, TA) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYYXB() (TA, TY, TY, TX, TB) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYYXC() (TA, TY, TY, TX, TC) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYYYX() (TA, TY, TY, TY, TX) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYYYY() (TA, TY, TY, TY, TY) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYYYZ() (TA, TY, TY, TY, TZ) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYYYW() (TA, TY, TY, TY, TW) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYYYA() (TA, TY, TY, TY, TA) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYYYB() (TA, TY, TY, TY, TB) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYYYC() (TA, TY, TY, TY, TC) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYYZX() (TA, TY, TY, TZ, TX) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYYZY() (TA, TY, TY, TZ, TY) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYYZZ() (TA, TY, TY, TZ, TZ) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYYZW() (TA, TY, TY, TZ, TW) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYYZA() (TA, TY, TY, TZ, TA) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYYZB() (TA, TY, TY, TZ, TB) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYYZC() (TA, TY, TY, TZ, TC) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYYWX() (TA, TY, TY, TW, TX) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYYWY() (TA, TY, TY, TW, TY) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYYWZ() (TA, TY, TY, TW, TZ) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYYWW() (TA, TY, TY, TW, TW) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYYWA() (TA, TY, TY, TW, TA) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYYWB() (TA, TY, TY, TW, TB) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYYWC() (TA, TY, TY, TW, TC) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYYAX() (TA, TY, TY, TA, TX) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYYAY() (TA, TY, TY, TA, TY) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYYAZ() (TA, TY, TY, TA, TZ) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYYAW() (TA, TY, TY, TA, TW) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYYAA() (TA, TY, TY, TA, TA) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYYAB() (TA, TY, TY, TA, TB) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYYAC() (TA, TY, TY, TA, TC) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYYBX() (TA, TY, TY, TB, TX) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYYBY() (TA, TY, TY, TB, TY) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYYBZ() (TA, TY, TY, TB, TZ) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYYBW() (TA, TY, TY, TB, TW) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYYBA() (TA, TY, TY, TB, TA) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYYBB() (TA, TY, TY, TB, TB) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYYBC() (TA, TY, TY, TB, TC) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYYCX() (TA, TY, TY, TC, TX) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYYCY() (TA, TY, TY, TC, TY) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYYCZ() (TA, TY, TY, TC, TZ) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYYCW() (TA, TY, TY, TC, TW) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYYCA() (TA, TY, TY, TC, TA) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYYCB() (TA, TY, TY, TC, TB) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYYCC() (TA, TY, TY, TC, TC) { return _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYZXX() (TA, TY, TZ, TX, TX) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYZXY() (TA, TY, TZ, TX, TY) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYZXZ() (TA, TY, TZ, TX, TZ) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYZXW() (TA, TY, TZ, TX, TW) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYZXA() (TA, TY, TZ, TX, TA) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYZXB() (TA, TY, TZ, TX, TB) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYZXC() (TA, TY, TZ, TX, TC) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYZYX() (TA, TY, TZ, TY, TX) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYZYY() (TA, TY, TZ, TY, TY) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYZYZ() (TA, TY, TZ, TY, TZ) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYZYW() (TA, TY, TZ, TY, TW) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYZYA() (TA, TY, TZ, TY, TA) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYZYB() (TA, TY, TZ, TY, TB) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYZYC() (TA, TY, TZ, TY, TC) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYZZX() (TA, TY, TZ, TZ, TX) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYZZY() (TA, TY, TZ, TZ, TY) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYZZZ() (TA, TY, TZ, TZ, TZ) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYZZW() (TA, TY, TZ, TZ, TW) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYZZA() (TA, TY, TZ, TZ, TA) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYZZB() (TA, TY, TZ, TZ, TB) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYZZC() (TA, TY, TZ, TZ, TC) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYZWX() (TA, TY, TZ, TW, TX) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYZWY() (TA, TY, TZ, TW, TY) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYZWZ() (TA, TY, TZ, TW, TZ) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYZWW() (TA, TY, TZ, TW, TW) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYZWA() (TA, TY, TZ, TW, TA) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYZWB() (TA, TY, TZ, TW, TB) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYZWC() (TA, TY, TZ, TW, TC) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYZAX() (TA, TY, TZ, TA, TX) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYZAY() (TA, TY, TZ, TA, TY) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYZAZ() (TA, TY, TZ, TA, TZ) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYZAW() (TA, TY, TZ, TA, TW) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYZAA() (TA, TY, TZ, TA, TA) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYZAB() (TA, TY, TZ, TA, TB) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYZAC() (TA, TY, TZ, TA, TC) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYZBX() (TA, TY, TZ, TB, TX) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYZBY() (TA, TY, TZ, TB, TY) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYZBZ() (TA, TY, TZ, TB, TZ) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYZBW() (TA, TY, TZ, TB, TW) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYZBA() (TA, TY, TZ, TB, TA) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYZBB() (TA, TY, TZ, TB, TB) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYZBC() (TA, TY, TZ, TB, TC) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYZCX() (TA, TY, TZ, TC, TX) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYZCY() (TA, TY, TZ, TC, TY) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYZCZ() (TA, TY, TZ, TC, TZ) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYZCW() (TA, TY, TZ, TC, TW) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYZCA() (TA, TY, TZ, TC, TA) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYZCB() (TA, TY, TZ, TC, TB) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYZCC() (TA, TY, TZ, TC, TC) { return _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYWXX() (TA, TY, TW, TX, TX) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYWXY() (TA, TY, TW, TX, TY) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYWXZ() (TA, TY, TW, TX, TZ) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYWXW() (TA, TY, TW, TX, TW) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYWXA() (TA, TY, TW, TX, TA) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYWXB() (TA, TY, TW, TX, TB) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYWXC() (TA, TY, TW, TX, TC) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYWYX() (TA, TY, TW, TY, TX) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYWYY() (TA, TY, TW, TY, TY) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYWYZ() (TA, TY, TW, TY, TZ) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYWYW() (TA, TY, TW, TY, TW) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYWYA() (TA, TY, TW, TY, TA) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYWYB() (TA, TY, TW, TY, TB) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYWYC() (TA, TY, TW, TY, TC) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYWZX() (TA, TY, TW, TZ, TX) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYWZY() (TA, TY, TW, TZ, TY) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYWZZ() (TA, TY, TW, TZ, TZ) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYWZW() (TA, TY, TW, TZ, TW) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYWZA() (TA, TY, TW, TZ, TA) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYWZB() (TA, TY, TW, TZ, TB) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYWZC() (TA, TY, TW, TZ, TC) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYWWX() (TA, TY, TW, TW, TX) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYWWY() (TA, TY, TW, TW, TY) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYWWZ() (TA, TY, TW, TW, TZ) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYWWW() (TA, TY, TW, TW, TW) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYWWA() (TA, TY, TW, TW, TA) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYWWB() (TA, TY, TW, TW, TB) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYWWC() (TA, TY, TW, TW, TC) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYWAX() (TA, TY, TW, TA, TX) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYWAY() (TA, TY, TW, TA, TY) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYWAZ() (TA, TY, TW, TA, TZ) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYWAW() (TA, TY, TW, TA, TW) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYWAA() (TA, TY, TW, TA, TA) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYWAB() (TA, TY, TW, TA, TB) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYWAC() (TA, TY, TW, TA, TC) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYWBX() (TA, TY, TW, TB, TX) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYWBY() (TA, TY, TW, TB, TY) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYWBZ() (TA, TY, TW, TB, TZ) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYWBW() (TA, TY, TW, TB, TW) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYWBA() (TA, TY, TW, TB, TA) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYWBB() (TA, TY, TW, TB, TB) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYWBC() (TA, TY, TW, TB, TC) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYWCX() (TA, TY, TW, TC, TX) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYWCY() (TA, TY, TW, TC, TY) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYWCZ() (TA, TY, TW, TC, TZ) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYWCW() (TA, TY, TW, TC, TW) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYWCA() (TA, TY, TW, TC, TA) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYWCB() (TA, TY, TW, TC, TB) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYWCC() (TA, TY, TW, TC, TC) { return _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYAXX() (TA, TY, TA, TX, TX) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYAXY() (TA, TY, TA, TX, TY) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYAXZ() (TA, TY, TA, TX, TZ) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYAXW() (TA, TY, TA, TX, TW) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYAXA() (TA, TY, TA, TX, TA) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYAXB() (TA, TY, TA, TX, TB) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYAXC() (TA, TY, TA, TX, TC) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYAYX() (TA, TY, TA, TY, TX) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYAYY() (TA, TY, TA, TY, TY) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYAYZ() (TA, TY, TA, TY, TZ) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYAYW() (TA, TY, TA, TY, TW) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYAYA() (TA, TY, TA, TY, TA) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYAYB() (TA, TY, TA, TY, TB) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYAYC() (TA, TY, TA, TY, TC) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYAZX() (TA, TY, TA, TZ, TX) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYAZY() (TA, TY, TA, TZ, TY) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYAZZ() (TA, TY, TA, TZ, TZ) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYAZW() (TA, TY, TA, TZ, TW) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYAZA() (TA, TY, TA, TZ, TA) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYAZB() (TA, TY, TA, TZ, TB) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYAZC() (TA, TY, TA, TZ, TC) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYAWX() (TA, TY, TA, TW, TX) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYAWY() (TA, TY, TA, TW, TY) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYAWZ() (TA, TY, TA, TW, TZ) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYAWW() (TA, TY, TA, TW, TW) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYAWA() (TA, TY, TA, TW, TA) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYAWB() (TA, TY, TA, TW, TB) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYAWC() (TA, TY, TA, TW, TC) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYAAX() (TA, TY, TA, TA, TX) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYAAY() (TA, TY, TA, TA, TY) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYAAZ() (TA, TY, TA, TA, TZ) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYAAW() (TA, TY, TA, TA, TW) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYAAA() (TA, TY, TA, TA, TA) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYAAB() (TA, TY, TA, TA, TB) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYAAC() (TA, TY, TA, TA, TC) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYABX() (TA, TY, TA, TB, TX) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYABY() (TA, TY, TA, TB, TY) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYABZ() (TA, TY, TA, TB, TZ) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYABW() (TA, TY, TA, TB, TW) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYABA() (TA, TY, TA, TB, TA) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYABB() (TA, TY, TA, TB, TB) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYABC() (TA, TY, TA, TB, TC) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYACX() (TA, TY, TA, TC, TX) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYACY() (TA, TY, TA, TC, TY) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYACZ() (TA, TY, TA, TC, TZ) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYACW() (TA, TY, TA, TC, TW) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYACA() (TA, TY, TA, TC, TA) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYACB() (TA, TY, TA, TC, TB) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYACC() (TA, TY, TA, TC, TC) { return _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYBXX() (TA, TY, TB, TX, TX) { return _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYBXY() (TA, TY, TB, TX, TY) { return _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYBXZ() (TA, TY, TB, TX, TZ) { return _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYBXW() (TA, TY, TB, TX, TW) { return _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYBXA() (TA, TY, TB, TX, TA) { return _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYBXB() (TA, TY, TB, TX, TB) { return _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYBXC() (TA, TY, TB, TX, TC) { return _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYBYX() (TA, TY, TB, TY, TX) { return _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYBYY() (TA, TY, TB, TY, TY) { return _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYBYZ() (TA, TY, TB, TY, TZ) { return _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYBYW() (TA, TY, TB, TY, TW) { return _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYBYA() (TA, TY, TB, TY, TA) { return _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYBYB() (TA, TY, TB, TY, TB) { return _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYBYC() (TA, TY, TB, TY, TC) { return _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYBZX() (TA, TY, TB, TZ, TX) { return _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYBZY() (TA, TY, TB, TZ, TY) { return _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYBZZ() (TA, TY, TB, TZ, TZ) { return _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYBZW() (TA, TY, TB, TZ, TW) { return _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYBZA() (TA, TY, TB, TZ, TA) { return _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYBZB() (TA, TY, TB, TZ, TB) { return _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYBZC() (TA, TY, TB, TZ, TC) { return _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYBWX() (TA, TY, TB, TW, TX) { return _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYBWY() (TA, TY, TB, TW, TY) { return _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYBWZ() (TA, TY, TB, TW, TZ) { return _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYBWW() (TA, TY, TB, TW, TW) { return _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYBWA() (TA, TY, TB, TW, TA) { return _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYBWB() (TA, TY, TB, TW, TB) { return _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYBWC() (TA, TY, TB, TW, TC) { return _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYBAX() (TA, TY, TB, TA, TX) { return _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYBAY() (TA, TY, TB, TA, TY) { return _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYBAZ() (TA, TY, TB, TA, TZ) { return _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYBAW() (TA, TY, TB, TA, TW) { return _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYBAA() (TA, TY, TB, TA, TA) { return _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYBAB() (TA, TY, TB, TA, TB) { return _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYBAC() (TA, TY, TB, TA, TC) { return _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYBBX() (TA, TY, TB, TB, TX) { return _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYBBY() (TA, TY, TB, TB, TY) { return _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYBBZ() (TA, TY, TB, TB, TZ) { return _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYBBW() (TA, TY, TB, TB, TW) { return _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYBBA() (TA, TY, TB, TB, TA) { return _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYBBB() (TA, TY, TB, TB, TB) { return _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYBBC() (TA, TY, TB, TB, TC) { return _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYBCX() (TA, TY, TB, TC, TX) { return _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYBCY() (TA, TY, TB, TC, TY) { return _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYBCZ() (TA, TY, TB, TC, TZ) { return _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYBCW() (TA, TY, TB, TC, TW) { return _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYBCA() (TA, TY, TB, TC, TA) { return _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYBCB() (TA, TY, TB, TC, TB) { return _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYBCC() (TA, TY, TB, TC, TC) { return _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYCXX() (TA, TY, TC, TX, TX) { return _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYCXY() (TA, TY, TC, TX, TY) { return _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYCXZ() (TA, TY, TC, TX, TZ) { return _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYCXW() (TA, TY, TC, TX, TW) { return _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYCXA() (TA, TY, TC, TX, TA) { return _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYCXB() (TA, TY, TC, TX, TB) { return _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYCXC() (TA, TY, TC, TX, TC) { return _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYCYX() (TA, TY, TC, TY, TX) { return _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYCYY() (TA, TY, TC, TY, TY) { return _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYCYZ() (TA, TY, TC, TY, TZ) { return _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYCYW() (TA, TY, TC, TY, TW) { return _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYCYA() (TA, TY, TC, TY, TA) { return _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYCYB() (TA, TY, TC, TY, TB) { return _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYCYC() (TA, TY, TC, TY, TC) { return _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYCZX() (TA, TY, TC, TZ, TX) { return _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYCZY() (TA, TY, TC, TZ, TY) { return _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYCZZ() (TA, TY, TC, TZ, TZ) { return _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYCZW() (TA, TY, TC, TZ, TW) { return _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYCZA() (TA, TY, TC, TZ, TA) { return _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYCZB() (TA, TY, TC, TZ, TB) { return _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYCZC() (TA, TY, TC, TZ, TC) { return _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYCWX() (TA, TY, TC, TW, TX) { return _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYCWY() (TA, TY, TC, TW, TY) { return _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYCWZ() (TA, TY, TC, TW, TZ) { return _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYCWW() (TA, TY, TC, TW, TW) { return _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYCWA() (TA, TY, TC, TW, TA) { return _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYCWB() (TA, TY, TC, TW, TB) { return _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYCWC() (TA, TY, TC, TW, TC) { return _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYCAX() (TA, TY, TC, TA, TX) { return _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYCAY() (TA, TY, TC, TA, TY) { return _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYCAZ() (TA, TY, TC, TA, TZ) { return _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYCAW() (TA, TY, TC, TA, TW) { return _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYCAA() (TA, TY, TC, TA, TA) { return _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYCAB() (TA, TY, TC, TA, TB) { return _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYCAC() (TA, TY, TC, TA, TC) { return _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYCBX() (TA, TY, TC, TB, TX) { return _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYCBY() (TA, TY, TC, TB, TY) { return _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYCBZ() (TA, TY, TC, TB, TZ) { return _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYCBW() (TA, TY, TC, TB, TW) { return _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYCBA() (TA, TY, TC, TB, TA) { return _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYCBB() (TA, TY, TC, TB, TB) { return _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYCBC() (TA, TY, TC, TB, TC) { return _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYCCX() (TA, TY, TC, TC, TX) { return _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYCCY() (TA, TY, TC, TC, TY) { return _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYCCZ() (TA, TY, TC, TC, TZ) { return _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYCCW() (TA, TY, TC, TC, TW) { return _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYCCA() (TA, TY, TC, TC, TA) { return _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYCCB() (TA, TY, TC, TC, TB) { return _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AYCCC() (TA, TY, TC, TC, TC) { return _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZXXX() (TA, TZ, TX, TX, TX) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZXXY() (TA, TZ, TX, TX, TY) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZXXZ() (TA, TZ, TX, TX, TZ) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZXXW() (TA, TZ, TX, TX, TW) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZXXA() (TA, TZ, TX, TX, TA) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZXXB() (TA, TZ, TX, TX, TB) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZXXC() (TA, TZ, TX, TX, TC) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZXYX() (TA, TZ, TX, TY, TX) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZXYY() (TA, TZ, TX, TY, TY) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZXYZ() (TA, TZ, TX, TY, TZ) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZXYW() (TA, TZ, TX, TY, TW) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZXYA() (TA, TZ, TX, TY, TA) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZXYB() (TA, TZ, TX, TY, TB) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZXYC() (TA, TZ, TX, TY, TC) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZXZX() (TA, TZ, TX, TZ, TX) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZXZY() (TA, TZ, TX, TZ, TY) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZXZZ() (TA, TZ, TX, TZ, TZ) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZXZW() (TA, TZ, TX, TZ, TW) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZXZA() (TA, TZ, TX, TZ, TA) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZXZB() (TA, TZ, TX, TZ, TB) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZXZC() (TA, TZ, TX, TZ, TC) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZXWX() (TA, TZ, TX, TW, TX) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZXWY() (TA, TZ, TX, TW, TY) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZXWZ() (TA, TZ, TX, TW, TZ) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZXWW() (TA, TZ, TX, TW, TW) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZXWA() (TA, TZ, TX, TW, TA) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZXWB() (TA, TZ, TX, TW, TB) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZXWC() (TA, TZ, TX, TW, TC) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZXAX() (TA, TZ, TX, TA, TX) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZXAY() (TA, TZ, TX, TA, TY) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZXAZ() (TA, TZ, TX, TA, TZ) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZXAW() (TA, TZ, TX, TA, TW) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZXAA() (TA, TZ, TX, TA, TA) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZXAB() (TA, TZ, TX, TA, TB) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZXAC() (TA, TZ, TX, TA, TC) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZXBX() (TA, TZ, TX, TB, TX) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZXBY() (TA, TZ, TX, TB, TY) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZXBZ() (TA, TZ, TX, TB, TZ) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZXBW() (TA, TZ, TX, TB, TW) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZXBA() (TA, TZ, TX, TB, TA) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZXBB() (TA, TZ, TX, TB, TB) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZXBC() (TA, TZ, TX, TB, TC) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZXCX() (TA, TZ, TX, TC, TX) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZXCY() (TA, TZ, TX, TC, TY) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZXCZ() (TA, TZ, TX, TC, TZ) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZXCW() (TA, TZ, TX, TC, TW) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZXCA() (TA, TZ, TX, TC, TA) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZXCB() (TA, TZ, TX, TC, TB) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZXCC() (TA, TZ, TX, TC, TC) { return _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZYXX() (TA, TZ, TY, TX, TX) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZYXY() (TA, TZ, TY, TX, TY) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZYXZ() (TA, TZ, TY, TX, TZ) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZYXW() (TA, TZ, TY, TX, TW) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZYXA() (TA, TZ, TY, TX, TA) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZYXB() (TA, TZ, TY, TX, TB) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZYXC() (TA, TZ, TY, TX, TC) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZYYX() (TA, TZ, TY, TY, TX) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZYYY() (TA, TZ, TY, TY, TY) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZYYZ() (TA, TZ, TY, TY, TZ) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZYYW() (TA, TZ, TY, TY, TW) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZYYA() (TA, TZ, TY, TY, TA) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZYYB() (TA, TZ, TY, TY, TB) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZYYC() (TA, TZ, TY, TY, TC) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZYZX() (TA, TZ, TY, TZ, TX) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZYZY() (TA, TZ, TY, TZ, TY) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZYZZ() (TA, TZ, TY, TZ, TZ) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZYZW() (TA, TZ, TY, TZ, TW) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZYZA() (TA, TZ, TY, TZ, TA) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZYZB() (TA, TZ, TY, TZ, TB) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZYZC() (TA, TZ, TY, TZ, TC) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZYWX() (TA, TZ, TY, TW, TX) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZYWY() (TA, TZ, TY, TW, TY) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZYWZ() (TA, TZ, TY, TW, TZ) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZYWW() (TA, TZ, TY, TW, TW) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZYWA() (TA, TZ, TY, TW, TA) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZYWB() (TA, TZ, TY, TW, TB) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZYWC() (TA, TZ, TY, TW, TC) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZYAX() (TA, TZ, TY, TA, TX) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZYAY() (TA, TZ, TY, TA, TY) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZYAZ() (TA, TZ, TY, TA, TZ) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZYAW() (TA, TZ, TY, TA, TW) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZYAA() (TA, TZ, TY, TA, TA) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZYAB() (TA, TZ, TY, TA, TB) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZYAC() (TA, TZ, TY, TA, TC) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZYBX() (TA, TZ, TY, TB, TX) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZYBY() (TA, TZ, TY, TB, TY) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZYBZ() (TA, TZ, TY, TB, TZ) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZYBW() (TA, TZ, TY, TB, TW) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZYBA() (TA, TZ, TY, TB, TA) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZYBB() (TA, TZ, TY, TB, TB) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZYBC() (TA, TZ, TY, TB, TC) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZYCX() (TA, TZ, TY, TC, TX) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZYCY() (TA, TZ, TY, TC, TY) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZYCZ() (TA, TZ, TY, TC, TZ) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZYCW() (TA, TZ, TY, TC, TW) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZYCA() (TA, TZ, TY, TC, TA) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZYCB() (TA, TZ, TY, TC, TB) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZYCC() (TA, TZ, TY, TC, TC) { return _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZZXX() (TA, TZ, TZ, TX, TX) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZZXY() (TA, TZ, TZ, TX, TY) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZZXZ() (TA, TZ, TZ, TX, TZ) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZZXW() (TA, TZ, TZ, TX, TW) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZZXA() (TA, TZ, TZ, TX, TA) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZZXB() (TA, TZ, TZ, TX, TB) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZZXC() (TA, TZ, TZ, TX, TC) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZZYX() (TA, TZ, TZ, TY, TX) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZZYY() (TA, TZ, TZ, TY, TY) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZZYZ() (TA, TZ, TZ, TY, TZ) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZZYW() (TA, TZ, TZ, TY, TW) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZZYA() (TA, TZ, TZ, TY, TA) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZZYB() (TA, TZ, TZ, TY, TB) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZZYC() (TA, TZ, TZ, TY, TC) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZZZX() (TA, TZ, TZ, TZ, TX) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZZZY() (TA, TZ, TZ, TZ, TY) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZZZZ() (TA, TZ, TZ, TZ, TZ) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZZZW() (TA, TZ, TZ, TZ, TW) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZZZA() (TA, TZ, TZ, TZ, TA) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZZZB() (TA, TZ, TZ, TZ, TB) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZZZC() (TA, TZ, TZ, TZ, TC) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZZWX() (TA, TZ, TZ, TW, TX) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZZWY() (TA, TZ, TZ, TW, TY) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZZWZ() (TA, TZ, TZ, TW, TZ) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZZWW() (TA, TZ, TZ, TW, TW) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZZWA() (TA, TZ, TZ, TW, TA) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZZWB() (TA, TZ, TZ, TW, TB) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZZWC() (TA, TZ, TZ, TW, TC) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZZAX() (TA, TZ, TZ, TA, TX) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZZAY() (TA, TZ, TZ, TA, TY) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZZAZ() (TA, TZ, TZ, TA, TZ) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZZAW() (TA, TZ, TZ, TA, TW) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZZAA() (TA, TZ, TZ, TA, TA) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZZAB() (TA, TZ, TZ, TA, TB) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZZAC() (TA, TZ, TZ, TA, TC) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZZBX() (TA, TZ, TZ, TB, TX) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZZBY() (TA, TZ, TZ, TB, TY) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZZBZ() (TA, TZ, TZ, TB, TZ) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZZBW() (TA, TZ, TZ, TB, TW) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZZBA() (TA, TZ, TZ, TB, TA) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZZBB() (TA, TZ, TZ, TB, TB) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZZBC() (TA, TZ, TZ, TB, TC) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZZCX() (TA, TZ, TZ, TC, TX) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZZCY() (TA, TZ, TZ, TC, TY) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZZCZ() (TA, TZ, TZ, TC, TZ) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZZCW() (TA, TZ, TZ, TC, TW) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZZCA() (TA, TZ, TZ, TC, TA) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZZCB() (TA, TZ, TZ, TC, TB) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZZCC() (TA, TZ, TZ, TC, TC) { return _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZWXX() (TA, TZ, TW, TX, TX) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZWXY() (TA, TZ, TW, TX, TY) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZWXZ() (TA, TZ, TW, TX, TZ) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZWXW() (TA, TZ, TW, TX, TW) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZWXA() (TA, TZ, TW, TX, TA) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZWXB() (TA, TZ, TW, TX, TB) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZWXC() (TA, TZ, TW, TX, TC) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZWYX() (TA, TZ, TW, TY, TX) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZWYY() (TA, TZ, TW, TY, TY) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZWYZ() (TA, TZ, TW, TY, TZ) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZWYW() (TA, TZ, TW, TY, TW) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZWYA() (TA, TZ, TW, TY, TA) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZWYB() (TA, TZ, TW, TY, TB) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZWYC() (TA, TZ, TW, TY, TC) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZWZX() (TA, TZ, TW, TZ, TX) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZWZY() (TA, TZ, TW, TZ, TY) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZWZZ() (TA, TZ, TW, TZ, TZ) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZWZW() (TA, TZ, TW, TZ, TW) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZWZA() (TA, TZ, TW, TZ, TA) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZWZB() (TA, TZ, TW, TZ, TB) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZWZC() (TA, TZ, TW, TZ, TC) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZWWX() (TA, TZ, TW, TW, TX) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZWWY() (TA, TZ, TW, TW, TY) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZWWZ() (TA, TZ, TW, TW, TZ) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZWWW() (TA, TZ, TW, TW, TW) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZWWA() (TA, TZ, TW, TW, TA) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZWWB() (TA, TZ, TW, TW, TB) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZWWC() (TA, TZ, TW, TW, TC) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZWAX() (TA, TZ, TW, TA, TX) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZWAY() (TA, TZ, TW, TA, TY) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZWAZ() (TA, TZ, TW, TA, TZ) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZWAW() (TA, TZ, TW, TA, TW) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZWAA() (TA, TZ, TW, TA, TA) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZWAB() (TA, TZ, TW, TA, TB) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZWAC() (TA, TZ, TW, TA, TC) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZWBX() (TA, TZ, TW, TB, TX) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZWBY() (TA, TZ, TW, TB, TY) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZWBZ() (TA, TZ, TW, TB, TZ) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZWBW() (TA, TZ, TW, TB, TW) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZWBA() (TA, TZ, TW, TB, TA) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZWBB() (TA, TZ, TW, TB, TB) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZWBC() (TA, TZ, TW, TB, TC) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZWCX() (TA, TZ, TW, TC, TX) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZWCY() (TA, TZ, TW, TC, TY) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZWCZ() (TA, TZ, TW, TC, TZ) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZWCW() (TA, TZ, TW, TC, TW) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZWCA() (TA, TZ, TW, TC, TA) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZWCB() (TA, TZ, TW, TC, TB) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZWCC() (TA, TZ, TW, TC, TC) { return _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZAXX() (TA, TZ, TA, TX, TX) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZAXY() (TA, TZ, TA, TX, TY) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZAXZ() (TA, TZ, TA, TX, TZ) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZAXW() (TA, TZ, TA, TX, TW) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZAXA() (TA, TZ, TA, TX, TA) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZAXB() (TA, TZ, TA, TX, TB) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZAXC() (TA, TZ, TA, TX, TC) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZAYX() (TA, TZ, TA, TY, TX) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZAYY() (TA, TZ, TA, TY, TY) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZAYZ() (TA, TZ, TA, TY, TZ) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZAYW() (TA, TZ, TA, TY, TW) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZAYA() (TA, TZ, TA, TY, TA) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZAYB() (TA, TZ, TA, TY, TB) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZAYC() (TA, TZ, TA, TY, TC) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZAZX() (TA, TZ, TA, TZ, TX) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZAZY() (TA, TZ, TA, TZ, TY) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZAZZ() (TA, TZ, TA, TZ, TZ) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZAZW() (TA, TZ, TA, TZ, TW) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZAZA() (TA, TZ, TA, TZ, TA) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZAZB() (TA, TZ, TA, TZ, TB) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZAZC() (TA, TZ, TA, TZ, TC) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZAWX() (TA, TZ, TA, TW, TX) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZAWY() (TA, TZ, TA, TW, TY) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZAWZ() (TA, TZ, TA, TW, TZ) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZAWW() (TA, TZ, TA, TW, TW) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZAWA() (TA, TZ, TA, TW, TA) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZAWB() (TA, TZ, TA, TW, TB) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZAWC() (TA, TZ, TA, TW, TC) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZAAX() (TA, TZ, TA, TA, TX) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZAAY() (TA, TZ, TA, TA, TY) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZAAZ() (TA, TZ, TA, TA, TZ) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZAAW() (TA, TZ, TA, TA, TW) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZAAA() (TA, TZ, TA, TA, TA) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZAAB() (TA, TZ, TA, TA, TB) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZAAC() (TA, TZ, TA, TA, TC) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZABX() (TA, TZ, TA, TB, TX) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZABY() (TA, TZ, TA, TB, TY) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZABZ() (TA, TZ, TA, TB, TZ) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZABW() (TA, TZ, TA, TB, TW) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZABA() (TA, TZ, TA, TB, TA) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZABB() (TA, TZ, TA, TB, TB) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZABC() (TA, TZ, TA, TB, TC) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZACX() (TA, TZ, TA, TC, TX) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZACY() (TA, TZ, TA, TC, TY) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZACZ() (TA, TZ, TA, TC, TZ) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZACW() (TA, TZ, TA, TC, TW) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZACA() (TA, TZ, TA, TC, TA) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZACB() (TA, TZ, TA, TC, TB) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZACC() (TA, TZ, TA, TC, TC) { return _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZBXX() (TA, TZ, TB, TX, TX) { return _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZBXY() (TA, TZ, TB, TX, TY) { return _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZBXZ() (TA, TZ, TB, TX, TZ) { return _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZBXW() (TA, TZ, TB, TX, TW) { return _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZBXA() (TA, TZ, TB, TX, TA) { return _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZBXB() (TA, TZ, TB, TX, TB) { return _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZBXC() (TA, TZ, TB, TX, TC) { return _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZBYX() (TA, TZ, TB, TY, TX) { return _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZBYY() (TA, TZ, TB, TY, TY) { return _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZBYZ() (TA, TZ, TB, TY, TZ) { return _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZBYW() (TA, TZ, TB, TY, TW) { return _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZBYA() (TA, TZ, TB, TY, TA) { return _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZBYB() (TA, TZ, TB, TY, TB) { return _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZBYC() (TA, TZ, TB, TY, TC) { return _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZBZX() (TA, TZ, TB, TZ, TX) { return _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZBZY() (TA, TZ, TB, TZ, TY) { return _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZBZZ() (TA, TZ, TB, TZ, TZ) { return _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZBZW() (TA, TZ, TB, TZ, TW) { return _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZBZA() (TA, TZ, TB, TZ, TA) { return _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZBZB() (TA, TZ, TB, TZ, TB) { return _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZBZC() (TA, TZ, TB, TZ, TC) { return _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZBWX() (TA, TZ, TB, TW, TX) { return _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZBWY() (TA, TZ, TB, TW, TY) { return _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZBWZ() (TA, TZ, TB, TW, TZ) { return _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZBWW() (TA, TZ, TB, TW, TW) { return _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZBWA() (TA, TZ, TB, TW, TA) { return _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZBWB() (TA, TZ, TB, TW, TB) { return _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZBWC() (TA, TZ, TB, TW, TC) { return _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZBAX() (TA, TZ, TB, TA, TX) { return _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZBAY() (TA, TZ, TB, TA, TY) { return _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZBAZ() (TA, TZ, TB, TA, TZ) { return _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZBAW() (TA, TZ, TB, TA, TW) { return _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZBAA() (TA, TZ, TB, TA, TA) { return _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZBAB() (TA, TZ, TB, TA, TB) { return _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZBAC() (TA, TZ, TB, TA, TC) { return _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZBBX() (TA, TZ, TB, TB, TX) { return _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZBBY() (TA, TZ, TB, TB, TY) { return _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZBBZ() (TA, TZ, TB, TB, TZ) { return _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZBBW() (TA, TZ, TB, TB, TW) { return _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZBBA() (TA, TZ, TB, TB, TA) { return _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZBBB() (TA, TZ, TB, TB, TB) { return _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZBBC() (TA, TZ, TB, TB, TC) { return _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZBCX() (TA, TZ, TB, TC, TX) { return _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZBCY() (TA, TZ, TB, TC, TY) { return _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZBCZ() (TA, TZ, TB, TC, TZ) { return _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZBCW() (TA, TZ, TB, TC, TW) { return _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZBCA() (TA, TZ, TB, TC, TA) { return _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZBCB() (TA, TZ, TB, TC, TB) { return _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZBCC() (TA, TZ, TB, TC, TC) { return _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZCXX() (TA, TZ, TC, TX, TX) { return _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZCXY() (TA, TZ, TC, TX, TY) { return _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZCXZ() (TA, TZ, TC, TX, TZ) { return _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZCXW() (TA, TZ, TC, TX, TW) { return _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZCXA() (TA, TZ, TC, TX, TA) { return _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZCXB() (TA, TZ, TC, TX, TB) { return _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZCXC() (TA, TZ, TC, TX, TC) { return _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZCYX() (TA, TZ, TC, TY, TX) { return _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZCYY() (TA, TZ, TC, TY, TY) { return _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZCYZ() (TA, TZ, TC, TY, TZ) { return _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZCYW() (TA, TZ, TC, TY, TW) { return _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZCYA() (TA, TZ, TC, TY, TA) { return _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZCYB() (TA, TZ, TC, TY, TB) { return _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZCYC() (TA, TZ, TC, TY, TC) { return _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZCZX() (TA, TZ, TC, TZ, TX) { return _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZCZY() (TA, TZ, TC, TZ, TY) { return _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZCZZ() (TA, TZ, TC, TZ, TZ) { return _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZCZW() (TA, TZ, TC, TZ, TW) { return _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZCZA() (TA, TZ, TC, TZ, TA) { return _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZCZB() (TA, TZ, TC, TZ, TB) { return _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZCZC() (TA, TZ, TC, TZ, TC) { return _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZCWX() (TA, TZ, TC, TW, TX) { return _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZCWY() (TA, TZ, TC, TW, TY) { return _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZCWZ() (TA, TZ, TC, TW, TZ) { return _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZCWW() (TA, TZ, TC, TW, TW) { return _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZCWA() (TA, TZ, TC, TW, TA) { return _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZCWB() (TA, TZ, TC, TW, TB) { return _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZCWC() (TA, TZ, TC, TW, TC) { return _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZCAX() (TA, TZ, TC, TA, TX) { return _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZCAY() (TA, TZ, TC, TA, TY) { return _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZCAZ() (TA, TZ, TC, TA, TZ) { return _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZCAW() (TA, TZ, TC, TA, TW) { return _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZCAA() (TA, TZ, TC, TA, TA) { return _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZCAB() (TA, TZ, TC, TA, TB) { return _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZCAC() (TA, TZ, TC, TA, TC) { return _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZCBX() (TA, TZ, TC, TB, TX) { return _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZCBY() (TA, TZ, TC, TB, TY) { return _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZCBZ() (TA, TZ, TC, TB, TZ) { return _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZCBW() (TA, TZ, TC, TB, TW) { return _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZCBA() (TA, TZ, TC, TB, TA) { return _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZCBB() (TA, TZ, TC, TB, TB) { return _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZCBC() (TA, TZ, TC, TB, TC) { return _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZCCX() (TA, TZ, TC, TC, TX) { return _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZCCY() (TA, TZ, TC, TC, TY) { return _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZCCZ() (TA, TZ, TC, TC, TZ) { return _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZCCW() (TA, TZ, TC, TC, TW) { return _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZCCA() (TA, TZ, TC, TC, TA) { return _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZCCB() (TA, TZ, TC, TC, TB) { return _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AZCCC() (TA, TZ, TC, TC, TC) { return _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWXXX() (TA, TW, TX, TX, TX) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWXXY() (TA, TW, TX, TX, TY) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWXXZ() (TA, TW, TX, TX, TZ) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWXXW() (TA, TW, TX, TX, TW) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWXXA() (TA, TW, TX, TX, TA) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWXXB() (TA, TW, TX, TX, TB) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWXXC() (TA, TW, TX, TX, TC) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWXYX() (TA, TW, TX, TY, TX) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWXYY() (TA, TW, TX, TY, TY) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWXYZ() (TA, TW, TX, TY, TZ) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWXYW() (TA, TW, TX, TY, TW) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWXYA() (TA, TW, TX, TY, TA) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWXYB() (TA, TW, TX, TY, TB) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWXYC() (TA, TW, TX, TY, TC) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWXZX() (TA, TW, TX, TZ, TX) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWXZY() (TA, TW, TX, TZ, TY) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWXZZ() (TA, TW, TX, TZ, TZ) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWXZW() (TA, TW, TX, TZ, TW) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWXZA() (TA, TW, TX, TZ, TA) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWXZB() (TA, TW, TX, TZ, TB) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWXZC() (TA, TW, TX, TZ, TC) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWXWX() (TA, TW, TX, TW, TX) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWXWY() (TA, TW, TX, TW, TY) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWXWZ() (TA, TW, TX, TW, TZ) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWXWW() (TA, TW, TX, TW, TW) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWXWA() (TA, TW, TX, TW, TA) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWXWB() (TA, TW, TX, TW, TB) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWXWC() (TA, TW, TX, TW, TC) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWXAX() (TA, TW, TX, TA, TX) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWXAY() (TA, TW, TX, TA, TY) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWXAZ() (TA, TW, TX, TA, TZ) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWXAW() (TA, TW, TX, TA, TW) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWXAA() (TA, TW, TX, TA, TA) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWXAB() (TA, TW, TX, TA, TB) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWXAC() (TA, TW, TX, TA, TC) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWXBX() (TA, TW, TX, TB, TX) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWXBY() (TA, TW, TX, TB, TY) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWXBZ() (TA, TW, TX, TB, TZ) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWXBW() (TA, TW, TX, TB, TW) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWXBA() (TA, TW, TX, TB, TA) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWXBB() (TA, TW, TX, TB, TB) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWXBC() (TA, TW, TX, TB, TC) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWXCX() (TA, TW, TX, TC, TX) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWXCY() (TA, TW, TX, TC, TY) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWXCZ() (TA, TW, TX, TC, TZ) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWXCW() (TA, TW, TX, TC, TW) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWXCA() (TA, TW, TX, TC, TA) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWXCB() (TA, TW, TX, TC, TB) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWXCC() (TA, TW, TX, TC, TC) { return _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWYXX() (TA, TW, TY, TX, TX) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWYXY() (TA, TW, TY, TX, TY) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWYXZ() (TA, TW, TY, TX, TZ) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWYXW() (TA, TW, TY, TX, TW) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWYXA() (TA, TW, TY, TX, TA) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWYXB() (TA, TW, TY, TX, TB) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWYXC() (TA, TW, TY, TX, TC) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWYYX() (TA, TW, TY, TY, TX) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWYYY() (TA, TW, TY, TY, TY) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWYYZ() (TA, TW, TY, TY, TZ) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWYYW() (TA, TW, TY, TY, TW) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWYYA() (TA, TW, TY, TY, TA) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWYYB() (TA, TW, TY, TY, TB) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWYYC() (TA, TW, TY, TY, TC) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWYZX() (TA, TW, TY, TZ, TX) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWYZY() (TA, TW, TY, TZ, TY) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWYZZ() (TA, TW, TY, TZ, TZ) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWYZW() (TA, TW, TY, TZ, TW) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWYZA() (TA, TW, TY, TZ, TA) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWYZB() (TA, TW, TY, TZ, TB) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWYZC() (TA, TW, TY, TZ, TC) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWYWX() (TA, TW, TY, TW, TX) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWYWY() (TA, TW, TY, TW, TY) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWYWZ() (TA, TW, TY, TW, TZ) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWYWW() (TA, TW, TY, TW, TW) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWYWA() (TA, TW, TY, TW, TA) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWYWB() (TA, TW, TY, TW, TB) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWYWC() (TA, TW, TY, TW, TC) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWYAX() (TA, TW, TY, TA, TX) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWYAY() (TA, TW, TY, TA, TY) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWYAZ() (TA, TW, TY, TA, TZ) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWYAW() (TA, TW, TY, TA, TW) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWYAA() (TA, TW, TY, TA, TA) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWYAB() (TA, TW, TY, TA, TB) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWYAC() (TA, TW, TY, TA, TC) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWYBX() (TA, TW, TY, TB, TX) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWYBY() (TA, TW, TY, TB, TY) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWYBZ() (TA, TW, TY, TB, TZ) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWYBW() (TA, TW, TY, TB, TW) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWYBA() (TA, TW, TY, TB, TA) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWYBB() (TA, TW, TY, TB, TB) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWYBC() (TA, TW, TY, TB, TC) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWYCX() (TA, TW, TY, TC, TX) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWYCY() (TA, TW, TY, TC, TY) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWYCZ() (TA, TW, TY, TC, TZ) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWYCW() (TA, TW, TY, TC, TW) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWYCA() (TA, TW, TY, TC, TA) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWYCB() (TA, TW, TY, TC, TB) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWYCC() (TA, TW, TY, TC, TC) { return _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWZXX() (TA, TW, TZ, TX, TX) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWZXY() (TA, TW, TZ, TX, TY) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWZXZ() (TA, TW, TZ, TX, TZ) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWZXW() (TA, TW, TZ, TX, TW) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWZXA() (TA, TW, TZ, TX, TA) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWZXB() (TA, TW, TZ, TX, TB) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWZXC() (TA, TW, TZ, TX, TC) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWZYX() (TA, TW, TZ, TY, TX) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWZYY() (TA, TW, TZ, TY, TY) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWZYZ() (TA, TW, TZ, TY, TZ) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWZYW() (TA, TW, TZ, TY, TW) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWZYA() (TA, TW, TZ, TY, TA) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWZYB() (TA, TW, TZ, TY, TB) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWZYC() (TA, TW, TZ, TY, TC) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWZZX() (TA, TW, TZ, TZ, TX) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWZZY() (TA, TW, TZ, TZ, TY) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWZZZ() (TA, TW, TZ, TZ, TZ) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWZZW() (TA, TW, TZ, TZ, TW) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWZZA() (TA, TW, TZ, TZ, TA) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWZZB() (TA, TW, TZ, TZ, TB) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWZZC() (TA, TW, TZ, TZ, TC) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWZWX() (TA, TW, TZ, TW, TX) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWZWY() (TA, TW, TZ, TW, TY) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWZWZ() (TA, TW, TZ, TW, TZ) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWZWW() (TA, TW, TZ, TW, TW) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWZWA() (TA, TW, TZ, TW, TA) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWZWB() (TA, TW, TZ, TW, TB) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWZWC() (TA, TW, TZ, TW, TC) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWZAX() (TA, TW, TZ, TA, TX) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWZAY() (TA, TW, TZ, TA, TY) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWZAZ() (TA, TW, TZ, TA, TZ) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWZAW() (TA, TW, TZ, TA, TW) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWZAA() (TA, TW, TZ, TA, TA) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWZAB() (TA, TW, TZ, TA, TB) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWZAC() (TA, TW, TZ, TA, TC) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWZBX() (TA, TW, TZ, TB, TX) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWZBY() (TA, TW, TZ, TB, TY) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWZBZ() (TA, TW, TZ, TB, TZ) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWZBW() (TA, TW, TZ, TB, TW) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWZBA() (TA, TW, TZ, TB, TA) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWZBB() (TA, TW, TZ, TB, TB) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWZBC() (TA, TW, TZ, TB, TC) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWZCX() (TA, TW, TZ, TC, TX) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWZCY() (TA, TW, TZ, TC, TY) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWZCZ() (TA, TW, TZ, TC, TZ) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWZCW() (TA, TW, TZ, TC, TW) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWZCA() (TA, TW, TZ, TC, TA) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWZCB() (TA, TW, TZ, TC, TB) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWZCC() (TA, TW, TZ, TC, TC) { return _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWWXX() (TA, TW, TW, TX, TX) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWWXY() (TA, TW, TW, TX, TY) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWWXZ() (TA, TW, TW, TX, TZ) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWWXW() (TA, TW, TW, TX, TW) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWWXA() (TA, TW, TW, TX, TA) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWWXB() (TA, TW, TW, TX, TB) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWWXC() (TA, TW, TW, TX, TC) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWWYX() (TA, TW, TW, TY, TX) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWWYY() (TA, TW, TW, TY, TY) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWWYZ() (TA, TW, TW, TY, TZ) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWWYW() (TA, TW, TW, TY, TW) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWWYA() (TA, TW, TW, TY, TA) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWWYB() (TA, TW, TW, TY, TB) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWWYC() (TA, TW, TW, TY, TC) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWWZX() (TA, TW, TW, TZ, TX) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWWZY() (TA, TW, TW, TZ, TY) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWWZZ() (TA, TW, TW, TZ, TZ) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWWZW() (TA, TW, TW, TZ, TW) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWWZA() (TA, TW, TW, TZ, TA) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWWZB() (TA, TW, TW, TZ, TB) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWWZC() (TA, TW, TW, TZ, TC) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWWWX() (TA, TW, TW, TW, TX) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWWWY() (TA, TW, TW, TW, TY) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWWWZ() (TA, TW, TW, TW, TZ) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWWWW() (TA, TW, TW, TW, TW) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWWWA() (TA, TW, TW, TW, TA) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWWWB() (TA, TW, TW, TW, TB) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWWWC() (TA, TW, TW, TW, TC) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWWAX() (TA, TW, TW, TA, TX) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWWAY() (TA, TW, TW, TA, TY) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWWAZ() (TA, TW, TW, TA, TZ) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWWAW() (TA, TW, TW, TA, TW) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWWAA() (TA, TW, TW, TA, TA) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWWAB() (TA, TW, TW, TA, TB) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWWAC() (TA, TW, TW, TA, TC) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWWBX() (TA, TW, TW, TB, TX) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWWBY() (TA, TW, TW, TB, TY) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWWBZ() (TA, TW, TW, TB, TZ) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWWBW() (TA, TW, TW, TB, TW) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWWBA() (TA, TW, TW, TB, TA) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWWBB() (TA, TW, TW, TB, TB) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWWBC() (TA, TW, TW, TB, TC) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWWCX() (TA, TW, TW, TC, TX) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWWCY() (TA, TW, TW, TC, TY) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWWCZ() (TA, TW, TW, TC, TZ) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWWCW() (TA, TW, TW, TC, TW) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWWCA() (TA, TW, TW, TC, TA) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWWCB() (TA, TW, TW, TC, TB) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWWCC() (TA, TW, TW, TC, TC) { return _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWAXX() (TA, TW, TA, TX, TX) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWAXY() (TA, TW, TA, TX, TY) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWAXZ() (TA, TW, TA, TX, TZ) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWAXW() (TA, TW, TA, TX, TW) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWAXA() (TA, TW, TA, TX, TA) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWAXB() (TA, TW, TA, TX, TB) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWAXC() (TA, TW, TA, TX, TC) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWAYX() (TA, TW, TA, TY, TX) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWAYY() (TA, TW, TA, TY, TY) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWAYZ() (TA, TW, TA, TY, TZ) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWAYW() (TA, TW, TA, TY, TW) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWAYA() (TA, TW, TA, TY, TA) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWAYB() (TA, TW, TA, TY, TB) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWAYC() (TA, TW, TA, TY, TC) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWAZX() (TA, TW, TA, TZ, TX) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWAZY() (TA, TW, TA, TZ, TY) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWAZZ() (TA, TW, TA, TZ, TZ) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWAZW() (TA, TW, TA, TZ, TW) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWAZA() (TA, TW, TA, TZ, TA) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWAZB() (TA, TW, TA, TZ, TB) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWAZC() (TA, TW, TA, TZ, TC) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWAWX() (TA, TW, TA, TW, TX) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWAWY() (TA, TW, TA, TW, TY) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWAWZ() (TA, TW, TA, TW, TZ) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWAWW() (TA, TW, TA, TW, TW) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWAWA() (TA, TW, TA, TW, TA) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWAWB() (TA, TW, TA, TW, TB) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWAWC() (TA, TW, TA, TW, TC) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWAAX() (TA, TW, TA, TA, TX) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWAAY() (TA, TW, TA, TA, TY) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWAAZ() (TA, TW, TA, TA, TZ) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWAAW() (TA, TW, TA, TA, TW) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWAAA() (TA, TW, TA, TA, TA) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWAAB() (TA, TW, TA, TA, TB) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWAAC() (TA, TW, TA, TA, TC) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWABX() (TA, TW, TA, TB, TX) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWABY() (TA, TW, TA, TB, TY) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWABZ() (TA, TW, TA, TB, TZ) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWABW() (TA, TW, TA, TB, TW) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWABA() (TA, TW, TA, TB, TA) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWABB() (TA, TW, TA, TB, TB) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWABC() (TA, TW, TA, TB, TC) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWACX() (TA, TW, TA, TC, TX) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWACY() (TA, TW, TA, TC, TY) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWACZ() (TA, TW, TA, TC, TZ) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWACW() (TA, TW, TA, TC, TW) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWACA() (TA, TW, TA, TC, TA) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWACB() (TA, TW, TA, TC, TB) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWACC() (TA, TW, TA, TC, TC) { return _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWBXX() (TA, TW, TB, TX, TX) { return _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWBXY() (TA, TW, TB, TX, TY) { return _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWBXZ() (TA, TW, TB, TX, TZ) { return _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWBXW() (TA, TW, TB, TX, TW) { return _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWBXA() (TA, TW, TB, TX, TA) { return _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWBXB() (TA, TW, TB, TX, TB) { return _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWBXC() (TA, TW, TB, TX, TC) { return _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWBYX() (TA, TW, TB, TY, TX) { return _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWBYY() (TA, TW, TB, TY, TY) { return _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWBYZ() (TA, TW, TB, TY, TZ) { return _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWBYW() (TA, TW, TB, TY, TW) { return _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWBYA() (TA, TW, TB, TY, TA) { return _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWBYB() (TA, TW, TB, TY, TB) { return _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWBYC() (TA, TW, TB, TY, TC) { return _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWBZX() (TA, TW, TB, TZ, TX) { return _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWBZY() (TA, TW, TB, TZ, TY) { return _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWBZZ() (TA, TW, TB, TZ, TZ) { return _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWBZW() (TA, TW, TB, TZ, TW) { return _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWBZA() (TA, TW, TB, TZ, TA) { return _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWBZB() (TA, TW, TB, TZ, TB) { return _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWBZC() (TA, TW, TB, TZ, TC) { return _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWBWX() (TA, TW, TB, TW, TX) { return _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWBWY() (TA, TW, TB, TW, TY) { return _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWBWZ() (TA, TW, TB, TW, TZ) { return _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWBWW() (TA, TW, TB, TW, TW) { return _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWBWA() (TA, TW, TB, TW, TA) { return _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWBWB() (TA, TW, TB, TW, TB) { return _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWBWC() (TA, TW, TB, TW, TC) { return _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWBAX() (TA, TW, TB, TA, TX) { return _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWBAY() (TA, TW, TB, TA, TY) { return _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWBAZ() (TA, TW, TB, TA, TZ) { return _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWBAW() (TA, TW, TB, TA, TW) { return _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWBAA() (TA, TW, TB, TA, TA) { return _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWBAB() (TA, TW, TB, TA, TB) { return _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWBAC() (TA, TW, TB, TA, TC) { return _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWBBX() (TA, TW, TB, TB, TX) { return _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWBBY() (TA, TW, TB, TB, TY) { return _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWBBZ() (TA, TW, TB, TB, TZ) { return _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWBBW() (TA, TW, TB, TB, TW) { return _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWBBA() (TA, TW, TB, TB, TA) { return _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWBBB() (TA, TW, TB, TB, TB) { return _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWBBC() (TA, TW, TB, TB, TC) { return _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWBCX() (TA, TW, TB, TC, TX) { return _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWBCY() (TA, TW, TB, TC, TY) { return _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWBCZ() (TA, TW, TB, TC, TZ) { return _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWBCW() (TA, TW, TB, TC, TW) { return _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWBCA() (TA, TW, TB, TC, TA) { return _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWBCB() (TA, TW, TB, TC, TB) { return _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWBCC() (TA, TW, TB, TC, TC) { return _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWCXX() (TA, TW, TC, TX, TX) { return _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWCXY() (TA, TW, TC, TX, TY) { return _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWCXZ() (TA, TW, TC, TX, TZ) { return _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWCXW() (TA, TW, TC, TX, TW) { return _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWCXA() (TA, TW, TC, TX, TA) { return _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWCXB() (TA, TW, TC, TX, TB) { return _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWCXC() (TA, TW, TC, TX, TC) { return _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWCYX() (TA, TW, TC, TY, TX) { return _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWCYY() (TA, TW, TC, TY, TY) { return _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWCYZ() (TA, TW, TC, TY, TZ) { return _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWCYW() (TA, TW, TC, TY, TW) { return _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWCYA() (TA, TW, TC, TY, TA) { return _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWCYB() (TA, TW, TC, TY, TB) { return _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWCYC() (TA, TW, TC, TY, TC) { return _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWCZX() (TA, TW, TC, TZ, TX) { return _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWCZY() (TA, TW, TC, TZ, TY) { return _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWCZZ() (TA, TW, TC, TZ, TZ) { return _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWCZW() (TA, TW, TC, TZ, TW) { return _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWCZA() (TA, TW, TC, TZ, TA) { return _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWCZB() (TA, TW, TC, TZ, TB) { return _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWCZC() (TA, TW, TC, TZ, TC) { return _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWCWX() (TA, TW, TC, TW, TX) { return _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWCWY() (TA, TW, TC, TW, TY) { return _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWCWZ() (TA, TW, TC, TW, TZ) { return _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWCWW() (TA, TW, TC, TW, TW) { return _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWCWA() (TA, TW, TC, TW, TA) { return _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWCWB() (TA, TW, TC, TW, TB) { return _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWCWC() (TA, TW, TC, TW, TC) { return _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWCAX() (TA, TW, TC, TA, TX) { return _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWCAY() (TA, TW, TC, TA, TY) { return _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWCAZ() (TA, TW, TC, TA, TZ) { return _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWCAW() (TA, TW, TC, TA, TW) { return _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWCAA() (TA, TW, TC, TA, TA) { return _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWCAB() (TA, TW, TC, TA, TB) { return _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWCAC() (TA, TW, TC, TA, TC) { return _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWCBX() (TA, TW, TC, TB, TX) { return _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWCBY() (TA, TW, TC, TB, TY) { return _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWCBZ() (TA, TW, TC, TB, TZ) { return _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWCBW() (TA, TW, TC, TB, TW) { return _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWCBA() (TA, TW, TC, TB, TA) { return _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWCBB() (TA, TW, TC, TB, TB) { return _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWCBC() (TA, TW, TC, TB, TC) { return _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWCCX() (TA, TW, TC, TC, TX) { return _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWCCY() (TA, TW, TC, TC, TY) { return _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWCCZ() (TA, TW, TC, TC, TZ) { return _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWCCW() (TA, TW, TC, TC, TW) { return _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWCCA() (TA, TW, TC, TC, TA) { return _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWCCB() (TA, TW, TC, TC, TB) { return _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AWCCC() (TA, TW, TC, TC, TC) { return _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAXXX() (TA, TA, TX, TX, TX) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAXXY() (TA, TA, TX, TX, TY) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAXXZ() (TA, TA, TX, TX, TZ) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAXXW() (TA, TA, TX, TX, TW) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAXXA() (TA, TA, TX, TX, TA) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAXXB() (TA, TA, TX, TX, TB) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAXXC() (TA, TA, TX, TX, TC) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAXYX() (TA, TA, TX, TY, TX) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAXYY() (TA, TA, TX, TY, TY) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAXYZ() (TA, TA, TX, TY, TZ) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAXYW() (TA, TA, TX, TY, TW) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAXYA() (TA, TA, TX, TY, TA) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAXYB() (TA, TA, TX, TY, TB) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAXYC() (TA, TA, TX, TY, TC) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAXZX() (TA, TA, TX, TZ, TX) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAXZY() (TA, TA, TX, TZ, TY) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAXZZ() (TA, TA, TX, TZ, TZ) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAXZW() (TA, TA, TX, TZ, TW) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAXZA() (TA, TA, TX, TZ, TA) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAXZB() (TA, TA, TX, TZ, TB) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAXZC() (TA, TA, TX, TZ, TC) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAXWX() (TA, TA, TX, TW, TX) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAXWY() (TA, TA, TX, TW, TY) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAXWZ() (TA, TA, TX, TW, TZ) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAXWW() (TA, TA, TX, TW, TW) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAXWA() (TA, TA, TX, TW, TA) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAXWB() (TA, TA, TX, TW, TB) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAXWC() (TA, TA, TX, TW, TC) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAXAX() (TA, TA, TX, TA, TX) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAXAY() (TA, TA, TX, TA, TY) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAXAZ() (TA, TA, TX, TA, TZ) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAXAW() (TA, TA, TX, TA, TW) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAXAA() (TA, TA, TX, TA, TA) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAXAB() (TA, TA, TX, TA, TB) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAXAC() (TA, TA, TX, TA, TC) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAXBX() (TA, TA, TX, TB, TX) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAXBY() (TA, TA, TX, TB, TY) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAXBZ() (TA, TA, TX, TB, TZ) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAXBW() (TA, TA, TX, TB, TW) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAXBA() (TA, TA, TX, TB, TA) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAXBB() (TA, TA, TX, TB, TB) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAXBC() (TA, TA, TX, TB, TC) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAXCX() (TA, TA, TX, TC, TX) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAXCY() (TA, TA, TX, TC, TY) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAXCZ() (TA, TA, TX, TC, TZ) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAXCW() (TA, TA, TX, TC, TW) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAXCA() (TA, TA, TX, TC, TA) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAXCB() (TA, TA, TX, TC, TB) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAXCC() (TA, TA, TX, TC, TC) { return _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAYXX() (TA, TA, TY, TX, TX) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAYXY() (TA, TA, TY, TX, TY) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAYXZ() (TA, TA, TY, TX, TZ) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAYXW() (TA, TA, TY, TX, TW) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAYXA() (TA, TA, TY, TX, TA) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAYXB() (TA, TA, TY, TX, TB) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAYXC() (TA, TA, TY, TX, TC) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAYYX() (TA, TA, TY, TY, TX) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAYYY() (TA, TA, TY, TY, TY) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAYYZ() (TA, TA, TY, TY, TZ) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAYYW() (TA, TA, TY, TY, TW) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAYYA() (TA, TA, TY, TY, TA) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAYYB() (TA, TA, TY, TY, TB) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAYYC() (TA, TA, TY, TY, TC) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAYZX() (TA, TA, TY, TZ, TX) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAYZY() (TA, TA, TY, TZ, TY) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAYZZ() (TA, TA, TY, TZ, TZ) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAYZW() (TA, TA, TY, TZ, TW) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAYZA() (TA, TA, TY, TZ, TA) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAYZB() (TA, TA, TY, TZ, TB) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAYZC() (TA, TA, TY, TZ, TC) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAYWX() (TA, TA, TY, TW, TX) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAYWY() (TA, TA, TY, TW, TY) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAYWZ() (TA, TA, TY, TW, TZ) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAYWW() (TA, TA, TY, TW, TW) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAYWA() (TA, TA, TY, TW, TA) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAYWB() (TA, TA, TY, TW, TB) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAYWC() (TA, TA, TY, TW, TC) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAYAX() (TA, TA, TY, TA, TX) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAYAY() (TA, TA, TY, TA, TY) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAYAZ() (TA, TA, TY, TA, TZ) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAYAW() (TA, TA, TY, TA, TW) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAYAA() (TA, TA, TY, TA, TA) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAYAB() (TA, TA, TY, TA, TB) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAYAC() (TA, TA, TY, TA, TC) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAYBX() (TA, TA, TY, TB, TX) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAYBY() (TA, TA, TY, TB, TY) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAYBZ() (TA, TA, TY, TB, TZ) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAYBW() (TA, TA, TY, TB, TW) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAYBA() (TA, TA, TY, TB, TA) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAYBB() (TA, TA, TY, TB, TB) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAYBC() (TA, TA, TY, TB, TC) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAYCX() (TA, TA, TY, TC, TX) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAYCY() (TA, TA, TY, TC, TY) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAYCZ() (TA, TA, TY, TC, TZ) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAYCW() (TA, TA, TY, TC, TW) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAYCA() (TA, TA, TY, TC, TA) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAYCB() (TA, TA, TY, TC, TB) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAYCC() (TA, TA, TY, TC, TC) { return _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAZXX() (TA, TA, TZ, TX, TX) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAZXY() (TA, TA, TZ, TX, TY) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAZXZ() (TA, TA, TZ, TX, TZ) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAZXW() (TA, TA, TZ, TX, TW) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAZXA() (TA, TA, TZ, TX, TA) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAZXB() (TA, TA, TZ, TX, TB) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAZXC() (TA, TA, TZ, TX, TC) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAZYX() (TA, TA, TZ, TY, TX) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAZYY() (TA, TA, TZ, TY, TY) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAZYZ() (TA, TA, TZ, TY, TZ) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAZYW() (TA, TA, TZ, TY, TW) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAZYA() (TA, TA, TZ, TY, TA) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAZYB() (TA, TA, TZ, TY, TB) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAZYC() (TA, TA, TZ, TY, TC) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAZZX() (TA, TA, TZ, TZ, TX) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAZZY() (TA, TA, TZ, TZ, TY) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAZZZ() (TA, TA, TZ, TZ, TZ) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAZZW() (TA, TA, TZ, TZ, TW) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAZZA() (TA, TA, TZ, TZ, TA) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAZZB() (TA, TA, TZ, TZ, TB) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAZZC() (TA, TA, TZ, TZ, TC) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAZWX() (TA, TA, TZ, TW, TX) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAZWY() (TA, TA, TZ, TW, TY) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAZWZ() (TA, TA, TZ, TW, TZ) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAZWW() (TA, TA, TZ, TW, TW) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAZWA() (TA, TA, TZ, TW, TA) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAZWB() (TA, TA, TZ, TW, TB) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAZWC() (TA, TA, TZ, TW, TC) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAZAX() (TA, TA, TZ, TA, TX) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAZAY() (TA, TA, TZ, TA, TY) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAZAZ() (TA, TA, TZ, TA, TZ) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAZAW() (TA, TA, TZ, TA, TW) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAZAA() (TA, TA, TZ, TA, TA) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAZAB() (TA, TA, TZ, TA, TB) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAZAC() (TA, TA, TZ, TA, TC) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAZBX() (TA, TA, TZ, TB, TX) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAZBY() (TA, TA, TZ, TB, TY) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAZBZ() (TA, TA, TZ, TB, TZ) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAZBW() (TA, TA, TZ, TB, TW) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAZBA() (TA, TA, TZ, TB, TA) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAZBB() (TA, TA, TZ, TB, TB) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAZBC() (TA, TA, TZ, TB, TC) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAZCX() (TA, TA, TZ, TC, TX) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAZCY() (TA, TA, TZ, TC, TY) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAZCZ() (TA, TA, TZ, TC, TZ) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAZCW() (TA, TA, TZ, TC, TW) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAZCA() (TA, TA, TZ, TC, TA) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAZCB() (TA, TA, TZ, TC, TB) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAZCC() (TA, TA, TZ, TC, TC) { return _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAWXX() (TA, TA, TW, TX, TX) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAWXY() (TA, TA, TW, TX, TY) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAWXZ() (TA, TA, TW, TX, TZ) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAWXW() (TA, TA, TW, TX, TW) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAWXA() (TA, TA, TW, TX, TA) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAWXB() (TA, TA, TW, TX, TB) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAWXC() (TA, TA, TW, TX, TC) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAWYX() (TA, TA, TW, TY, TX) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAWYY() (TA, TA, TW, TY, TY) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAWYZ() (TA, TA, TW, TY, TZ) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAWYW() (TA, TA, TW, TY, TW) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAWYA() (TA, TA, TW, TY, TA) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAWYB() (TA, TA, TW, TY, TB) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAWYC() (TA, TA, TW, TY, TC) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAWZX() (TA, TA, TW, TZ, TX) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAWZY() (TA, TA, TW, TZ, TY) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAWZZ() (TA, TA, TW, TZ, TZ) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAWZW() (TA, TA, TW, TZ, TW) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAWZA() (TA, TA, TW, TZ, TA) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAWZB() (TA, TA, TW, TZ, TB) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAWZC() (TA, TA, TW, TZ, TC) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAWWX() (TA, TA, TW, TW, TX) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAWWY() (TA, TA, TW, TW, TY) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAWWZ() (TA, TA, TW, TW, TZ) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAWWW() (TA, TA, TW, TW, TW) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAWWA() (TA, TA, TW, TW, TA) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAWWB() (TA, TA, TW, TW, TB) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAWWC() (TA, TA, TW, TW, TC) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAWAX() (TA, TA, TW, TA, TX) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAWAY() (TA, TA, TW, TA, TY) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAWAZ() (TA, TA, TW, TA, TZ) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAWAW() (TA, TA, TW, TA, TW) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAWAA() (TA, TA, TW, TA, TA) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAWAB() (TA, TA, TW, TA, TB) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAWAC() (TA, TA, TW, TA, TC) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAWBX() (TA, TA, TW, TB, TX) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAWBY() (TA, TA, TW, TB, TY) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAWBZ() (TA, TA, TW, TB, TZ) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAWBW() (TA, TA, TW, TB, TW) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAWBA() (TA, TA, TW, TB, TA) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAWBB() (TA, TA, TW, TB, TB) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAWBC() (TA, TA, TW, TB, TC) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAWCX() (TA, TA, TW, TC, TX) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAWCY() (TA, TA, TW, TC, TY) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAWCZ() (TA, TA, TW, TC, TZ) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAWCW() (TA, TA, TW, TC, TW) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAWCA() (TA, TA, TW, TC, TA) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAWCB() (TA, TA, TW, TC, TB) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAWCC() (TA, TA, TW, TC, TC) { return _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAAXX() (TA, TA, TA, TX, TX) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAAXY() (TA, TA, TA, TX, TY) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAAXZ() (TA, TA, TA, TX, TZ) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAAXW() (TA, TA, TA, TX, TW) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAAXA() (TA, TA, TA, TX, TA) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAAXB() (TA, TA, TA, TX, TB) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAAXC() (TA, TA, TA, TX, TC) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAAYX() (TA, TA, TA, TY, TX) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAAYY() (TA, TA, TA, TY, TY) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAAYZ() (TA, TA, TA, TY, TZ) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAAYW() (TA, TA, TA, TY, TW) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAAYA() (TA, TA, TA, TY, TA) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAAYB() (TA, TA, TA, TY, TB) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAAYC() (TA, TA, TA, TY, TC) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAAZX() (TA, TA, TA, TZ, TX) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAAZY() (TA, TA, TA, TZ, TY) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAAZZ() (TA, TA, TA, TZ, TZ) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAAZW() (TA, TA, TA, TZ, TW) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAAZA() (TA, TA, TA, TZ, TA) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAAZB() (TA, TA, TA, TZ, TB) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAAZC() (TA, TA, TA, TZ, TC) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAAWX() (TA, TA, TA, TW, TX) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAAWY() (TA, TA, TA, TW, TY) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAAWZ() (TA, TA, TA, TW, TZ) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAAWW() (TA, TA, TA, TW, TW) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAAWA() (TA, TA, TA, TW, TA) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAAWB() (TA, TA, TA, TW, TB) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAAWC() (TA, TA, TA, TW, TC) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAAAX() (TA, TA, TA, TA, TX) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAAAY() (TA, TA, TA, TA, TY) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAAAZ() (TA, TA, TA, TA, TZ) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAAAW() (TA, TA, TA, TA, TW) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAAAA() (TA, TA, TA, TA, TA) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAAAB() (TA, TA, TA, TA, TB) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAAAC() (TA, TA, TA, TA, TC) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAABX() (TA, TA, TA, TB, TX) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAABY() (TA, TA, TA, TB, TY) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAABZ() (TA, TA, TA, TB, TZ) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAABW() (TA, TA, TA, TB, TW) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAABA() (TA, TA, TA, TB, TA) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAABB() (TA, TA, TA, TB, TB) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAABC() (TA, TA, TA, TB, TC) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAACX() (TA, TA, TA, TC, TX) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAACY() (TA, TA, TA, TC, TY) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAACZ() (TA, TA, TA, TC, TZ) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAACW() (TA, TA, TA, TC, TW) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAACA() (TA, TA, TA, TC, TA) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAACB() (TA, TA, TA, TC, TB) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AAACC() (TA, TA, TA, TC, TC) { return _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AABXX() (TA, TA, TB, TX, TX) { return _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AABXY() (TA, TA, TB, TX, TY) { return _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AABXZ() (TA, TA, TB, TX, TZ) { return _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AABXW() (TA, TA, TB, TX, TW) { return _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AABXA() (TA, TA, TB, TX, TA) { return _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AABXB() (TA, TA, TB, TX, TB) { return _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AABXC() (TA, TA, TB, TX, TC) { return _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AABYX() (TA, TA, TB, TY, TX) { return _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AABYY() (TA, TA, TB, TY, TY) { return _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AABYZ() (TA, TA, TB, TY, TZ) { return _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AABYW() (TA, TA, TB, TY, TW) { return _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AABYA() (TA, TA, TB, TY, TA) { return _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AABYB() (TA, TA, TB, TY, TB) { return _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AABYC() (TA, TA, TB, TY, TC) { return _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AABZX() (TA, TA, TB, TZ, TX) { return _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AABZY() (TA, TA, TB, TZ, TY) { return _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AABZZ() (TA, TA, TB, TZ, TZ) { return _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AABZW() (TA, TA, TB, TZ, TW) { return _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AABZA() (TA, TA, TB, TZ, TA) { return _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AABZB() (TA, TA, TB, TZ, TB) { return _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AABZC() (TA, TA, TB, TZ, TC) { return _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AABWX() (TA, TA, TB, TW, TX) { return _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AABWY() (TA, TA, TB, TW, TY) { return _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AABWZ() (TA, TA, TB, TW, TZ) { return _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AABWW() (TA, TA, TB, TW, TW) { return _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AABWA() (TA, TA, TB, TW, TA) { return _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AABWB() (TA, TA, TB, TW, TB) { return _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AABWC() (TA, TA, TB, TW, TC) { return _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AABAX() (TA, TA, TB, TA, TX) { return _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AABAY() (TA, TA, TB, TA, TY) { return _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AABAZ() (TA, TA, TB, TA, TZ) { return _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AABAW() (TA, TA, TB, TA, TW) { return _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AABAA() (TA, TA, TB, TA, TA) { return _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AABAB() (TA, TA, TB, TA, TB) { return _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AABAC() (TA, TA, TB, TA, TC) { return _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AABBX() (TA, TA, TB, TB, TX) { return _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AABBY() (TA, TA, TB, TB, TY) { return _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AABBZ() (TA, TA, TB, TB, TZ) { return _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AABBW() (TA, TA, TB, TB, TW) { return _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AABBA() (TA, TA, TB, TB, TA) { return _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AABBB() (TA, TA, TB, TB, TB) { return _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AABBC() (TA, TA, TB, TB, TC) { return _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AABCX() (TA, TA, TB, TC, TX) { return _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AABCY() (TA, TA, TB, TC, TY) { return _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AABCZ() (TA, TA, TB, TC, TZ) { return _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AABCW() (TA, TA, TB, TC, TW) { return _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AABCA() (TA, TA, TB, TC, TA) { return _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AABCB() (TA, TA, TB, TC, TB) { return _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AABCC() (TA, TA, TB, TC, TC) { return _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AACXX() (TA, TA, TC, TX, TX) { return _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AACXY() (TA, TA, TC, TX, TY) { return _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AACXZ() (TA, TA, TC, TX, TZ) { return _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AACXW() (TA, TA, TC, TX, TW) { return _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AACXA() (TA, TA, TC, TX, TA) { return _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AACXB() (TA, TA, TC, TX, TB) { return _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AACXC() (TA, TA, TC, TX, TC) { return _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AACYX() (TA, TA, TC, TY, TX) { return _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AACYY() (TA, TA, TC, TY, TY) { return _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AACYZ() (TA, TA, TC, TY, TZ) { return _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AACYW() (TA, TA, TC, TY, TW) { return _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AACYA() (TA, TA, TC, TY, TA) { return _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AACYB() (TA, TA, TC, TY, TB) { return _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AACYC() (TA, TA, TC, TY, TC) { return _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AACZX() (TA, TA, TC, TZ, TX) { return _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AACZY() (TA, TA, TC, TZ, TY) { return _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AACZZ() (TA, TA, TC, TZ, TZ) { return _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AACZW() (TA, TA, TC, TZ, TW) { return _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AACZA() (TA, TA, TC, TZ, TA) { return _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AACZB() (TA, TA, TC, TZ, TB) { return _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AACZC() (TA, TA, TC, TZ, TC) { return _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AACWX() (TA, TA, TC, TW, TX) { return _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AACWY() (TA, TA, TC, TW, TY) { return _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AACWZ() (TA, TA, TC, TW, TZ) { return _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AACWW() (TA, TA, TC, TW, TW) { return _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AACWA() (TA, TA, TC, TW, TA) { return _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AACWB() (TA, TA, TC, TW, TB) { return _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AACWC() (TA, TA, TC, TW, TC) { return _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AACAX() (TA, TA, TC, TA, TX) { return _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AACAY() (TA, TA, TC, TA, TY) { return _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AACAZ() (TA, TA, TC, TA, TZ) { return _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AACAW() (TA, TA, TC, TA, TW) { return _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AACAA() (TA, TA, TC, TA, TA) { return _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AACAB() (TA, TA, TC, TA, TB) { return _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AACAC() (TA, TA, TC, TA, TC) { return _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AACBX() (TA, TA, TC, TB, TX) { return _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AACBY() (TA, TA, TC, TB, TY) { return _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AACBZ() (TA, TA, TC, TB, TZ) { return _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AACBW() (TA, TA, TC, TB, TW) { return _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AACBA() (TA, TA, TC, TB, TA) { return _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AACBB() (TA, TA, TC, TB, TB) { return _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AACBC() (TA, TA, TC, TB, TC) { return _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AACCX() (TA, TA, TC, TC, TX) { return _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AACCY() (TA, TA, TC, TC, TY) { return _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AACCZ() (TA, TA, TC, TC, TZ) { return _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AACCW() (TA, TA, TC, TC, TW) { return _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AACCA() (TA, TA, TC, TC, TA) { return _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AACCB() (TA, TA, TC, TC, TB) { return _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) AACCC() (TA, TA, TC, TC, TC) { return _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABXXX() (TA, TB, TX, TX, TX) { return _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABXXY() (TA, TB, TX, TX, TY) { return _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABXXZ() (TA, TB, TX, TX, TZ) { return _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABXXW() (TA, TB, TX, TX, TW) { return _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABXXA() (TA, TB, TX, TX, TA) { return _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABXXB() (TA, TB, TX, TX, TB) { return _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABXXC() (TA, TB, TX, TX, TC) { return _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABXYX() (TA, TB, TX, TY, TX) { return _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABXYY() (TA, TB, TX, TY, TY) { return _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABXYZ() (TA, TB, TX, TY, TZ) { return _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABXYW() (TA, TB, TX, TY, TW) { return _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABXYA() (TA, TB, TX, TY, TA) { return _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABXYB() (TA, TB, TX, TY, TB) { return _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABXYC() (TA, TB, TX, TY, TC) { return _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABXZX() (TA, TB, TX, TZ, TX) { return _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABXZY() (TA, TB, TX, TZ, TY) { return _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABXZZ() (TA, TB, TX, TZ, TZ) { return _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABXZW() (TA, TB, TX, TZ, TW) { return _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABXZA() (TA, TB, TX, TZ, TA) { return _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABXZB() (TA, TB, TX, TZ, TB) { return _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABXZC() (TA, TB, TX, TZ, TC) { return _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABXWX() (TA, TB, TX, TW, TX) { return _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABXWY() (TA, TB, TX, TW, TY) { return _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABXWZ() (TA, TB, TX, TW, TZ) { return _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABXWW() (TA, TB, TX, TW, TW) { return _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABXWA() (TA, TB, TX, TW, TA) { return _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABXWB() (TA, TB, TX, TW, TB) { return _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABXWC() (TA, TB, TX, TW, TC) { return _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABXAX() (TA, TB, TX, TA, TX) { return _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABXAY() (TA, TB, TX, TA, TY) { return _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABXAZ() (TA, TB, TX, TA, TZ) { return _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABXAW() (TA, TB, TX, TA, TW) { return _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABXAA() (TA, TB, TX, TA, TA) { return _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABXAB() (TA, TB, TX, TA, TB) { return _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABXAC() (TA, TB, TX, TA, TC) { return _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABXBX() (TA, TB, TX, TB, TX) { return _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABXBY() (TA, TB, TX, TB, TY) { return _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABXBZ() (TA, TB, TX, TB, TZ) { return _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABXBW() (TA, TB, TX, TB, TW) { return _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABXBA() (TA, TB, TX, TB, TA) { return _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABXBB() (TA, TB, TX, TB, TB) { return _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABXBC() (TA, TB, TX, TB, TC) { return _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABXCX() (TA, TB, TX, TC, TX) { return _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABXCY() (TA, TB, TX, TC, TY) { return _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABXCZ() (TA, TB, TX, TC, TZ) { return _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABXCW() (TA, TB, TX, TC, TW) { return _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABXCA() (TA, TB, TX, TC, TA) { return _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABXCB() (TA, TB, TX, TC, TB) { return _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABXCC() (TA, TB, TX, TC, TC) { return _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABYXX() (TA, TB, TY, TX, TX) { return _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABYXY() (TA, TB, TY, TX, TY) { return _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABYXZ() (TA, TB, TY, TX, TZ) { return _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABYXW() (TA, TB, TY, TX, TW) { return _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABYXA() (TA, TB, TY, TX, TA) { return _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABYXB() (TA, TB, TY, TX, TB) { return _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABYXC() (TA, TB, TY, TX, TC) { return _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABYYX() (TA, TB, TY, TY, TX) { return _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABYYY() (TA, TB, TY, TY, TY) { return _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABYYZ() (TA, TB, TY, TY, TZ) { return _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABYYW() (TA, TB, TY, TY, TW) { return _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABYYA() (TA, TB, TY, TY, TA) { return _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABYYB() (TA, TB, TY, TY, TB) { return _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABYYC() (TA, TB, TY, TY, TC) { return _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABYZX() (TA, TB, TY, TZ, TX) { return _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABYZY() (TA, TB, TY, TZ, TY) { return _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABYZZ() (TA, TB, TY, TZ, TZ) { return _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABYZW() (TA, TB, TY, TZ, TW) { return _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABYZA() (TA, TB, TY, TZ, TA) { return _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABYZB() (TA, TB, TY, TZ, TB) { return _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABYZC() (TA, TB, TY, TZ, TC) { return _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABYWX() (TA, TB, TY, TW, TX) { return _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABYWY() (TA, TB, TY, TW, TY) { return _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABYWZ() (TA, TB, TY, TW, TZ) { return _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABYWW() (TA, TB, TY, TW, TW) { return _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABYWA() (TA, TB, TY, TW, TA) { return _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABYWB() (TA, TB, TY, TW, TB) { return _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABYWC() (TA, TB, TY, TW, TC) { return _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABYAX() (TA, TB, TY, TA, TX) { return _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABYAY() (TA, TB, TY, TA, TY) { return _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABYAZ() (TA, TB, TY, TA, TZ) { return _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABYAW() (TA, TB, TY, TA, TW) { return _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABYAA() (TA, TB, TY, TA, TA) { return _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABYAB() (TA, TB, TY, TA, TB) { return _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABYAC() (TA, TB, TY, TA, TC) { return _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABYBX() (TA, TB, TY, TB, TX) { return _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABYBY() (TA, TB, TY, TB, TY) { return _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABYBZ() (TA, TB, TY, TB, TZ) { return _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABYBW() (TA, TB, TY, TB, TW) { return _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABYBA() (TA, TB, TY, TB, TA) { return _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABYBB() (TA, TB, TY, TB, TB) { return _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABYBC() (TA, TB, TY, TB, TC) { return _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABYCX() (TA, TB, TY, TC, TX) { return _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABYCY() (TA, TB, TY, TC, TY) { return _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABYCZ() (TA, TB, TY, TC, TZ) { return _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABYCW() (TA, TB, TY, TC, TW) { return _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABYCA() (TA, TB, TY, TC, TA) { return _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABYCB() (TA, TB, TY, TC, TB) { return _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABYCC() (TA, TB, TY, TC, TC) { return _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABZXX() (TA, TB, TZ, TX, TX) { return _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABZXY() (TA, TB, TZ, TX, TY) { return _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABZXZ() (TA, TB, TZ, TX, TZ) { return _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABZXW() (TA, TB, TZ, TX, TW) { return _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABZXA() (TA, TB, TZ, TX, TA) { return _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABZXB() (TA, TB, TZ, TX, TB) { return _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABZXC() (TA, TB, TZ, TX, TC) { return _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABZYX() (TA, TB, TZ, TY, TX) { return _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABZYY() (TA, TB, TZ, TY, TY) { return _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABZYZ() (TA, TB, TZ, TY, TZ) { return _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABZYW() (TA, TB, TZ, TY, TW) { return _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABZYA() (TA, TB, TZ, TY, TA) { return _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABZYB() (TA, TB, TZ, TY, TB) { return _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABZYC() (TA, TB, TZ, TY, TC) { return _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABZZX() (TA, TB, TZ, TZ, TX) { return _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABZZY() (TA, TB, TZ, TZ, TY) { return _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABZZZ() (TA, TB, TZ, TZ, TZ) { return _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABZZW() (TA, TB, TZ, TZ, TW) { return _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABZZA() (TA, TB, TZ, TZ, TA) { return _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABZZB() (TA, TB, TZ, TZ, TB) { return _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABZZC() (TA, TB, TZ, TZ, TC) { return _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABZWX() (TA, TB, TZ, TW, TX) { return _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABZWY() (TA, TB, TZ, TW, TY) { return _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABZWZ() (TA, TB, TZ, TW, TZ) { return _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABZWW() (TA, TB, TZ, TW, TW) { return _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABZWA() (TA, TB, TZ, TW, TA) { return _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABZWB() (TA, TB, TZ, TW, TB) { return _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABZWC() (TA, TB, TZ, TW, TC) { return _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABZAX() (TA, TB, TZ, TA, TX) { return _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABZAY() (TA, TB, TZ, TA, TY) { return _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABZAZ() (TA, TB, TZ, TA, TZ) { return _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABZAW() (TA, TB, TZ, TA, TW) { return _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABZAA() (TA, TB, TZ, TA, TA) { return _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABZAB() (TA, TB, TZ, TA, TB) { return _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABZAC() (TA, TB, TZ, TA, TC) { return _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABZBX() (TA, TB, TZ, TB, TX) { return _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABZBY() (TA, TB, TZ, TB, TY) { return _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABZBZ() (TA, TB, TZ, TB, TZ) { return _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABZBW() (TA, TB, TZ, TB, TW) { return _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABZBA() (TA, TB, TZ, TB, TA) { return _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABZBB() (TA, TB, TZ, TB, TB) { return _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABZBC() (TA, TB, TZ, TB, TC) { return _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABZCX() (TA, TB, TZ, TC, TX) { return _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABZCY() (TA, TB, TZ, TC, TY) { return _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABZCZ() (TA, TB, TZ, TC, TZ) { return _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABZCW() (TA, TB, TZ, TC, TW) { return _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABZCA() (TA, TB, TZ, TC, TA) { return _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABZCB() (TA, TB, TZ, TC, TB) { return _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABZCC() (TA, TB, TZ, TC, TC) { return _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABWXX() (TA, TB, TW, TX, TX) { return _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABWXY() (TA, TB, TW, TX, TY) { return _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABWXZ() (TA, TB, TW, TX, TZ) { return _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABWXW() (TA, TB, TW, TX, TW) { return _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABWXA() (TA, TB, TW, TX, TA) { return _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABWXB() (TA, TB, TW, TX, TB) { return _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABWXC() (TA, TB, TW, TX, TC) { return _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABWYX() (TA, TB, TW, TY, TX) { return _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABWYY() (TA, TB, TW, TY, TY) { return _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABWYZ() (TA, TB, TW, TY, TZ) { return _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABWYW() (TA, TB, TW, TY, TW) { return _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABWYA() (TA, TB, TW, TY, TA) { return _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABWYB() (TA, TB, TW, TY, TB) { return _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABWYC() (TA, TB, TW, TY, TC) { return _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABWZX() (TA, TB, TW, TZ, TX) { return _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABWZY() (TA, TB, TW, TZ, TY) { return _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABWZZ() (TA, TB, TW, TZ, TZ) { return _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABWZW() (TA, TB, TW, TZ, TW) { return _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABWZA() (TA, TB, TW, TZ, TA) { return _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABWZB() (TA, TB, TW, TZ, TB) { return _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABWZC() (TA, TB, TW, TZ, TC) { return _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABWWX() (TA, TB, TW, TW, TX) { return _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABWWY() (TA, TB, TW, TW, TY) { return _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABWWZ() (TA, TB, TW, TW, TZ) { return _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABWWW() (TA, TB, TW, TW, TW) { return _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABWWA() (TA, TB, TW, TW, TA) { return _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABWWB() (TA, TB, TW, TW, TB) { return _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABWWC() (TA, TB, TW, TW, TC) { return _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABWAX() (TA, TB, TW, TA, TX) { return _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABWAY() (TA, TB, TW, TA, TY) { return _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABWAZ() (TA, TB, TW, TA, TZ) { return _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABWAW() (TA, TB, TW, TA, TW) { return _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABWAA() (TA, TB, TW, TA, TA) { return _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABWAB() (TA, TB, TW, TA, TB) { return _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABWAC() (TA, TB, TW, TA, TC) { return _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABWBX() (TA, TB, TW, TB, TX) { return _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABWBY() (TA, TB, TW, TB, TY) { return _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABWBZ() (TA, TB, TW, TB, TZ) { return _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABWBW() (TA, TB, TW, TB, TW) { return _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABWBA() (TA, TB, TW, TB, TA) { return _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABWBB() (TA, TB, TW, TB, TB) { return _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABWBC() (TA, TB, TW, TB, TC) { return _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABWCX() (TA, TB, TW, TC, TX) { return _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABWCY() (TA, TB, TW, TC, TY) { return _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABWCZ() (TA, TB, TW, TC, TZ) { return _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABWCW() (TA, TB, TW, TC, TW) { return _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABWCA() (TA, TB, TW, TC, TA) { return _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABWCB() (TA, TB, TW, TC, TB) { return _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABWCC() (TA, TB, TW, TC, TC) { return _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABAXX() (TA, TB, TA, TX, TX) { return _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABAXY() (TA, TB, TA, TX, TY) { return _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABAXZ() (TA, TB, TA, TX, TZ) { return _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABAXW() (TA, TB, TA, TX, TW) { return _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABAXA() (TA, TB, TA, TX, TA) { return _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABAXB() (TA, TB, TA, TX, TB) { return _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABAXC() (TA, TB, TA, TX, TC) { return _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABAYX() (TA, TB, TA, TY, TX) { return _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABAYY() (TA, TB, TA, TY, TY) { return _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABAYZ() (TA, TB, TA, TY, TZ) { return _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABAYW() (TA, TB, TA, TY, TW) { return _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABAYA() (TA, TB, TA, TY, TA) { return _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABAYB() (TA, TB, TA, TY, TB) { return _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABAYC() (TA, TB, TA, TY, TC) { return _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABAZX() (TA, TB, TA, TZ, TX) { return _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABAZY() (TA, TB, TA, TZ, TY) { return _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABAZZ() (TA, TB, TA, TZ, TZ) { return _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABAZW() (TA, TB, TA, TZ, TW) { return _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABAZA() (TA, TB, TA, TZ, TA) { return _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABAZB() (TA, TB, TA, TZ, TB) { return _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABAZC() (TA, TB, TA, TZ, TC) { return _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABAWX() (TA, TB, TA, TW, TX) { return _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABAWY() (TA, TB, TA, TW, TY) { return _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABAWZ() (TA, TB, TA, TW, TZ) { return _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABAWW() (TA, TB, TA, TW, TW) { return _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABAWA() (TA, TB, TA, TW, TA) { return _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABAWB() (TA, TB, TA, TW, TB) { return _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABAWC() (TA, TB, TA, TW, TC) { return _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABAAX() (TA, TB, TA, TA, TX) { return _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABAAY() (TA, TB, TA, TA, TY) { return _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABAAZ() (TA, TB, TA, TA, TZ) { return _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABAAW() (TA, TB, TA, TA, TW) { return _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABAAA() (TA, TB, TA, TA, TA) { return _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABAAB() (TA, TB, TA, TA, TB) { return _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABAAC() (TA, TB, TA, TA, TC) { return _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABABX() (TA, TB, TA, TB, TX) { return _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABABY() (TA, TB, TA, TB, TY) { return _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABABZ() (TA, TB, TA, TB, TZ) { return _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABABW() (TA, TB, TA, TB, TW) { return _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABABA() (TA, TB, TA, TB, TA) { return _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABABB() (TA, TB, TA, TB, TB) { return _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABABC() (TA, TB, TA, TB, TC) { return _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABACX() (TA, TB, TA, TC, TX) { return _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABACY() (TA, TB, TA, TC, TY) { return _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABACZ() (TA, TB, TA, TC, TZ) { return _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABACW() (TA, TB, TA, TC, TW) { return _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABACA() (TA, TB, TA, TC, TA) { return _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABACB() (TA, TB, TA, TC, TB) { return _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABACC() (TA, TB, TA, TC, TC) { return _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABBXX() (TA, TB, TB, TX, TX) { return _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABBXY() (TA, TB, TB, TX, TY) { return _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABBXZ() (TA, TB, TB, TX, TZ) { return _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABBXW() (TA, TB, TB, TX, TW) { return _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABBXA() (TA, TB, TB, TX, TA) { return _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABBXB() (TA, TB, TB, TX, TB) { return _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABBXC() (TA, TB, TB, TX, TC) { return _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABBYX() (TA, TB, TB, TY, TX) { return _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABBYY() (TA, TB, TB, TY, TY) { return _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABBYZ() (TA, TB, TB, TY, TZ) { return _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABBYW() (TA, TB, TB, TY, TW) { return _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABBYA() (TA, TB, TB, TY, TA) { return _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABBYB() (TA, TB, TB, TY, TB) { return _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABBYC() (TA, TB, TB, TY, TC) { return _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABBZX() (TA, TB, TB, TZ, TX) { return _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABBZY() (TA, TB, TB, TZ, TY) { return _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABBZZ() (TA, TB, TB, TZ, TZ) { return _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABBZW() (TA, TB, TB, TZ, TW) { return _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABBZA() (TA, TB, TB, TZ, TA) { return _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABBZB() (TA, TB, TB, TZ, TB) { return _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABBZC() (TA, TB, TB, TZ, TC) { return _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABBWX() (TA, TB, TB, TW, TX) { return _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABBWY() (TA, TB, TB, TW, TY) { return _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABBWZ() (TA, TB, TB, TW, TZ) { return _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABBWW() (TA, TB, TB, TW, TW) { return _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABBWA() (TA, TB, TB, TW, TA) { return _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABBWB() (TA, TB, TB, TW, TB) { return _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABBWC() (TA, TB, TB, TW, TC) { return _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABBAX() (TA, TB, TB, TA, TX) { return _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABBAY() (TA, TB, TB, TA, TY) { return _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABBAZ() (TA, TB, TB, TA, TZ) { return _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABBAW() (TA, TB, TB, TA, TW) { return _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABBAA() (TA, TB, TB, TA, TA) { return _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABBAB() (TA, TB, TB, TA, TB) { return _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABBAC() (TA, TB, TB, TA, TC) { return _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABBBX() (TA, TB, TB, TB, TX) { return _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABBBY() (TA, TB, TB, TB, TY) { return _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABBBZ() (TA, TB, TB, TB, TZ) { return _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABBBW() (TA, TB, TB, TB, TW) { return _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABBBA() (TA, TB, TB, TB, TA) { return _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABBBB() (TA, TB, TB, TB, TB) { return _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABBBC() (TA, TB, TB, TB, TC) { return _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABBCX() (TA, TB, TB, TC, TX) { return _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABBCY() (TA, TB, TB, TC, TY) { return _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABBCZ() (TA, TB, TB, TC, TZ) { return _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABBCW() (TA, TB, TB, TC, TW) { return _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABBCA() (TA, TB, TB, TC, TA) { return _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABBCB() (TA, TB, TB, TC, TB) { return _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABBCC() (TA, TB, TB, TC, TC) { return _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABCXX() (TA, TB, TC, TX, TX) { return _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABCXY() (TA, TB, TC, TX, TY) { return _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABCXZ() (TA, TB, TC, TX, TZ) { return _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABCXW() (TA, TB, TC, TX, TW) { return _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABCXA() (TA, TB, TC, TX, TA) { return _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABCXB() (TA, TB, TC, TX, TB) { return _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABCXC() (TA, TB, TC, TX, TC) { return _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABCYX() (TA, TB, TC, TY, TX) { return _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABCYY() (TA, TB, TC, TY, TY) { return _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABCYZ() (TA, TB, TC, TY, TZ) { return _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABCYW() (TA, TB, TC, TY, TW) { return _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABCYA() (TA, TB, TC, TY, TA) { return _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABCYB() (TA, TB, TC, TY, TB) { return _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABCYC() (TA, TB, TC, TY, TC) { return _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABCZX() (TA, TB, TC, TZ, TX) { return _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABCZY() (TA, TB, TC, TZ, TY) { return _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABCZZ() (TA, TB, TC, TZ, TZ) { return _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABCZW() (TA, TB, TC, TZ, TW) { return _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABCZA() (TA, TB, TC, TZ, TA) { return _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABCZB() (TA, TB, TC, TZ, TB) { return _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABCZC() (TA, TB, TC, TZ, TC) { return _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABCWX() (TA, TB, TC, TW, TX) { return _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABCWY() (TA, TB, TC, TW, TY) { return _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABCWZ() (TA, TB, TC, TW, TZ) { return _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABCWW() (TA, TB, TC, TW, TW) { return _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABCWA() (TA, TB, TC, TW, TA) { return _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABCWB() (TA, TB, TC, TW, TB) { return _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABCWC() (TA, TB, TC, TW, TC) { return _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABCAX() (TA, TB, TC, TA, TX) { return _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABCAY() (TA, TB, TC, TA, TY) { return _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABCAZ() (TA, TB, TC, TA, TZ) { return _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABCAW() (TA, TB, TC, TA, TW) { return _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABCAA() (TA, TB, TC, TA, TA) { return _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABCAB() (TA, TB, TC, TA, TB) { return _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABCAC() (TA, TB, TC, TA, TC) { return _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABCBX() (TA, TB, TC, TB, TX) { return _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABCBY() (TA, TB, TC, TB, TY) { return _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABCBZ() (TA, TB, TC, TB, TZ) { return _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABCBW() (TA, TB, TC, TB, TW) { return _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABCBA() (TA, TB, TC, TB, TA) { return _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABCBB() (TA, TB, TC, TB, TB) { return _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABCBC() (TA, TB, TC, TB, TC) { return _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABCCX() (TA, TB, TC, TC, TX) { return _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABCCY() (TA, TB, TC, TC, TY) { return _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABCCZ() (TA, TB, TC, TC, TZ) { return _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABCCW() (TA, TB, TC, TC, TW) { return _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABCCA() (TA, TB, TC, TC, TA) { return _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABCCB() (TA, TB, TC, TC, TB) { return _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ABCCC() (TA, TB, TC, TC, TC) { return _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACXXX() (TA, TC, TX, TX, TX) { return _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACXXY() (TA, TC, TX, TX, TY) { return _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACXXZ() (TA, TC, TX, TX, TZ) { return _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACXXW() (TA, TC, TX, TX, TW) { return _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACXXA() (TA, TC, TX, TX, TA) { return _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACXXB() (TA, TC, TX, TX, TB) { return _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACXXC() (TA, TC, TX, TX, TC) { return _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACXYX() (TA, TC, TX, TY, TX) { return _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACXYY() (TA, TC, TX, TY, TY) { return _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACXYZ() (TA, TC, TX, TY, TZ) { return _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACXYW() (TA, TC, TX, TY, TW) { return _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACXYA() (TA, TC, TX, TY, TA) { return _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACXYB() (TA, TC, TX, TY, TB) { return _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACXYC() (TA, TC, TX, TY, TC) { return _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACXZX() (TA, TC, TX, TZ, TX) { return _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACXZY() (TA, TC, TX, TZ, TY) { return _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACXZZ() (TA, TC, TX, TZ, TZ) { return _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACXZW() (TA, TC, TX, TZ, TW) { return _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACXZA() (TA, TC, TX, TZ, TA) { return _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACXZB() (TA, TC, TX, TZ, TB) { return _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACXZC() (TA, TC, TX, TZ, TC) { return _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACXWX() (TA, TC, TX, TW, TX) { return _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACXWY() (TA, TC, TX, TW, TY) { return _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACXWZ() (TA, TC, TX, TW, TZ) { return _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACXWW() (TA, TC, TX, TW, TW) { return _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACXWA() (TA, TC, TX, TW, TA) { return _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACXWB() (TA, TC, TX, TW, TB) { return _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACXWC() (TA, TC, TX, TW, TC) { return _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACXAX() (TA, TC, TX, TA, TX) { return _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACXAY() (TA, TC, TX, TA, TY) { return _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACXAZ() (TA, TC, TX, TA, TZ) { return _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACXAW() (TA, TC, TX, TA, TW) { return _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACXAA() (TA, TC, TX, TA, TA) { return _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACXAB() (TA, TC, TX, TA, TB) { return _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACXAC() (TA, TC, TX, TA, TC) { return _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACXBX() (TA, TC, TX, TB, TX) { return _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACXBY() (TA, TC, TX, TB, TY) { return _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACXBZ() (TA, TC, TX, TB, TZ) { return _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACXBW() (TA, TC, TX, TB, TW) { return _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACXBA() (TA, TC, TX, TB, TA) { return _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACXBB() (TA, TC, TX, TB, TB) { return _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACXBC() (TA, TC, TX, TB, TC) { return _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACXCX() (TA, TC, TX, TC, TX) { return _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACXCY() (TA, TC, TX, TC, TY) { return _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACXCZ() (TA, TC, TX, TC, TZ) { return _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACXCW() (TA, TC, TX, TC, TW) { return _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACXCA() (TA, TC, TX, TC, TA) { return _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACXCB() (TA, TC, TX, TC, TB) { return _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACXCC() (TA, TC, TX, TC, TC) { return _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACYXX() (TA, TC, TY, TX, TX) { return _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACYXY() (TA, TC, TY, TX, TY) { return _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACYXZ() (TA, TC, TY, TX, TZ) { return _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACYXW() (TA, TC, TY, TX, TW) { return _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACYXA() (TA, TC, TY, TX, TA) { return _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACYXB() (TA, TC, TY, TX, TB) { return _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACYXC() (TA, TC, TY, TX, TC) { return _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACYYX() (TA, TC, TY, TY, TX) { return _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACYYY() (TA, TC, TY, TY, TY) { return _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACYYZ() (TA, TC, TY, TY, TZ) { return _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACYYW() (TA, TC, TY, TY, TW) { return _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACYYA() (TA, TC, TY, TY, TA) { return _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACYYB() (TA, TC, TY, TY, TB) { return _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACYYC() (TA, TC, TY, TY, TC) { return _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACYZX() (TA, TC, TY, TZ, TX) { return _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACYZY() (TA, TC, TY, TZ, TY) { return _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACYZZ() (TA, TC, TY, TZ, TZ) { return _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACYZW() (TA, TC, TY, TZ, TW) { return _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACYZA() (TA, TC, TY, TZ, TA) { return _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACYZB() (TA, TC, TY, TZ, TB) { return _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACYZC() (TA, TC, TY, TZ, TC) { return _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACYWX() (TA, TC, TY, TW, TX) { return _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACYWY() (TA, TC, TY, TW, TY) { return _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACYWZ() (TA, TC, TY, TW, TZ) { return _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACYWW() (TA, TC, TY, TW, TW) { return _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACYWA() (TA, TC, TY, TW, TA) { return _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACYWB() (TA, TC, TY, TW, TB) { return _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACYWC() (TA, TC, TY, TW, TC) { return _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACYAX() (TA, TC, TY, TA, TX) { return _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACYAY() (TA, TC, TY, TA, TY) { return _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACYAZ() (TA, TC, TY, TA, TZ) { return _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACYAW() (TA, TC, TY, TA, TW) { return _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACYAA() (TA, TC, TY, TA, TA) { return _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACYAB() (TA, TC, TY, TA, TB) { return _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACYAC() (TA, TC, TY, TA, TC) { return _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACYBX() (TA, TC, TY, TB, TX) { return _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACYBY() (TA, TC, TY, TB, TY) { return _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACYBZ() (TA, TC, TY, TB, TZ) { return _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACYBW() (TA, TC, TY, TB, TW) { return _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACYBA() (TA, TC, TY, TB, TA) { return _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACYBB() (TA, TC, TY, TB, TB) { return _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACYBC() (TA, TC, TY, TB, TC) { return _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACYCX() (TA, TC, TY, TC, TX) { return _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACYCY() (TA, TC, TY, TC, TY) { return _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACYCZ() (TA, TC, TY, TC, TZ) { return _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACYCW() (TA, TC, TY, TC, TW) { return _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACYCA() (TA, TC, TY, TC, TA) { return _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACYCB() (TA, TC, TY, TC, TB) { return _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACYCC() (TA, TC, TY, TC, TC) { return _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACZXX() (TA, TC, TZ, TX, TX) { return _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACZXY() (TA, TC, TZ, TX, TY) { return _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACZXZ() (TA, TC, TZ, TX, TZ) { return _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACZXW() (TA, TC, TZ, TX, TW) { return _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACZXA() (TA, TC, TZ, TX, TA) { return _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACZXB() (TA, TC, TZ, TX, TB) { return _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACZXC() (TA, TC, TZ, TX, TC) { return _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACZYX() (TA, TC, TZ, TY, TX) { return _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACZYY() (TA, TC, TZ, TY, TY) { return _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACZYZ() (TA, TC, TZ, TY, TZ) { return _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACZYW() (TA, TC, TZ, TY, TW) { return _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACZYA() (TA, TC, TZ, TY, TA) { return _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACZYB() (TA, TC, TZ, TY, TB) { return _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACZYC() (TA, TC, TZ, TY, TC) { return _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACZZX() (TA, TC, TZ, TZ, TX) { return _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACZZY() (TA, TC, TZ, TZ, TY) { return _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACZZZ() (TA, TC, TZ, TZ, TZ) { return _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACZZW() (TA, TC, TZ, TZ, TW) { return _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACZZA() (TA, TC, TZ, TZ, TA) { return _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACZZB() (TA, TC, TZ, TZ, TB) { return _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACZZC() (TA, TC, TZ, TZ, TC) { return _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACZWX() (TA, TC, TZ, TW, TX) { return _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACZWY() (TA, TC, TZ, TW, TY) { return _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACZWZ() (TA, TC, TZ, TW, TZ) { return _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACZWW() (TA, TC, TZ, TW, TW) { return _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACZWA() (TA, TC, TZ, TW, TA) { return _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACZWB() (TA, TC, TZ, TW, TB) { return _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACZWC() (TA, TC, TZ, TW, TC) { return _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACZAX() (TA, TC, TZ, TA, TX) { return _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACZAY() (TA, TC, TZ, TA, TY) { return _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACZAZ() (TA, TC, TZ, TA, TZ) { return _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACZAW() (TA, TC, TZ, TA, TW) { return _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACZAA() (TA, TC, TZ, TA, TA) { return _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACZAB() (TA, TC, TZ, TA, TB) { return _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACZAC() (TA, TC, TZ, TA, TC) { return _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACZBX() (TA, TC, TZ, TB, TX) { return _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACZBY() (TA, TC, TZ, TB, TY) { return _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACZBZ() (TA, TC, TZ, TB, TZ) { return _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACZBW() (TA, TC, TZ, TB, TW) { return _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACZBA() (TA, TC, TZ, TB, TA) { return _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACZBB() (TA, TC, TZ, TB, TB) { return _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACZBC() (TA, TC, TZ, TB, TC) { return _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACZCX() (TA, TC, TZ, TC, TX) { return _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACZCY() (TA, TC, TZ, TC, TY) { return _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACZCZ() (TA, TC, TZ, TC, TZ) { return _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACZCW() (TA, TC, TZ, TC, TW) { return _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACZCA() (TA, TC, TZ, TC, TA) { return _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACZCB() (TA, TC, TZ, TC, TB) { return _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACZCC() (TA, TC, TZ, TC, TC) { return _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACWXX() (TA, TC, TW, TX, TX) { return _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACWXY() (TA, TC, TW, TX, TY) { return _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACWXZ() (TA, TC, TW, TX, TZ) { return _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACWXW() (TA, TC, TW, TX, TW) { return _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACWXA() (TA, TC, TW, TX, TA) { return _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACWXB() (TA, TC, TW, TX, TB) { return _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACWXC() (TA, TC, TW, TX, TC) { return _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACWYX() (TA, TC, TW, TY, TX) { return _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACWYY() (TA, TC, TW, TY, TY) { return _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACWYZ() (TA, TC, TW, TY, TZ) { return _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACWYW() (TA, TC, TW, TY, TW) { return _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACWYA() (TA, TC, TW, TY, TA) { return _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACWYB() (TA, TC, TW, TY, TB) { return _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACWYC() (TA, TC, TW, TY, TC) { return _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACWZX() (TA, TC, TW, TZ, TX) { return _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACWZY() (TA, TC, TW, TZ, TY) { return _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACWZZ() (TA, TC, TW, TZ, TZ) { return _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACWZW() (TA, TC, TW, TZ, TW) { return _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACWZA() (TA, TC, TW, TZ, TA) { return _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACWZB() (TA, TC, TW, TZ, TB) { return _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACWZC() (TA, TC, TW, TZ, TC) { return _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACWWX() (TA, TC, TW, TW, TX) { return _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACWWY() (TA, TC, TW, TW, TY) { return _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACWWZ() (TA, TC, TW, TW, TZ) { return _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACWWW() (TA, TC, TW, TW, TW) { return _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACWWA() (TA, TC, TW, TW, TA) { return _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACWWB() (TA, TC, TW, TW, TB) { return _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACWWC() (TA, TC, TW, TW, TC) { return _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACWAX() (TA, TC, TW, TA, TX) { return _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACWAY() (TA, TC, TW, TA, TY) { return _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACWAZ() (TA, TC, TW, TA, TZ) { return _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACWAW() (TA, TC, TW, TA, TW) { return _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACWAA() (TA, TC, TW, TA, TA) { return _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACWAB() (TA, TC, TW, TA, TB) { return _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACWAC() (TA, TC, TW, TA, TC) { return _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACWBX() (TA, TC, TW, TB, TX) { return _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACWBY() (TA, TC, TW, TB, TY) { return _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACWBZ() (TA, TC, TW, TB, TZ) { return _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACWBW() (TA, TC, TW, TB, TW) { return _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACWBA() (TA, TC, TW, TB, TA) { return _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACWBB() (TA, TC, TW, TB, TB) { return _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACWBC() (TA, TC, TW, TB, TC) { return _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACWCX() (TA, TC, TW, TC, TX) { return _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACWCY() (TA, TC, TW, TC, TY) { return _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACWCZ() (TA, TC, TW, TC, TZ) { return _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACWCW() (TA, TC, TW, TC, TW) { return _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACWCA() (TA, TC, TW, TC, TA) { return _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACWCB() (TA, TC, TW, TC, TB) { return _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACWCC() (TA, TC, TW, TC, TC) { return _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACAXX() (TA, TC, TA, TX, TX) { return _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACAXY() (TA, TC, TA, TX, TY) { return _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACAXZ() (TA, TC, TA, TX, TZ) { return _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACAXW() (TA, TC, TA, TX, TW) { return _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACAXA() (TA, TC, TA, TX, TA) { return _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACAXB() (TA, TC, TA, TX, TB) { return _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACAXC() (TA, TC, TA, TX, TC) { return _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACAYX() (TA, TC, TA, TY, TX) { return _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACAYY() (TA, TC, TA, TY, TY) { return _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACAYZ() (TA, TC, TA, TY, TZ) { return _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACAYW() (TA, TC, TA, TY, TW) { return _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACAYA() (TA, TC, TA, TY, TA) { return _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACAYB() (TA, TC, TA, TY, TB) { return _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACAYC() (TA, TC, TA, TY, TC) { return _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACAZX() (TA, TC, TA, TZ, TX) { return _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACAZY() (TA, TC, TA, TZ, TY) { return _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACAZZ() (TA, TC, TA, TZ, TZ) { return _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACAZW() (TA, TC, TA, TZ, TW) { return _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACAZA() (TA, TC, TA, TZ, TA) { return _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACAZB() (TA, TC, TA, TZ, TB) { return _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACAZC() (TA, TC, TA, TZ, TC) { return _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACAWX() (TA, TC, TA, TW, TX) { return _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACAWY() (TA, TC, TA, TW, TY) { return _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACAWZ() (TA, TC, TA, TW, TZ) { return _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACAWW() (TA, TC, TA, TW, TW) { return _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACAWA() (TA, TC, TA, TW, TA) { return _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACAWB() (TA, TC, TA, TW, TB) { return _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACAWC() (TA, TC, TA, TW, TC) { return _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACAAX() (TA, TC, TA, TA, TX) { return _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACAAY() (TA, TC, TA, TA, TY) { return _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACAAZ() (TA, TC, TA, TA, TZ) { return _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACAAW() (TA, TC, TA, TA, TW) { return _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACAAA() (TA, TC, TA, TA, TA) { return _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACAAB() (TA, TC, TA, TA, TB) { return _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACAAC() (TA, TC, TA, TA, TC) { return _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACABX() (TA, TC, TA, TB, TX) { return _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACABY() (TA, TC, TA, TB, TY) { return _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACABZ() (TA, TC, TA, TB, TZ) { return _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACABW() (TA, TC, TA, TB, TW) { return _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACABA() (TA, TC, TA, TB, TA) { return _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACABB() (TA, TC, TA, TB, TB) { return _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACABC() (TA, TC, TA, TB, TC) { return _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACACX() (TA, TC, TA, TC, TX) { return _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACACY() (TA, TC, TA, TC, TY) { return _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACACZ() (TA, TC, TA, TC, TZ) { return _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACACW() (TA, TC, TA, TC, TW) { return _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACACA() (TA, TC, TA, TC, TA) { return _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACACB() (TA, TC, TA, TC, TB) { return _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACACC() (TA, TC, TA, TC, TC) { return _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACBXX() (TA, TC, TB, TX, TX) { return _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACBXY() (TA, TC, TB, TX, TY) { return _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACBXZ() (TA, TC, TB, TX, TZ) { return _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACBXW() (TA, TC, TB, TX, TW) { return _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACBXA() (TA, TC, TB, TX, TA) { return _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACBXB() (TA, TC, TB, TX, TB) { return _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACBXC() (TA, TC, TB, TX, TC) { return _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACBYX() (TA, TC, TB, TY, TX) { return _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACBYY() (TA, TC, TB, TY, TY) { return _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACBYZ() (TA, TC, TB, TY, TZ) { return _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACBYW() (TA, TC, TB, TY, TW) { return _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACBYA() (TA, TC, TB, TY, TA) { return _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACBYB() (TA, TC, TB, TY, TB) { return _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACBYC() (TA, TC, TB, TY, TC) { return _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACBZX() (TA, TC, TB, TZ, TX) { return _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACBZY() (TA, TC, TB, TZ, TY) { return _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACBZZ() (TA, TC, TB, TZ, TZ) { return _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACBZW() (TA, TC, TB, TZ, TW) { return _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACBZA() (TA, TC, TB, TZ, TA) { return _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACBZB() (TA, TC, TB, TZ, TB) { return _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACBZC() (TA, TC, TB, TZ, TC) { return _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACBWX() (TA, TC, TB, TW, TX) { return _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACBWY() (TA, TC, TB, TW, TY) { return _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACBWZ() (TA, TC, TB, TW, TZ) { return _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACBWW() (TA, TC, TB, TW, TW) { return _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACBWA() (TA, TC, TB, TW, TA) { return _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACBWB() (TA, TC, TB, TW, TB) { return _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACBWC() (TA, TC, TB, TW, TC) { return _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACBAX() (TA, TC, TB, TA, TX) { return _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACBAY() (TA, TC, TB, TA, TY) { return _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACBAZ() (TA, TC, TB, TA, TZ) { return _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACBAW() (TA, TC, TB, TA, TW) { return _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACBAA() (TA, TC, TB, TA, TA) { return _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACBAB() (TA, TC, TB, TA, TB) { return _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACBAC() (TA, TC, TB, TA, TC) { return _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACBBX() (TA, TC, TB, TB, TX) { return _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACBBY() (TA, TC, TB, TB, TY) { return _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACBBZ() (TA, TC, TB, TB, TZ) { return _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACBBW() (TA, TC, TB, TB, TW) { return _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACBBA() (TA, TC, TB, TB, TA) { return _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACBBB() (TA, TC, TB, TB, TB) { return _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACBBC() (TA, TC, TB, TB, TC) { return _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACBCX() (TA, TC, TB, TC, TX) { return _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACBCY() (TA, TC, TB, TC, TY) { return _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACBCZ() (TA, TC, TB, TC, TZ) { return _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACBCW() (TA, TC, TB, TC, TW) { return _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACBCA() (TA, TC, TB, TC, TA) { return _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACBCB() (TA, TC, TB, TC, TB) { return _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACBCC() (TA, TC, TB, TC, TC) { return _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACCXX() (TA, TC, TC, TX, TX) { return _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACCXY() (TA, TC, TC, TX, TY) { return _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACCXZ() (TA, TC, TC, TX, TZ) { return _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACCXW() (TA, TC, TC, TX, TW) { return _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACCXA() (TA, TC, TC, TX, TA) { return _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACCXB() (TA, TC, TC, TX, TB) { return _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACCXC() (TA, TC, TC, TX, TC) { return _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACCYX() (TA, TC, TC, TY, TX) { return _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACCYY() (TA, TC, TC, TY, TY) { return _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACCYZ() (TA, TC, TC, TY, TZ) { return _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACCYW() (TA, TC, TC, TY, TW) { return _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACCYA() (TA, TC, TC, TY, TA) { return _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACCYB() (TA, TC, TC, TY, TB) { return _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACCYC() (TA, TC, TC, TY, TC) { return _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACCZX() (TA, TC, TC, TZ, TX) { return _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACCZY() (TA, TC, TC, TZ, TY) { return _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACCZZ() (TA, TC, TC, TZ, TZ) { return _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACCZW() (TA, TC, TC, TZ, TW) { return _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACCZA() (TA, TC, TC, TZ, TA) { return _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACCZB() (TA, TC, TC, TZ, TB) { return _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACCZC() (TA, TC, TC, TZ, TC) { return _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACCWX() (TA, TC, TC, TW, TX) { return _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACCWY() (TA, TC, TC, TW, TY) { return _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACCWZ() (TA, TC, TC, TW, TZ) { return _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACCWW() (TA, TC, TC, TW, TW) { return _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACCWA() (TA, TC, TC, TW, TA) { return _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACCWB() (TA, TC, TC, TW, TB) { return _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACCWC() (TA, TC, TC, TW, TC) { return _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACCAX() (TA, TC, TC, TA, TX) { return _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACCAY() (TA, TC, TC, TA, TY) { return _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACCAZ() (TA, TC, TC, TA, TZ) { return _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACCAW() (TA, TC, TC, TA, TW) { return _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACCAA() (TA, TC, TC, TA, TA) { return _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACCAB() (TA, TC, TC, TA, TB) { return _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACCAC() (TA, TC, TC, TA, TC) { return _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACCBX() (TA, TC, TC, TB, TX) { return _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACCBY() (TA, TC, TC, TB, TY) { return _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACCBZ() (TA, TC, TC, TB, TZ) { return _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACCBW() (TA, TC, TC, TB, TW) { return _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACCBA() (TA, TC, TC, TB, TA) { return _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACCBB() (TA, TC, TC, TB, TB) { return _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACCBC() (TA, TC, TC, TB, TC) { return _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACCCX() (TA, TC, TC, TC, TX) { return _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACCCY() (TA, TC, TC, TC, TY) { return _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACCCZ() (TA, TC, TC, TC, TZ) { return _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACCCW() (TA, TC, TC, TC, TW) { return _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACCCA() (TA, TC, TC, TC, TA) { return _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACCCB() (TA, TC, TC, TC, TB) { return _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) ACCCC() (TA, TC, TC, TC, TC) { return _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXXXX() (TB, TX, TX, TX, TX) { return _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXXXY() (TB, TX, TX, TX, TY) { return _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXXXZ() (TB, TX, TX, TX, TZ) { return _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXXXW() (TB, TX, TX, TX, TW) { return _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXXXA() (TB, TX, TX, TX, TA) { return _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXXXB() (TB, TX, TX, TX, TB) { return _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXXXC() (TB, TX, TX, TX, TC) { return _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXXYX() (TB, TX, TX, TY, TX) { return _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXXYY() (TB, TX, TX, TY, TY) { return _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXXYZ() (TB, TX, TX, TY, TZ) { return _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXXYW() (TB, TX, TX, TY, TW) { return _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXXYA() (TB, TX, TX, TY, TA) { return _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXXYB() (TB, TX, TX, TY, TB) { return _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXXYC() (TB, TX, TX, TY, TC) { return _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXXZX() (TB, TX, TX, TZ, TX) { return _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXXZY() (TB, TX, TX, TZ, TY) { return _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXXZZ() (TB, TX, TX, TZ, TZ) { return _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXXZW() (TB, TX, TX, TZ, TW) { return _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXXZA() (TB, TX, TX, TZ, TA) { return _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXXZB() (TB, TX, TX, TZ, TB) { return _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXXZC() (TB, TX, TX, TZ, TC) { return _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXXWX() (TB, TX, TX, TW, TX) { return _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXXWY() (TB, TX, TX, TW, TY) { return _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXXWZ() (TB, TX, TX, TW, TZ) { return _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXXWW() (TB, TX, TX, TW, TW) { return _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXXWA() (TB, TX, TX, TW, TA) { return _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXXWB() (TB, TX, TX, TW, TB) { return _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXXWC() (TB, TX, TX, TW, TC) { return _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXXAX() (TB, TX, TX, TA, TX) { return _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXXAY() (TB, TX, TX, TA, TY) { return _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXXAZ() (TB, TX, TX, TA, TZ) { return _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXXAW() (TB, TX, TX, TA, TW) { return _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXXAA() (TB, TX, TX, TA, TA) { return _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXXAB() (TB, TX, TX, TA, TB) { return _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXXAC() (TB, TX, TX, TA, TC) { return _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXXBX() (TB, TX, TX, TB, TX) { return _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXXBY() (TB, TX, TX, TB, TY) { return _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXXBZ() (TB, TX, TX, TB, TZ) { return _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXXBW() (TB, TX, TX, TB, TW) { return _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXXBA() (TB, TX, TX, TB, TA) { return _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXXBB() (TB, TX, TX, TB, TB) { return _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXXBC() (TB, TX, TX, TB, TC) { return _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXXCX() (TB, TX, TX, TC, TX) { return _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXXCY() (TB, TX, TX, TC, TY) { return _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXXCZ() (TB, TX, TX, TC, TZ) { return _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXXCW() (TB, TX, TX, TC, TW) { return _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXXCA() (TB, TX, TX, TC, TA) { return _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXXCB() (TB, TX, TX, TC, TB) { return _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXXCC() (TB, TX, TX, TC, TC) { return _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXYXX() (TB, TX, TY, TX, TX) { return _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXYXY() (TB, TX, TY, TX, TY) { return _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXYXZ() (TB, TX, TY, TX, TZ) { return _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXYXW() (TB, TX, TY, TX, TW) { return _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXYXA() (TB, TX, TY, TX, TA) { return _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXYXB() (TB, TX, TY, TX, TB) { return _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXYXC() (TB, TX, TY, TX, TC) { return _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXYYX() (TB, TX, TY, TY, TX) { return _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXYYY() (TB, TX, TY, TY, TY) { return _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXYYZ() (TB, TX, TY, TY, TZ) { return _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXYYW() (TB, TX, TY, TY, TW) { return _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXYYA() (TB, TX, TY, TY, TA) { return _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXYYB() (TB, TX, TY, TY, TB) { return _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXYYC() (TB, TX, TY, TY, TC) { return _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXYZX() (TB, TX, TY, TZ, TX) { return _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXYZY() (TB, TX, TY, TZ, TY) { return _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXYZZ() (TB, TX, TY, TZ, TZ) { return _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXYZW() (TB, TX, TY, TZ, TW) { return _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXYZA() (TB, TX, TY, TZ, TA) { return _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXYZB() (TB, TX, TY, TZ, TB) { return _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXYZC() (TB, TX, TY, TZ, TC) { return _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXYWX() (TB, TX, TY, TW, TX) { return _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXYWY() (TB, TX, TY, TW, TY) { return _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXYWZ() (TB, TX, TY, TW, TZ) { return _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXYWW() (TB, TX, TY, TW, TW) { return _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXYWA() (TB, TX, TY, TW, TA) { return _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXYWB() (TB, TX, TY, TW, TB) { return _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXYWC() (TB, TX, TY, TW, TC) { return _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXYAX() (TB, TX, TY, TA, TX) { return _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXYAY() (TB, TX, TY, TA, TY) { return _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXYAZ() (TB, TX, TY, TA, TZ) { return _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXYAW() (TB, TX, TY, TA, TW) { return _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXYAA() (TB, TX, TY, TA, TA) { return _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXYAB() (TB, TX, TY, TA, TB) { return _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXYAC() (TB, TX, TY, TA, TC) { return _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXYBX() (TB, TX, TY, TB, TX) { return _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXYBY() (TB, TX, TY, TB, TY) { return _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXYBZ() (TB, TX, TY, TB, TZ) { return _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXYBW() (TB, TX, TY, TB, TW) { return _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXYBA() (TB, TX, TY, TB, TA) { return _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXYBB() (TB, TX, TY, TB, TB) { return _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXYBC() (TB, TX, TY, TB, TC) { return _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXYCX() (TB, TX, TY, TC, TX) { return _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXYCY() (TB, TX, TY, TC, TY) { return _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXYCZ() (TB, TX, TY, TC, TZ) { return _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXYCW() (TB, TX, TY, TC, TW) { return _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXYCA() (TB, TX, TY, TC, TA) { return _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXYCB() (TB, TX, TY, TC, TB) { return _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXYCC() (TB, TX, TY, TC, TC) { return _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXZXX() (TB, TX, TZ, TX, TX) { return _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXZXY() (TB, TX, TZ, TX, TY) { return _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXZXZ() (TB, TX, TZ, TX, TZ) { return _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXZXW() (TB, TX, TZ, TX, TW) { return _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXZXA() (TB, TX, TZ, TX, TA) { return _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXZXB() (TB, TX, TZ, TX, TB) { return _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXZXC() (TB, TX, TZ, TX, TC) { return _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXZYX() (TB, TX, TZ, TY, TX) { return _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXZYY() (TB, TX, TZ, TY, TY) { return _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXZYZ() (TB, TX, TZ, TY, TZ) { return _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXZYW() (TB, TX, TZ, TY, TW) { return _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXZYA() (TB, TX, TZ, TY, TA) { return _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXZYB() (TB, TX, TZ, TY, TB) { return _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXZYC() (TB, TX, TZ, TY, TC) { return _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXZZX() (TB, TX, TZ, TZ, TX) { return _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXZZY() (TB, TX, TZ, TZ, TY) { return _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXZZZ() (TB, TX, TZ, TZ, TZ) { return _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXZZW() (TB, TX, TZ, TZ, TW) { return _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXZZA() (TB, TX, TZ, TZ, TA) { return _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXZZB() (TB, TX, TZ, TZ, TB) { return _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXZZC() (TB, TX, TZ, TZ, TC) { return _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXZWX() (TB, TX, TZ, TW, TX) { return _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXZWY() (TB, TX, TZ, TW, TY) { return _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXZWZ() (TB, TX, TZ, TW, TZ) { return _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXZWW() (TB, TX, TZ, TW, TW) { return _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXZWA() (TB, TX, TZ, TW, TA) { return _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXZWB() (TB, TX, TZ, TW, TB) { return _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXZWC() (TB, TX, TZ, TW, TC) { return _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXZAX() (TB, TX, TZ, TA, TX) { return _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXZAY() (TB, TX, TZ, TA, TY) { return _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXZAZ() (TB, TX, TZ, TA, TZ) { return _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXZAW() (TB, TX, TZ, TA, TW) { return _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXZAA() (TB, TX, TZ, TA, TA) { return _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXZAB() (TB, TX, TZ, TA, TB) { return _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXZAC() (TB, TX, TZ, TA, TC) { return _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXZBX() (TB, TX, TZ, TB, TX) { return _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXZBY() (TB, TX, TZ, TB, TY) { return _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXZBZ() (TB, TX, TZ, TB, TZ) { return _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXZBW() (TB, TX, TZ, TB, TW) { return _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXZBA() (TB, TX, TZ, TB, TA) { return _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXZBB() (TB, TX, TZ, TB, TB) { return _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXZBC() (TB, TX, TZ, TB, TC) { return _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXZCX() (TB, TX, TZ, TC, TX) { return _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXZCY() (TB, TX, TZ, TC, TY) { return _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXZCZ() (TB, TX, TZ, TC, TZ) { return _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXZCW() (TB, TX, TZ, TC, TW) { return _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXZCA() (TB, TX, TZ, TC, TA) { return _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXZCB() (TB, TX, TZ, TC, TB) { return _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXZCC() (TB, TX, TZ, TC, TC) { return _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXWXX() (TB, TX, TW, TX, TX) { return _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXWXY() (TB, TX, TW, TX, TY) { return _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXWXZ() (TB, TX, TW, TX, TZ) { return _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXWXW() (TB, TX, TW, TX, TW) { return _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXWXA() (TB, TX, TW, TX, TA) { return _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXWXB() (TB, TX, TW, TX, TB) { return _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXWXC() (TB, TX, TW, TX, TC) { return _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXWYX() (TB, TX, TW, TY, TX) { return _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXWYY() (TB, TX, TW, TY, TY) { return _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXWYZ() (TB, TX, TW, TY, TZ) { return _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXWYW() (TB, TX, TW, TY, TW) { return _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXWYA() (TB, TX, TW, TY, TA) { return _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXWYB() (TB, TX, TW, TY, TB) { return _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXWYC() (TB, TX, TW, TY, TC) { return _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXWZX() (TB, TX, TW, TZ, TX) { return _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXWZY() (TB, TX, TW, TZ, TY) { return _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXWZZ() (TB, TX, TW, TZ, TZ) { return _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXWZW() (TB, TX, TW, TZ, TW) { return _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXWZA() (TB, TX, TW, TZ, TA) { return _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXWZB() (TB, TX, TW, TZ, TB) { return _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXWZC() (TB, TX, TW, TZ, TC) { return _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXWWX() (TB, TX, TW, TW, TX) { return _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXWWY() (TB, TX, TW, TW, TY) { return _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXWWZ() (TB, TX, TW, TW, TZ) { return _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXWWW() (TB, TX, TW, TW, TW) { return _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXWWA() (TB, TX, TW, TW, TA) { return _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXWWB() (TB, TX, TW, TW, TB) { return _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXWWC() (TB, TX, TW, TW, TC) { return _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXWAX() (TB, TX, TW, TA, TX) { return _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXWAY() (TB, TX, TW, TA, TY) { return _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXWAZ() (TB, TX, TW, TA, TZ) { return _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXWAW() (TB, TX, TW, TA, TW) { return _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXWAA() (TB, TX, TW, TA, TA) { return _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXWAB() (TB, TX, TW, TA, TB) { return _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXWAC() (TB, TX, TW, TA, TC) { return _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXWBX() (TB, TX, TW, TB, TX) { return _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXWBY() (TB, TX, TW, TB, TY) { return _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXWBZ() (TB, TX, TW, TB, TZ) { return _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXWBW() (TB, TX, TW, TB, TW) { return _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXWBA() (TB, TX, TW, TB, TA) { return _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXWBB() (TB, TX, TW, TB, TB) { return _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXWBC() (TB, TX, TW, TB, TC) { return _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXWCX() (TB, TX, TW, TC, TX) { return _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXWCY() (TB, TX, TW, TC, TY) { return _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXWCZ() (TB, TX, TW, TC, TZ) { return _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXWCW() (TB, TX, TW, TC, TW) { return _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXWCA() (TB, TX, TW, TC, TA) { return _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXWCB() (TB, TX, TW, TC, TB) { return _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXWCC() (TB, TX, TW, TC, TC) { return _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXAXX() (TB, TX, TA, TX, TX) { return _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXAXY() (TB, TX, TA, TX, TY) { return _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXAXZ() (TB, TX, TA, TX, TZ) { return _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXAXW() (TB, TX, TA, TX, TW) { return _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXAXA() (TB, TX, TA, TX, TA) { return _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXAXB() (TB, TX, TA, TX, TB) { return _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXAXC() (TB, TX, TA, TX, TC) { return _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXAYX() (TB, TX, TA, TY, TX) { return _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXAYY() (TB, TX, TA, TY, TY) { return _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXAYZ() (TB, TX, TA, TY, TZ) { return _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXAYW() (TB, TX, TA, TY, TW) { return _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXAYA() (TB, TX, TA, TY, TA) { return _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXAYB() (TB, TX, TA, TY, TB) { return _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXAYC() (TB, TX, TA, TY, TC) { return _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXAZX() (TB, TX, TA, TZ, TX) { return _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXAZY() (TB, TX, TA, TZ, TY) { return _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXAZZ() (TB, TX, TA, TZ, TZ) { return _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXAZW() (TB, TX, TA, TZ, TW) { return _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXAZA() (TB, TX, TA, TZ, TA) { return _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXAZB() (TB, TX, TA, TZ, TB) { return _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXAZC() (TB, TX, TA, TZ, TC) { return _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXAWX() (TB, TX, TA, TW, TX) { return _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXAWY() (TB, TX, TA, TW, TY) { return _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXAWZ() (TB, TX, TA, TW, TZ) { return _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXAWW() (TB, TX, TA, TW, TW) { return _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXAWA() (TB, TX, TA, TW, TA) { return _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXAWB() (TB, TX, TA, TW, TB) { return _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXAWC() (TB, TX, TA, TW, TC) { return _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXAAX() (TB, TX, TA, TA, TX) { return _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXAAY() (TB, TX, TA, TA, TY) { return _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXAAZ() (TB, TX, TA, TA, TZ) { return _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXAAW() (TB, TX, TA, TA, TW) { return _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXAAA() (TB, TX, TA, TA, TA) { return _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXAAB() (TB, TX, TA, TA, TB) { return _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXAAC() (TB, TX, TA, TA, TC) { return _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXABX() (TB, TX, TA, TB, TX) { return _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXABY() (TB, TX, TA, TB, TY) { return _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXABZ() (TB, TX, TA, TB, TZ) { return _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXABW() (TB, TX, TA, TB, TW) { return _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXABA() (TB, TX, TA, TB, TA) { return _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXABB() (TB, TX, TA, TB, TB) { return _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXABC() (TB, TX, TA, TB, TC) { return _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXACX() (TB, TX, TA, TC, TX) { return _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXACY() (TB, TX, TA, TC, TY) { return _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXACZ() (TB, TX, TA, TC, TZ) { return _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXACW() (TB, TX, TA, TC, TW) { return _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXACA() (TB, TX, TA, TC, TA) { return _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXACB() (TB, TX, TA, TC, TB) { return _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXACC() (TB, TX, TA, TC, TC) { return _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXBXX() (TB, TX, TB, TX, TX) { return _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXBXY() (TB, TX, TB, TX, TY) { return _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXBXZ() (TB, TX, TB, TX, TZ) { return _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXBXW() (TB, TX, TB, TX, TW) { return _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXBXA() (TB, TX, TB, TX, TA) { return _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXBXB() (TB, TX, TB, TX, TB) { return _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXBXC() (TB, TX, TB, TX, TC) { return _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXBYX() (TB, TX, TB, TY, TX) { return _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXBYY() (TB, TX, TB, TY, TY) { return _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXBYZ() (TB, TX, TB, TY, TZ) { return _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXBYW() (TB, TX, TB, TY, TW) { return _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXBYA() (TB, TX, TB, TY, TA) { return _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXBYB() (TB, TX, TB, TY, TB) { return _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXBYC() (TB, TX, TB, TY, TC) { return _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXBZX() (TB, TX, TB, TZ, TX) { return _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXBZY() (TB, TX, TB, TZ, TY) { return _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXBZZ() (TB, TX, TB, TZ, TZ) { return _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXBZW() (TB, TX, TB, TZ, TW) { return _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXBZA() (TB, TX, TB, TZ, TA) { return _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXBZB() (TB, TX, TB, TZ, TB) { return _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXBZC() (TB, TX, TB, TZ, TC) { return _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXBWX() (TB, TX, TB, TW, TX) { return _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXBWY() (TB, TX, TB, TW, TY) { return _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXBWZ() (TB, TX, TB, TW, TZ) { return _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXBWW() (TB, TX, TB, TW, TW) { return _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXBWA() (TB, TX, TB, TW, TA) { return _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXBWB() (TB, TX, TB, TW, TB) { return _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXBWC() (TB, TX, TB, TW, TC) { return _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXBAX() (TB, TX, TB, TA, TX) { return _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXBAY() (TB, TX, TB, TA, TY) { return _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXBAZ() (TB, TX, TB, TA, TZ) { return _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXBAW() (TB, TX, TB, TA, TW) { return _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXBAA() (TB, TX, TB, TA, TA) { return _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXBAB() (TB, TX, TB, TA, TB) { return _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXBAC() (TB, TX, TB, TA, TC) { return _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXBBX() (TB, TX, TB, TB, TX) { return _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXBBY() (TB, TX, TB, TB, TY) { return _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXBBZ() (TB, TX, TB, TB, TZ) { return _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXBBW() (TB, TX, TB, TB, TW) { return _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXBBA() (TB, TX, TB, TB, TA) { return _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXBBB() (TB, TX, TB, TB, TB) { return _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXBBC() (TB, TX, TB, TB, TC) { return _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXBCX() (TB, TX, TB, TC, TX) { return _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXBCY() (TB, TX, TB, TC, TY) { return _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXBCZ() (TB, TX, TB, TC, TZ) { return _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXBCW() (TB, TX, TB, TC, TW) { return _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXBCA() (TB, TX, TB, TC, TA) { return _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXBCB() (TB, TX, TB, TC, TB) { return _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXBCC() (TB, TX, TB, TC, TC) { return _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXCXX() (TB, TX, TC, TX, TX) { return _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXCXY() (TB, TX, TC, TX, TY) { return _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXCXZ() (TB, TX, TC, TX, TZ) { return _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXCXW() (TB, TX, TC, TX, TW) { return _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXCXA() (TB, TX, TC, TX, TA) { return _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXCXB() (TB, TX, TC, TX, TB) { return _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXCXC() (TB, TX, TC, TX, TC) { return _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXCYX() (TB, TX, TC, TY, TX) { return _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXCYY() (TB, TX, TC, TY, TY) { return _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXCYZ() (TB, TX, TC, TY, TZ) { return _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXCYW() (TB, TX, TC, TY, TW) { return _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXCYA() (TB, TX, TC, TY, TA) { return _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXCYB() (TB, TX, TC, TY, TB) { return _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXCYC() (TB, TX, TC, TY, TC) { return _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXCZX() (TB, TX, TC, TZ, TX) { return _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXCZY() (TB, TX, TC, TZ, TY) { return _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXCZZ() (TB, TX, TC, TZ, TZ) { return _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXCZW() (TB, TX, TC, TZ, TW) { return _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXCZA() (TB, TX, TC, TZ, TA) { return _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXCZB() (TB, TX, TC, TZ, TB) { return _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXCZC() (TB, TX, TC, TZ, TC) { return _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXCWX() (TB, TX, TC, TW, TX) { return _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXCWY() (TB, TX, TC, TW, TY) { return _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXCWZ() (TB, TX, TC, TW, TZ) { return _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXCWW() (TB, TX, TC, TW, TW) { return _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXCWA() (TB, TX, TC, TW, TA) { return _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXCWB() (TB, TX, TC, TW, TB) { return _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXCWC() (TB, TX, TC, TW, TC) { return _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXCAX() (TB, TX, TC, TA, TX) { return _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXCAY() (TB, TX, TC, TA, TY) { return _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXCAZ() (TB, TX, TC, TA, TZ) { return _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXCAW() (TB, TX, TC, TA, TW) { return _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXCAA() (TB, TX, TC, TA, TA) { return _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXCAB() (TB, TX, TC, TA, TB) { return _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXCAC() (TB, TX, TC, TA, TC) { return _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXCBX() (TB, TX, TC, TB, TX) { return _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXCBY() (TB, TX, TC, TB, TY) { return _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXCBZ() (TB, TX, TC, TB, TZ) { return _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXCBW() (TB, TX, TC, TB, TW) { return _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXCBA() (TB, TX, TC, TB, TA) { return _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXCBB() (TB, TX, TC, TB, TB) { return _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXCBC() (TB, TX, TC, TB, TC) { return _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXCCX() (TB, TX, TC, TC, TX) { return _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXCCY() (TB, TX, TC, TC, TY) { return _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXCCZ() (TB, TX, TC, TC, TZ) { return _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXCCW() (TB, TX, TC, TC, TW) { return _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXCCA() (TB, TX, TC, TC, TA) { return _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXCCB() (TB, TX, TC, TC, TB) { return _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BXCCC() (TB, TX, TC, TC, TC) { return _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYXXX() (TB, TY, TX, TX, TX) { return _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYXXY() (TB, TY, TX, TX, TY) { return _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYXXZ() (TB, TY, TX, TX, TZ) { return _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYXXW() (TB, TY, TX, TX, TW) { return _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYXXA() (TB, TY, TX, TX, TA) { return _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYXXB() (TB, TY, TX, TX, TB) { return _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYXXC() (TB, TY, TX, TX, TC) { return _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYXYX() (TB, TY, TX, TY, TX) { return _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYXYY() (TB, TY, TX, TY, TY) { return _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYXYZ() (TB, TY, TX, TY, TZ) { return _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYXYW() (TB, TY, TX, TY, TW) { return _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYXYA() (TB, TY, TX, TY, TA) { return _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYXYB() (TB, TY, TX, TY, TB) { return _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYXYC() (TB, TY, TX, TY, TC) { return _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYXZX() (TB, TY, TX, TZ, TX) { return _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYXZY() (TB, TY, TX, TZ, TY) { return _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYXZZ() (TB, TY, TX, TZ, TZ) { return _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYXZW() (TB, TY, TX, TZ, TW) { return _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYXZA() (TB, TY, TX, TZ, TA) { return _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYXZB() (TB, TY, TX, TZ, TB) { return _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYXZC() (TB, TY, TX, TZ, TC) { return _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYXWX() (TB, TY, TX, TW, TX) { return _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYXWY() (TB, TY, TX, TW, TY) { return _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYXWZ() (TB, TY, TX, TW, TZ) { return _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYXWW() (TB, TY, TX, TW, TW) { return _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYXWA() (TB, TY, TX, TW, TA) { return _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYXWB() (TB, TY, TX, TW, TB) { return _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYXWC() (TB, TY, TX, TW, TC) { return _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYXAX() (TB, TY, TX, TA, TX) { return _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYXAY() (TB, TY, TX, TA, TY) { return _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYXAZ() (TB, TY, TX, TA, TZ) { return _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYXAW() (TB, TY, TX, TA, TW) { return _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYXAA() (TB, TY, TX, TA, TA) { return _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYXAB() (TB, TY, TX, TA, TB) { return _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYXAC() (TB, TY, TX, TA, TC) { return _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYXBX() (TB, TY, TX, TB, TX) { return _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYXBY() (TB, TY, TX, TB, TY) { return _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYXBZ() (TB, TY, TX, TB, TZ) { return _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYXBW() (TB, TY, TX, TB, TW) { return _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYXBA() (TB, TY, TX, TB, TA) { return _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYXBB() (TB, TY, TX, TB, TB) { return _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYXBC() (TB, TY, TX, TB, TC) { return _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYXCX() (TB, TY, TX, TC, TX) { return _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYXCY() (TB, TY, TX, TC, TY) { return _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYXCZ() (TB, TY, TX, TC, TZ) { return _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYXCW() (TB, TY, TX, TC, TW) { return _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYXCA() (TB, TY, TX, TC, TA) { return _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYXCB() (TB, TY, TX, TC, TB) { return _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYXCC() (TB, TY, TX, TC, TC) { return _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYYXX() (TB, TY, TY, TX, TX) { return _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYYXY() (TB, TY, TY, TX, TY) { return _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYYXZ() (TB, TY, TY, TX, TZ) { return _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYYXW() (TB, TY, TY, TX, TW) { return _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYYXA() (TB, TY, TY, TX, TA) { return _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYYXB() (TB, TY, TY, TX, TB) { return _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYYXC() (TB, TY, TY, TX, TC) { return _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYYYX() (TB, TY, TY, TY, TX) { return _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYYYY() (TB, TY, TY, TY, TY) { return _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYYYZ() (TB, TY, TY, TY, TZ) { return _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYYYW() (TB, TY, TY, TY, TW) { return _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYYYA() (TB, TY, TY, TY, TA) { return _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYYYB() (TB, TY, TY, TY, TB) { return _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYYYC() (TB, TY, TY, TY, TC) { return _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYYZX() (TB, TY, TY, TZ, TX) { return _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYYZY() (TB, TY, TY, TZ, TY) { return _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYYZZ() (TB, TY, TY, TZ, TZ) { return _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYYZW() (TB, TY, TY, TZ, TW) { return _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYYZA() (TB, TY, TY, TZ, TA) { return _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYYZB() (TB, TY, TY, TZ, TB) { return _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYYZC() (TB, TY, TY, TZ, TC) { return _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYYWX() (TB, TY, TY, TW, TX) { return _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYYWY() (TB, TY, TY, TW, TY) { return _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYYWZ() (TB, TY, TY, TW, TZ) { return _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYYWW() (TB, TY, TY, TW, TW) { return _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYYWA() (TB, TY, TY, TW, TA) { return _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYYWB() (TB, TY, TY, TW, TB) { return _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYYWC() (TB, TY, TY, TW, TC) { return _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYYAX() (TB, TY, TY, TA, TX) { return _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYYAY() (TB, TY, TY, TA, TY) { return _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYYAZ() (TB, TY, TY, TA, TZ) { return _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYYAW() (TB, TY, TY, TA, TW) { return _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYYAA() (TB, TY, TY, TA, TA) { return _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYYAB() (TB, TY, TY, TA, TB) { return _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYYAC() (TB, TY, TY, TA, TC) { return _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYYBX() (TB, TY, TY, TB, TX) { return _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYYBY() (TB, TY, TY, TB, TY) { return _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYYBZ() (TB, TY, TY, TB, TZ) { return _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYYBW() (TB, TY, TY, TB, TW) { return _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYYBA() (TB, TY, TY, TB, TA) { return _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYYBB() (TB, TY, TY, TB, TB) { return _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYYBC() (TB, TY, TY, TB, TC) { return _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYYCX() (TB, TY, TY, TC, TX) { return _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYYCY() (TB, TY, TY, TC, TY) { return _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYYCZ() (TB, TY, TY, TC, TZ) { return _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYYCW() (TB, TY, TY, TC, TW) { return _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYYCA() (TB, TY, TY, TC, TA) { return _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYYCB() (TB, TY, TY, TC, TB) { return _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYYCC() (TB, TY, TY, TC, TC) { return _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYZXX() (TB, TY, TZ, TX, TX) { return _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYZXY() (TB, TY, TZ, TX, TY) { return _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYZXZ() (TB, TY, TZ, TX, TZ) { return _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYZXW() (TB, TY, TZ, TX, TW) { return _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYZXA() (TB, TY, TZ, TX, TA) { return _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYZXB() (TB, TY, TZ, TX, TB) { return _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYZXC() (TB, TY, TZ, TX, TC) { return _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYZYX() (TB, TY, TZ, TY, TX) { return _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYZYY() (TB, TY, TZ, TY, TY) { return _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYZYZ() (TB, TY, TZ, TY, TZ) { return _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYZYW() (TB, TY, TZ, TY, TW) { return _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYZYA() (TB, TY, TZ, TY, TA) { return _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYZYB() (TB, TY, TZ, TY, TB) { return _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYZYC() (TB, TY, TZ, TY, TC) { return _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYZZX() (TB, TY, TZ, TZ, TX) { return _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYZZY() (TB, TY, TZ, TZ, TY) { return _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYZZZ() (TB, TY, TZ, TZ, TZ) { return _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYZZW() (TB, TY, TZ, TZ, TW) { return _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYZZA() (TB, TY, TZ, TZ, TA) { return _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYZZB() (TB, TY, TZ, TZ, TB) { return _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYZZC() (TB, TY, TZ, TZ, TC) { return _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYZWX() (TB, TY, TZ, TW, TX) { return _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYZWY() (TB, TY, TZ, TW, TY) { return _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYZWZ() (TB, TY, TZ, TW, TZ) { return _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYZWW() (TB, TY, TZ, TW, TW) { return _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYZWA() (TB, TY, TZ, TW, TA) { return _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYZWB() (TB, TY, TZ, TW, TB) { return _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYZWC() (TB, TY, TZ, TW, TC) { return _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYZAX() (TB, TY, TZ, TA, TX) { return _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYZAY() (TB, TY, TZ, TA, TY) { return _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYZAZ() (TB, TY, TZ, TA, TZ) { return _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYZAW() (TB, TY, TZ, TA, TW) { return _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYZAA() (TB, TY, TZ, TA, TA) { return _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYZAB() (TB, TY, TZ, TA, TB) { return _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYZAC() (TB, TY, TZ, TA, TC) { return _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYZBX() (TB, TY, TZ, TB, TX) { return _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYZBY() (TB, TY, TZ, TB, TY) { return _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYZBZ() (TB, TY, TZ, TB, TZ) { return _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYZBW() (TB, TY, TZ, TB, TW) { return _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYZBA() (TB, TY, TZ, TB, TA) { return _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYZBB() (TB, TY, TZ, TB, TB) { return _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYZBC() (TB, TY, TZ, TB, TC) { return _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYZCX() (TB, TY, TZ, TC, TX) { return _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYZCY() (TB, TY, TZ, TC, TY) { return _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYZCZ() (TB, TY, TZ, TC, TZ) { return _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYZCW() (TB, TY, TZ, TC, TW) { return _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYZCA() (TB, TY, TZ, TC, TA) { return _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYZCB() (TB, TY, TZ, TC, TB) { return _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYZCC() (TB, TY, TZ, TC, TC) { return _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYWXX() (TB, TY, TW, TX, TX) { return _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYWXY() (TB, TY, TW, TX, TY) { return _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYWXZ() (TB, TY, TW, TX, TZ) { return _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYWXW() (TB, TY, TW, TX, TW) { return _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYWXA() (TB, TY, TW, TX, TA) { return _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYWXB() (TB, TY, TW, TX, TB) { return _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYWXC() (TB, TY, TW, TX, TC) { return _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYWYX() (TB, TY, TW, TY, TX) { return _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYWYY() (TB, TY, TW, TY, TY) { return _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYWYZ() (TB, TY, TW, TY, TZ) { return _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYWYW() (TB, TY, TW, TY, TW) { return _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYWYA() (TB, TY, TW, TY, TA) { return _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYWYB() (TB, TY, TW, TY, TB) { return _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYWYC() (TB, TY, TW, TY, TC) { return _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYWZX() (TB, TY, TW, TZ, TX) { return _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYWZY() (TB, TY, TW, TZ, TY) { return _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYWZZ() (TB, TY, TW, TZ, TZ) { return _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYWZW() (TB, TY, TW, TZ, TW) { return _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYWZA() (TB, TY, TW, TZ, TA) { return _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYWZB() (TB, TY, TW, TZ, TB) { return _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYWZC() (TB, TY, TW, TZ, TC) { return _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYWWX() (TB, TY, TW, TW, TX) { return _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYWWY() (TB, TY, TW, TW, TY) { return _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYWWZ() (TB, TY, TW, TW, TZ) { return _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYWWW() (TB, TY, TW, TW, TW) { return _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYWWA() (TB, TY, TW, TW, TA) { return _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYWWB() (TB, TY, TW, TW, TB) { return _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYWWC() (TB, TY, TW, TW, TC) { return _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYWAX() (TB, TY, TW, TA, TX) { return _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYWAY() (TB, TY, TW, TA, TY) { return _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYWAZ() (TB, TY, TW, TA, TZ) { return _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYWAW() (TB, TY, TW, TA, TW) { return _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYWAA() (TB, TY, TW, TA, TA) { return _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYWAB() (TB, TY, TW, TA, TB) { return _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYWAC() (TB, TY, TW, TA, TC) { return _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYWBX() (TB, TY, TW, TB, TX) { return _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYWBY() (TB, TY, TW, TB, TY) { return _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYWBZ() (TB, TY, TW, TB, TZ) { return _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYWBW() (TB, TY, TW, TB, TW) { return _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYWBA() (TB, TY, TW, TB, TA) { return _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYWBB() (TB, TY, TW, TB, TB) { return _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYWBC() (TB, TY, TW, TB, TC) { return _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYWCX() (TB, TY, TW, TC, TX) { return _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYWCY() (TB, TY, TW, TC, TY) { return _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYWCZ() (TB, TY, TW, TC, TZ) { return _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYWCW() (TB, TY, TW, TC, TW) { return _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYWCA() (TB, TY, TW, TC, TA) { return _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYWCB() (TB, TY, TW, TC, TB) { return _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYWCC() (TB, TY, TW, TC, TC) { return _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYAXX() (TB, TY, TA, TX, TX) { return _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYAXY() (TB, TY, TA, TX, TY) { return _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYAXZ() (TB, TY, TA, TX, TZ) { return _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYAXW() (TB, TY, TA, TX, TW) { return _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYAXA() (TB, TY, TA, TX, TA) { return _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYAXB() (TB, TY, TA, TX, TB) { return _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYAXC() (TB, TY, TA, TX, TC) { return _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYAYX() (TB, TY, TA, TY, TX) { return _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYAYY() (TB, TY, TA, TY, TY) { return _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYAYZ() (TB, TY, TA, TY, TZ) { return _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYAYW() (TB, TY, TA, TY, TW) { return _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYAYA() (TB, TY, TA, TY, TA) { return _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYAYB() (TB, TY, TA, TY, TB) { return _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYAYC() (TB, TY, TA, TY, TC) { return _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYAZX() (TB, TY, TA, TZ, TX) { return _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYAZY() (TB, TY, TA, TZ, TY) { return _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYAZZ() (TB, TY, TA, TZ, TZ) { return _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYAZW() (TB, TY, TA, TZ, TW) { return _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYAZA() (TB, TY, TA, TZ, TA) { return _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYAZB() (TB, TY, TA, TZ, TB) { return _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYAZC() (TB, TY, TA, TZ, TC) { return _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYAWX() (TB, TY, TA, TW, TX) { return _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYAWY() (TB, TY, TA, TW, TY) { return _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYAWZ() (TB, TY, TA, TW, TZ) { return _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYAWW() (TB, TY, TA, TW, TW) { return _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYAWA() (TB, TY, TA, TW, TA) { return _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYAWB() (TB, TY, TA, TW, TB) { return _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYAWC() (TB, TY, TA, TW, TC) { return _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYAAX() (TB, TY, TA, TA, TX) { return _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYAAY() (TB, TY, TA, TA, TY) { return _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYAAZ() (TB, TY, TA, TA, TZ) { return _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYAAW() (TB, TY, TA, TA, TW) { return _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYAAA() (TB, TY, TA, TA, TA) { return _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYAAB() (TB, TY, TA, TA, TB) { return _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYAAC() (TB, TY, TA, TA, TC) { return _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYABX() (TB, TY, TA, TB, TX) { return _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYABY() (TB, TY, TA, TB, TY) { return _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYABZ() (TB, TY, TA, TB, TZ) { return _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYABW() (TB, TY, TA, TB, TW) { return _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYABA() (TB, TY, TA, TB, TA) { return _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYABB() (TB, TY, TA, TB, TB) { return _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYABC() (TB, TY, TA, TB, TC) { return _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYACX() (TB, TY, TA, TC, TX) { return _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYACY() (TB, TY, TA, TC, TY) { return _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYACZ() (TB, TY, TA, TC, TZ) { return _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYACW() (TB, TY, TA, TC, TW) { return _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYACA() (TB, TY, TA, TC, TA) { return _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYACB() (TB, TY, TA, TC, TB) { return _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYACC() (TB, TY, TA, TC, TC) { return _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYBXX() (TB, TY, TB, TX, TX) { return _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYBXY() (TB, TY, TB, TX, TY) { return _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYBXZ() (TB, TY, TB, TX, TZ) { return _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYBXW() (TB, TY, TB, TX, TW) { return _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYBXA() (TB, TY, TB, TX, TA) { return _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYBXB() (TB, TY, TB, TX, TB) { return _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYBXC() (TB, TY, TB, TX, TC) { return _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYBYX() (TB, TY, TB, TY, TX) { return _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYBYY() (TB, TY, TB, TY, TY) { return _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYBYZ() (TB, TY, TB, TY, TZ) { return _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYBYW() (TB, TY, TB, TY, TW) { return _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYBYA() (TB, TY, TB, TY, TA) { return _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYBYB() (TB, TY, TB, TY, TB) { return _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYBYC() (TB, TY, TB, TY, TC) { return _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYBZX() (TB, TY, TB, TZ, TX) { return _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYBZY() (TB, TY, TB, TZ, TY) { return _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYBZZ() (TB, TY, TB, TZ, TZ) { return _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYBZW() (TB, TY, TB, TZ, TW) { return _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYBZA() (TB, TY, TB, TZ, TA) { return _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYBZB() (TB, TY, TB, TZ, TB) { return _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYBZC() (TB, TY, TB, TZ, TC) { return _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYBWX() (TB, TY, TB, TW, TX) { return _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYBWY() (TB, TY, TB, TW, TY) { return _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYBWZ() (TB, TY, TB, TW, TZ) { return _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYBWW() (TB, TY, TB, TW, TW) { return _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYBWA() (TB, TY, TB, TW, TA) { return _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYBWB() (TB, TY, TB, TW, TB) { return _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYBWC() (TB, TY, TB, TW, TC) { return _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYBAX() (TB, TY, TB, TA, TX) { return _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYBAY() (TB, TY, TB, TA, TY) { return _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYBAZ() (TB, TY, TB, TA, TZ) { return _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYBAW() (TB, TY, TB, TA, TW) { return _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYBAA() (TB, TY, TB, TA, TA) { return _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYBAB() (TB, TY, TB, TA, TB) { return _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYBAC() (TB, TY, TB, TA, TC) { return _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYBBX() (TB, TY, TB, TB, TX) { return _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYBBY() (TB, TY, TB, TB, TY) { return _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYBBZ() (TB, TY, TB, TB, TZ) { return _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYBBW() (TB, TY, TB, TB, TW) { return _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYBBA() (TB, TY, TB, TB, TA) { return _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYBBB() (TB, TY, TB, TB, TB) { return _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYBBC() (TB, TY, TB, TB, TC) { return _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYBCX() (TB, TY, TB, TC, TX) { return _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYBCY() (TB, TY, TB, TC, TY) { return _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYBCZ() (TB, TY, TB, TC, TZ) { return _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYBCW() (TB, TY, TB, TC, TW) { return _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYBCA() (TB, TY, TB, TC, TA) { return _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYBCB() (TB, TY, TB, TC, TB) { return _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYBCC() (TB, TY, TB, TC, TC) { return _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYCXX() (TB, TY, TC, TX, TX) { return _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYCXY() (TB, TY, TC, TX, TY) { return _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYCXZ() (TB, TY, TC, TX, TZ) { return _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYCXW() (TB, TY, TC, TX, TW) { return _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYCXA() (TB, TY, TC, TX, TA) { return _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYCXB() (TB, TY, TC, TX, TB) { return _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYCXC() (TB, TY, TC, TX, TC) { return _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYCYX() (TB, TY, TC, TY, TX) { return _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYCYY() (TB, TY, TC, TY, TY) { return _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYCYZ() (TB, TY, TC, TY, TZ) { return _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYCYW() (TB, TY, TC, TY, TW) { return _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYCYA() (TB, TY, TC, TY, TA) { return _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYCYB() (TB, TY, TC, TY, TB) { return _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYCYC() (TB, TY, TC, TY, TC) { return _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYCZX() (TB, TY, TC, TZ, TX) { return _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYCZY() (TB, TY, TC, TZ, TY) { return _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYCZZ() (TB, TY, TC, TZ, TZ) { return _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYCZW() (TB, TY, TC, TZ, TW) { return _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYCZA() (TB, TY, TC, TZ, TA) { return _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYCZB() (TB, TY, TC, TZ, TB) { return _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYCZC() (TB, TY, TC, TZ, TC) { return _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYCWX() (TB, TY, TC, TW, TX) { return _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYCWY() (TB, TY, TC, TW, TY) { return _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYCWZ() (TB, TY, TC, TW, TZ) { return _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYCWW() (TB, TY, TC, TW, TW) { return _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYCWA() (TB, TY, TC, TW, TA) { return _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYCWB() (TB, TY, TC, TW, TB) { return _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYCWC() (TB, TY, TC, TW, TC) { return _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYCAX() (TB, TY, TC, TA, TX) { return _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYCAY() (TB, TY, TC, TA, TY) { return _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYCAZ() (TB, TY, TC, TA, TZ) { return _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYCAW() (TB, TY, TC, TA, TW) { return _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYCAA() (TB, TY, TC, TA, TA) { return _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYCAB() (TB, TY, TC, TA, TB) { return _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYCAC() (TB, TY, TC, TA, TC) { return _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYCBX() (TB, TY, TC, TB, TX) { return _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYCBY() (TB, TY, TC, TB, TY) { return _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYCBZ() (TB, TY, TC, TB, TZ) { return _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYCBW() (TB, TY, TC, TB, TW) { return _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYCBA() (TB, TY, TC, TB, TA) { return _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYCBB() (TB, TY, TC, TB, TB) { return _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYCBC() (TB, TY, TC, TB, TC) { return _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYCCX() (TB, TY, TC, TC, TX) { return _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYCCY() (TB, TY, TC, TC, TY) { return _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYCCZ() (TB, TY, TC, TC, TZ) { return _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYCCW() (TB, TY, TC, TC, TW) { return _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYCCA() (TB, TY, TC, TC, TA) { return _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYCCB() (TB, TY, TC, TC, TB) { return _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BYCCC() (TB, TY, TC, TC, TC) { return _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZXXX() (TB, TZ, TX, TX, TX) { return _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZXXY() (TB, TZ, TX, TX, TY) { return _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZXXZ() (TB, TZ, TX, TX, TZ) { return _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZXXW() (TB, TZ, TX, TX, TW) { return _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZXXA() (TB, TZ, TX, TX, TA) { return _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZXXB() (TB, TZ, TX, TX, TB) { return _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZXXC() (TB, TZ, TX, TX, TC) { return _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZXYX() (TB, TZ, TX, TY, TX) { return _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZXYY() (TB, TZ, TX, TY, TY) { return _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZXYZ() (TB, TZ, TX, TY, TZ) { return _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZXYW() (TB, TZ, TX, TY, TW) { return _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZXYA() (TB, TZ, TX, TY, TA) { return _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZXYB() (TB, TZ, TX, TY, TB) { return _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZXYC() (TB, TZ, TX, TY, TC) { return _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZXZX() (TB, TZ, TX, TZ, TX) { return _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZXZY() (TB, TZ, TX, TZ, TY) { return _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZXZZ() (TB, TZ, TX, TZ, TZ) { return _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZXZW() (TB, TZ, TX, TZ, TW) { return _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZXZA() (TB, TZ, TX, TZ, TA) { return _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZXZB() (TB, TZ, TX, TZ, TB) { return _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZXZC() (TB, TZ, TX, TZ, TC) { return _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZXWX() (TB, TZ, TX, TW, TX) { return _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZXWY() (TB, TZ, TX, TW, TY) { return _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZXWZ() (TB, TZ, TX, TW, TZ) { return _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZXWW() (TB, TZ, TX, TW, TW) { return _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZXWA() (TB, TZ, TX, TW, TA) { return _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZXWB() (TB, TZ, TX, TW, TB) { return _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZXWC() (TB, TZ, TX, TW, TC) { return _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZXAX() (TB, TZ, TX, TA, TX) { return _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZXAY() (TB, TZ, TX, TA, TY) { return _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZXAZ() (TB, TZ, TX, TA, TZ) { return _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZXAW() (TB, TZ, TX, TA, TW) { return _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZXAA() (TB, TZ, TX, TA, TA) { return _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZXAB() (TB, TZ, TX, TA, TB) { return _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZXAC() (TB, TZ, TX, TA, TC) { return _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZXBX() (TB, TZ, TX, TB, TX) { return _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZXBY() (TB, TZ, TX, TB, TY) { return _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZXBZ() (TB, TZ, TX, TB, TZ) { return _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZXBW() (TB, TZ, TX, TB, TW) { return _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZXBA() (TB, TZ, TX, TB, TA) { return _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZXBB() (TB, TZ, TX, TB, TB) { return _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZXBC() (TB, TZ, TX, TB, TC) { return _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZXCX() (TB, TZ, TX, TC, TX) { return _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZXCY() (TB, TZ, TX, TC, TY) { return _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZXCZ() (TB, TZ, TX, TC, TZ) { return _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZXCW() (TB, TZ, TX, TC, TW) { return _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZXCA() (TB, TZ, TX, TC, TA) { return _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZXCB() (TB, TZ, TX, TC, TB) { return _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZXCC() (TB, TZ, TX, TC, TC) { return _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZYXX() (TB, TZ, TY, TX, TX) { return _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZYXY() (TB, TZ, TY, TX, TY) { return _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZYXZ() (TB, TZ, TY, TX, TZ) { return _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZYXW() (TB, TZ, TY, TX, TW) { return _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZYXA() (TB, TZ, TY, TX, TA) { return _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZYXB() (TB, TZ, TY, TX, TB) { return _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZYXC() (TB, TZ, TY, TX, TC) { return _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZYYX() (TB, TZ, TY, TY, TX) { return _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZYYY() (TB, TZ, TY, TY, TY) { return _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZYYZ() (TB, TZ, TY, TY, TZ) { return _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZYYW() (TB, TZ, TY, TY, TW) { return _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZYYA() (TB, TZ, TY, TY, TA) { return _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZYYB() (TB, TZ, TY, TY, TB) { return _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZYYC() (TB, TZ, TY, TY, TC) { return _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZYZX() (TB, TZ, TY, TZ, TX) { return _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZYZY() (TB, TZ, TY, TZ, TY) { return _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZYZZ() (TB, TZ, TY, TZ, TZ) { return _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZYZW() (TB, TZ, TY, TZ, TW) { return _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZYZA() (TB, TZ, TY, TZ, TA) { return _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZYZB() (TB, TZ, TY, TZ, TB) { return _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZYZC() (TB, TZ, TY, TZ, TC) { return _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZYWX() (TB, TZ, TY, TW, TX) { return _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZYWY() (TB, TZ, TY, TW, TY) { return _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZYWZ() (TB, TZ, TY, TW, TZ) { return _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZYWW() (TB, TZ, TY, TW, TW) { return _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZYWA() (TB, TZ, TY, TW, TA) { return _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZYWB() (TB, TZ, TY, TW, TB) { return _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZYWC() (TB, TZ, TY, TW, TC) { return _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZYAX() (TB, TZ, TY, TA, TX) { return _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZYAY() (TB, TZ, TY, TA, TY) { return _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZYAZ() (TB, TZ, TY, TA, TZ) { return _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZYAW() (TB, TZ, TY, TA, TW) { return _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZYAA() (TB, TZ, TY, TA, TA) { return _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZYAB() (TB, TZ, TY, TA, TB) { return _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZYAC() (TB, TZ, TY, TA, TC) { return _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZYBX() (TB, TZ, TY, TB, TX) { return _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZYBY() (TB, TZ, TY, TB, TY) { return _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZYBZ() (TB, TZ, TY, TB, TZ) { return _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZYBW() (TB, TZ, TY, TB, TW) { return _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZYBA() (TB, TZ, TY, TB, TA) { return _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZYBB() (TB, TZ, TY, TB, TB) { return _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZYBC() (TB, TZ, TY, TB, TC) { return _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZYCX() (TB, TZ, TY, TC, TX) { return _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZYCY() (TB, TZ, TY, TC, TY) { return _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZYCZ() (TB, TZ, TY, TC, TZ) { return _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZYCW() (TB, TZ, TY, TC, TW) { return _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZYCA() (TB, TZ, TY, TC, TA) { return _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZYCB() (TB, TZ, TY, TC, TB) { return _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZYCC() (TB, TZ, TY, TC, TC) { return _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZZXX() (TB, TZ, TZ, TX, TX) { return _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZZXY() (TB, TZ, TZ, TX, TY) { return _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZZXZ() (TB, TZ, TZ, TX, TZ) { return _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZZXW() (TB, TZ, TZ, TX, TW) { return _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZZXA() (TB, TZ, TZ, TX, TA) { return _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZZXB() (TB, TZ, TZ, TX, TB) { return _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZZXC() (TB, TZ, TZ, TX, TC) { return _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZZYX() (TB, TZ, TZ, TY, TX) { return _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZZYY() (TB, TZ, TZ, TY, TY) { return _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZZYZ() (TB, TZ, TZ, TY, TZ) { return _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZZYW() (TB, TZ, TZ, TY, TW) { return _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZZYA() (TB, TZ, TZ, TY, TA) { return _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZZYB() (TB, TZ, TZ, TY, TB) { return _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZZYC() (TB, TZ, TZ, TY, TC) { return _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZZZX() (TB, TZ, TZ, TZ, TX) { return _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZZZY() (TB, TZ, TZ, TZ, TY) { return _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZZZZ() (TB, TZ, TZ, TZ, TZ) { return _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZZZW() (TB, TZ, TZ, TZ, TW) { return _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZZZA() (TB, TZ, TZ, TZ, TA) { return _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZZZB() (TB, TZ, TZ, TZ, TB) { return _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZZZC() (TB, TZ, TZ, TZ, TC) { return _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZZWX() (TB, TZ, TZ, TW, TX) { return _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZZWY() (TB, TZ, TZ, TW, TY) { return _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZZWZ() (TB, TZ, TZ, TW, TZ) { return _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZZWW() (TB, TZ, TZ, TW, TW) { return _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZZWA() (TB, TZ, TZ, TW, TA) { return _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZZWB() (TB, TZ, TZ, TW, TB) { return _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZZWC() (TB, TZ, TZ, TW, TC) { return _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZZAX() (TB, TZ, TZ, TA, TX) { return _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZZAY() (TB, TZ, TZ, TA, TY) { return _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZZAZ() (TB, TZ, TZ, TA, TZ) { return _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZZAW() (TB, TZ, TZ, TA, TW) { return _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZZAA() (TB, TZ, TZ, TA, TA) { return _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZZAB() (TB, TZ, TZ, TA, TB) { return _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZZAC() (TB, TZ, TZ, TA, TC) { return _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZZBX() (TB, TZ, TZ, TB, TX) { return _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZZBY() (TB, TZ, TZ, TB, TY) { return _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZZBZ() (TB, TZ, TZ, TB, TZ) { return _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZZBW() (TB, TZ, TZ, TB, TW) { return _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZZBA() (TB, TZ, TZ, TB, TA) { return _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZZBB() (TB, TZ, TZ, TB, TB) { return _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZZBC() (TB, TZ, TZ, TB, TC) { return _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZZCX() (TB, TZ, TZ, TC, TX) { return _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZZCY() (TB, TZ, TZ, TC, TY) { return _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZZCZ() (TB, TZ, TZ, TC, TZ) { return _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZZCW() (TB, TZ, TZ, TC, TW) { return _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZZCA() (TB, TZ, TZ, TC, TA) { return _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZZCB() (TB, TZ, TZ, TC, TB) { return _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZZCC() (TB, TZ, TZ, TC, TC) { return _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZWXX() (TB, TZ, TW, TX, TX) { return _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZWXY() (TB, TZ, TW, TX, TY) { return _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZWXZ() (TB, TZ, TW, TX, TZ) { return _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZWXW() (TB, TZ, TW, TX, TW) { return _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZWXA() (TB, TZ, TW, TX, TA) { return _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZWXB() (TB, TZ, TW, TX, TB) { return _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZWXC() (TB, TZ, TW, TX, TC) { return _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZWYX() (TB, TZ, TW, TY, TX) { return _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZWYY() (TB, TZ, TW, TY, TY) { return _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZWYZ() (TB, TZ, TW, TY, TZ) { return _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZWYW() (TB, TZ, TW, TY, TW) { return _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZWYA() (TB, TZ, TW, TY, TA) { return _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZWYB() (TB, TZ, TW, TY, TB) { return _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZWYC() (TB, TZ, TW, TY, TC) { return _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZWZX() (TB, TZ, TW, TZ, TX) { return _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZWZY() (TB, TZ, TW, TZ, TY) { return _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZWZZ() (TB, TZ, TW, TZ, TZ) { return _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZWZW() (TB, TZ, TW, TZ, TW) { return _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZWZA() (TB, TZ, TW, TZ, TA) { return _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZWZB() (TB, TZ, TW, TZ, TB) { return _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZWZC() (TB, TZ, TW, TZ, TC) { return _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZWWX() (TB, TZ, TW, TW, TX) { return _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZWWY() (TB, TZ, TW, TW, TY) { return _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZWWZ() (TB, TZ, TW, TW, TZ) { return _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZWWW() (TB, TZ, TW, TW, TW) { return _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZWWA() (TB, TZ, TW, TW, TA) { return _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZWWB() (TB, TZ, TW, TW, TB) { return _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZWWC() (TB, TZ, TW, TW, TC) { return _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZWAX() (TB, TZ, TW, TA, TX) { return _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZWAY() (TB, TZ, TW, TA, TY) { return _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZWAZ() (TB, TZ, TW, TA, TZ) { return _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZWAW() (TB, TZ, TW, TA, TW) { return _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZWAA() (TB, TZ, TW, TA, TA) { return _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZWAB() (TB, TZ, TW, TA, TB) { return _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZWAC() (TB, TZ, TW, TA, TC) { return _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZWBX() (TB, TZ, TW, TB, TX) { return _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZWBY() (TB, TZ, TW, TB, TY) { return _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZWBZ() (TB, TZ, TW, TB, TZ) { return _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZWBW() (TB, TZ, TW, TB, TW) { return _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZWBA() (TB, TZ, TW, TB, TA) { return _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZWBB() (TB, TZ, TW, TB, TB) { return _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZWBC() (TB, TZ, TW, TB, TC) { return _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZWCX() (TB, TZ, TW, TC, TX) { return _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZWCY() (TB, TZ, TW, TC, TY) { return _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZWCZ() (TB, TZ, TW, TC, TZ) { return _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZWCW() (TB, TZ, TW, TC, TW) { return _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZWCA() (TB, TZ, TW, TC, TA) { return _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZWCB() (TB, TZ, TW, TC, TB) { return _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZWCC() (TB, TZ, TW, TC, TC) { return _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZAXX() (TB, TZ, TA, TX, TX) { return _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZAXY() (TB, TZ, TA, TX, TY) { return _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZAXZ() (TB, TZ, TA, TX, TZ) { return _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZAXW() (TB, TZ, TA, TX, TW) { return _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZAXA() (TB, TZ, TA, TX, TA) { return _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZAXB() (TB, TZ, TA, TX, TB) { return _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZAXC() (TB, TZ, TA, TX, TC) { return _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZAYX() (TB, TZ, TA, TY, TX) { return _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZAYY() (TB, TZ, TA, TY, TY) { return _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZAYZ() (TB, TZ, TA, TY, TZ) { return _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZAYW() (TB, TZ, TA, TY, TW) { return _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZAYA() (TB, TZ, TA, TY, TA) { return _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZAYB() (TB, TZ, TA, TY, TB) { return _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZAYC() (TB, TZ, TA, TY, TC) { return _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZAZX() (TB, TZ, TA, TZ, TX) { return _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZAZY() (TB, TZ, TA, TZ, TY) { return _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZAZZ() (TB, TZ, TA, TZ, TZ) { return _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZAZW() (TB, TZ, TA, TZ, TW) { return _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZAZA() (TB, TZ, TA, TZ, TA) { return _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZAZB() (TB, TZ, TA, TZ, TB) { return _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZAZC() (TB, TZ, TA, TZ, TC) { return _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZAWX() (TB, TZ, TA, TW, TX) { return _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZAWY() (TB, TZ, TA, TW, TY) { return _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZAWZ() (TB, TZ, TA, TW, TZ) { return _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZAWW() (TB, TZ, TA, TW, TW) { return _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZAWA() (TB, TZ, TA, TW, TA) { return _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZAWB() (TB, TZ, TA, TW, TB) { return _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZAWC() (TB, TZ, TA, TW, TC) { return _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZAAX() (TB, TZ, TA, TA, TX) { return _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZAAY() (TB, TZ, TA, TA, TY) { return _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZAAZ() (TB, TZ, TA, TA, TZ) { return _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZAAW() (TB, TZ, TA, TA, TW) { return _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZAAA() (TB, TZ, TA, TA, TA) { return _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZAAB() (TB, TZ, TA, TA, TB) { return _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZAAC() (TB, TZ, TA, TA, TC) { return _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZABX() (TB, TZ, TA, TB, TX) { return _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZABY() (TB, TZ, TA, TB, TY) { return _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZABZ() (TB, TZ, TA, TB, TZ) { return _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZABW() (TB, TZ, TA, TB, TW) { return _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZABA() (TB, TZ, TA, TB, TA) { return _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZABB() (TB, TZ, TA, TB, TB) { return _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZABC() (TB, TZ, TA, TB, TC) { return _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZACX() (TB, TZ, TA, TC, TX) { return _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZACY() (TB, TZ, TA, TC, TY) { return _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZACZ() (TB, TZ, TA, TC, TZ) { return _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZACW() (TB, TZ, TA, TC, TW) { return _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZACA() (TB, TZ, TA, TC, TA) { return _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZACB() (TB, TZ, TA, TC, TB) { return _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZACC() (TB, TZ, TA, TC, TC) { return _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZBXX() (TB, TZ, TB, TX, TX) { return _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZBXY() (TB, TZ, TB, TX, TY) { return _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZBXZ() (TB, TZ, TB, TX, TZ) { return _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZBXW() (TB, TZ, TB, TX, TW) { return _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZBXA() (TB, TZ, TB, TX, TA) { return _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZBXB() (TB, TZ, TB, TX, TB) { return _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZBXC() (TB, TZ, TB, TX, TC) { return _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZBYX() (TB, TZ, TB, TY, TX) { return _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZBYY() (TB, TZ, TB, TY, TY) { return _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZBYZ() (TB, TZ, TB, TY, TZ) { return _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZBYW() (TB, TZ, TB, TY, TW) { return _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZBYA() (TB, TZ, TB, TY, TA) { return _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZBYB() (TB, TZ, TB, TY, TB) { return _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZBYC() (TB, TZ, TB, TY, TC) { return _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZBZX() (TB, TZ, TB, TZ, TX) { return _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZBZY() (TB, TZ, TB, TZ, TY) { return _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZBZZ() (TB, TZ, TB, TZ, TZ) { return _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZBZW() (TB, TZ, TB, TZ, TW) { return _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZBZA() (TB, TZ, TB, TZ, TA) { return _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZBZB() (TB, TZ, TB, TZ, TB) { return _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZBZC() (TB, TZ, TB, TZ, TC) { return _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZBWX() (TB, TZ, TB, TW, TX) { return _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZBWY() (TB, TZ, TB, TW, TY) { return _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZBWZ() (TB, TZ, TB, TW, TZ) { return _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZBWW() (TB, TZ, TB, TW, TW) { return _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZBWA() (TB, TZ, TB, TW, TA) { return _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZBWB() (TB, TZ, TB, TW, TB) { return _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZBWC() (TB, TZ, TB, TW, TC) { return _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZBAX() (TB, TZ, TB, TA, TX) { return _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZBAY() (TB, TZ, TB, TA, TY) { return _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZBAZ() (TB, TZ, TB, TA, TZ) { return _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZBAW() (TB, TZ, TB, TA, TW) { return _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZBAA() (TB, TZ, TB, TA, TA) { return _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZBAB() (TB, TZ, TB, TA, TB) { return _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZBAC() (TB, TZ, TB, TA, TC) { return _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZBBX() (TB, TZ, TB, TB, TX) { return _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZBBY() (TB, TZ, TB, TB, TY) { return _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZBBZ() (TB, TZ, TB, TB, TZ) { return _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZBBW() (TB, TZ, TB, TB, TW) { return _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZBBA() (TB, TZ, TB, TB, TA) { return _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZBBB() (TB, TZ, TB, TB, TB) { return _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZBBC() (TB, TZ, TB, TB, TC) { return _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZBCX() (TB, TZ, TB, TC, TX) { return _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZBCY() (TB, TZ, TB, TC, TY) { return _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZBCZ() (TB, TZ, TB, TC, TZ) { return _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZBCW() (TB, TZ, TB, TC, TW) { return _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZBCA() (TB, TZ, TB, TC, TA) { return _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZBCB() (TB, TZ, TB, TC, TB) { return _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZBCC() (TB, TZ, TB, TC, TC) { return _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZCXX() (TB, TZ, TC, TX, TX) { return _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZCXY() (TB, TZ, TC, TX, TY) { return _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZCXZ() (TB, TZ, TC, TX, TZ) { return _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZCXW() (TB, TZ, TC, TX, TW) { return _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZCXA() (TB, TZ, TC, TX, TA) { return _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZCXB() (TB, TZ, TC, TX, TB) { return _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZCXC() (TB, TZ, TC, TX, TC) { return _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZCYX() (TB, TZ, TC, TY, TX) { return _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZCYY() (TB, TZ, TC, TY, TY) { return _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZCYZ() (TB, TZ, TC, TY, TZ) { return _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZCYW() (TB, TZ, TC, TY, TW) { return _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZCYA() (TB, TZ, TC, TY, TA) { return _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZCYB() (TB, TZ, TC, TY, TB) { return _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZCYC() (TB, TZ, TC, TY, TC) { return _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZCZX() (TB, TZ, TC, TZ, TX) { return _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZCZY() (TB, TZ, TC, TZ, TY) { return _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZCZZ() (TB, TZ, TC, TZ, TZ) { return _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZCZW() (TB, TZ, TC, TZ, TW) { return _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZCZA() (TB, TZ, TC, TZ, TA) { return _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZCZB() (TB, TZ, TC, TZ, TB) { return _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZCZC() (TB, TZ, TC, TZ, TC) { return _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZCWX() (TB, TZ, TC, TW, TX) { return _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZCWY() (TB, TZ, TC, TW, TY) { return _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZCWZ() (TB, TZ, TC, TW, TZ) { return _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZCWW() (TB, TZ, TC, TW, TW) { return _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZCWA() (TB, TZ, TC, TW, TA) { return _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZCWB() (TB, TZ, TC, TW, TB) { return _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZCWC() (TB, TZ, TC, TW, TC) { return _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZCAX() (TB, TZ, TC, TA, TX) { return _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZCAY() (TB, TZ, TC, TA, TY) { return _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZCAZ() (TB, TZ, TC, TA, TZ) { return _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZCAW() (TB, TZ, TC, TA, TW) { return _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZCAA() (TB, TZ, TC, TA, TA) { return _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZCAB() (TB, TZ, TC, TA, TB) { return _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZCAC() (TB, TZ, TC, TA, TC) { return _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZCBX() (TB, TZ, TC, TB, TX) { return _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZCBY() (TB, TZ, TC, TB, TY) { return _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZCBZ() (TB, TZ, TC, TB, TZ) { return _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZCBW() (TB, TZ, TC, TB, TW) { return _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZCBA() (TB, TZ, TC, TB, TA) { return _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZCBB() (TB, TZ, TC, TB, TB) { return _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZCBC() (TB, TZ, TC, TB, TC) { return _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZCCX() (TB, TZ, TC, TC, TX) { return _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZCCY() (TB, TZ, TC, TC, TY) { return _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZCCZ() (TB, TZ, TC, TC, TZ) { return _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZCCW() (TB, TZ, TC, TC, TW) { return _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZCCA() (TB, TZ, TC, TC, TA) { return _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZCCB() (TB, TZ, TC, TC, TB) { return _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BZCCC() (TB, TZ, TC, TC, TC) { return _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWXXX() (TB, TW, TX, TX, TX) { return _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWXXY() (TB, TW, TX, TX, TY) { return _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWXXZ() (TB, TW, TX, TX, TZ) { return _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWXXW() (TB, TW, TX, TX, TW) { return _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWXXA() (TB, TW, TX, TX, TA) { return _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWXXB() (TB, TW, TX, TX, TB) { return _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWXXC() (TB, TW, TX, TX, TC) { return _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWXYX() (TB, TW, TX, TY, TX) { return _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWXYY() (TB, TW, TX, TY, TY) { return _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWXYZ() (TB, TW, TX, TY, TZ) { return _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWXYW() (TB, TW, TX, TY, TW) { return _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWXYA() (TB, TW, TX, TY, TA) { return _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWXYB() (TB, TW, TX, TY, TB) { return _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWXYC() (TB, TW, TX, TY, TC) { return _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWXZX() (TB, TW, TX, TZ, TX) { return _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWXZY() (TB, TW, TX, TZ, TY) { return _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWXZZ() (TB, TW, TX, TZ, TZ) { return _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWXZW() (TB, TW, TX, TZ, TW) { return _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWXZA() (TB, TW, TX, TZ, TA) { return _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWXZB() (TB, TW, TX, TZ, TB) { return _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWXZC() (TB, TW, TX, TZ, TC) { return _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWXWX() (TB, TW, TX, TW, TX) { return _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWXWY() (TB, TW, TX, TW, TY) { return _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWXWZ() (TB, TW, TX, TW, TZ) { return _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWXWW() (TB, TW, TX, TW, TW) { return _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWXWA() (TB, TW, TX, TW, TA) { return _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWXWB() (TB, TW, TX, TW, TB) { return _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWXWC() (TB, TW, TX, TW, TC) { return _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWXAX() (TB, TW, TX, TA, TX) { return _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWXAY() (TB, TW, TX, TA, TY) { return _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWXAZ() (TB, TW, TX, TA, TZ) { return _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWXAW() (TB, TW, TX, TA, TW) { return _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWXAA() (TB, TW, TX, TA, TA) { return _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWXAB() (TB, TW, TX, TA, TB) { return _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWXAC() (TB, TW, TX, TA, TC) { return _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWXBX() (TB, TW, TX, TB, TX) { return _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWXBY() (TB, TW, TX, TB, TY) { return _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWXBZ() (TB, TW, TX, TB, TZ) { return _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWXBW() (TB, TW, TX, TB, TW) { return _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWXBA() (TB, TW, TX, TB, TA) { return _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWXBB() (TB, TW, TX, TB, TB) { return _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWXBC() (TB, TW, TX, TB, TC) { return _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWXCX() (TB, TW, TX, TC, TX) { return _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWXCY() (TB, TW, TX, TC, TY) { return _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWXCZ() (TB, TW, TX, TC, TZ) { return _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWXCW() (TB, TW, TX, TC, TW) { return _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWXCA() (TB, TW, TX, TC, TA) { return _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWXCB() (TB, TW, TX, TC, TB) { return _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWXCC() (TB, TW, TX, TC, TC) { return _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWYXX() (TB, TW, TY, TX, TX) { return _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWYXY() (TB, TW, TY, TX, TY) { return _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWYXZ() (TB, TW, TY, TX, TZ) { return _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWYXW() (TB, TW, TY, TX, TW) { return _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWYXA() (TB, TW, TY, TX, TA) { return _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWYXB() (TB, TW, TY, TX, TB) { return _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWYXC() (TB, TW, TY, TX, TC) { return _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWYYX() (TB, TW, TY, TY, TX) { return _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWYYY() (TB, TW, TY, TY, TY) { return _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWYYZ() (TB, TW, TY, TY, TZ) { return _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWYYW() (TB, TW, TY, TY, TW) { return _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWYYA() (TB, TW, TY, TY, TA) { return _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWYYB() (TB, TW, TY, TY, TB) { return _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWYYC() (TB, TW, TY, TY, TC) { return _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWYZX() (TB, TW, TY, TZ, TX) { return _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWYZY() (TB, TW, TY, TZ, TY) { return _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWYZZ() (TB, TW, TY, TZ, TZ) { return _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWYZW() (TB, TW, TY, TZ, TW) { return _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWYZA() (TB, TW, TY, TZ, TA) { return _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWYZB() (TB, TW, TY, TZ, TB) { return _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWYZC() (TB, TW, TY, TZ, TC) { return _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWYWX() (TB, TW, TY, TW, TX) { return _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWYWY() (TB, TW, TY, TW, TY) { return _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWYWZ() (TB, TW, TY, TW, TZ) { return _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWYWW() (TB, TW, TY, TW, TW) { return _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWYWA() (TB, TW, TY, TW, TA) { return _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWYWB() (TB, TW, TY, TW, TB) { return _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWYWC() (TB, TW, TY, TW, TC) { return _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWYAX() (TB, TW, TY, TA, TX) { return _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWYAY() (TB, TW, TY, TA, TY) { return _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWYAZ() (TB, TW, TY, TA, TZ) { return _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWYAW() (TB, TW, TY, TA, TW) { return _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWYAA() (TB, TW, TY, TA, TA) { return _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWYAB() (TB, TW, TY, TA, TB) { return _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWYAC() (TB, TW, TY, TA, TC) { return _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWYBX() (TB, TW, TY, TB, TX) { return _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWYBY() (TB, TW, TY, TB, TY) { return _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWYBZ() (TB, TW, TY, TB, TZ) { return _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWYBW() (TB, TW, TY, TB, TW) { return _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWYBA() (TB, TW, TY, TB, TA) { return _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWYBB() (TB, TW, TY, TB, TB) { return _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWYBC() (TB, TW, TY, TB, TC) { return _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWYCX() (TB, TW, TY, TC, TX) { return _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWYCY() (TB, TW, TY, TC, TY) { return _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWYCZ() (TB, TW, TY, TC, TZ) { return _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWYCW() (TB, TW, TY, TC, TW) { return _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWYCA() (TB, TW, TY, TC, TA) { return _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWYCB() (TB, TW, TY, TC, TB) { return _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWYCC() (TB, TW, TY, TC, TC) { return _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWZXX() (TB, TW, TZ, TX, TX) { return _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWZXY() (TB, TW, TZ, TX, TY) { return _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWZXZ() (TB, TW, TZ, TX, TZ) { return _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWZXW() (TB, TW, TZ, TX, TW) { return _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWZXA() (TB, TW, TZ, TX, TA) { return _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWZXB() (TB, TW, TZ, TX, TB) { return _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWZXC() (TB, TW, TZ, TX, TC) { return _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWZYX() (TB, TW, TZ, TY, TX) { return _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWZYY() (TB, TW, TZ, TY, TY) { return _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWZYZ() (TB, TW, TZ, TY, TZ) { return _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWZYW() (TB, TW, TZ, TY, TW) { return _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWZYA() (TB, TW, TZ, TY, TA) { return _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWZYB() (TB, TW, TZ, TY, TB) { return _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWZYC() (TB, TW, TZ, TY, TC) { return _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWZZX() (TB, TW, TZ, TZ, TX) { return _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWZZY() (TB, TW, TZ, TZ, TY) { return _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWZZZ() (TB, TW, TZ, TZ, TZ) { return _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWZZW() (TB, TW, TZ, TZ, TW) { return _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWZZA() (TB, TW, TZ, TZ, TA) { return _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWZZB() (TB, TW, TZ, TZ, TB) { return _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWZZC() (TB, TW, TZ, TZ, TC) { return _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWZWX() (TB, TW, TZ, TW, TX) { return _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWZWY() (TB, TW, TZ, TW, TY) { return _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWZWZ() (TB, TW, TZ, TW, TZ) { return _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWZWW() (TB, TW, TZ, TW, TW) { return _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWZWA() (TB, TW, TZ, TW, TA) { return _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWZWB() (TB, TW, TZ, TW, TB) { return _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWZWC() (TB, TW, TZ, TW, TC) { return _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWZAX() (TB, TW, TZ, TA, TX) { return _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWZAY() (TB, TW, TZ, TA, TY) { return _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWZAZ() (TB, TW, TZ, TA, TZ) { return _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWZAW() (TB, TW, TZ, TA, TW) { return _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWZAA() (TB, TW, TZ, TA, TA) { return _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWZAB() (TB, TW, TZ, TA, TB) { return _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWZAC() (TB, TW, TZ, TA, TC) { return _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWZBX() (TB, TW, TZ, TB, TX) { return _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWZBY() (TB, TW, TZ, TB, TY) { return _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWZBZ() (TB, TW, TZ, TB, TZ) { return _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWZBW() (TB, TW, TZ, TB, TW) { return _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWZBA() (TB, TW, TZ, TB, TA) { return _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWZBB() (TB, TW, TZ, TB, TB) { return _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWZBC() (TB, TW, TZ, TB, TC) { return _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWZCX() (TB, TW, TZ, TC, TX) { return _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWZCY() (TB, TW, TZ, TC, TY) { return _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWZCZ() (TB, TW, TZ, TC, TZ) { return _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWZCW() (TB, TW, TZ, TC, TW) { return _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWZCA() (TB, TW, TZ, TC, TA) { return _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWZCB() (TB, TW, TZ, TC, TB) { return _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWZCC() (TB, TW, TZ, TC, TC) { return _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWWXX() (TB, TW, TW, TX, TX) { return _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWWXY() (TB, TW, TW, TX, TY) { return _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWWXZ() (TB, TW, TW, TX, TZ) { return _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWWXW() (TB, TW, TW, TX, TW) { return _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWWXA() (TB, TW, TW, TX, TA) { return _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWWXB() (TB, TW, TW, TX, TB) { return _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWWXC() (TB, TW, TW, TX, TC) { return _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWWYX() (TB, TW, TW, TY, TX) { return _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWWYY() (TB, TW, TW, TY, TY) { return _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWWYZ() (TB, TW, TW, TY, TZ) { return _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWWYW() (TB, TW, TW, TY, TW) { return _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWWYA() (TB, TW, TW, TY, TA) { return _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWWYB() (TB, TW, TW, TY, TB) { return _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWWYC() (TB, TW, TW, TY, TC) { return _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWWZX() (TB, TW, TW, TZ, TX) { return _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWWZY() (TB, TW, TW, TZ, TY) { return _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWWZZ() (TB, TW, TW, TZ, TZ) { return _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWWZW() (TB, TW, TW, TZ, TW) { return _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWWZA() (TB, TW, TW, TZ, TA) { return _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWWZB() (TB, TW, TW, TZ, TB) { return _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWWZC() (TB, TW, TW, TZ, TC) { return _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWWWX() (TB, TW, TW, TW, TX) { return _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWWWY() (TB, TW, TW, TW, TY) { return _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWWWZ() (TB, TW, TW, TW, TZ) { return _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWWWW() (TB, TW, TW, TW, TW) { return _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWWWA() (TB, TW, TW, TW, TA) { return _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWWWB() (TB, TW, TW, TW, TB) { return _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWWWC() (TB, TW, TW, TW, TC) { return _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWWAX() (TB, TW, TW, TA, TX) { return _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWWAY() (TB, TW, TW, TA, TY) { return _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWWAZ() (TB, TW, TW, TA, TZ) { return _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWWAW() (TB, TW, TW, TA, TW) { return _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWWAA() (TB, TW, TW, TA, TA) { return _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWWAB() (TB, TW, TW, TA, TB) { return _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWWAC() (TB, TW, TW, TA, TC) { return _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWWBX() (TB, TW, TW, TB, TX) { return _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWWBY() (TB, TW, TW, TB, TY) { return _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWWBZ() (TB, TW, TW, TB, TZ) { return _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWWBW() (TB, TW, TW, TB, TW) { return _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWWBA() (TB, TW, TW, TB, TA) { return _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWWBB() (TB, TW, TW, TB, TB) { return _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWWBC() (TB, TW, TW, TB, TC) { return _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWWCX() (TB, TW, TW, TC, TX) { return _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWWCY() (TB, TW, TW, TC, TY) { return _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWWCZ() (TB, TW, TW, TC, TZ) { return _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWWCW() (TB, TW, TW, TC, TW) { return _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWWCA() (TB, TW, TW, TC, TA) { return _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWWCB() (TB, TW, TW, TC, TB) { return _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWWCC() (TB, TW, TW, TC, TC) { return _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWAXX() (TB, TW, TA, TX, TX) { return _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWAXY() (TB, TW, TA, TX, TY) { return _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWAXZ() (TB, TW, TA, TX, TZ) { return _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWAXW() (TB, TW, TA, TX, TW) { return _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWAXA() (TB, TW, TA, TX, TA) { return _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWAXB() (TB, TW, TA, TX, TB) { return _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWAXC() (TB, TW, TA, TX, TC) { return _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWAYX() (TB, TW, TA, TY, TX) { return _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWAYY() (TB, TW, TA, TY, TY) { return _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWAYZ() (TB, TW, TA, TY, TZ) { return _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWAYW() (TB, TW, TA, TY, TW) { return _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWAYA() (TB, TW, TA, TY, TA) { return _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWAYB() (TB, TW, TA, TY, TB) { return _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWAYC() (TB, TW, TA, TY, TC) { return _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWAZX() (TB, TW, TA, TZ, TX) { return _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWAZY() (TB, TW, TA, TZ, TY) { return _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWAZZ() (TB, TW, TA, TZ, TZ) { return _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWAZW() (TB, TW, TA, TZ, TW) { return _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWAZA() (TB, TW, TA, TZ, TA) { return _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWAZB() (TB, TW, TA, TZ, TB) { return _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWAZC() (TB, TW, TA, TZ, TC) { return _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWAWX() (TB, TW, TA, TW, TX) { return _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWAWY() (TB, TW, TA, TW, TY) { return _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWAWZ() (TB, TW, TA, TW, TZ) { return _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWAWW() (TB, TW, TA, TW, TW) { return _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWAWA() (TB, TW, TA, TW, TA) { return _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWAWB() (TB, TW, TA, TW, TB) { return _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWAWC() (TB, TW, TA, TW, TC) { return _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWAAX() (TB, TW, TA, TA, TX) { return _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWAAY() (TB, TW, TA, TA, TY) { return _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWAAZ() (TB, TW, TA, TA, TZ) { return _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWAAW() (TB, TW, TA, TA, TW) { return _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWAAA() (TB, TW, TA, TA, TA) { return _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWAAB() (TB, TW, TA, TA, TB) { return _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWAAC() (TB, TW, TA, TA, TC) { return _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWABX() (TB, TW, TA, TB, TX) { return _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWABY() (TB, TW, TA, TB, TY) { return _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWABZ() (TB, TW, TA, TB, TZ) { return _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWABW() (TB, TW, TA, TB, TW) { return _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWABA() (TB, TW, TA, TB, TA) { return _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWABB() (TB, TW, TA, TB, TB) { return _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWABC() (TB, TW, TA, TB, TC) { return _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWACX() (TB, TW, TA, TC, TX) { return _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWACY() (TB, TW, TA, TC, TY) { return _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWACZ() (TB, TW, TA, TC, TZ) { return _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWACW() (TB, TW, TA, TC, TW) { return _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWACA() (TB, TW, TA, TC, TA) { return _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWACB() (TB, TW, TA, TC, TB) { return _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWACC() (TB, TW, TA, TC, TC) { return _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWBXX() (TB, TW, TB, TX, TX) { return _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWBXY() (TB, TW, TB, TX, TY) { return _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWBXZ() (TB, TW, TB, TX, TZ) { return _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWBXW() (TB, TW, TB, TX, TW) { return _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWBXA() (TB, TW, TB, TX, TA) { return _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWBXB() (TB, TW, TB, TX, TB) { return _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWBXC() (TB, TW, TB, TX, TC) { return _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWBYX() (TB, TW, TB, TY, TX) { return _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWBYY() (TB, TW, TB, TY, TY) { return _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWBYZ() (TB, TW, TB, TY, TZ) { return _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWBYW() (TB, TW, TB, TY, TW) { return _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWBYA() (TB, TW, TB, TY, TA) { return _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWBYB() (TB, TW, TB, TY, TB) { return _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWBYC() (TB, TW, TB, TY, TC) { return _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWBZX() (TB, TW, TB, TZ, TX) { return _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWBZY() (TB, TW, TB, TZ, TY) { return _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWBZZ() (TB, TW, TB, TZ, TZ) { return _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWBZW() (TB, TW, TB, TZ, TW) { return _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWBZA() (TB, TW, TB, TZ, TA) { return _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWBZB() (TB, TW, TB, TZ, TB) { return _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWBZC() (TB, TW, TB, TZ, TC) { return _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWBWX() (TB, TW, TB, TW, TX) { return _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWBWY() (TB, TW, TB, TW, TY) { return _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWBWZ() (TB, TW, TB, TW, TZ) { return _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWBWW() (TB, TW, TB, TW, TW) { return _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWBWA() (TB, TW, TB, TW, TA) { return _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWBWB() (TB, TW, TB, TW, TB) { return _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWBWC() (TB, TW, TB, TW, TC) { return _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWBAX() (TB, TW, TB, TA, TX) { return _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWBAY() (TB, TW, TB, TA, TY) { return _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWBAZ() (TB, TW, TB, TA, TZ) { return _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWBAW() (TB, TW, TB, TA, TW) { return _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWBAA() (TB, TW, TB, TA, TA) { return _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWBAB() (TB, TW, TB, TA, TB) { return _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWBAC() (TB, TW, TB, TA, TC) { return _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWBBX() (TB, TW, TB, TB, TX) { return _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWBBY() (TB, TW, TB, TB, TY) { return _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWBBZ() (TB, TW, TB, TB, TZ) { return _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWBBW() (TB, TW, TB, TB, TW) { return _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWBBA() (TB, TW, TB, TB, TA) { return _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWBBB() (TB, TW, TB, TB, TB) { return _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWBBC() (TB, TW, TB, TB, TC) { return _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWBCX() (TB, TW, TB, TC, TX) { return _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWBCY() (TB, TW, TB, TC, TY) { return _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWBCZ() (TB, TW, TB, TC, TZ) { return _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWBCW() (TB, TW, TB, TC, TW) { return _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWBCA() (TB, TW, TB, TC, TA) { return _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWBCB() (TB, TW, TB, TC, TB) { return _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWBCC() (TB, TW, TB, TC, TC) { return _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWCXX() (TB, TW, TC, TX, TX) { return _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWCXY() (TB, TW, TC, TX, TY) { return _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWCXZ() (TB, TW, TC, TX, TZ) { return _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWCXW() (TB, TW, TC, TX, TW) { return _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWCXA() (TB, TW, TC, TX, TA) { return _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWCXB() (TB, TW, TC, TX, TB) { return _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWCXC() (TB, TW, TC, TX, TC) { return _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWCYX() (TB, TW, TC, TY, TX) { return _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWCYY() (TB, TW, TC, TY, TY) { return _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWCYZ() (TB, TW, TC, TY, TZ) { return _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWCYW() (TB, TW, TC, TY, TW) { return _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWCYA() (TB, TW, TC, TY, TA) { return _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWCYB() (TB, TW, TC, TY, TB) { return _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWCYC() (TB, TW, TC, TY, TC) { return _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWCZX() (TB, TW, TC, TZ, TX) { return _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWCZY() (TB, TW, TC, TZ, TY) { return _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWCZZ() (TB, TW, TC, TZ, TZ) { return _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWCZW() (TB, TW, TC, TZ, TW) { return _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWCZA() (TB, TW, TC, TZ, TA) { return _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWCZB() (TB, TW, TC, TZ, TB) { return _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWCZC() (TB, TW, TC, TZ, TC) { return _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWCWX() (TB, TW, TC, TW, TX) { return _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWCWY() (TB, TW, TC, TW, TY) { return _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWCWZ() (TB, TW, TC, TW, TZ) { return _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWCWW() (TB, TW, TC, TW, TW) { return _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWCWA() (TB, TW, TC, TW, TA) { return _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWCWB() (TB, TW, TC, TW, TB) { return _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWCWC() (TB, TW, TC, TW, TC) { return _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWCAX() (TB, TW, TC, TA, TX) { return _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWCAY() (TB, TW, TC, TA, TY) { return _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWCAZ() (TB, TW, TC, TA, TZ) { return _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWCAW() (TB, TW, TC, TA, TW) { return _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWCAA() (TB, TW, TC, TA, TA) { return _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWCAB() (TB, TW, TC, TA, TB) { return _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWCAC() (TB, TW, TC, TA, TC) { return _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWCBX() (TB, TW, TC, TB, TX) { return _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWCBY() (TB, TW, TC, TB, TY) { return _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWCBZ() (TB, TW, TC, TB, TZ) { return _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWCBW() (TB, TW, TC, TB, TW) { return _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWCBA() (TB, TW, TC, TB, TA) { return _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWCBB() (TB, TW, TC, TB, TB) { return _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWCBC() (TB, TW, TC, TB, TC) { return _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWCCX() (TB, TW, TC, TC, TX) { return _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWCCY() (TB, TW, TC, TC, TY) { return _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWCCZ() (TB, TW, TC, TC, TZ) { return _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWCCW() (TB, TW, TC, TC, TW) { return _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWCCA() (TB, TW, TC, TC, TA) { return _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWCCB() (TB, TW, TC, TC, TB) { return _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BWCCC() (TB, TW, TC, TC, TC) { return _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAXXX() (TB, TA, TX, TX, TX) { return _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAXXY() (TB, TA, TX, TX, TY) { return _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAXXZ() (TB, TA, TX, TX, TZ) { return _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAXXW() (TB, TA, TX, TX, TW) { return _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAXXA() (TB, TA, TX, TX, TA) { return _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAXXB() (TB, TA, TX, TX, TB) { return _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAXXC() (TB, TA, TX, TX, TC) { return _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAXYX() (TB, TA, TX, TY, TX) { return _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAXYY() (TB, TA, TX, TY, TY) { return _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAXYZ() (TB, TA, TX, TY, TZ) { return _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAXYW() (TB, TA, TX, TY, TW) { return _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAXYA() (TB, TA, TX, TY, TA) { return _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAXYB() (TB, TA, TX, TY, TB) { return _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAXYC() (TB, TA, TX, TY, TC) { return _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAXZX() (TB, TA, TX, TZ, TX) { return _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAXZY() (TB, TA, TX, TZ, TY) { return _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAXZZ() (TB, TA, TX, TZ, TZ) { return _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAXZW() (TB, TA, TX, TZ, TW) { return _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAXZA() (TB, TA, TX, TZ, TA) { return _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAXZB() (TB, TA, TX, TZ, TB) { return _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAXZC() (TB, TA, TX, TZ, TC) { return _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAXWX() (TB, TA, TX, TW, TX) { return _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAXWY() (TB, TA, TX, TW, TY) { return _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAXWZ() (TB, TA, TX, TW, TZ) { return _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAXWW() (TB, TA, TX, TW, TW) { return _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAXWA() (TB, TA, TX, TW, TA) { return _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAXWB() (TB, TA, TX, TW, TB) { return _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAXWC() (TB, TA, TX, TW, TC) { return _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAXAX() (TB, TA, TX, TA, TX) { return _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAXAY() (TB, TA, TX, TA, TY) { return _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAXAZ() (TB, TA, TX, TA, TZ) { return _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAXAW() (TB, TA, TX, TA, TW) { return _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAXAA() (TB, TA, TX, TA, TA) { return _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAXAB() (TB, TA, TX, TA, TB) { return _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAXAC() (TB, TA, TX, TA, TC) { return _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAXBX() (TB, TA, TX, TB, TX) { return _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAXBY() (TB, TA, TX, TB, TY) { return _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAXBZ() (TB, TA, TX, TB, TZ) { return _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAXBW() (TB, TA, TX, TB, TW) { return _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAXBA() (TB, TA, TX, TB, TA) { return _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAXBB() (TB, TA, TX, TB, TB) { return _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAXBC() (TB, TA, TX, TB, TC) { return _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAXCX() (TB, TA, TX, TC, TX) { return _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAXCY() (TB, TA, TX, TC, TY) { return _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAXCZ() (TB, TA, TX, TC, TZ) { return _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAXCW() (TB, TA, TX, TC, TW) { return _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAXCA() (TB, TA, TX, TC, TA) { return _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAXCB() (TB, TA, TX, TC, TB) { return _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAXCC() (TB, TA, TX, TC, TC) { return _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAYXX() (TB, TA, TY, TX, TX) { return _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAYXY() (TB, TA, TY, TX, TY) { return _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAYXZ() (TB, TA, TY, TX, TZ) { return _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAYXW() (TB, TA, TY, TX, TW) { return _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAYXA() (TB, TA, TY, TX, TA) { return _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAYXB() (TB, TA, TY, TX, TB) { return _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAYXC() (TB, TA, TY, TX, TC) { return _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAYYX() (TB, TA, TY, TY, TX) { return _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAYYY() (TB, TA, TY, TY, TY) { return _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAYYZ() (TB, TA, TY, TY, TZ) { return _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAYYW() (TB, TA, TY, TY, TW) { return _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAYYA() (TB, TA, TY, TY, TA) { return _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAYYB() (TB, TA, TY, TY, TB) { return _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAYYC() (TB, TA, TY, TY, TC) { return _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAYZX() (TB, TA, TY, TZ, TX) { return _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAYZY() (TB, TA, TY, TZ, TY) { return _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAYZZ() (TB, TA, TY, TZ, TZ) { return _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAYZW() (TB, TA, TY, TZ, TW) { return _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAYZA() (TB, TA, TY, TZ, TA) { return _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAYZB() (TB, TA, TY, TZ, TB) { return _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAYZC() (TB, TA, TY, TZ, TC) { return _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAYWX() (TB, TA, TY, TW, TX) { return _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAYWY() (TB, TA, TY, TW, TY) { return _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAYWZ() (TB, TA, TY, TW, TZ) { return _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAYWW() (TB, TA, TY, TW, TW) { return _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAYWA() (TB, TA, TY, TW, TA) { return _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAYWB() (TB, TA, TY, TW, TB) { return _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAYWC() (TB, TA, TY, TW, TC) { return _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAYAX() (TB, TA, TY, TA, TX) { return _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAYAY() (TB, TA, TY, TA, TY) { return _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAYAZ() (TB, TA, TY, TA, TZ) { return _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAYAW() (TB, TA, TY, TA, TW) { return _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAYAA() (TB, TA, TY, TA, TA) { return _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAYAB() (TB, TA, TY, TA, TB) { return _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAYAC() (TB, TA, TY, TA, TC) { return _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAYBX() (TB, TA, TY, TB, TX) { return _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAYBY() (TB, TA, TY, TB, TY) { return _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAYBZ() (TB, TA, TY, TB, TZ) { return _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAYBW() (TB, TA, TY, TB, TW) { return _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAYBA() (TB, TA, TY, TB, TA) { return _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAYBB() (TB, TA, TY, TB, TB) { return _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAYBC() (TB, TA, TY, TB, TC) { return _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAYCX() (TB, TA, TY, TC, TX) { return _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAYCY() (TB, TA, TY, TC, TY) { return _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAYCZ() (TB, TA, TY, TC, TZ) { return _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAYCW() (TB, TA, TY, TC, TW) { return _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAYCA() (TB, TA, TY, TC, TA) { return _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAYCB() (TB, TA, TY, TC, TB) { return _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAYCC() (TB, TA, TY, TC, TC) { return _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAZXX() (TB, TA, TZ, TX, TX) { return _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAZXY() (TB, TA, TZ, TX, TY) { return _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAZXZ() (TB, TA, TZ, TX, TZ) { return _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAZXW() (TB, TA, TZ, TX, TW) { return _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAZXA() (TB, TA, TZ, TX, TA) { return _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAZXB() (TB, TA, TZ, TX, TB) { return _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAZXC() (TB, TA, TZ, TX, TC) { return _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAZYX() (TB, TA, TZ, TY, TX) { return _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAZYY() (TB, TA, TZ, TY, TY) { return _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAZYZ() (TB, TA, TZ, TY, TZ) { return _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAZYW() (TB, TA, TZ, TY, TW) { return _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAZYA() (TB, TA, TZ, TY, TA) { return _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAZYB() (TB, TA, TZ, TY, TB) { return _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAZYC() (TB, TA, TZ, TY, TC) { return _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAZZX() (TB, TA, TZ, TZ, TX) { return _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAZZY() (TB, TA, TZ, TZ, TY) { return _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAZZZ() (TB, TA, TZ, TZ, TZ) { return _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAZZW() (TB, TA, TZ, TZ, TW) { return _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAZZA() (TB, TA, TZ, TZ, TA) { return _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAZZB() (TB, TA, TZ, TZ, TB) { return _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAZZC() (TB, TA, TZ, TZ, TC) { return _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAZWX() (TB, TA, TZ, TW, TX) { return _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAZWY() (TB, TA, TZ, TW, TY) { return _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAZWZ() (TB, TA, TZ, TW, TZ) { return _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAZWW() (TB, TA, TZ, TW, TW) { return _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAZWA() (TB, TA, TZ, TW, TA) { return _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAZWB() (TB, TA, TZ, TW, TB) { return _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAZWC() (TB, TA, TZ, TW, TC) { return _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAZAX() (TB, TA, TZ, TA, TX) { return _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAZAY() (TB, TA, TZ, TA, TY) { return _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAZAZ() (TB, TA, TZ, TA, TZ) { return _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAZAW() (TB, TA, TZ, TA, TW) { return _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAZAA() (TB, TA, TZ, TA, TA) { return _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAZAB() (TB, TA, TZ, TA, TB) { return _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAZAC() (TB, TA, TZ, TA, TC) { return _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAZBX() (TB, TA, TZ, TB, TX) { return _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAZBY() (TB, TA, TZ, TB, TY) { return _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAZBZ() (TB, TA, TZ, TB, TZ) { return _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAZBW() (TB, TA, TZ, TB, TW) { return _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAZBA() (TB, TA, TZ, TB, TA) { return _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAZBB() (TB, TA, TZ, TB, TB) { return _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAZBC() (TB, TA, TZ, TB, TC) { return _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAZCX() (TB, TA, TZ, TC, TX) { return _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAZCY() (TB, TA, TZ, TC, TY) { return _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAZCZ() (TB, TA, TZ, TC, TZ) { return _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAZCW() (TB, TA, TZ, TC, TW) { return _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAZCA() (TB, TA, TZ, TC, TA) { return _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAZCB() (TB, TA, TZ, TC, TB) { return _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAZCC() (TB, TA, TZ, TC, TC) { return _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAWXX() (TB, TA, TW, TX, TX) { return _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAWXY() (TB, TA, TW, TX, TY) { return _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAWXZ() (TB, TA, TW, TX, TZ) { return _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAWXW() (TB, TA, TW, TX, TW) { return _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAWXA() (TB, TA, TW, TX, TA) { return _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAWXB() (TB, TA, TW, TX, TB) { return _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAWXC() (TB, TA, TW, TX, TC) { return _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAWYX() (TB, TA, TW, TY, TX) { return _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAWYY() (TB, TA, TW, TY, TY) { return _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAWYZ() (TB, TA, TW, TY, TZ) { return _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAWYW() (TB, TA, TW, TY, TW) { return _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAWYA() (TB, TA, TW, TY, TA) { return _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAWYB() (TB, TA, TW, TY, TB) { return _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAWYC() (TB, TA, TW, TY, TC) { return _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAWZX() (TB, TA, TW, TZ, TX) { return _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAWZY() (TB, TA, TW, TZ, TY) { return _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAWZZ() (TB, TA, TW, TZ, TZ) { return _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAWZW() (TB, TA, TW, TZ, TW) { return _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAWZA() (TB, TA, TW, TZ, TA) { return _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAWZB() (TB, TA, TW, TZ, TB) { return _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAWZC() (TB, TA, TW, TZ, TC) { return _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAWWX() (TB, TA, TW, TW, TX) { return _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAWWY() (TB, TA, TW, TW, TY) { return _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAWWZ() (TB, TA, TW, TW, TZ) { return _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAWWW() (TB, TA, TW, TW, TW) { return _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAWWA() (TB, TA, TW, TW, TA) { return _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAWWB() (TB, TA, TW, TW, TB) { return _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAWWC() (TB, TA, TW, TW, TC) { return _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAWAX() (TB, TA, TW, TA, TX) { return _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAWAY() (TB, TA, TW, TA, TY) { return _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAWAZ() (TB, TA, TW, TA, TZ) { return _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAWAW() (TB, TA, TW, TA, TW) { return _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAWAA() (TB, TA, TW, TA, TA) { return _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAWAB() (TB, TA, TW, TA, TB) { return _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAWAC() (TB, TA, TW, TA, TC) { return _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAWBX() (TB, TA, TW, TB, TX) { return _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAWBY() (TB, TA, TW, TB, TY) { return _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAWBZ() (TB, TA, TW, TB, TZ) { return _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAWBW() (TB, TA, TW, TB, TW) { return _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAWBA() (TB, TA, TW, TB, TA) { return _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAWBB() (TB, TA, TW, TB, TB) { return _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAWBC() (TB, TA, TW, TB, TC) { return _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAWCX() (TB, TA, TW, TC, TX) { return _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAWCY() (TB, TA, TW, TC, TY) { return _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAWCZ() (TB, TA, TW, TC, TZ) { return _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAWCW() (TB, TA, TW, TC, TW) { return _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAWCA() (TB, TA, TW, TC, TA) { return _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAWCB() (TB, TA, TW, TC, TB) { return _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAWCC() (TB, TA, TW, TC, TC) { return _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAAXX() (TB, TA, TA, TX, TX) { return _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAAXY() (TB, TA, TA, TX, TY) { return _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAAXZ() (TB, TA, TA, TX, TZ) { return _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAAXW() (TB, TA, TA, TX, TW) { return _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAAXA() (TB, TA, TA, TX, TA) { return _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAAXB() (TB, TA, TA, TX, TB) { return _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAAXC() (TB, TA, TA, TX, TC) { return _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAAYX() (TB, TA, TA, TY, TX) { return _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAAYY() (TB, TA, TA, TY, TY) { return _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAAYZ() (TB, TA, TA, TY, TZ) { return _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAAYW() (TB, TA, TA, TY, TW) { return _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAAYA() (TB, TA, TA, TY, TA) { return _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAAYB() (TB, TA, TA, TY, TB) { return _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAAYC() (TB, TA, TA, TY, TC) { return _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAAZX() (TB, TA, TA, TZ, TX) { return _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAAZY() (TB, TA, TA, TZ, TY) { return _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAAZZ() (TB, TA, TA, TZ, TZ) { return _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAAZW() (TB, TA, TA, TZ, TW) { return _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAAZA() (TB, TA, TA, TZ, TA) { return _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAAZB() (TB, TA, TA, TZ, TB) { return _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAAZC() (TB, TA, TA, TZ, TC) { return _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAAWX() (TB, TA, TA, TW, TX) { return _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAAWY() (TB, TA, TA, TW, TY) { return _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAAWZ() (TB, TA, TA, TW, TZ) { return _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAAWW() (TB, TA, TA, TW, TW) { return _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAAWA() (TB, TA, TA, TW, TA) { return _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAAWB() (TB, TA, TA, TW, TB) { return _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAAWC() (TB, TA, TA, TW, TC) { return _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAAAX() (TB, TA, TA, TA, TX) { return _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAAAY() (TB, TA, TA, TA, TY) { return _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAAAZ() (TB, TA, TA, TA, TZ) { return _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAAAW() (TB, TA, TA, TA, TW) { return _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAAAA() (TB, TA, TA, TA, TA) { return _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAAAB() (TB, TA, TA, TA, TB) { return _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAAAC() (TB, TA, TA, TA, TC) { return _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAABX() (TB, TA, TA, TB, TX) { return _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAABY() (TB, TA, TA, TB, TY) { return _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAABZ() (TB, TA, TA, TB, TZ) { return _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAABW() (TB, TA, TA, TB, TW) { return _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAABA() (TB, TA, TA, TB, TA) { return _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAABB() (TB, TA, TA, TB, TB) { return _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAABC() (TB, TA, TA, TB, TC) { return _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAACX() (TB, TA, TA, TC, TX) { return _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAACY() (TB, TA, TA, TC, TY) { return _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAACZ() (TB, TA, TA, TC, TZ) { return _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAACW() (TB, TA, TA, TC, TW) { return _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAACA() (TB, TA, TA, TC, TA) { return _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAACB() (TB, TA, TA, TC, TB) { return _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BAACC() (TB, TA, TA, TC, TC) { return _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BABXX() (TB, TA, TB, TX, TX) { return _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BABXY() (TB, TA, TB, TX, TY) { return _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BABXZ() (TB, TA, TB, TX, TZ) { return _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BABXW() (TB, TA, TB, TX, TW) { return _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BABXA() (TB, TA, TB, TX, TA) { return _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BABXB() (TB, TA, TB, TX, TB) { return _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BABXC() (TB, TA, TB, TX, TC) { return _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BABYX() (TB, TA, TB, TY, TX) { return _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BABYY() (TB, TA, TB, TY, TY) { return _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BABYZ() (TB, TA, TB, TY, TZ) { return _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BABYW() (TB, TA, TB, TY, TW) { return _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BABYA() (TB, TA, TB, TY, TA) { return _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BABYB() (TB, TA, TB, TY, TB) { return _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BABYC() (TB, TA, TB, TY, TC) { return _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BABZX() (TB, TA, TB, TZ, TX) { return _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BABZY() (TB, TA, TB, TZ, TY) { return _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BABZZ() (TB, TA, TB, TZ, TZ) { return _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BABZW() (TB, TA, TB, TZ, TW) { return _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BABZA() (TB, TA, TB, TZ, TA) { return _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BABZB() (TB, TA, TB, TZ, TB) { return _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BABZC() (TB, TA, TB, TZ, TC) { return _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BABWX() (TB, TA, TB, TW, TX) { return _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BABWY() (TB, TA, TB, TW, TY) { return _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BABWZ() (TB, TA, TB, TW, TZ) { return _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BABWW() (TB, TA, TB, TW, TW) { return _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BABWA() (TB, TA, TB, TW, TA) { return _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BABWB() (TB, TA, TB, TW, TB) { return _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BABWC() (TB, TA, TB, TW, TC) { return _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BABAX() (TB, TA, TB, TA, TX) { return _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BABAY() (TB, TA, TB, TA, TY) { return _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BABAZ() (TB, TA, TB, TA, TZ) { return _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BABAW() (TB, TA, TB, TA, TW) { return _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BABAA() (TB, TA, TB, TA, TA) { return _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BABAB() (TB, TA, TB, TA, TB) { return _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BABAC() (TB, TA, TB, TA, TC) { return _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BABBX() (TB, TA, TB, TB, TX) { return _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BABBY() (TB, TA, TB, TB, TY) { return _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BABBZ() (TB, TA, TB, TB, TZ) { return _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BABBW() (TB, TA, TB, TB, TW) { return _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BABBA() (TB, TA, TB, TB, TA) { return _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BABBB() (TB, TA, TB, TB, TB) { return _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BABBC() (TB, TA, TB, TB, TC) { return _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BABCX() (TB, TA, TB, TC, TX) { return _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BABCY() (TB, TA, TB, TC, TY) { return _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BABCZ() (TB, TA, TB, TC, TZ) { return _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BABCW() (TB, TA, TB, TC, TW) { return _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BABCA() (TB, TA, TB, TC, TA) { return _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BABCB() (TB, TA, TB, TC, TB) { return _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BABCC() (TB, TA, TB, TC, TC) { return _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BACXX() (TB, TA, TC, TX, TX) { return _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BACXY() (TB, TA, TC, TX, TY) { return _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BACXZ() (TB, TA, TC, TX, TZ) { return _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BACXW() (TB, TA, TC, TX, TW) { return _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BACXA() (TB, TA, TC, TX, TA) { return _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BACXB() (TB, TA, TC, TX, TB) { return _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BACXC() (TB, TA, TC, TX, TC) { return _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BACYX() (TB, TA, TC, TY, TX) { return _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BACYY() (TB, TA, TC, TY, TY) { return _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BACYZ() (TB, TA, TC, TY, TZ) { return _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BACYW() (TB, TA, TC, TY, TW) { return _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BACYA() (TB, TA, TC, TY, TA) { return _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BACYB() (TB, TA, TC, TY, TB) { return _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BACYC() (TB, TA, TC, TY, TC) { return _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BACZX() (TB, TA, TC, TZ, TX) { return _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BACZY() (TB, TA, TC, TZ, TY) { return _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BACZZ() (TB, TA, TC, TZ, TZ) { return _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BACZW() (TB, TA, TC, TZ, TW) { return _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BACZA() (TB, TA, TC, TZ, TA) { return _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BACZB() (TB, TA, TC, TZ, TB) { return _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BACZC() (TB, TA, TC, TZ, TC) { return _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BACWX() (TB, TA, TC, TW, TX) { return _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BACWY() (TB, TA, TC, TW, TY) { return _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BACWZ() (TB, TA, TC, TW, TZ) { return _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BACWW() (TB, TA, TC, TW, TW) { return _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BACWA() (TB, TA, TC, TW, TA) { return _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BACWB() (TB, TA, TC, TW, TB) { return _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BACWC() (TB, TA, TC, TW, TC) { return _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BACAX() (TB, TA, TC, TA, TX) { return _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BACAY() (TB, TA, TC, TA, TY) { return _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BACAZ() (TB, TA, TC, TA, TZ) { return _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BACAW() (TB, TA, TC, TA, TW) { return _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BACAA() (TB, TA, TC, TA, TA) { return _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BACAB() (TB, TA, TC, TA, TB) { return _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BACAC() (TB, TA, TC, TA, TC) { return _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BACBX() (TB, TA, TC, TB, TX) { return _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BACBY() (TB, TA, TC, TB, TY) { return _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BACBZ() (TB, TA, TC, TB, TZ) { return _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BACBW() (TB, TA, TC, TB, TW) { return _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BACBA() (TB, TA, TC, TB, TA) { return _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BACBB() (TB, TA, TC, TB, TB) { return _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BACBC() (TB, TA, TC, TB, TC) { return _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BACCX() (TB, TA, TC, TC, TX) { return _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BACCY() (TB, TA, TC, TC, TY) { return _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BACCZ() (TB, TA, TC, TC, TZ) { return _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BACCW() (TB, TA, TC, TC, TW) { return _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BACCA() (TB, TA, TC, TC, TA) { return _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BACCB() (TB, TA, TC, TC, TB) { return _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BACCC() (TB, TA, TC, TC, TC) { return _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBXXX() (TB, TB, TX, TX, TX) { return _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBXXY() (TB, TB, TX, TX, TY) { return _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBXXZ() (TB, TB, TX, TX, TZ) { return _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBXXW() (TB, TB, TX, TX, TW) { return _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBXXA() (TB, TB, TX, TX, TA) { return _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBXXB() (TB, TB, TX, TX, TB) { return _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBXXC() (TB, TB, TX, TX, TC) { return _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBXYX() (TB, TB, TX, TY, TX) { return _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBXYY() (TB, TB, TX, TY, TY) { return _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBXYZ() (TB, TB, TX, TY, TZ) { return _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBXYW() (TB, TB, TX, TY, TW) { return _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBXYA() (TB, TB, TX, TY, TA) { return _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBXYB() (TB, TB, TX, TY, TB) { return _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBXYC() (TB, TB, TX, TY, TC) { return _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBXZX() (TB, TB, TX, TZ, TX) { return _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBXZY() (TB, TB, TX, TZ, TY) { return _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBXZZ() (TB, TB, TX, TZ, TZ) { return _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBXZW() (TB, TB, TX, TZ, TW) { return _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBXZA() (TB, TB, TX, TZ, TA) { return _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBXZB() (TB, TB, TX, TZ, TB) { return _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBXZC() (TB, TB, TX, TZ, TC) { return _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBXWX() (TB, TB, TX, TW, TX) { return _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBXWY() (TB, TB, TX, TW, TY) { return _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBXWZ() (TB, TB, TX, TW, TZ) { return _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBXWW() (TB, TB, TX, TW, TW) { return _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBXWA() (TB, TB, TX, TW, TA) { return _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBXWB() (TB, TB, TX, TW, TB) { return _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBXWC() (TB, TB, TX, TW, TC) { return _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBXAX() (TB, TB, TX, TA, TX) { return _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBXAY() (TB, TB, TX, TA, TY) { return _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBXAZ() (TB, TB, TX, TA, TZ) { return _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBXAW() (TB, TB, TX, TA, TW) { return _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBXAA() (TB, TB, TX, TA, TA) { return _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBXAB() (TB, TB, TX, TA, TB) { return _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBXAC() (TB, TB, TX, TA, TC) { return _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBXBX() (TB, TB, TX, TB, TX) { return _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBXBY() (TB, TB, TX, TB, TY) { return _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBXBZ() (TB, TB, TX, TB, TZ) { return _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBXBW() (TB, TB, TX, TB, TW) { return _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBXBA() (TB, TB, TX, TB, TA) { return _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBXBB() (TB, TB, TX, TB, TB) { return _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBXBC() (TB, TB, TX, TB, TC) { return _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBXCX() (TB, TB, TX, TC, TX) { return _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBXCY() (TB, TB, TX, TC, TY) { return _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBXCZ() (TB, TB, TX, TC, TZ) { return _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBXCW() (TB, TB, TX, TC, TW) { return _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBXCA() (TB, TB, TX, TC, TA) { return _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBXCB() (TB, TB, TX, TC, TB) { return _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBXCC() (TB, TB, TX, TC, TC) { return _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBYXX() (TB, TB, TY, TX, TX) { return _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBYXY() (TB, TB, TY, TX, TY) { return _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBYXZ() (TB, TB, TY, TX, TZ) { return _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBYXW() (TB, TB, TY, TX, TW) { return _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBYXA() (TB, TB, TY, TX, TA) { return _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBYXB() (TB, TB, TY, TX, TB) { return _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBYXC() (TB, TB, TY, TX, TC) { return _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBYYX() (TB, TB, TY, TY, TX) { return _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBYYY() (TB, TB, TY, TY, TY) { return _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBYYZ() (TB, TB, TY, TY, TZ) { return _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBYYW() (TB, TB, TY, TY, TW) { return _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBYYA() (TB, TB, TY, TY, TA) { return _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBYYB() (TB, TB, TY, TY, TB) { return _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBYYC() (TB, TB, TY, TY, TC) { return _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBYZX() (TB, TB, TY, TZ, TX) { return _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBYZY() (TB, TB, TY, TZ, TY) { return _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBYZZ() (TB, TB, TY, TZ, TZ) { return _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBYZW() (TB, TB, TY, TZ, TW) { return _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBYZA() (TB, TB, TY, TZ, TA) { return _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBYZB() (TB, TB, TY, TZ, TB) { return _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBYZC() (TB, TB, TY, TZ, TC) { return _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBYWX() (TB, TB, TY, TW, TX) { return _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBYWY() (TB, TB, TY, TW, TY) { return _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBYWZ() (TB, TB, TY, TW, TZ) { return _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBYWW() (TB, TB, TY, TW, TW) { return _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBYWA() (TB, TB, TY, TW, TA) { return _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBYWB() (TB, TB, TY, TW, TB) { return _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBYWC() (TB, TB, TY, TW, TC) { return _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBYAX() (TB, TB, TY, TA, TX) { return _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBYAY() (TB, TB, TY, TA, TY) { return _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBYAZ() (TB, TB, TY, TA, TZ) { return _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBYAW() (TB, TB, TY, TA, TW) { return _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBYAA() (TB, TB, TY, TA, TA) { return _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBYAB() (TB, TB, TY, TA, TB) { return _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBYAC() (TB, TB, TY, TA, TC) { return _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBYBX() (TB, TB, TY, TB, TX) { return _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBYBY() (TB, TB, TY, TB, TY) { return _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBYBZ() (TB, TB, TY, TB, TZ) { return _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBYBW() (TB, TB, TY, TB, TW) { return _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBYBA() (TB, TB, TY, TB, TA) { return _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBYBB() (TB, TB, TY, TB, TB) { return _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBYBC() (TB, TB, TY, TB, TC) { return _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBYCX() (TB, TB, TY, TC, TX) { return _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBYCY() (TB, TB, TY, TC, TY) { return _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBYCZ() (TB, TB, TY, TC, TZ) { return _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBYCW() (TB, TB, TY, TC, TW) { return _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBYCA() (TB, TB, TY, TC, TA) { return _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBYCB() (TB, TB, TY, TC, TB) { return _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBYCC() (TB, TB, TY, TC, TC) { return _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBZXX() (TB, TB, TZ, TX, TX) { return _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBZXY() (TB, TB, TZ, TX, TY) { return _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBZXZ() (TB, TB, TZ, TX, TZ) { return _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBZXW() (TB, TB, TZ, TX, TW) { return _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBZXA() (TB, TB, TZ, TX, TA) { return _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBZXB() (TB, TB, TZ, TX, TB) { return _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBZXC() (TB, TB, TZ, TX, TC) { return _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBZYX() (TB, TB, TZ, TY, TX) { return _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBZYY() (TB, TB, TZ, TY, TY) { return _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBZYZ() (TB, TB, TZ, TY, TZ) { return _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBZYW() (TB, TB, TZ, TY, TW) { return _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBZYA() (TB, TB, TZ, TY, TA) { return _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBZYB() (TB, TB, TZ, TY, TB) { return _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBZYC() (TB, TB, TZ, TY, TC) { return _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBZZX() (TB, TB, TZ, TZ, TX) { return _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBZZY() (TB, TB, TZ, TZ, TY) { return _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBZZZ() (TB, TB, TZ, TZ, TZ) { return _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBZZW() (TB, TB, TZ, TZ, TW) { return _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBZZA() (TB, TB, TZ, TZ, TA) { return _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBZZB() (TB, TB, TZ, TZ, TB) { return _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBZZC() (TB, TB, TZ, TZ, TC) { return _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBZWX() (TB, TB, TZ, TW, TX) { return _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBZWY() (TB, TB, TZ, TW, TY) { return _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBZWZ() (TB, TB, TZ, TW, TZ) { return _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBZWW() (TB, TB, TZ, TW, TW) { return _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBZWA() (TB, TB, TZ, TW, TA) { return _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBZWB() (TB, TB, TZ, TW, TB) { return _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBZWC() (TB, TB, TZ, TW, TC) { return _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBZAX() (TB, TB, TZ, TA, TX) { return _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBZAY() (TB, TB, TZ, TA, TY) { return _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBZAZ() (TB, TB, TZ, TA, TZ) { return _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBZAW() (TB, TB, TZ, TA, TW) { return _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBZAA() (TB, TB, TZ, TA, TA) { return _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBZAB() (TB, TB, TZ, TA, TB) { return _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBZAC() (TB, TB, TZ, TA, TC) { return _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBZBX() (TB, TB, TZ, TB, TX) { return _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBZBY() (TB, TB, TZ, TB, TY) { return _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBZBZ() (TB, TB, TZ, TB, TZ) { return _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBZBW() (TB, TB, TZ, TB, TW) { return _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBZBA() (TB, TB, TZ, TB, TA) { return _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBZBB() (TB, TB, TZ, TB, TB) { return _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBZBC() (TB, TB, TZ, TB, TC) { return _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBZCX() (TB, TB, TZ, TC, TX) { return _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBZCY() (TB, TB, TZ, TC, TY) { return _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBZCZ() (TB, TB, TZ, TC, TZ) { return _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBZCW() (TB, TB, TZ, TC, TW) { return _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBZCA() (TB, TB, TZ, TC, TA) { return _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBZCB() (TB, TB, TZ, TC, TB) { return _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBZCC() (TB, TB, TZ, TC, TC) { return _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBWXX() (TB, TB, TW, TX, TX) { return _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBWXY() (TB, TB, TW, TX, TY) { return _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBWXZ() (TB, TB, TW, TX, TZ) { return _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBWXW() (TB, TB, TW, TX, TW) { return _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBWXA() (TB, TB, TW, TX, TA) { return _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBWXB() (TB, TB, TW, TX, TB) { return _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBWXC() (TB, TB, TW, TX, TC) { return _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBWYX() (TB, TB, TW, TY, TX) { return _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBWYY() (TB, TB, TW, TY, TY) { return _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBWYZ() (TB, TB, TW, TY, TZ) { return _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBWYW() (TB, TB, TW, TY, TW) { return _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBWYA() (TB, TB, TW, TY, TA) { return _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBWYB() (TB, TB, TW, TY, TB) { return _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBWYC() (TB, TB, TW, TY, TC) { return _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBWZX() (TB, TB, TW, TZ, TX) { return _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBWZY() (TB, TB, TW, TZ, TY) { return _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBWZZ() (TB, TB, TW, TZ, TZ) { return _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBWZW() (TB, TB, TW, TZ, TW) { return _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBWZA() (TB, TB, TW, TZ, TA) { return _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBWZB() (TB, TB, TW, TZ, TB) { return _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBWZC() (TB, TB, TW, TZ, TC) { return _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBWWX() (TB, TB, TW, TW, TX) { return _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBWWY() (TB, TB, TW, TW, TY) { return _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBWWZ() (TB, TB, TW, TW, TZ) { return _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBWWW() (TB, TB, TW, TW, TW) { return _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBWWA() (TB, TB, TW, TW, TA) { return _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBWWB() (TB, TB, TW, TW, TB) { return _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBWWC() (TB, TB, TW, TW, TC) { return _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBWAX() (TB, TB, TW, TA, TX) { return _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBWAY() (TB, TB, TW, TA, TY) { return _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBWAZ() (TB, TB, TW, TA, TZ) { return _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBWAW() (TB, TB, TW, TA, TW) { return _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBWAA() (TB, TB, TW, TA, TA) { return _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBWAB() (TB, TB, TW, TA, TB) { return _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBWAC() (TB, TB, TW, TA, TC) { return _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBWBX() (TB, TB, TW, TB, TX) { return _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBWBY() (TB, TB, TW, TB, TY) { return _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBWBZ() (TB, TB, TW, TB, TZ) { return _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBWBW() (TB, TB, TW, TB, TW) { return _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBWBA() (TB, TB, TW, TB, TA) { return _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBWBB() (TB, TB, TW, TB, TB) { return _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBWBC() (TB, TB, TW, TB, TC) { return _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBWCX() (TB, TB, TW, TC, TX) { return _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBWCY() (TB, TB, TW, TC, TY) { return _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBWCZ() (TB, TB, TW, TC, TZ) { return _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBWCW() (TB, TB, TW, TC, TW) { return _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBWCA() (TB, TB, TW, TC, TA) { return _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBWCB() (TB, TB, TW, TC, TB) { return _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBWCC() (TB, TB, TW, TC, TC) { return _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBAXX() (TB, TB, TA, TX, TX) { return _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBAXY() (TB, TB, TA, TX, TY) { return _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBAXZ() (TB, TB, TA, TX, TZ) { return _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBAXW() (TB, TB, TA, TX, TW) { return _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBAXA() (TB, TB, TA, TX, TA) { return _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBAXB() (TB, TB, TA, TX, TB) { return _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBAXC() (TB, TB, TA, TX, TC) { return _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBAYX() (TB, TB, TA, TY, TX) { return _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBAYY() (TB, TB, TA, TY, TY) { return _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBAYZ() (TB, TB, TA, TY, TZ) { return _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBAYW() (TB, TB, TA, TY, TW) { return _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBAYA() (TB, TB, TA, TY, TA) { return _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBAYB() (TB, TB, TA, TY, TB) { return _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBAYC() (TB, TB, TA, TY, TC) { return _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBAZX() (TB, TB, TA, TZ, TX) { return _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBAZY() (TB, TB, TA, TZ, TY) { return _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBAZZ() (TB, TB, TA, TZ, TZ) { return _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBAZW() (TB, TB, TA, TZ, TW) { return _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBAZA() (TB, TB, TA, TZ, TA) { return _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBAZB() (TB, TB, TA, TZ, TB) { return _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBAZC() (TB, TB, TA, TZ, TC) { return _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBAWX() (TB, TB, TA, TW, TX) { return _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBAWY() (TB, TB, TA, TW, TY) { return _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBAWZ() (TB, TB, TA, TW, TZ) { return _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBAWW() (TB, TB, TA, TW, TW) { return _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBAWA() (TB, TB, TA, TW, TA) { return _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBAWB() (TB, TB, TA, TW, TB) { return _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBAWC() (TB, TB, TA, TW, TC) { return _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBAAX() (TB, TB, TA, TA, TX) { return _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBAAY() (TB, TB, TA, TA, TY) { return _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBAAZ() (TB, TB, TA, TA, TZ) { return _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBAAW() (TB, TB, TA, TA, TW) { return _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBAAA() (TB, TB, TA, TA, TA) { return _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBAAB() (TB, TB, TA, TA, TB) { return _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBAAC() (TB, TB, TA, TA, TC) { return _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBABX() (TB, TB, TA, TB, TX) { return _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBABY() (TB, TB, TA, TB, TY) { return _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBABZ() (TB, TB, TA, TB, TZ) { return _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBABW() (TB, TB, TA, TB, TW) { return _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBABA() (TB, TB, TA, TB, TA) { return _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBABB() (TB, TB, TA, TB, TB) { return _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBABC() (TB, TB, TA, TB, TC) { return _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBACX() (TB, TB, TA, TC, TX) { return _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBACY() (TB, TB, TA, TC, TY) { return _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBACZ() (TB, TB, TA, TC, TZ) { return _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBACW() (TB, TB, TA, TC, TW) { return _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBACA() (TB, TB, TA, TC, TA) { return _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBACB() (TB, TB, TA, TC, TB) { return _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBACC() (TB, TB, TA, TC, TC) { return _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBBXX() (TB, TB, TB, TX, TX) { return _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBBXY() (TB, TB, TB, TX, TY) { return _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBBXZ() (TB, TB, TB, TX, TZ) { return _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBBXW() (TB, TB, TB, TX, TW) { return _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBBXA() (TB, TB, TB, TX, TA) { return _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBBXB() (TB, TB, TB, TX, TB) { return _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBBXC() (TB, TB, TB, TX, TC) { return _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBBYX() (TB, TB, TB, TY, TX) { return _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBBYY() (TB, TB, TB, TY, TY) { return _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBBYZ() (TB, TB, TB, TY, TZ) { return _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBBYW() (TB, TB, TB, TY, TW) { return _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBBYA() (TB, TB, TB, TY, TA) { return _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBBYB() (TB, TB, TB, TY, TB) { return _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBBYC() (TB, TB, TB, TY, TC) { return _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBBZX() (TB, TB, TB, TZ, TX) { return _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBBZY() (TB, TB, TB, TZ, TY) { return _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBBZZ() (TB, TB, TB, TZ, TZ) { return _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBBZW() (TB, TB, TB, TZ, TW) { return _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBBZA() (TB, TB, TB, TZ, TA) { return _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBBZB() (TB, TB, TB, TZ, TB) { return _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBBZC() (TB, TB, TB, TZ, TC) { return _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBBWX() (TB, TB, TB, TW, TX) { return _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBBWY() (TB, TB, TB, TW, TY) { return _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBBWZ() (TB, TB, TB, TW, TZ) { return _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBBWW() (TB, TB, TB, TW, TW) { return _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBBWA() (TB, TB, TB, TW, TA) { return _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBBWB() (TB, TB, TB, TW, TB) { return _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBBWC() (TB, TB, TB, TW, TC) { return _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBBAX() (TB, TB, TB, TA, TX) { return _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBBAY() (TB, TB, TB, TA, TY) { return _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBBAZ() (TB, TB, TB, TA, TZ) { return _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBBAW() (TB, TB, TB, TA, TW) { return _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBBAA() (TB, TB, TB, TA, TA) { return _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBBAB() (TB, TB, TB, TA, TB) { return _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBBAC() (TB, TB, TB, TA, TC) { return _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBBBX() (TB, TB, TB, TB, TX) { return _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBBBY() (TB, TB, TB, TB, TY) { return _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBBBZ() (TB, TB, TB, TB, TZ) { return _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBBBW() (TB, TB, TB, TB, TW) { return _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBBBA() (TB, TB, TB, TB, TA) { return _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBBBB() (TB, TB, TB, TB, TB) { return _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBBBC() (TB, TB, TB, TB, TC) { return _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBBCX() (TB, TB, TB, TC, TX) { return _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBBCY() (TB, TB, TB, TC, TY) { return _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBBCZ() (TB, TB, TB, TC, TZ) { return _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBBCW() (TB, TB, TB, TC, TW) { return _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBBCA() (TB, TB, TB, TC, TA) { return _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBBCB() (TB, TB, TB, TC, TB) { return _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBBCC() (TB, TB, TB, TC, TC) { return _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBCXX() (TB, TB, TC, TX, TX) { return _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBCXY() (TB, TB, TC, TX, TY) { return _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBCXZ() (TB, TB, TC, TX, TZ) { return _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBCXW() (TB, TB, TC, TX, TW) { return _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBCXA() (TB, TB, TC, TX, TA) { return _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBCXB() (TB, TB, TC, TX, TB) { return _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBCXC() (TB, TB, TC, TX, TC) { return _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBCYX() (TB, TB, TC, TY, TX) { return _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBCYY() (TB, TB, TC, TY, TY) { return _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBCYZ() (TB, TB, TC, TY, TZ) { return _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBCYW() (TB, TB, TC, TY, TW) { return _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBCYA() (TB, TB, TC, TY, TA) { return _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBCYB() (TB, TB, TC, TY, TB) { return _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBCYC() (TB, TB, TC, TY, TC) { return _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBCZX() (TB, TB, TC, TZ, TX) { return _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBCZY() (TB, TB, TC, TZ, TY) { return _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBCZZ() (TB, TB, TC, TZ, TZ) { return _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBCZW() (TB, TB, TC, TZ, TW) { return _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBCZA() (TB, TB, TC, TZ, TA) { return _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBCZB() (TB, TB, TC, TZ, TB) { return _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBCZC() (TB, TB, TC, TZ, TC) { return _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBCWX() (TB, TB, TC, TW, TX) { return _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBCWY() (TB, TB, TC, TW, TY) { return _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBCWZ() (TB, TB, TC, TW, TZ) { return _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBCWW() (TB, TB, TC, TW, TW) { return _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBCWA() (TB, TB, TC, TW, TA) { return _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBCWB() (TB, TB, TC, TW, TB) { return _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBCWC() (TB, TB, TC, TW, TC) { return _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBCAX() (TB, TB, TC, TA, TX) { return _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBCAY() (TB, TB, TC, TA, TY) { return _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBCAZ() (TB, TB, TC, TA, TZ) { return _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBCAW() (TB, TB, TC, TA, TW) { return _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBCAA() (TB, TB, TC, TA, TA) { return _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBCAB() (TB, TB, TC, TA, TB) { return _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBCAC() (TB, TB, TC, TA, TC) { return _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBCBX() (TB, TB, TC, TB, TX) { return _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBCBY() (TB, TB, TC, TB, TY) { return _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBCBZ() (TB, TB, TC, TB, TZ) { return _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBCBW() (TB, TB, TC, TB, TW) { return _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBCBA() (TB, TB, TC, TB, TA) { return _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBCBB() (TB, TB, TC, TB, TB) { return _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBCBC() (TB, TB, TC, TB, TC) { return _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBCCX() (TB, TB, TC, TC, TX) { return _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBCCY() (TB, TB, TC, TC, TY) { return _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBCCZ() (TB, TB, TC, TC, TZ) { return _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBCCW() (TB, TB, TC, TC, TW) { return _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBCCA() (TB, TB, TC, TC, TA) { return _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBCCB() (TB, TB, TC, TC, TB) { return _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BBCCC() (TB, TB, TC, TC, TC) { return _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCXXX() (TB, TC, TX, TX, TX) { return _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCXXY() (TB, TC, TX, TX, TY) { return _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCXXZ() (TB, TC, TX, TX, TZ) { return _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCXXW() (TB, TC, TX, TX, TW) { return _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCXXA() (TB, TC, TX, TX, TA) { return _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCXXB() (TB, TC, TX, TX, TB) { return _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCXXC() (TB, TC, TX, TX, TC) { return _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCXYX() (TB, TC, TX, TY, TX) { return _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCXYY() (TB, TC, TX, TY, TY) { return _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCXYZ() (TB, TC, TX, TY, TZ) { return _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCXYW() (TB, TC, TX, TY, TW) { return _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCXYA() (TB, TC, TX, TY, TA) { return _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCXYB() (TB, TC, TX, TY, TB) { return _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCXYC() (TB, TC, TX, TY, TC) { return _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCXZX() (TB, TC, TX, TZ, TX) { return _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCXZY() (TB, TC, TX, TZ, TY) { return _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCXZZ() (TB, TC, TX, TZ, TZ) { return _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCXZW() (TB, TC, TX, TZ, TW) { return _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCXZA() (TB, TC, TX, TZ, TA) { return _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCXZB() (TB, TC, TX, TZ, TB) { return _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCXZC() (TB, TC, TX, TZ, TC) { return _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCXWX() (TB, TC, TX, TW, TX) { return _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCXWY() (TB, TC, TX, TW, TY) { return _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCXWZ() (TB, TC, TX, TW, TZ) { return _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCXWW() (TB, TC, TX, TW, TW) { return _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCXWA() (TB, TC, TX, TW, TA) { return _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCXWB() (TB, TC, TX, TW, TB) { return _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCXWC() (TB, TC, TX, TW, TC) { return _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCXAX() (TB, TC, TX, TA, TX) { return _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCXAY() (TB, TC, TX, TA, TY) { return _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCXAZ() (TB, TC, TX, TA, TZ) { return _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCXAW() (TB, TC, TX, TA, TW) { return _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCXAA() (TB, TC, TX, TA, TA) { return _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCXAB() (TB, TC, TX, TA, TB) { return _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCXAC() (TB, TC, TX, TA, TC) { return _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCXBX() (TB, TC, TX, TB, TX) { return _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCXBY() (TB, TC, TX, TB, TY) { return _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCXBZ() (TB, TC, TX, TB, TZ) { return _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCXBW() (TB, TC, TX, TB, TW) { return _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCXBA() (TB, TC, TX, TB, TA) { return _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCXBB() (TB, TC, TX, TB, TB) { return _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCXBC() (TB, TC, TX, TB, TC) { return _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCXCX() (TB, TC, TX, TC, TX) { return _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCXCY() (TB, TC, TX, TC, TY) { return _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCXCZ() (TB, TC, TX, TC, TZ) { return _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCXCW() (TB, TC, TX, TC, TW) { return _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCXCA() (TB, TC, TX, TC, TA) { return _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCXCB() (TB, TC, TX, TC, TB) { return _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCXCC() (TB, TC, TX, TC, TC) { return _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCYXX() (TB, TC, TY, TX, TX) { return _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCYXY() (TB, TC, TY, TX, TY) { return _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCYXZ() (TB, TC, TY, TX, TZ) { return _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCYXW() (TB, TC, TY, TX, TW) { return _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCYXA() (TB, TC, TY, TX, TA) { return _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCYXB() (TB, TC, TY, TX, TB) { return _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCYXC() (TB, TC, TY, TX, TC) { return _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCYYX() (TB, TC, TY, TY, TX) { return _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCYYY() (TB, TC, TY, TY, TY) { return _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCYYZ() (TB, TC, TY, TY, TZ) { return _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCYYW() (TB, TC, TY, TY, TW) { return _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCYYA() (TB, TC, TY, TY, TA) { return _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCYYB() (TB, TC, TY, TY, TB) { return _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCYYC() (TB, TC, TY, TY, TC) { return _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCYZX() (TB, TC, TY, TZ, TX) { return _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCYZY() (TB, TC, TY, TZ, TY) { return _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCYZZ() (TB, TC, TY, TZ, TZ) { return _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCYZW() (TB, TC, TY, TZ, TW) { return _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCYZA() (TB, TC, TY, TZ, TA) { return _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCYZB() (TB, TC, TY, TZ, TB) { return _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCYZC() (TB, TC, TY, TZ, TC) { return _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCYWX() (TB, TC, TY, TW, TX) { return _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCYWY() (TB, TC, TY, TW, TY) { return _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCYWZ() (TB, TC, TY, TW, TZ) { return _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCYWW() (TB, TC, TY, TW, TW) { return _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCYWA() (TB, TC, TY, TW, TA) { return _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCYWB() (TB, TC, TY, TW, TB) { return _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCYWC() (TB, TC, TY, TW, TC) { return _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCYAX() (TB, TC, TY, TA, TX) { return _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCYAY() (TB, TC, TY, TA, TY) { return _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCYAZ() (TB, TC, TY, TA, TZ) { return _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCYAW() (TB, TC, TY, TA, TW) { return _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCYAA() (TB, TC, TY, TA, TA) { return _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCYAB() (TB, TC, TY, TA, TB) { return _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCYAC() (TB, TC, TY, TA, TC) { return _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCYBX() (TB, TC, TY, TB, TX) { return _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCYBY() (TB, TC, TY, TB, TY) { return _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCYBZ() (TB, TC, TY, TB, TZ) { return _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCYBW() (TB, TC, TY, TB, TW) { return _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCYBA() (TB, TC, TY, TB, TA) { return _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCYBB() (TB, TC, TY, TB, TB) { return _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCYBC() (TB, TC, TY, TB, TC) { return _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCYCX() (TB, TC, TY, TC, TX) { return _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCYCY() (TB, TC, TY, TC, TY) { return _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCYCZ() (TB, TC, TY, TC, TZ) { return _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCYCW() (TB, TC, TY, TC, TW) { return _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCYCA() (TB, TC, TY, TC, TA) { return _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCYCB() (TB, TC, TY, TC, TB) { return _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCYCC() (TB, TC, TY, TC, TC) { return _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCZXX() (TB, TC, TZ, TX, TX) { return _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCZXY() (TB, TC, TZ, TX, TY) { return _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCZXZ() (TB, TC, TZ, TX, TZ) { return _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCZXW() (TB, TC, TZ, TX, TW) { return _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCZXA() (TB, TC, TZ, TX, TA) { return _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCZXB() (TB, TC, TZ, TX, TB) { return _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCZXC() (TB, TC, TZ, TX, TC) { return _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCZYX() (TB, TC, TZ, TY, TX) { return _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCZYY() (TB, TC, TZ, TY, TY) { return _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCZYZ() (TB, TC, TZ, TY, TZ) { return _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCZYW() (TB, TC, TZ, TY, TW) { return _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCZYA() (TB, TC, TZ, TY, TA) { return _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCZYB() (TB, TC, TZ, TY, TB) { return _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCZYC() (TB, TC, TZ, TY, TC) { return _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCZZX() (TB, TC, TZ, TZ, TX) { return _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCZZY() (TB, TC, TZ, TZ, TY) { return _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCZZZ() (TB, TC, TZ, TZ, TZ) { return _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCZZW() (TB, TC, TZ, TZ, TW) { return _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCZZA() (TB, TC, TZ, TZ, TA) { return _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCZZB() (TB, TC, TZ, TZ, TB) { return _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCZZC() (TB, TC, TZ, TZ, TC) { return _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCZWX() (TB, TC, TZ, TW, TX) { return _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCZWY() (TB, TC, TZ, TW, TY) { return _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCZWZ() (TB, TC, TZ, TW, TZ) { return _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCZWW() (TB, TC, TZ, TW, TW) { return _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCZWA() (TB, TC, TZ, TW, TA) { return _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCZWB() (TB, TC, TZ, TW, TB) { return _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCZWC() (TB, TC, TZ, TW, TC) { return _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCZAX() (TB, TC, TZ, TA, TX) { return _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCZAY() (TB, TC, TZ, TA, TY) { return _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCZAZ() (TB, TC, TZ, TA, TZ) { return _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCZAW() (TB, TC, TZ, TA, TW) { return _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCZAA() (TB, TC, TZ, TA, TA) { return _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCZAB() (TB, TC, TZ, TA, TB) { return _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCZAC() (TB, TC, TZ, TA, TC) { return _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCZBX() (TB, TC, TZ, TB, TX) { return _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCZBY() (TB, TC, TZ, TB, TY) { return _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCZBZ() (TB, TC, TZ, TB, TZ) { return _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCZBW() (TB, TC, TZ, TB, TW) { return _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCZBA() (TB, TC, TZ, TB, TA) { return _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCZBB() (TB, TC, TZ, TB, TB) { return _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCZBC() (TB, TC, TZ, TB, TC) { return _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCZCX() (TB, TC, TZ, TC, TX) { return _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCZCY() (TB, TC, TZ, TC, TY) { return _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCZCZ() (TB, TC, TZ, TC, TZ) { return _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCZCW() (TB, TC, TZ, TC, TW) { return _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCZCA() (TB, TC, TZ, TC, TA) { return _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCZCB() (TB, TC, TZ, TC, TB) { return _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCZCC() (TB, TC, TZ, TC, TC) { return _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCWXX() (TB, TC, TW, TX, TX) { return _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCWXY() (TB, TC, TW, TX, TY) { return _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCWXZ() (TB, TC, TW, TX, TZ) { return _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCWXW() (TB, TC, TW, TX, TW) { return _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCWXA() (TB, TC, TW, TX, TA) { return _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCWXB() (TB, TC, TW, TX, TB) { return _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCWXC() (TB, TC, TW, TX, TC) { return _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCWYX() (TB, TC, TW, TY, TX) { return _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCWYY() (TB, TC, TW, TY, TY) { return _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCWYZ() (TB, TC, TW, TY, TZ) { return _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCWYW() (TB, TC, TW, TY, TW) { return _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCWYA() (TB, TC, TW, TY, TA) { return _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCWYB() (TB, TC, TW, TY, TB) { return _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCWYC() (TB, TC, TW, TY, TC) { return _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCWZX() (TB, TC, TW, TZ, TX) { return _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCWZY() (TB, TC, TW, TZ, TY) { return _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCWZZ() (TB, TC, TW, TZ, TZ) { return _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCWZW() (TB, TC, TW, TZ, TW) { return _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCWZA() (TB, TC, TW, TZ, TA) { return _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCWZB() (TB, TC, TW, TZ, TB) { return _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCWZC() (TB, TC, TW, TZ, TC) { return _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCWWX() (TB, TC, TW, TW, TX) { return _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCWWY() (TB, TC, TW, TW, TY) { return _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCWWZ() (TB, TC, TW, TW, TZ) { return _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCWWW() (TB, TC, TW, TW, TW) { return _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCWWA() (TB, TC, TW, TW, TA) { return _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCWWB() (TB, TC, TW, TW, TB) { return _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCWWC() (TB, TC, TW, TW, TC) { return _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCWAX() (TB, TC, TW, TA, TX) { return _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCWAY() (TB, TC, TW, TA, TY) { return _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCWAZ() (TB, TC, TW, TA, TZ) { return _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCWAW() (TB, TC, TW, TA, TW) { return _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCWAA() (TB, TC, TW, TA, TA) { return _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCWAB() (TB, TC, TW, TA, TB) { return _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCWAC() (TB, TC, TW, TA, TC) { return _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCWBX() (TB, TC, TW, TB, TX) { return _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCWBY() (TB, TC, TW, TB, TY) { return _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCWBZ() (TB, TC, TW, TB, TZ) { return _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCWBW() (TB, TC, TW, TB, TW) { return _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCWBA() (TB, TC, TW, TB, TA) { return _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCWBB() (TB, TC, TW, TB, TB) { return _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCWBC() (TB, TC, TW, TB, TC) { return _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCWCX() (TB, TC, TW, TC, TX) { return _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCWCY() (TB, TC, TW, TC, TY) { return _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCWCZ() (TB, TC, TW, TC, TZ) { return _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCWCW() (TB, TC, TW, TC, TW) { return _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCWCA() (TB, TC, TW, TC, TA) { return _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCWCB() (TB, TC, TW, TC, TB) { return _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCWCC() (TB, TC, TW, TC, TC) { return _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCAXX() (TB, TC, TA, TX, TX) { return _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCAXY() (TB, TC, TA, TX, TY) { return _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCAXZ() (TB, TC, TA, TX, TZ) { return _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCAXW() (TB, TC, TA, TX, TW) { return _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCAXA() (TB, TC, TA, TX, TA) { return _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCAXB() (TB, TC, TA, TX, TB) { return _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCAXC() (TB, TC, TA, TX, TC) { return _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCAYX() (TB, TC, TA, TY, TX) { return _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCAYY() (TB, TC, TA, TY, TY) { return _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCAYZ() (TB, TC, TA, TY, TZ) { return _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCAYW() (TB, TC, TA, TY, TW) { return _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCAYA() (TB, TC, TA, TY, TA) { return _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCAYB() (TB, TC, TA, TY, TB) { return _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCAYC() (TB, TC, TA, TY, TC) { return _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCAZX() (TB, TC, TA, TZ, TX) { return _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCAZY() (TB, TC, TA, TZ, TY) { return _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCAZZ() (TB, TC, TA, TZ, TZ) { return _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCAZW() (TB, TC, TA, TZ, TW) { return _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCAZA() (TB, TC, TA, TZ, TA) { return _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCAZB() (TB, TC, TA, TZ, TB) { return _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCAZC() (TB, TC, TA, TZ, TC) { return _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCAWX() (TB, TC, TA, TW, TX) { return _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCAWY() (TB, TC, TA, TW, TY) { return _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCAWZ() (TB, TC, TA, TW, TZ) { return _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCAWW() (TB, TC, TA, TW, TW) { return _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCAWA() (TB, TC, TA, TW, TA) { return _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCAWB() (TB, TC, TA, TW, TB) { return _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCAWC() (TB, TC, TA, TW, TC) { return _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCAAX() (TB, TC, TA, TA, TX) { return _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCAAY() (TB, TC, TA, TA, TY) { return _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCAAZ() (TB, TC, TA, TA, TZ) { return _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCAAW() (TB, TC, TA, TA, TW) { return _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCAAA() (TB, TC, TA, TA, TA) { return _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCAAB() (TB, TC, TA, TA, TB) { return _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCAAC() (TB, TC, TA, TA, TC) { return _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCABX() (TB, TC, TA, TB, TX) { return _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCABY() (TB, TC, TA, TB, TY) { return _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCABZ() (TB, TC, TA, TB, TZ) { return _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCABW() (TB, TC, TA, TB, TW) { return _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCABA() (TB, TC, TA, TB, TA) { return _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCABB() (TB, TC, TA, TB, TB) { return _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCABC() (TB, TC, TA, TB, TC) { return _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCACX() (TB, TC, TA, TC, TX) { return _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCACY() (TB, TC, TA, TC, TY) { return _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCACZ() (TB, TC, TA, TC, TZ) { return _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCACW() (TB, TC, TA, TC, TW) { return _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCACA() (TB, TC, TA, TC, TA) { return _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCACB() (TB, TC, TA, TC, TB) { return _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCACC() (TB, TC, TA, TC, TC) { return _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCBXX() (TB, TC, TB, TX, TX) { return _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCBXY() (TB, TC, TB, TX, TY) { return _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCBXZ() (TB, TC, TB, TX, TZ) { return _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCBXW() (TB, TC, TB, TX, TW) { return _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCBXA() (TB, TC, TB, TX, TA) { return _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCBXB() (TB, TC, TB, TX, TB) { return _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCBXC() (TB, TC, TB, TX, TC) { return _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCBYX() (TB, TC, TB, TY, TX) { return _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCBYY() (TB, TC, TB, TY, TY) { return _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCBYZ() (TB, TC, TB, TY, TZ) { return _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCBYW() (TB, TC, TB, TY, TW) { return _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCBYA() (TB, TC, TB, TY, TA) { return _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCBYB() (TB, TC, TB, TY, TB) { return _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCBYC() (TB, TC, TB, TY, TC) { return _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCBZX() (TB, TC, TB, TZ, TX) { return _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCBZY() (TB, TC, TB, TZ, TY) { return _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCBZZ() (TB, TC, TB, TZ, TZ) { return _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCBZW() (TB, TC, TB, TZ, TW) { return _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCBZA() (TB, TC, TB, TZ, TA) { return _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCBZB() (TB, TC, TB, TZ, TB) { return _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCBZC() (TB, TC, TB, TZ, TC) { return _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCBWX() (TB, TC, TB, TW, TX) { return _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCBWY() (TB, TC, TB, TW, TY) { return _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCBWZ() (TB, TC, TB, TW, TZ) { return _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCBWW() (TB, TC, TB, TW, TW) { return _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCBWA() (TB, TC, TB, TW, TA) { return _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCBWB() (TB, TC, TB, TW, TB) { return _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCBWC() (TB, TC, TB, TW, TC) { return _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCBAX() (TB, TC, TB, TA, TX) { return _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCBAY() (TB, TC, TB, TA, TY) { return _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCBAZ() (TB, TC, TB, TA, TZ) { return _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCBAW() (TB, TC, TB, TA, TW) { return _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCBAA() (TB, TC, TB, TA, TA) { return _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCBAB() (TB, TC, TB, TA, TB) { return _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCBAC() (TB, TC, TB, TA, TC) { return _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCBBX() (TB, TC, TB, TB, TX) { return _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCBBY() (TB, TC, TB, TB, TY) { return _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCBBZ() (TB, TC, TB, TB, TZ) { return _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCBBW() (TB, TC, TB, TB, TW) { return _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCBBA() (TB, TC, TB, TB, TA) { return _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCBBB() (TB, TC, TB, TB, TB) { return _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCBBC() (TB, TC, TB, TB, TC) { return _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCBCX() (TB, TC, TB, TC, TX) { return _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCBCY() (TB, TC, TB, TC, TY) { return _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCBCZ() (TB, TC, TB, TC, TZ) { return _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCBCW() (TB, TC, TB, TC, TW) { return _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCBCA() (TB, TC, TB, TC, TA) { return _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCBCB() (TB, TC, TB, TC, TB) { return _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCBCC() (TB, TC, TB, TC, TC) { return _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCCXX() (TB, TC, TC, TX, TX) { return _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCCXY() (TB, TC, TC, TX, TY) { return _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCCXZ() (TB, TC, TC, TX, TZ) { return _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCCXW() (TB, TC, TC, TX, TW) { return _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCCXA() (TB, TC, TC, TX, TA) { return _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCCXB() (TB, TC, TC, TX, TB) { return _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCCXC() (TB, TC, TC, TX, TC) { return _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCCYX() (TB, TC, TC, TY, TX) { return _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCCYY() (TB, TC, TC, TY, TY) { return _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCCYZ() (TB, TC, TC, TY, TZ) { return _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCCYW() (TB, TC, TC, TY, TW) { return _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCCYA() (TB, TC, TC, TY, TA) { return _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCCYB() (TB, TC, TC, TY, TB) { return _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCCYC() (TB, TC, TC, TY, TC) { return _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCCZX() (TB, TC, TC, TZ, TX) { return _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCCZY() (TB, TC, TC, TZ, TY) { return _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCCZZ() (TB, TC, TC, TZ, TZ) { return _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCCZW() (TB, TC, TC, TZ, TW) { return _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCCZA() (TB, TC, TC, TZ, TA) { return _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCCZB() (TB, TC, TC, TZ, TB) { return _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCCZC() (TB, TC, TC, TZ, TC) { return _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCCWX() (TB, TC, TC, TW, TX) { return _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCCWY() (TB, TC, TC, TW, TY) { return _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCCWZ() (TB, TC, TC, TW, TZ) { return _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCCWW() (TB, TC, TC, TW, TW) { return _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCCWA() (TB, TC, TC, TW, TA) { return _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCCWB() (TB, TC, TC, TW, TB) { return _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCCWC() (TB, TC, TC, TW, TC) { return _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCCAX() (TB, TC, TC, TA, TX) { return _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCCAY() (TB, TC, TC, TA, TY) { return _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCCAZ() (TB, TC, TC, TA, TZ) { return _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCCAW() (TB, TC, TC, TA, TW) { return _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCCAA() (TB, TC, TC, TA, TA) { return _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCCAB() (TB, TC, TC, TA, TB) { return _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCCAC() (TB, TC, TC, TA, TC) { return _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCCBX() (TB, TC, TC, TB, TX) { return _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCCBY() (TB, TC, TC, TB, TY) { return _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCCBZ() (TB, TC, TC, TB, TZ) { return _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCCBW() (TB, TC, TC, TB, TW) { return _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCCBA() (TB, TC, TC, TB, TA) { return _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCCBB() (TB, TC, TC, TB, TB) { return _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCCBC() (TB, TC, TC, TB, TC) { return _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCCCX() (TB, TC, TC, TC, TX) { return _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCCCY() (TB, TC, TC, TC, TY) { return _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCCCZ() (TB, TC, TC, TC, TZ) { return _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCCCW() (TB, TC, TC, TC, TW) { return _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCCCA() (TB, TC, TC, TC, TA) { return _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCCCB() (TB, TC, TC, TC, TB) { return _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) BCCCC() (TB, TC, TC, TC, TC) { return _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXXXX() (TC, TX, TX, TX, TX) { return _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXXXY() (TC, TX, TX, TX, TY) { return _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXXXZ() (TC, TX, TX, TX, TZ) { return _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXXXW() (TC, TX, TX, TX, TW) { return _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXXXA() (TC, TX, TX, TX, TA) { return _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXXXB() (TC, TX, TX, TX, TB) { return _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXXXC() (TC, TX, TX, TX, TC) { return _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXXYX() (TC, TX, TX, TY, TX) { return _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXXYY() (TC, TX, TX, TY, TY) { return _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXXYZ() (TC, TX, TX, TY, TZ) { return _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXXYW() (TC, TX, TX, TY, TW) { return _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXXYA() (TC, TX, TX, TY, TA) { return _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXXYB() (TC, TX, TX, TY, TB) { return _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXXYC() (TC, TX, TX, TY, TC) { return _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXXZX() (TC, TX, TX, TZ, TX) { return _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXXZY() (TC, TX, TX, TZ, TY) { return _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXXZZ() (TC, TX, TX, TZ, TZ) { return _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXXZW() (TC, TX, TX, TZ, TW) { return _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXXZA() (TC, TX, TX, TZ, TA) { return _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXXZB() (TC, TX, TX, TZ, TB) { return _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXXZC() (TC, TX, TX, TZ, TC) { return _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXXWX() (TC, TX, TX, TW, TX) { return _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXXWY() (TC, TX, TX, TW, TY) { return _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXXWZ() (TC, TX, TX, TW, TZ) { return _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXXWW() (TC, TX, TX, TW, TW) { return _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXXWA() (TC, TX, TX, TW, TA) { return _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXXWB() (TC, TX, TX, TW, TB) { return _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXXWC() (TC, TX, TX, TW, TC) { return _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXXAX() (TC, TX, TX, TA, TX) { return _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXXAY() (TC, TX, TX, TA, TY) { return _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXXAZ() (TC, TX, TX, TA, TZ) { return _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXXAW() (TC, TX, TX, TA, TW) { return _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXXAA() (TC, TX, TX, TA, TA) { return _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXXAB() (TC, TX, TX, TA, TB) { return _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXXAC() (TC, TX, TX, TA, TC) { return _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXXBX() (TC, TX, TX, TB, TX) { return _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXXBY() (TC, TX, TX, TB, TY) { return _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXXBZ() (TC, TX, TX, TB, TZ) { return _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXXBW() (TC, TX, TX, TB, TW) { return _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXXBA() (TC, TX, TX, TB, TA) { return _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXXBB() (TC, TX, TX, TB, TB) { return _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXXBC() (TC, TX, TX, TB, TC) { return _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXXCX() (TC, TX, TX, TC, TX) { return _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXXCY() (TC, TX, TX, TC, TY) { return _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXXCZ() (TC, TX, TX, TC, TZ) { return _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXXCW() (TC, TX, TX, TC, TW) { return _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXXCA() (TC, TX, TX, TC, TA) { return _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXXCB() (TC, TX, TX, TC, TB) { return _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXXCC() (TC, TX, TX, TC, TC) { return _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXYXX() (TC, TX, TY, TX, TX) { return _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXYXY() (TC, TX, TY, TX, TY) { return _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXYXZ() (TC, TX, TY, TX, TZ) { return _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXYXW() (TC, TX, TY, TX, TW) { return _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXYXA() (TC, TX, TY, TX, TA) { return _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXYXB() (TC, TX, TY, TX, TB) { return _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXYXC() (TC, TX, TY, TX, TC) { return _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXYYX() (TC, TX, TY, TY, TX) { return _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXYYY() (TC, TX, TY, TY, TY) { return _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXYYZ() (TC, TX, TY, TY, TZ) { return _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXYYW() (TC, TX, TY, TY, TW) { return _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXYYA() (TC, TX, TY, TY, TA) { return _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXYYB() (TC, TX, TY, TY, TB) { return _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXYYC() (TC, TX, TY, TY, TC) { return _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXYZX() (TC, TX, TY, TZ, TX) { return _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXYZY() (TC, TX, TY, TZ, TY) { return _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXYZZ() (TC, TX, TY, TZ, TZ) { return _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXYZW() (TC, TX, TY, TZ, TW) { return _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXYZA() (TC, TX, TY, TZ, TA) { return _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXYZB() (TC, TX, TY, TZ, TB) { return _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXYZC() (TC, TX, TY, TZ, TC) { return _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXYWX() (TC, TX, TY, TW, TX) { return _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXYWY() (TC, TX, TY, TW, TY) { return _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXYWZ() (TC, TX, TY, TW, TZ) { return _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXYWW() (TC, TX, TY, TW, TW) { return _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXYWA() (TC, TX, TY, TW, TA) { return _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXYWB() (TC, TX, TY, TW, TB) { return _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXYWC() (TC, TX, TY, TW, TC) { return _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXYAX() (TC, TX, TY, TA, TX) { return _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXYAY() (TC, TX, TY, TA, TY) { return _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXYAZ() (TC, TX, TY, TA, TZ) { return _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXYAW() (TC, TX, TY, TA, TW) { return _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXYAA() (TC, TX, TY, TA, TA) { return _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXYAB() (TC, TX, TY, TA, TB) { return _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXYAC() (TC, TX, TY, TA, TC) { return _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXYBX() (TC, TX, TY, TB, TX) { return _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXYBY() (TC, TX, TY, TB, TY) { return _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXYBZ() (TC, TX, TY, TB, TZ) { return _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXYBW() (TC, TX, TY, TB, TW) { return _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXYBA() (TC, TX, TY, TB, TA) { return _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXYBB() (TC, TX, TY, TB, TB) { return _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXYBC() (TC, TX, TY, TB, TC) { return _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXYCX() (TC, TX, TY, TC, TX) { return _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXYCY() (TC, TX, TY, TC, TY) { return _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXYCZ() (TC, TX, TY, TC, TZ) { return _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXYCW() (TC, TX, TY, TC, TW) { return _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXYCA() (TC, TX, TY, TC, TA) { return _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXYCB() (TC, TX, TY, TC, TB) { return _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXYCC() (TC, TX, TY, TC, TC) { return _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXZXX() (TC, TX, TZ, TX, TX) { return _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXZXY() (TC, TX, TZ, TX, TY) { return _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXZXZ() (TC, TX, TZ, TX, TZ) { return _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXZXW() (TC, TX, TZ, TX, TW) { return _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXZXA() (TC, TX, TZ, TX, TA) { return _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXZXB() (TC, TX, TZ, TX, TB) { return _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXZXC() (TC, TX, TZ, TX, TC) { return _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXZYX() (TC, TX, TZ, TY, TX) { return _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXZYY() (TC, TX, TZ, TY, TY) { return _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXZYZ() (TC, TX, TZ, TY, TZ) { return _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXZYW() (TC, TX, TZ, TY, TW) { return _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXZYA() (TC, TX, TZ, TY, TA) { return _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXZYB() (TC, TX, TZ, TY, TB) { return _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXZYC() (TC, TX, TZ, TY, TC) { return _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXZZX() (TC, TX, TZ, TZ, TX) { return _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXZZY() (TC, TX, TZ, TZ, TY) { return _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXZZZ() (TC, TX, TZ, TZ, TZ) { return _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXZZW() (TC, TX, TZ, TZ, TW) { return _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXZZA() (TC, TX, TZ, TZ, TA) { return _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXZZB() (TC, TX, TZ, TZ, TB) { return _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXZZC() (TC, TX, TZ, TZ, TC) { return _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXZWX() (TC, TX, TZ, TW, TX) { return _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXZWY() (TC, TX, TZ, TW, TY) { return _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXZWZ() (TC, TX, TZ, TW, TZ) { return _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXZWW() (TC, TX, TZ, TW, TW) { return _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXZWA() (TC, TX, TZ, TW, TA) { return _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXZWB() (TC, TX, TZ, TW, TB) { return _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXZWC() (TC, TX, TZ, TW, TC) { return _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXZAX() (TC, TX, TZ, TA, TX) { return _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXZAY() (TC, TX, TZ, TA, TY) { return _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXZAZ() (TC, TX, TZ, TA, TZ) { return _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXZAW() (TC, TX, TZ, TA, TW) { return _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXZAA() (TC, TX, TZ, TA, TA) { return _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXZAB() (TC, TX, TZ, TA, TB) { return _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXZAC() (TC, TX, TZ, TA, TC) { return _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXZBX() (TC, TX, TZ, TB, TX) { return _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXZBY() (TC, TX, TZ, TB, TY) { return _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXZBZ() (TC, TX, TZ, TB, TZ) { return _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXZBW() (TC, TX, TZ, TB, TW) { return _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXZBA() (TC, TX, TZ, TB, TA) { return _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXZBB() (TC, TX, TZ, TB, TB) { return _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXZBC() (TC, TX, TZ, TB, TC) { return _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXZCX() (TC, TX, TZ, TC, TX) { return _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXZCY() (TC, TX, TZ, TC, TY) { return _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXZCZ() (TC, TX, TZ, TC, TZ) { return _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXZCW() (TC, TX, TZ, TC, TW) { return _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXZCA() (TC, TX, TZ, TC, TA) { return _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXZCB() (TC, TX, TZ, TC, TB) { return _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXZCC() (TC, TX, TZ, TC, TC) { return _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXWXX() (TC, TX, TW, TX, TX) { return _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXWXY() (TC, TX, TW, TX, TY) { return _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXWXZ() (TC, TX, TW, TX, TZ) { return _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXWXW() (TC, TX, TW, TX, TW) { return _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXWXA() (TC, TX, TW, TX, TA) { return _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXWXB() (TC, TX, TW, TX, TB) { return _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXWXC() (TC, TX, TW, TX, TC) { return _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXWYX() (TC, TX, TW, TY, TX) { return _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXWYY() (TC, TX, TW, TY, TY) { return _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXWYZ() (TC, TX, TW, TY, TZ) { return _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXWYW() (TC, TX, TW, TY, TW) { return _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXWYA() (TC, TX, TW, TY, TA) { return _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXWYB() (TC, TX, TW, TY, TB) { return _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXWYC() (TC, TX, TW, TY, TC) { return _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXWZX() (TC, TX, TW, TZ, TX) { return _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXWZY() (TC, TX, TW, TZ, TY) { return _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXWZZ() (TC, TX, TW, TZ, TZ) { return _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXWZW() (TC, TX, TW, TZ, TW) { return _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXWZA() (TC, TX, TW, TZ, TA) { return _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXWZB() (TC, TX, TW, TZ, TB) { return _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXWZC() (TC, TX, TW, TZ, TC) { return _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXWWX() (TC, TX, TW, TW, TX) { return _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXWWY() (TC, TX, TW, TW, TY) { return _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXWWZ() (TC, TX, TW, TW, TZ) { return _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXWWW() (TC, TX, TW, TW, TW) { return _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXWWA() (TC, TX, TW, TW, TA) { return _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXWWB() (TC, TX, TW, TW, TB) { return _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXWWC() (TC, TX, TW, TW, TC) { return _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXWAX() (TC, TX, TW, TA, TX) { return _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXWAY() (TC, TX, TW, TA, TY) { return _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXWAZ() (TC, TX, TW, TA, TZ) { return _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXWAW() (TC, TX, TW, TA, TW) { return _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXWAA() (TC, TX, TW, TA, TA) { return _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXWAB() (TC, TX, TW, TA, TB) { return _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXWAC() (TC, TX, TW, TA, TC) { return _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXWBX() (TC, TX, TW, TB, TX) { return _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXWBY() (TC, TX, TW, TB, TY) { return _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXWBZ() (TC, TX, TW, TB, TZ) { return _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXWBW() (TC, TX, TW, TB, TW) { return _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXWBA() (TC, TX, TW, TB, TA) { return _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXWBB() (TC, TX, TW, TB, TB) { return _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXWBC() (TC, TX, TW, TB, TC) { return _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXWCX() (TC, TX, TW, TC, TX) { return _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXWCY() (TC, TX, TW, TC, TY) { return _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXWCZ() (TC, TX, TW, TC, TZ) { return _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXWCW() (TC, TX, TW, TC, TW) { return _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXWCA() (TC, TX, TW, TC, TA) { return _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXWCB() (TC, TX, TW, TC, TB) { return _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXWCC() (TC, TX, TW, TC, TC) { return _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXAXX() (TC, TX, TA, TX, TX) { return _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXAXY() (TC, TX, TA, TX, TY) { return _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXAXZ() (TC, TX, TA, TX, TZ) { return _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXAXW() (TC, TX, TA, TX, TW) { return _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXAXA() (TC, TX, TA, TX, TA) { return _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXAXB() (TC, TX, TA, TX, TB) { return _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXAXC() (TC, TX, TA, TX, TC) { return _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXAYX() (TC, TX, TA, TY, TX) { return _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXAYY() (TC, TX, TA, TY, TY) { return _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXAYZ() (TC, TX, TA, TY, TZ) { return _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXAYW() (TC, TX, TA, TY, TW) { return _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXAYA() (TC, TX, TA, TY, TA) { return _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXAYB() (TC, TX, TA, TY, TB) { return _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXAYC() (TC, TX, TA, TY, TC) { return _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXAZX() (TC, TX, TA, TZ, TX) { return _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXAZY() (TC, TX, TA, TZ, TY) { return _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXAZZ() (TC, TX, TA, TZ, TZ) { return _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXAZW() (TC, TX, TA, TZ, TW) { return _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXAZA() (TC, TX, TA, TZ, TA) { return _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXAZB() (TC, TX, TA, TZ, TB) { return _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXAZC() (TC, TX, TA, TZ, TC) { return _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXAWX() (TC, TX, TA, TW, TX) { return _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXAWY() (TC, TX, TA, TW, TY) { return _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXAWZ() (TC, TX, TA, TW, TZ) { return _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXAWW() (TC, TX, TA, TW, TW) { return _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXAWA() (TC, TX, TA, TW, TA) { return _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXAWB() (TC, TX, TA, TW, TB) { return _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXAWC() (TC, TX, TA, TW, TC) { return _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXAAX() (TC, TX, TA, TA, TX) { return _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXAAY() (TC, TX, TA, TA, TY) { return _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXAAZ() (TC, TX, TA, TA, TZ) { return _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXAAW() (TC, TX, TA, TA, TW) { return _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXAAA() (TC, TX, TA, TA, TA) { return _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXAAB() (TC, TX, TA, TA, TB) { return _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXAAC() (TC, TX, TA, TA, TC) { return _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXABX() (TC, TX, TA, TB, TX) { return _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXABY() (TC, TX, TA, TB, TY) { return _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXABZ() (TC, TX, TA, TB, TZ) { return _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXABW() (TC, TX, TA, TB, TW) { return _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXABA() (TC, TX, TA, TB, TA) { return _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXABB() (TC, TX, TA, TB, TB) { return _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXABC() (TC, TX, TA, TB, TC) { return _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXACX() (TC, TX, TA, TC, TX) { return _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXACY() (TC, TX, TA, TC, TY) { return _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXACZ() (TC, TX, TA, TC, TZ) { return _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXACW() (TC, TX, TA, TC, TW) { return _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXACA() (TC, TX, TA, TC, TA) { return _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXACB() (TC, TX, TA, TC, TB) { return _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXACC() (TC, TX, TA, TC, TC) { return _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXBXX() (TC, TX, TB, TX, TX) { return _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXBXY() (TC, TX, TB, TX, TY) { return _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXBXZ() (TC, TX, TB, TX, TZ) { return _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXBXW() (TC, TX, TB, TX, TW) { return _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXBXA() (TC, TX, TB, TX, TA) { return _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXBXB() (TC, TX, TB, TX, TB) { return _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXBXC() (TC, TX, TB, TX, TC) { return _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXBYX() (TC, TX, TB, TY, TX) { return _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXBYY() (TC, TX, TB, TY, TY) { return _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXBYZ() (TC, TX, TB, TY, TZ) { return _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXBYW() (TC, TX, TB, TY, TW) { return _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXBYA() (TC, TX, TB, TY, TA) { return _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXBYB() (TC, TX, TB, TY, TB) { return _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXBYC() (TC, TX, TB, TY, TC) { return _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXBZX() (TC, TX, TB, TZ, TX) { return _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXBZY() (TC, TX, TB, TZ, TY) { return _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXBZZ() (TC, TX, TB, TZ, TZ) { return _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXBZW() (TC, TX, TB, TZ, TW) { return _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXBZA() (TC, TX, TB, TZ, TA) { return _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXBZB() (TC, TX, TB, TZ, TB) { return _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXBZC() (TC, TX, TB, TZ, TC) { return _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXBWX() (TC, TX, TB, TW, TX) { return _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXBWY() (TC, TX, TB, TW, TY) { return _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXBWZ() (TC, TX, TB, TW, TZ) { return _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXBWW() (TC, TX, TB, TW, TW) { return _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXBWA() (TC, TX, TB, TW, TA) { return _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXBWB() (TC, TX, TB, TW, TB) { return _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXBWC() (TC, TX, TB, TW, TC) { return _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXBAX() (TC, TX, TB, TA, TX) { return _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXBAY() (TC, TX, TB, TA, TY) { return _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXBAZ() (TC, TX, TB, TA, TZ) { return _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXBAW() (TC, TX, TB, TA, TW) { return _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXBAA() (TC, TX, TB, TA, TA) { return _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXBAB() (TC, TX, TB, TA, TB) { return _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXBAC() (TC, TX, TB, TA, TC) { return _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXBBX() (TC, TX, TB, TB, TX) { return _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXBBY() (TC, TX, TB, TB, TY) { return _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXBBZ() (TC, TX, TB, TB, TZ) { return _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXBBW() (TC, TX, TB, TB, TW) { return _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXBBA() (TC, TX, TB, TB, TA) { return _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXBBB() (TC, TX, TB, TB, TB) { return _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXBBC() (TC, TX, TB, TB, TC) { return _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXBCX() (TC, TX, TB, TC, TX) { return _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXBCY() (TC, TX, TB, TC, TY) { return _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXBCZ() (TC, TX, TB, TC, TZ) { return _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXBCW() (TC, TX, TB, TC, TW) { return _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXBCA() (TC, TX, TB, TC, TA) { return _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXBCB() (TC, TX, TB, TC, TB) { return _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXBCC() (TC, TX, TB, TC, TC) { return _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXCXX() (TC, TX, TC, TX, TX) { return _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXCXY() (TC, TX, TC, TX, TY) { return _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXCXZ() (TC, TX, TC, TX, TZ) { return _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXCXW() (TC, TX, TC, TX, TW) { return _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXCXA() (TC, TX, TC, TX, TA) { return _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXCXB() (TC, TX, TC, TX, TB) { return _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXCXC() (TC, TX, TC, TX, TC) { return _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXCYX() (TC, TX, TC, TY, TX) { return _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXCYY() (TC, TX, TC, TY, TY) { return _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXCYZ() (TC, TX, TC, TY, TZ) { return _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXCYW() (TC, TX, TC, TY, TW) { return _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXCYA() (TC, TX, TC, TY, TA) { return _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXCYB() (TC, TX, TC, TY, TB) { return _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXCYC() (TC, TX, TC, TY, TC) { return _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXCZX() (TC, TX, TC, TZ, TX) { return _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXCZY() (TC, TX, TC, TZ, TY) { return _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXCZZ() (TC, TX, TC, TZ, TZ) { return _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXCZW() (TC, TX, TC, TZ, TW) { return _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXCZA() (TC, TX, TC, TZ, TA) { return _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXCZB() (TC, TX, TC, TZ, TB) { return _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXCZC() (TC, TX, TC, TZ, TC) { return _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXCWX() (TC, TX, TC, TW, TX) { return _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXCWY() (TC, TX, TC, TW, TY) { return _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXCWZ() (TC, TX, TC, TW, TZ) { return _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXCWW() (TC, TX, TC, TW, TW) { return _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXCWA() (TC, TX, TC, TW, TA) { return _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXCWB() (TC, TX, TC, TW, TB) { return _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXCWC() (TC, TX, TC, TW, TC) { return _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXCAX() (TC, TX, TC, TA, TX) { return _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXCAY() (TC, TX, TC, TA, TY) { return _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXCAZ() (TC, TX, TC, TA, TZ) { return _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXCAW() (TC, TX, TC, TA, TW) { return _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXCAA() (TC, TX, TC, TA, TA) { return _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXCAB() (TC, TX, TC, TA, TB) { return _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXCAC() (TC, TX, TC, TA, TC) { return _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXCBX() (TC, TX, TC, TB, TX) { return _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXCBY() (TC, TX, TC, TB, TY) { return _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXCBZ() (TC, TX, TC, TB, TZ) { return _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXCBW() (TC, TX, TC, TB, TW) { return _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXCBA() (TC, TX, TC, TB, TA) { return _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXCBB() (TC, TX, TC, TB, TB) { return _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXCBC() (TC, TX, TC, TB, TC) { return _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXCCX() (TC, TX, TC, TC, TX) { return _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXCCY() (TC, TX, TC, TC, TY) { return _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXCCZ() (TC, TX, TC, TC, TZ) { return _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXCCW() (TC, TX, TC, TC, TW) { return _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXCCA() (TC, TX, TC, TC, TA) { return _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXCCB() (TC, TX, TC, TC, TB) { return _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CXCCC() (TC, TX, TC, TC, TC) { return _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYXXX() (TC, TY, TX, TX, TX) { return _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYXXY() (TC, TY, TX, TX, TY) { return _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYXXZ() (TC, TY, TX, TX, TZ) { return _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYXXW() (TC, TY, TX, TX, TW) { return _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYXXA() (TC, TY, TX, TX, TA) { return _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYXXB() (TC, TY, TX, TX, TB) { return _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYXXC() (TC, TY, TX, TX, TC) { return _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYXYX() (TC, TY, TX, TY, TX) { return _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYXYY() (TC, TY, TX, TY, TY) { return _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYXYZ() (TC, TY, TX, TY, TZ) { return _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYXYW() (TC, TY, TX, TY, TW) { return _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYXYA() (TC, TY, TX, TY, TA) { return _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYXYB() (TC, TY, TX, TY, TB) { return _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYXYC() (TC, TY, TX, TY, TC) { return _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYXZX() (TC, TY, TX, TZ, TX) { return _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYXZY() (TC, TY, TX, TZ, TY) { return _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYXZZ() (TC, TY, TX, TZ, TZ) { return _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYXZW() (TC, TY, TX, TZ, TW) { return _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYXZA() (TC, TY, TX, TZ, TA) { return _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYXZB() (TC, TY, TX, TZ, TB) { return _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYXZC() (TC, TY, TX, TZ, TC) { return _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYXWX() (TC, TY, TX, TW, TX) { return _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYXWY() (TC, TY, TX, TW, TY) { return _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYXWZ() (TC, TY, TX, TW, TZ) { return _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYXWW() (TC, TY, TX, TW, TW) { return _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYXWA() (TC, TY, TX, TW, TA) { return _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYXWB() (TC, TY, TX, TW, TB) { return _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYXWC() (TC, TY, TX, TW, TC) { return _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYXAX() (TC, TY, TX, TA, TX) { return _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYXAY() (TC, TY, TX, TA, TY) { return _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYXAZ() (TC, TY, TX, TA, TZ) { return _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYXAW() (TC, TY, TX, TA, TW) { return _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYXAA() (TC, TY, TX, TA, TA) { return _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYXAB() (TC, TY, TX, TA, TB) { return _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYXAC() (TC, TY, TX, TA, TC) { return _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYXBX() (TC, TY, TX, TB, TX) { return _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYXBY() (TC, TY, TX, TB, TY) { return _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYXBZ() (TC, TY, TX, TB, TZ) { return _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYXBW() (TC, TY, TX, TB, TW) { return _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYXBA() (TC, TY, TX, TB, TA) { return _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYXBB() (TC, TY, TX, TB, TB) { return _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYXBC() (TC, TY, TX, TB, TC) { return _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYXCX() (TC, TY, TX, TC, TX) { return _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYXCY() (TC, TY, TX, TC, TY) { return _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYXCZ() (TC, TY, TX, TC, TZ) { return _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYXCW() (TC, TY, TX, TC, TW) { return _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYXCA() (TC, TY, TX, TC, TA) { return _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYXCB() (TC, TY, TX, TC, TB) { return _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYXCC() (TC, TY, TX, TC, TC) { return _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYYXX() (TC, TY, TY, TX, TX) { return _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYYXY() (TC, TY, TY, TX, TY) { return _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYYXZ() (TC, TY, TY, TX, TZ) { return _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYYXW() (TC, TY, TY, TX, TW) { return _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYYXA() (TC, TY, TY, TX, TA) { return _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYYXB() (TC, TY, TY, TX, TB) { return _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYYXC() (TC, TY, TY, TX, TC) { return _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYYYX() (TC, TY, TY, TY, TX) { return _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYYYY() (TC, TY, TY, TY, TY) { return _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYYYZ() (TC, TY, TY, TY, TZ) { return _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYYYW() (TC, TY, TY, TY, TW) { return _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYYYA() (TC, TY, TY, TY, TA) { return _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYYYB() (TC, TY, TY, TY, TB) { return _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYYYC() (TC, TY, TY, TY, TC) { return _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYYZX() (TC, TY, TY, TZ, TX) { return _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYYZY() (TC, TY, TY, TZ, TY) { return _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYYZZ() (TC, TY, TY, TZ, TZ) { return _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYYZW() (TC, TY, TY, TZ, TW) { return _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYYZA() (TC, TY, TY, TZ, TA) { return _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYYZB() (TC, TY, TY, TZ, TB) { return _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYYZC() (TC, TY, TY, TZ, TC) { return _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYYWX() (TC, TY, TY, TW, TX) { return _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYYWY() (TC, TY, TY, TW, TY) { return _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYYWZ() (TC, TY, TY, TW, TZ) { return _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYYWW() (TC, TY, TY, TW, TW) { return _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYYWA() (TC, TY, TY, TW, TA) { return _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYYWB() (TC, TY, TY, TW, TB) { return _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYYWC() (TC, TY, TY, TW, TC) { return _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYYAX() (TC, TY, TY, TA, TX) { return _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYYAY() (TC, TY, TY, TA, TY) { return _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYYAZ() (TC, TY, TY, TA, TZ) { return _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYYAW() (TC, TY, TY, TA, TW) { return _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYYAA() (TC, TY, TY, TA, TA) { return _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYYAB() (TC, TY, TY, TA, TB) { return _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYYAC() (TC, TY, TY, TA, TC) { return _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYYBX() (TC, TY, TY, TB, TX) { return _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYYBY() (TC, TY, TY, TB, TY) { return _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYYBZ() (TC, TY, TY, TB, TZ) { return _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYYBW() (TC, TY, TY, TB, TW) { return _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYYBA() (TC, TY, TY, TB, TA) { return _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYYBB() (TC, TY, TY, TB, TB) { return _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYYBC() (TC, TY, TY, TB, TC) { return _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYYCX() (TC, TY, TY, TC, TX) { return _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYYCY() (TC, TY, TY, TC, TY) { return _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYYCZ() (TC, TY, TY, TC, TZ) { return _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYYCW() (TC, TY, TY, TC, TW) { return _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYYCA() (TC, TY, TY, TC, TA) { return _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYYCB() (TC, TY, TY, TC, TB) { return _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYYCC() (TC, TY, TY, TC, TC) { return _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYZXX() (TC, TY, TZ, TX, TX) { return _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYZXY() (TC, TY, TZ, TX, TY) { return _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYZXZ() (TC, TY, TZ, TX, TZ) { return _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYZXW() (TC, TY, TZ, TX, TW) { return _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYZXA() (TC, TY, TZ, TX, TA) { return _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYZXB() (TC, TY, TZ, TX, TB) { return _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYZXC() (TC, TY, TZ, TX, TC) { return _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYZYX() (TC, TY, TZ, TY, TX) { return _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYZYY() (TC, TY, TZ, TY, TY) { return _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYZYZ() (TC, TY, TZ, TY, TZ) { return _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYZYW() (TC, TY, TZ, TY, TW) { return _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYZYA() (TC, TY, TZ, TY, TA) { return _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYZYB() (TC, TY, TZ, TY, TB) { return _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYZYC() (TC, TY, TZ, TY, TC) { return _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYZZX() (TC, TY, TZ, TZ, TX) { return _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYZZY() (TC, TY, TZ, TZ, TY) { return _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYZZZ() (TC, TY, TZ, TZ, TZ) { return _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYZZW() (TC, TY, TZ, TZ, TW) { return _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYZZA() (TC, TY, TZ, TZ, TA) { return _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYZZB() (TC, TY, TZ, TZ, TB) { return _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYZZC() (TC, TY, TZ, TZ, TC) { return _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYZWX() (TC, TY, TZ, TW, TX) { return _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYZWY() (TC, TY, TZ, TW, TY) { return _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYZWZ() (TC, TY, TZ, TW, TZ) { return _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYZWW() (TC, TY, TZ, TW, TW) { return _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYZWA() (TC, TY, TZ, TW, TA) { return _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYZWB() (TC, TY, TZ, TW, TB) { return _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYZWC() (TC, TY, TZ, TW, TC) { return _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYZAX() (TC, TY, TZ, TA, TX) { return _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYZAY() (TC, TY, TZ, TA, TY) { return _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYZAZ() (TC, TY, TZ, TA, TZ) { return _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYZAW() (TC, TY, TZ, TA, TW) { return _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYZAA() (TC, TY, TZ, TA, TA) { return _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYZAB() (TC, TY, TZ, TA, TB) { return _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYZAC() (TC, TY, TZ, TA, TC) { return _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYZBX() (TC, TY, TZ, TB, TX) { return _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYZBY() (TC, TY, TZ, TB, TY) { return _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYZBZ() (TC, TY, TZ, TB, TZ) { return _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYZBW() (TC, TY, TZ, TB, TW) { return _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYZBA() (TC, TY, TZ, TB, TA) { return _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYZBB() (TC, TY, TZ, TB, TB) { return _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYZBC() (TC, TY, TZ, TB, TC) { return _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYZCX() (TC, TY, TZ, TC, TX) { return _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYZCY() (TC, TY, TZ, TC, TY) { return _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYZCZ() (TC, TY, TZ, TC, TZ) { return _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYZCW() (TC, TY, TZ, TC, TW) { return _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYZCA() (TC, TY, TZ, TC, TA) { return _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYZCB() (TC, TY, TZ, TC, TB) { return _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYZCC() (TC, TY, TZ, TC, TC) { return _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYWXX() (TC, TY, TW, TX, TX) { return _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYWXY() (TC, TY, TW, TX, TY) { return _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYWXZ() (TC, TY, TW, TX, TZ) { return _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYWXW() (TC, TY, TW, TX, TW) { return _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYWXA() (TC, TY, TW, TX, TA) { return _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYWXB() (TC, TY, TW, TX, TB) { return _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYWXC() (TC, TY, TW, TX, TC) { return _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYWYX() (TC, TY, TW, TY, TX) { return _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYWYY() (TC, TY, TW, TY, TY) { return _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYWYZ() (TC, TY, TW, TY, TZ) { return _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYWYW() (TC, TY, TW, TY, TW) { return _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYWYA() (TC, TY, TW, TY, TA) { return _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYWYB() (TC, TY, TW, TY, TB) { return _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYWYC() (TC, TY, TW, TY, TC) { return _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYWZX() (TC, TY, TW, TZ, TX) { return _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYWZY() (TC, TY, TW, TZ, TY) { return _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYWZZ() (TC, TY, TW, TZ, TZ) { return _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYWZW() (TC, TY, TW, TZ, TW) { return _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYWZA() (TC, TY, TW, TZ, TA) { return _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYWZB() (TC, TY, TW, TZ, TB) { return _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYWZC() (TC, TY, TW, TZ, TC) { return _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYWWX() (TC, TY, TW, TW, TX) { return _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYWWY() (TC, TY, TW, TW, TY) { return _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYWWZ() (TC, TY, TW, TW, TZ) { return _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYWWW() (TC, TY, TW, TW, TW) { return _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYWWA() (TC, TY, TW, TW, TA) { return _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYWWB() (TC, TY, TW, TW, TB) { return _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYWWC() (TC, TY, TW, TW, TC) { return _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYWAX() (TC, TY, TW, TA, TX) { return _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYWAY() (TC, TY, TW, TA, TY) { return _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYWAZ() (TC, TY, TW, TA, TZ) { return _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYWAW() (TC, TY, TW, TA, TW) { return _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYWAA() (TC, TY, TW, TA, TA) { return _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYWAB() (TC, TY, TW, TA, TB) { return _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYWAC() (TC, TY, TW, TA, TC) { return _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYWBX() (TC, TY, TW, TB, TX) { return _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYWBY() (TC, TY, TW, TB, TY) { return _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYWBZ() (TC, TY, TW, TB, TZ) { return _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYWBW() (TC, TY, TW, TB, TW) { return _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYWBA() (TC, TY, TW, TB, TA) { return _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYWBB() (TC, TY, TW, TB, TB) { return _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYWBC() (TC, TY, TW, TB, TC) { return _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYWCX() (TC, TY, TW, TC, TX) { return _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYWCY() (TC, TY, TW, TC, TY) { return _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYWCZ() (TC, TY, TW, TC, TZ) { return _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYWCW() (TC, TY, TW, TC, TW) { return _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYWCA() (TC, TY, TW, TC, TA) { return _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYWCB() (TC, TY, TW, TC, TB) { return _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYWCC() (TC, TY, TW, TC, TC) { return _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYAXX() (TC, TY, TA, TX, TX) { return _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYAXY() (TC, TY, TA, TX, TY) { return _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYAXZ() (TC, TY, TA, TX, TZ) { return _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYAXW() (TC, TY, TA, TX, TW) { return _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYAXA() (TC, TY, TA, TX, TA) { return _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYAXB() (TC, TY, TA, TX, TB) { return _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYAXC() (TC, TY, TA, TX, TC) { return _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYAYX() (TC, TY, TA, TY, TX) { return _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYAYY() (TC, TY, TA, TY, TY) { return _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYAYZ() (TC, TY, TA, TY, TZ) { return _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYAYW() (TC, TY, TA, TY, TW) { return _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYAYA() (TC, TY, TA, TY, TA) { return _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYAYB() (TC, TY, TA, TY, TB) { return _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYAYC() (TC, TY, TA, TY, TC) { return _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYAZX() (TC, TY, TA, TZ, TX) { return _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYAZY() (TC, TY, TA, TZ, TY) { return _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYAZZ() (TC, TY, TA, TZ, TZ) { return _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYAZW() (TC, TY, TA, TZ, TW) { return _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYAZA() (TC, TY, TA, TZ, TA) { return _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYAZB() (TC, TY, TA, TZ, TB) { return _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYAZC() (TC, TY, TA, TZ, TC) { return _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYAWX() (TC, TY, TA, TW, TX) { return _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYAWY() (TC, TY, TA, TW, TY) { return _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYAWZ() (TC, TY, TA, TW, TZ) { return _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYAWW() (TC, TY, TA, TW, TW) { return _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYAWA() (TC, TY, TA, TW, TA) { return _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYAWB() (TC, TY, TA, TW, TB) { return _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYAWC() (TC, TY, TA, TW, TC) { return _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYAAX() (TC, TY, TA, TA, TX) { return _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYAAY() (TC, TY, TA, TA, TY) { return _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYAAZ() (TC, TY, TA, TA, TZ) { return _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYAAW() (TC, TY, TA, TA, TW) { return _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYAAA() (TC, TY, TA, TA, TA) { return _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYAAB() (TC, TY, TA, TA, TB) { return _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYAAC() (TC, TY, TA, TA, TC) { return _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYABX() (TC, TY, TA, TB, TX) { return _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYABY() (TC, TY, TA, TB, TY) { return _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYABZ() (TC, TY, TA, TB, TZ) { return _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYABW() (TC, TY, TA, TB, TW) { return _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYABA() (TC, TY, TA, TB, TA) { return _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYABB() (TC, TY, TA, TB, TB) { return _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYABC() (TC, TY, TA, TB, TC) { return _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYACX() (TC, TY, TA, TC, TX) { return _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYACY() (TC, TY, TA, TC, TY) { return _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYACZ() (TC, TY, TA, TC, TZ) { return _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYACW() (TC, TY, TA, TC, TW) { return _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYACA() (TC, TY, TA, TC, TA) { return _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYACB() (TC, TY, TA, TC, TB) { return _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYACC() (TC, TY, TA, TC, TC) { return _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYBXX() (TC, TY, TB, TX, TX) { return _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYBXY() (TC, TY, TB, TX, TY) { return _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYBXZ() (TC, TY, TB, TX, TZ) { return _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYBXW() (TC, TY, TB, TX, TW) { return _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYBXA() (TC, TY, TB, TX, TA) { return _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYBXB() (TC, TY, TB, TX, TB) { return _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYBXC() (TC, TY, TB, TX, TC) { return _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYBYX() (TC, TY, TB, TY, TX) { return _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYBYY() (TC, TY, TB, TY, TY) { return _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYBYZ() (TC, TY, TB, TY, TZ) { return _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYBYW() (TC, TY, TB, TY, TW) { return _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYBYA() (TC, TY, TB, TY, TA) { return _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYBYB() (TC, TY, TB, TY, TB) { return _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYBYC() (TC, TY, TB, TY, TC) { return _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYBZX() (TC, TY, TB, TZ, TX) { return _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYBZY() (TC, TY, TB, TZ, TY) { return _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYBZZ() (TC, TY, TB, TZ, TZ) { return _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYBZW() (TC, TY, TB, TZ, TW) { return _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYBZA() (TC, TY, TB, TZ, TA) { return _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYBZB() (TC, TY, TB, TZ, TB) { return _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYBZC() (TC, TY, TB, TZ, TC) { return _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYBWX() (TC, TY, TB, TW, TX) { return _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYBWY() (TC, TY, TB, TW, TY) { return _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYBWZ() (TC, TY, TB, TW, TZ) { return _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYBWW() (TC, TY, TB, TW, TW) { return _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYBWA() (TC, TY, TB, TW, TA) { return _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYBWB() (TC, TY, TB, TW, TB) { return _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYBWC() (TC, TY, TB, TW, TC) { return _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYBAX() (TC, TY, TB, TA, TX) { return _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYBAY() (TC, TY, TB, TA, TY) { return _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYBAZ() (TC, TY, TB, TA, TZ) { return _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYBAW() (TC, TY, TB, TA, TW) { return _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYBAA() (TC, TY, TB, TA, TA) { return _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYBAB() (TC, TY, TB, TA, TB) { return _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYBAC() (TC, TY, TB, TA, TC) { return _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYBBX() (TC, TY, TB, TB, TX) { return _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYBBY() (TC, TY, TB, TB, TY) { return _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYBBZ() (TC, TY, TB, TB, TZ) { return _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYBBW() (TC, TY, TB, TB, TW) { return _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYBBA() (TC, TY, TB, TB, TA) { return _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYBBB() (TC, TY, TB, TB, TB) { return _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYBBC() (TC, TY, TB, TB, TC) { return _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYBCX() (TC, TY, TB, TC, TX) { return _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYBCY() (TC, TY, TB, TC, TY) { return _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYBCZ() (TC, TY, TB, TC, TZ) { return _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYBCW() (TC, TY, TB, TC, TW) { return _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYBCA() (TC, TY, TB, TC, TA) { return _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYBCB() (TC, TY, TB, TC, TB) { return _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYBCC() (TC, TY, TB, TC, TC) { return _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYCXX() (TC, TY, TC, TX, TX) { return _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYCXY() (TC, TY, TC, TX, TY) { return _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYCXZ() (TC, TY, TC, TX, TZ) { return _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYCXW() (TC, TY, TC, TX, TW) { return _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYCXA() (TC, TY, TC, TX, TA) { return _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYCXB() (TC, TY, TC, TX, TB) { return _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYCXC() (TC, TY, TC, TX, TC) { return _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYCYX() (TC, TY, TC, TY, TX) { return _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYCYY() (TC, TY, TC, TY, TY) { return _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYCYZ() (TC, TY, TC, TY, TZ) { return _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYCYW() (TC, TY, TC, TY, TW) { return _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYCYA() (TC, TY, TC, TY, TA) { return _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYCYB() (TC, TY, TC, TY, TB) { return _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYCYC() (TC, TY, TC, TY, TC) { return _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYCZX() (TC, TY, TC, TZ, TX) { return _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYCZY() (TC, TY, TC, TZ, TY) { return _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYCZZ() (TC, TY, TC, TZ, TZ) { return _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYCZW() (TC, TY, TC, TZ, TW) { return _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYCZA() (TC, TY, TC, TZ, TA) { return _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYCZB() (TC, TY, TC, TZ, TB) { return _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYCZC() (TC, TY, TC, TZ, TC) { return _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYCWX() (TC, TY, TC, TW, TX) { return _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYCWY() (TC, TY, TC, TW, TY) { return _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYCWZ() (TC, TY, TC, TW, TZ) { return _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYCWW() (TC, TY, TC, TW, TW) { return _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYCWA() (TC, TY, TC, TW, TA) { return _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYCWB() (TC, TY, TC, TW, TB) { return _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYCWC() (TC, TY, TC, TW, TC) { return _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYCAX() (TC, TY, TC, TA, TX) { return _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYCAY() (TC, TY, TC, TA, TY) { return _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYCAZ() (TC, TY, TC, TA, TZ) { return _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYCAW() (TC, TY, TC, TA, TW) { return _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYCAA() (TC, TY, TC, TA, TA) { return _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYCAB() (TC, TY, TC, TA, TB) { return _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYCAC() (TC, TY, TC, TA, TC) { return _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYCBX() (TC, TY, TC, TB, TX) { return _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYCBY() (TC, TY, TC, TB, TY) { return _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYCBZ() (TC, TY, TC, TB, TZ) { return _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYCBW() (TC, TY, TC, TB, TW) { return _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYCBA() (TC, TY, TC, TB, TA) { return _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYCBB() (TC, TY, TC, TB, TB) { return _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYCBC() (TC, TY, TC, TB, TC) { return _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYCCX() (TC, TY, TC, TC, TX) { return _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYCCY() (TC, TY, TC, TC, TY) { return _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYCCZ() (TC, TY, TC, TC, TZ) { return _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYCCW() (TC, TY, TC, TC, TW) { return _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYCCA() (TC, TY, TC, TC, TA) { return _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYCCB() (TC, TY, TC, TC, TB) { return _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CYCCC() (TC, TY, TC, TC, TC) { return _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZXXX() (TC, TZ, TX, TX, TX) { return _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZXXY() (TC, TZ, TX, TX, TY) { return _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZXXZ() (TC, TZ, TX, TX, TZ) { return _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZXXW() (TC, TZ, TX, TX, TW) { return _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZXXA() (TC, TZ, TX, TX, TA) { return _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZXXB() (TC, TZ, TX, TX, TB) { return _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZXXC() (TC, TZ, TX, TX, TC) { return _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZXYX() (TC, TZ, TX, TY, TX) { return _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZXYY() (TC, TZ, TX, TY, TY) { return _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZXYZ() (TC, TZ, TX, TY, TZ) { return _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZXYW() (TC, TZ, TX, TY, TW) { return _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZXYA() (TC, TZ, TX, TY, TA) { return _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZXYB() (TC, TZ, TX, TY, TB) { return _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZXYC() (TC, TZ, TX, TY, TC) { return _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZXZX() (TC, TZ, TX, TZ, TX) { return _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZXZY() (TC, TZ, TX, TZ, TY) { return _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZXZZ() (TC, TZ, TX, TZ, TZ) { return _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZXZW() (TC, TZ, TX, TZ, TW) { return _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZXZA() (TC, TZ, TX, TZ, TA) { return _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZXZB() (TC, TZ, TX, TZ, TB) { return _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZXZC() (TC, TZ, TX, TZ, TC) { return _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZXWX() (TC, TZ, TX, TW, TX) { return _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZXWY() (TC, TZ, TX, TW, TY) { return _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZXWZ() (TC, TZ, TX, TW, TZ) { return _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZXWW() (TC, TZ, TX, TW, TW) { return _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZXWA() (TC, TZ, TX, TW, TA) { return _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZXWB() (TC, TZ, TX, TW, TB) { return _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZXWC() (TC, TZ, TX, TW, TC) { return _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZXAX() (TC, TZ, TX, TA, TX) { return _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZXAY() (TC, TZ, TX, TA, TY) { return _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZXAZ() (TC, TZ, TX, TA, TZ) { return _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZXAW() (TC, TZ, TX, TA, TW) { return _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZXAA() (TC, TZ, TX, TA, TA) { return _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZXAB() (TC, TZ, TX, TA, TB) { return _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZXAC() (TC, TZ, TX, TA, TC) { return _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZXBX() (TC, TZ, TX, TB, TX) { return _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZXBY() (TC, TZ, TX, TB, TY) { return _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZXBZ() (TC, TZ, TX, TB, TZ) { return _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZXBW() (TC, TZ, TX, TB, TW) { return _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZXBA() (TC, TZ, TX, TB, TA) { return _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZXBB() (TC, TZ, TX, TB, TB) { return _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZXBC() (TC, TZ, TX, TB, TC) { return _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZXCX() (TC, TZ, TX, TC, TX) { return _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZXCY() (TC, TZ, TX, TC, TY) { return _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZXCZ() (TC, TZ, TX, TC, TZ) { return _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZXCW() (TC, TZ, TX, TC, TW) { return _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZXCA() (TC, TZ, TX, TC, TA) { return _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZXCB() (TC, TZ, TX, TC, TB) { return _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZXCC() (TC, TZ, TX, TC, TC) { return _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZYXX() (TC, TZ, TY, TX, TX) { return _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZYXY() (TC, TZ, TY, TX, TY) { return _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZYXZ() (TC, TZ, TY, TX, TZ) { return _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZYXW() (TC, TZ, TY, TX, TW) { return _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZYXA() (TC, TZ, TY, TX, TA) { return _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZYXB() (TC, TZ, TY, TX, TB) { return _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZYXC() (TC, TZ, TY, TX, TC) { return _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZYYX() (TC, TZ, TY, TY, TX) { return _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZYYY() (TC, TZ, TY, TY, TY) { return _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZYYZ() (TC, TZ, TY, TY, TZ) { return _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZYYW() (TC, TZ, TY, TY, TW) { return _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZYYA() (TC, TZ, TY, TY, TA) { return _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZYYB() (TC, TZ, TY, TY, TB) { return _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZYYC() (TC, TZ, TY, TY, TC) { return _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZYZX() (TC, TZ, TY, TZ, TX) { return _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZYZY() (TC, TZ, TY, TZ, TY) { return _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZYZZ() (TC, TZ, TY, TZ, TZ) { return _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZYZW() (TC, TZ, TY, TZ, TW) { return _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZYZA() (TC, TZ, TY, TZ, TA) { return _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZYZB() (TC, TZ, TY, TZ, TB) { return _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZYZC() (TC, TZ, TY, TZ, TC) { return _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZYWX() (TC, TZ, TY, TW, TX) { return _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZYWY() (TC, TZ, TY, TW, TY) { return _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZYWZ() (TC, TZ, TY, TW, TZ) { return _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZYWW() (TC, TZ, TY, TW, TW) { return _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZYWA() (TC, TZ, TY, TW, TA) { return _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZYWB() (TC, TZ, TY, TW, TB) { return _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZYWC() (TC, TZ, TY, TW, TC) { return _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZYAX() (TC, TZ, TY, TA, TX) { return _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZYAY() (TC, TZ, TY, TA, TY) { return _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZYAZ() (TC, TZ, TY, TA, TZ) { return _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZYAW() (TC, TZ, TY, TA, TW) { return _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZYAA() (TC, TZ, TY, TA, TA) { return _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZYAB() (TC, TZ, TY, TA, TB) { return _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZYAC() (TC, TZ, TY, TA, TC) { return _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZYBX() (TC, TZ, TY, TB, TX) { return _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZYBY() (TC, TZ, TY, TB, TY) { return _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZYBZ() (TC, TZ, TY, TB, TZ) { return _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZYBW() (TC, TZ, TY, TB, TW) { return _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZYBA() (TC, TZ, TY, TB, TA) { return _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZYBB() (TC, TZ, TY, TB, TB) { return _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZYBC() (TC, TZ, TY, TB, TC) { return _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZYCX() (TC, TZ, TY, TC, TX) { return _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZYCY() (TC, TZ, TY, TC, TY) { return _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZYCZ() (TC, TZ, TY, TC, TZ) { return _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZYCW() (TC, TZ, TY, TC, TW) { return _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZYCA() (TC, TZ, TY, TC, TA) { return _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZYCB() (TC, TZ, TY, TC, TB) { return _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZYCC() (TC, TZ, TY, TC, TC) { return _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZZXX() (TC, TZ, TZ, TX, TX) { return _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZZXY() (TC, TZ, TZ, TX, TY) { return _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZZXZ() (TC, TZ, TZ, TX, TZ) { return _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZZXW() (TC, TZ, TZ, TX, TW) { return _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZZXA() (TC, TZ, TZ, TX, TA) { return _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZZXB() (TC, TZ, TZ, TX, TB) { return _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZZXC() (TC, TZ, TZ, TX, TC) { return _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZZYX() (TC, TZ, TZ, TY, TX) { return _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZZYY() (TC, TZ, TZ, TY, TY) { return _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZZYZ() (TC, TZ, TZ, TY, TZ) { return _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZZYW() (TC, TZ, TZ, TY, TW) { return _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZZYA() (TC, TZ, TZ, TY, TA) { return _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZZYB() (TC, TZ, TZ, TY, TB) { return _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZZYC() (TC, TZ, TZ, TY, TC) { return _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZZZX() (TC, TZ, TZ, TZ, TX) { return _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZZZY() (TC, TZ, TZ, TZ, TY) { return _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZZZZ() (TC, TZ, TZ, TZ, TZ) { return _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZZZW() (TC, TZ, TZ, TZ, TW) { return _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZZZA() (TC, TZ, TZ, TZ, TA) { return _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZZZB() (TC, TZ, TZ, TZ, TB) { return _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZZZC() (TC, TZ, TZ, TZ, TC) { return _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZZWX() (TC, TZ, TZ, TW, TX) { return _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZZWY() (TC, TZ, TZ, TW, TY) { return _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZZWZ() (TC, TZ, TZ, TW, TZ) { return _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZZWW() (TC, TZ, TZ, TW, TW) { return _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZZWA() (TC, TZ, TZ, TW, TA) { return _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZZWB() (TC, TZ, TZ, TW, TB) { return _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZZWC() (TC, TZ, TZ, TW, TC) { return _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZZAX() (TC, TZ, TZ, TA, TX) { return _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZZAY() (TC, TZ, TZ, TA, TY) { return _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZZAZ() (TC, TZ, TZ, TA, TZ) { return _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZZAW() (TC, TZ, TZ, TA, TW) { return _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZZAA() (TC, TZ, TZ, TA, TA) { return _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZZAB() (TC, TZ, TZ, TA, TB) { return _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZZAC() (TC, TZ, TZ, TA, TC) { return _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZZBX() (TC, TZ, TZ, TB, TX) { return _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZZBY() (TC, TZ, TZ, TB, TY) { return _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZZBZ() (TC, TZ, TZ, TB, TZ) { return _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZZBW() (TC, TZ, TZ, TB, TW) { return _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZZBA() (TC, TZ, TZ, TB, TA) { return _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZZBB() (TC, TZ, TZ, TB, TB) { return _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZZBC() (TC, TZ, TZ, TB, TC) { return _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZZCX() (TC, TZ, TZ, TC, TX) { return _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZZCY() (TC, TZ, TZ, TC, TY) { return _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZZCZ() (TC, TZ, TZ, TC, TZ) { return _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZZCW() (TC, TZ, TZ, TC, TW) { return _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZZCA() (TC, TZ, TZ, TC, TA) { return _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZZCB() (TC, TZ, TZ, TC, TB) { return _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZZCC() (TC, TZ, TZ, TC, TC) { return _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZWXX() (TC, TZ, TW, TX, TX) { return _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZWXY() (TC, TZ, TW, TX, TY) { return _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZWXZ() (TC, TZ, TW, TX, TZ) { return _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZWXW() (TC, TZ, TW, TX, TW) { return _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZWXA() (TC, TZ, TW, TX, TA) { return _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZWXB() (TC, TZ, TW, TX, TB) { return _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZWXC() (TC, TZ, TW, TX, TC) { return _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZWYX() (TC, TZ, TW, TY, TX) { return _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZWYY() (TC, TZ, TW, TY, TY) { return _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZWYZ() (TC, TZ, TW, TY, TZ) { return _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZWYW() (TC, TZ, TW, TY, TW) { return _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZWYA() (TC, TZ, TW, TY, TA) { return _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZWYB() (TC, TZ, TW, TY, TB) { return _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZWYC() (TC, TZ, TW, TY, TC) { return _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZWZX() (TC, TZ, TW, TZ, TX) { return _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZWZY() (TC, TZ, TW, TZ, TY) { return _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZWZZ() (TC, TZ, TW, TZ, TZ) { return _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZWZW() (TC, TZ, TW, TZ, TW) { return _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZWZA() (TC, TZ, TW, TZ, TA) { return _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZWZB() (TC, TZ, TW, TZ, TB) { return _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZWZC() (TC, TZ, TW, TZ, TC) { return _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZWWX() (TC, TZ, TW, TW, TX) { return _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZWWY() (TC, TZ, TW, TW, TY) { return _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZWWZ() (TC, TZ, TW, TW, TZ) { return _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZWWW() (TC, TZ, TW, TW, TW) { return _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZWWA() (TC, TZ, TW, TW, TA) { return _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZWWB() (TC, TZ, TW, TW, TB) { return _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZWWC() (TC, TZ, TW, TW, TC) { return _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZWAX() (TC, TZ, TW, TA, TX) { return _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZWAY() (TC, TZ, TW, TA, TY) { return _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZWAZ() (TC, TZ, TW, TA, TZ) { return _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZWAW() (TC, TZ, TW, TA, TW) { return _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZWAA() (TC, TZ, TW, TA, TA) { return _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZWAB() (TC, TZ, TW, TA, TB) { return _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZWAC() (TC, TZ, TW, TA, TC) { return _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZWBX() (TC, TZ, TW, TB, TX) { return _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZWBY() (TC, TZ, TW, TB, TY) { return _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZWBZ() (TC, TZ, TW, TB, TZ) { return _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZWBW() (TC, TZ, TW, TB, TW) { return _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZWBA() (TC, TZ, TW, TB, TA) { return _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZWBB() (TC, TZ, TW, TB, TB) { return _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZWBC() (TC, TZ, TW, TB, TC) { return _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZWCX() (TC, TZ, TW, TC, TX) { return _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZWCY() (TC, TZ, TW, TC, TY) { return _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZWCZ() (TC, TZ, TW, TC, TZ) { return _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZWCW() (TC, TZ, TW, TC, TW) { return _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZWCA() (TC, TZ, TW, TC, TA) { return _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZWCB() (TC, TZ, TW, TC, TB) { return _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZWCC() (TC, TZ, TW, TC, TC) { return _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZAXX() (TC, TZ, TA, TX, TX) { return _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZAXY() (TC, TZ, TA, TX, TY) { return _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZAXZ() (TC, TZ, TA, TX, TZ) { return _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZAXW() (TC, TZ, TA, TX, TW) { return _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZAXA() (TC, TZ, TA, TX, TA) { return _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZAXB() (TC, TZ, TA, TX, TB) { return _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZAXC() (TC, TZ, TA, TX, TC) { return _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZAYX() (TC, TZ, TA, TY, TX) { return _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZAYY() (TC, TZ, TA, TY, TY) { return _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZAYZ() (TC, TZ, TA, TY, TZ) { return _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZAYW() (TC, TZ, TA, TY, TW) { return _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZAYA() (TC, TZ, TA, TY, TA) { return _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZAYB() (TC, TZ, TA, TY, TB) { return _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZAYC() (TC, TZ, TA, TY, TC) { return _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZAZX() (TC, TZ, TA, TZ, TX) { return _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZAZY() (TC, TZ, TA, TZ, TY) { return _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZAZZ() (TC, TZ, TA, TZ, TZ) { return _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZAZW() (TC, TZ, TA, TZ, TW) { return _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZAZA() (TC, TZ, TA, TZ, TA) { return _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZAZB() (TC, TZ, TA, TZ, TB) { return _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZAZC() (TC, TZ, TA, TZ, TC) { return _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZAWX() (TC, TZ, TA, TW, TX) { return _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZAWY() (TC, TZ, TA, TW, TY) { return _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZAWZ() (TC, TZ, TA, TW, TZ) { return _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZAWW() (TC, TZ, TA, TW, TW) { return _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZAWA() (TC, TZ, TA, TW, TA) { return _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZAWB() (TC, TZ, TA, TW, TB) { return _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZAWC() (TC, TZ, TA, TW, TC) { return _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZAAX() (TC, TZ, TA, TA, TX) { return _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZAAY() (TC, TZ, TA, TA, TY) { return _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZAAZ() (TC, TZ, TA, TA, TZ) { return _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZAAW() (TC, TZ, TA, TA, TW) { return _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZAAA() (TC, TZ, TA, TA, TA) { return _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZAAB() (TC, TZ, TA, TA, TB) { return _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZAAC() (TC, TZ, TA, TA, TC) { return _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZABX() (TC, TZ, TA, TB, TX) { return _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZABY() (TC, TZ, TA, TB, TY) { return _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZABZ() (TC, TZ, TA, TB, TZ) { return _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZABW() (TC, TZ, TA, TB, TW) { return _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZABA() (TC, TZ, TA, TB, TA) { return _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZABB() (TC, TZ, TA, TB, TB) { return _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZABC() (TC, TZ, TA, TB, TC) { return _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZACX() (TC, TZ, TA, TC, TX) { return _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZACY() (TC, TZ, TA, TC, TY) { return _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZACZ() (TC, TZ, TA, TC, TZ) { return _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZACW() (TC, TZ, TA, TC, TW) { return _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZACA() (TC, TZ, TA, TC, TA) { return _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZACB() (TC, TZ, TA, TC, TB) { return _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZACC() (TC, TZ, TA, TC, TC) { return _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZBXX() (TC, TZ, TB, TX, TX) { return _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZBXY() (TC, TZ, TB, TX, TY) { return _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZBXZ() (TC, TZ, TB, TX, TZ) { return _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZBXW() (TC, TZ, TB, TX, TW) { return _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZBXA() (TC, TZ, TB, TX, TA) { return _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZBXB() (TC, TZ, TB, TX, TB) { return _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZBXC() (TC, TZ, TB, TX, TC) { return _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZBYX() (TC, TZ, TB, TY, TX) { return _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZBYY() (TC, TZ, TB, TY, TY) { return _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZBYZ() (TC, TZ, TB, TY, TZ) { return _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZBYW() (TC, TZ, TB, TY, TW) { return _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZBYA() (TC, TZ, TB, TY, TA) { return _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZBYB() (TC, TZ, TB, TY, TB) { return _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZBYC() (TC, TZ, TB, TY, TC) { return _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZBZX() (TC, TZ, TB, TZ, TX) { return _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZBZY() (TC, TZ, TB, TZ, TY) { return _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZBZZ() (TC, TZ, TB, TZ, TZ) { return _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZBZW() (TC, TZ, TB, TZ, TW) { return _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZBZA() (TC, TZ, TB, TZ, TA) { return _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZBZB() (TC, TZ, TB, TZ, TB) { return _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZBZC() (TC, TZ, TB, TZ, TC) { return _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZBWX() (TC, TZ, TB, TW, TX) { return _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZBWY() (TC, TZ, TB, TW, TY) { return _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZBWZ() (TC, TZ, TB, TW, TZ) { return _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZBWW() (TC, TZ, TB, TW, TW) { return _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZBWA() (TC, TZ, TB, TW, TA) { return _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZBWB() (TC, TZ, TB, TW, TB) { return _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZBWC() (TC, TZ, TB, TW, TC) { return _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZBAX() (TC, TZ, TB, TA, TX) { return _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZBAY() (TC, TZ, TB, TA, TY) { return _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZBAZ() (TC, TZ, TB, TA, TZ) { return _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZBAW() (TC, TZ, TB, TA, TW) { return _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZBAA() (TC, TZ, TB, TA, TA) { return _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZBAB() (TC, TZ, TB, TA, TB) { return _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZBAC() (TC, TZ, TB, TA, TC) { return _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZBBX() (TC, TZ, TB, TB, TX) { return _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZBBY() (TC, TZ, TB, TB, TY) { return _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZBBZ() (TC, TZ, TB, TB, TZ) { return _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZBBW() (TC, TZ, TB, TB, TW) { return _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZBBA() (TC, TZ, TB, TB, TA) { return _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZBBB() (TC, TZ, TB, TB, TB) { return _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZBBC() (TC, TZ, TB, TB, TC) { return _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZBCX() (TC, TZ, TB, TC, TX) { return _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZBCY() (TC, TZ, TB, TC, TY) { return _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZBCZ() (TC, TZ, TB, TC, TZ) { return _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZBCW() (TC, TZ, TB, TC, TW) { return _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZBCA() (TC, TZ, TB, TC, TA) { return _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZBCB() (TC, TZ, TB, TC, TB) { return _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZBCC() (TC, TZ, TB, TC, TC) { return _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZCXX() (TC, TZ, TC, TX, TX) { return _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZCXY() (TC, TZ, TC, TX, TY) { return _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZCXZ() (TC, TZ, TC, TX, TZ) { return _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZCXW() (TC, TZ, TC, TX, TW) { return _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZCXA() (TC, TZ, TC, TX, TA) { return _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZCXB() (TC, TZ, TC, TX, TB) { return _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZCXC() (TC, TZ, TC, TX, TC) { return _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZCYX() (TC, TZ, TC, TY, TX) { return _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZCYY() (TC, TZ, TC, TY, TY) { return _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZCYZ() (TC, TZ, TC, TY, TZ) { return _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZCYW() (TC, TZ, TC, TY, TW) { return _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZCYA() (TC, TZ, TC, TY, TA) { return _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZCYB() (TC, TZ, TC, TY, TB) { return _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZCYC() (TC, TZ, TC, TY, TC) { return _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZCZX() (TC, TZ, TC, TZ, TX) { return _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZCZY() (TC, TZ, TC, TZ, TY) { return _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZCZZ() (TC, TZ, TC, TZ, TZ) { return _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZCZW() (TC, TZ, TC, TZ, TW) { return _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZCZA() (TC, TZ, TC, TZ, TA) { return _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZCZB() (TC, TZ, TC, TZ, TB) { return _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZCZC() (TC, TZ, TC, TZ, TC) { return _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZCWX() (TC, TZ, TC, TW, TX) { return _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZCWY() (TC, TZ, TC, TW, TY) { return _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZCWZ() (TC, TZ, TC, TW, TZ) { return _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZCWW() (TC, TZ, TC, TW, TW) { return _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZCWA() (TC, TZ, TC, TW, TA) { return _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZCWB() (TC, TZ, TC, TW, TB) { return _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZCWC() (TC, TZ, TC, TW, TC) { return _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZCAX() (TC, TZ, TC, TA, TX) { return _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZCAY() (TC, TZ, TC, TA, TY) { return _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZCAZ() (TC, TZ, TC, TA, TZ) { return _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZCAW() (TC, TZ, TC, TA, TW) { return _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZCAA() (TC, TZ, TC, TA, TA) { return _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZCAB() (TC, TZ, TC, TA, TB) { return _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZCAC() (TC, TZ, TC, TA, TC) { return _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZCBX() (TC, TZ, TC, TB, TX) { return _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZCBY() (TC, TZ, TC, TB, TY) { return _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZCBZ() (TC, TZ, TC, TB, TZ) { return _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZCBW() (TC, TZ, TC, TB, TW) { return _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZCBA() (TC, TZ, TC, TB, TA) { return _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZCBB() (TC, TZ, TC, TB, TB) { return _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZCBC() (TC, TZ, TC, TB, TC) { return _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZCCX() (TC, TZ, TC, TC, TX) { return _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZCCY() (TC, TZ, TC, TC, TY) { return _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZCCZ() (TC, TZ, TC, TC, TZ) { return _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZCCW() (TC, TZ, TC, TC, TW) { return _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZCCA() (TC, TZ, TC, TC, TA) { return _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZCCB() (TC, TZ, TC, TC, TB) { return _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CZCCC() (TC, TZ, TC, TC, TC) { return _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWXXX() (TC, TW, TX, TX, TX) { return _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWXXY() (TC, TW, TX, TX, TY) { return _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWXXZ() (TC, TW, TX, TX, TZ) { return _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWXXW() (TC, TW, TX, TX, TW) { return _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWXXA() (TC, TW, TX, TX, TA) { return _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWXXB() (TC, TW, TX, TX, TB) { return _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWXXC() (TC, TW, TX, TX, TC) { return _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWXYX() (TC, TW, TX, TY, TX) { return _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWXYY() (TC, TW, TX, TY, TY) { return _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWXYZ() (TC, TW, TX, TY, TZ) { return _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWXYW() (TC, TW, TX, TY, TW) { return _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWXYA() (TC, TW, TX, TY, TA) { return _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWXYB() (TC, TW, TX, TY, TB) { return _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWXYC() (TC, TW, TX, TY, TC) { return _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWXZX() (TC, TW, TX, TZ, TX) { return _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWXZY() (TC, TW, TX, TZ, TY) { return _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWXZZ() (TC, TW, TX, TZ, TZ) { return _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWXZW() (TC, TW, TX, TZ, TW) { return _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWXZA() (TC, TW, TX, TZ, TA) { return _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWXZB() (TC, TW, TX, TZ, TB) { return _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWXZC() (TC, TW, TX, TZ, TC) { return _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWXWX() (TC, TW, TX, TW, TX) { return _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWXWY() (TC, TW, TX, TW, TY) { return _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWXWZ() (TC, TW, TX, TW, TZ) { return _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWXWW() (TC, TW, TX, TW, TW) { return _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWXWA() (TC, TW, TX, TW, TA) { return _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWXWB() (TC, TW, TX, TW, TB) { return _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWXWC() (TC, TW, TX, TW, TC) { return _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWXAX() (TC, TW, TX, TA, TX) { return _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWXAY() (TC, TW, TX, TA, TY) { return _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWXAZ() (TC, TW, TX, TA, TZ) { return _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWXAW() (TC, TW, TX, TA, TW) { return _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWXAA() (TC, TW, TX, TA, TA) { return _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWXAB() (TC, TW, TX, TA, TB) { return _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWXAC() (TC, TW, TX, TA, TC) { return _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWXBX() (TC, TW, TX, TB, TX) { return _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWXBY() (TC, TW, TX, TB, TY) { return _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWXBZ() (TC, TW, TX, TB, TZ) { return _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWXBW() (TC, TW, TX, TB, TW) { return _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWXBA() (TC, TW, TX, TB, TA) { return _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWXBB() (TC, TW, TX, TB, TB) { return _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWXBC() (TC, TW, TX, TB, TC) { return _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWXCX() (TC, TW, TX, TC, TX) { return _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWXCY() (TC, TW, TX, TC, TY) { return _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWXCZ() (TC, TW, TX, TC, TZ) { return _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWXCW() (TC, TW, TX, TC, TW) { return _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWXCA() (TC, TW, TX, TC, TA) { return _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWXCB() (TC, TW, TX, TC, TB) { return _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWXCC() (TC, TW, TX, TC, TC) { return _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWYXX() (TC, TW, TY, TX, TX) { return _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWYXY() (TC, TW, TY, TX, TY) { return _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWYXZ() (TC, TW, TY, TX, TZ) { return _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWYXW() (TC, TW, TY, TX, TW) { return _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWYXA() (TC, TW, TY, TX, TA) { return _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWYXB() (TC, TW, TY, TX, TB) { return _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWYXC() (TC, TW, TY, TX, TC) { return _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWYYX() (TC, TW, TY, TY, TX) { return _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWYYY() (TC, TW, TY, TY, TY) { return _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWYYZ() (TC, TW, TY, TY, TZ) { return _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWYYW() (TC, TW, TY, TY, TW) { return _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWYYA() (TC, TW, TY, TY, TA) { return _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWYYB() (TC, TW, TY, TY, TB) { return _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWYYC() (TC, TW, TY, TY, TC) { return _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWYZX() (TC, TW, TY, TZ, TX) { return _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWYZY() (TC, TW, TY, TZ, TY) { return _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWYZZ() (TC, TW, TY, TZ, TZ) { return _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWYZW() (TC, TW, TY, TZ, TW) { return _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWYZA() (TC, TW, TY, TZ, TA) { return _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWYZB() (TC, TW, TY, TZ, TB) { return _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWYZC() (TC, TW, TY, TZ, TC) { return _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWYWX() (TC, TW, TY, TW, TX) { return _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWYWY() (TC, TW, TY, TW, TY) { return _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWYWZ() (TC, TW, TY, TW, TZ) { return _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWYWW() (TC, TW, TY, TW, TW) { return _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWYWA() (TC, TW, TY, TW, TA) { return _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWYWB() (TC, TW, TY, TW, TB) { return _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWYWC() (TC, TW, TY, TW, TC) { return _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWYAX() (TC, TW, TY, TA, TX) { return _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWYAY() (TC, TW, TY, TA, TY) { return _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWYAZ() (TC, TW, TY, TA, TZ) { return _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWYAW() (TC, TW, TY, TA, TW) { return _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWYAA() (TC, TW, TY, TA, TA) { return _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWYAB() (TC, TW, TY, TA, TB) { return _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWYAC() (TC, TW, TY, TA, TC) { return _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWYBX() (TC, TW, TY, TB, TX) { return _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWYBY() (TC, TW, TY, TB, TY) { return _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWYBZ() (TC, TW, TY, TB, TZ) { return _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWYBW() (TC, TW, TY, TB, TW) { return _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWYBA() (TC, TW, TY, TB, TA) { return _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWYBB() (TC, TW, TY, TB, TB) { return _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWYBC() (TC, TW, TY, TB, TC) { return _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWYCX() (TC, TW, TY, TC, TX) { return _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWYCY() (TC, TW, TY, TC, TY) { return _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWYCZ() (TC, TW, TY, TC, TZ) { return _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWYCW() (TC, TW, TY, TC, TW) { return _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWYCA() (TC, TW, TY, TC, TA) { return _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWYCB() (TC, TW, TY, TC, TB) { return _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWYCC() (TC, TW, TY, TC, TC) { return _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWZXX() (TC, TW, TZ, TX, TX) { return _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWZXY() (TC, TW, TZ, TX, TY) { return _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWZXZ() (TC, TW, TZ, TX, TZ) { return _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWZXW() (TC, TW, TZ, TX, TW) { return _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWZXA() (TC, TW, TZ, TX, TA) { return _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWZXB() (TC, TW, TZ, TX, TB) { return _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWZXC() (TC, TW, TZ, TX, TC) { return _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWZYX() (TC, TW, TZ, TY, TX) { return _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWZYY() (TC, TW, TZ, TY, TY) { return _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWZYZ() (TC, TW, TZ, TY, TZ) { return _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWZYW() (TC, TW, TZ, TY, TW) { return _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWZYA() (TC, TW, TZ, TY, TA) { return _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWZYB() (TC, TW, TZ, TY, TB) { return _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWZYC() (TC, TW, TZ, TY, TC) { return _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWZZX() (TC, TW, TZ, TZ, TX) { return _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWZZY() (TC, TW, TZ, TZ, TY) { return _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWZZZ() (TC, TW, TZ, TZ, TZ) { return _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWZZW() (TC, TW, TZ, TZ, TW) { return _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWZZA() (TC, TW, TZ, TZ, TA) { return _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWZZB() (TC, TW, TZ, TZ, TB) { return _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWZZC() (TC, TW, TZ, TZ, TC) { return _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWZWX() (TC, TW, TZ, TW, TX) { return _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWZWY() (TC, TW, TZ, TW, TY) { return _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWZWZ() (TC, TW, TZ, TW, TZ) { return _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWZWW() (TC, TW, TZ, TW, TW) { return _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWZWA() (TC, TW, TZ, TW, TA) { return _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWZWB() (TC, TW, TZ, TW, TB) { return _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWZWC() (TC, TW, TZ, TW, TC) { return _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWZAX() (TC, TW, TZ, TA, TX) { return _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWZAY() (TC, TW, TZ, TA, TY) { return _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWZAZ() (TC, TW, TZ, TA, TZ) { return _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWZAW() (TC, TW, TZ, TA, TW) { return _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWZAA() (TC, TW, TZ, TA, TA) { return _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWZAB() (TC, TW, TZ, TA, TB) { return _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWZAC() (TC, TW, TZ, TA, TC) { return _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWZBX() (TC, TW, TZ, TB, TX) { return _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWZBY() (TC, TW, TZ, TB, TY) { return _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWZBZ() (TC, TW, TZ, TB, TZ) { return _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWZBW() (TC, TW, TZ, TB, TW) { return _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWZBA() (TC, TW, TZ, TB, TA) { return _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWZBB() (TC, TW, TZ, TB, TB) { return _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWZBC() (TC, TW, TZ, TB, TC) { return _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWZCX() (TC, TW, TZ, TC, TX) { return _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWZCY() (TC, TW, TZ, TC, TY) { return _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWZCZ() (TC, TW, TZ, TC, TZ) { return _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWZCW() (TC, TW, TZ, TC, TW) { return _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWZCA() (TC, TW, TZ, TC, TA) { return _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWZCB() (TC, TW, TZ, TC, TB) { return _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWZCC() (TC, TW, TZ, TC, TC) { return _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWWXX() (TC, TW, TW, TX, TX) { return _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWWXY() (TC, TW, TW, TX, TY) { return _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWWXZ() (TC, TW, TW, TX, TZ) { return _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWWXW() (TC, TW, TW, TX, TW) { return _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWWXA() (TC, TW, TW, TX, TA) { return _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWWXB() (TC, TW, TW, TX, TB) { return _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWWXC() (TC, TW, TW, TX, TC) { return _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWWYX() (TC, TW, TW, TY, TX) { return _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWWYY() (TC, TW, TW, TY, TY) { return _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWWYZ() (TC, TW, TW, TY, TZ) { return _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWWYW() (TC, TW, TW, TY, TW) { return _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWWYA() (TC, TW, TW, TY, TA) { return _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWWYB() (TC, TW, TW, TY, TB) { return _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWWYC() (TC, TW, TW, TY, TC) { return _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWWZX() (TC, TW, TW, TZ, TX) { return _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWWZY() (TC, TW, TW, TZ, TY) { return _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWWZZ() (TC, TW, TW, TZ, TZ) { return _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWWZW() (TC, TW, TW, TZ, TW) { return _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWWZA() (TC, TW, TW, TZ, TA) { return _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWWZB() (TC, TW, TW, TZ, TB) { return _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWWZC() (TC, TW, TW, TZ, TC) { return _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWWWX() (TC, TW, TW, TW, TX) { return _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWWWY() (TC, TW, TW, TW, TY) { return _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWWWZ() (TC, TW, TW, TW, TZ) { return _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWWWW() (TC, TW, TW, TW, TW) { return _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWWWA() (TC, TW, TW, TW, TA) { return _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWWWB() (TC, TW, TW, TW, TB) { return _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWWWC() (TC, TW, TW, TW, TC) { return _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWWAX() (TC, TW, TW, TA, TX) { return _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWWAY() (TC, TW, TW, TA, TY) { return _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWWAZ() (TC, TW, TW, TA, TZ) { return _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWWAW() (TC, TW, TW, TA, TW) { return _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWWAA() (TC, TW, TW, TA, TA) { return _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWWAB() (TC, TW, TW, TA, TB) { return _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWWAC() (TC, TW, TW, TA, TC) { return _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWWBX() (TC, TW, TW, TB, TX) { return _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWWBY() (TC, TW, TW, TB, TY) { return _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWWBZ() (TC, TW, TW, TB, TZ) { return _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWWBW() (TC, TW, TW, TB, TW) { return _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWWBA() (TC, TW, TW, TB, TA) { return _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWWBB() (TC, TW, TW, TB, TB) { return _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWWBC() (TC, TW, TW, TB, TC) { return _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWWCX() (TC, TW, TW, TC, TX) { return _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWWCY() (TC, TW, TW, TC, TY) { return _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWWCZ() (TC, TW, TW, TC, TZ) { return _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWWCW() (TC, TW, TW, TC, TW) { return _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWWCA() (TC, TW, TW, TC, TA) { return _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWWCB() (TC, TW, TW, TC, TB) { return _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWWCC() (TC, TW, TW, TC, TC) { return _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWAXX() (TC, TW, TA, TX, TX) { return _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWAXY() (TC, TW, TA, TX, TY) { return _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWAXZ() (TC, TW, TA, TX, TZ) { return _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWAXW() (TC, TW, TA, TX, TW) { return _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWAXA() (TC, TW, TA, TX, TA) { return _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWAXB() (TC, TW, TA, TX, TB) { return _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWAXC() (TC, TW, TA, TX, TC) { return _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWAYX() (TC, TW, TA, TY, TX) { return _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWAYY() (TC, TW, TA, TY, TY) { return _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWAYZ() (TC, TW, TA, TY, TZ) { return _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWAYW() (TC, TW, TA, TY, TW) { return _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWAYA() (TC, TW, TA, TY, TA) { return _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWAYB() (TC, TW, TA, TY, TB) { return _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWAYC() (TC, TW, TA, TY, TC) { return _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWAZX() (TC, TW, TA, TZ, TX) { return _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWAZY() (TC, TW, TA, TZ, TY) { return _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWAZZ() (TC, TW, TA, TZ, TZ) { return _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWAZW() (TC, TW, TA, TZ, TW) { return _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWAZA() (TC, TW, TA, TZ, TA) { return _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWAZB() (TC, TW, TA, TZ, TB) { return _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWAZC() (TC, TW, TA, TZ, TC) { return _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWAWX() (TC, TW, TA, TW, TX) { return _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWAWY() (TC, TW, TA, TW, TY) { return _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWAWZ() (TC, TW, TA, TW, TZ) { return _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWAWW() (TC, TW, TA, TW, TW) { return _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWAWA() (TC, TW, TA, TW, TA) { return _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWAWB() (TC, TW, TA, TW, TB) { return _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWAWC() (TC, TW, TA, TW, TC) { return _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWAAX() (TC, TW, TA, TA, TX) { return _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWAAY() (TC, TW, TA, TA, TY) { return _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWAAZ() (TC, TW, TA, TA, TZ) { return _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWAAW() (TC, TW, TA, TA, TW) { return _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWAAA() (TC, TW, TA, TA, TA) { return _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWAAB() (TC, TW, TA, TA, TB) { return _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWAAC() (TC, TW, TA, TA, TC) { return _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWABX() (TC, TW, TA, TB, TX) { return _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWABY() (TC, TW, TA, TB, TY) { return _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWABZ() (TC, TW, TA, TB, TZ) { return _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWABW() (TC, TW, TA, TB, TW) { return _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWABA() (TC, TW, TA, TB, TA) { return _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWABB() (TC, TW, TA, TB, TB) { return _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWABC() (TC, TW, TA, TB, TC) { return _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWACX() (TC, TW, TA, TC, TX) { return _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWACY() (TC, TW, TA, TC, TY) { return _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWACZ() (TC, TW, TA, TC, TZ) { return _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWACW() (TC, TW, TA, TC, TW) { return _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWACA() (TC, TW, TA, TC, TA) { return _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWACB() (TC, TW, TA, TC, TB) { return _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWACC() (TC, TW, TA, TC, TC) { return _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWBXX() (TC, TW, TB, TX, TX) { return _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWBXY() (TC, TW, TB, TX, TY) { return _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWBXZ() (TC, TW, TB, TX, TZ) { return _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWBXW() (TC, TW, TB, TX, TW) { return _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWBXA() (TC, TW, TB, TX, TA) { return _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWBXB() (TC, TW, TB, TX, TB) { return _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWBXC() (TC, TW, TB, TX, TC) { return _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWBYX() (TC, TW, TB, TY, TX) { return _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWBYY() (TC, TW, TB, TY, TY) { return _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWBYZ() (TC, TW, TB, TY, TZ) { return _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWBYW() (TC, TW, TB, TY, TW) { return _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWBYA() (TC, TW, TB, TY, TA) { return _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWBYB() (TC, TW, TB, TY, TB) { return _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWBYC() (TC, TW, TB, TY, TC) { return _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWBZX() (TC, TW, TB, TZ, TX) { return _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWBZY() (TC, TW, TB, TZ, TY) { return _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWBZZ() (TC, TW, TB, TZ, TZ) { return _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWBZW() (TC, TW, TB, TZ, TW) { return _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWBZA() (TC, TW, TB, TZ, TA) { return _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWBZB() (TC, TW, TB, TZ, TB) { return _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWBZC() (TC, TW, TB, TZ, TC) { return _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWBWX() (TC, TW, TB, TW, TX) { return _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWBWY() (TC, TW, TB, TW, TY) { return _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWBWZ() (TC, TW, TB, TW, TZ) { return _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWBWW() (TC, TW, TB, TW, TW) { return _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWBWA() (TC, TW, TB, TW, TA) { return _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWBWB() (TC, TW, TB, TW, TB) { return _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWBWC() (TC, TW, TB, TW, TC) { return _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWBAX() (TC, TW, TB, TA, TX) { return _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWBAY() (TC, TW, TB, TA, TY) { return _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWBAZ() (TC, TW, TB, TA, TZ) { return _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWBAW() (TC, TW, TB, TA, TW) { return _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWBAA() (TC, TW, TB, TA, TA) { return _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWBAB() (TC, TW, TB, TA, TB) { return _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWBAC() (TC, TW, TB, TA, TC) { return _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWBBX() (TC, TW, TB, TB, TX) { return _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWBBY() (TC, TW, TB, TB, TY) { return _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWBBZ() (TC, TW, TB, TB, TZ) { return _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWBBW() (TC, TW, TB, TB, TW) { return _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWBBA() (TC, TW, TB, TB, TA) { return _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWBBB() (TC, TW, TB, TB, TB) { return _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWBBC() (TC, TW, TB, TB, TC) { return _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWBCX() (TC, TW, TB, TC, TX) { return _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWBCY() (TC, TW, TB, TC, TY) { return _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWBCZ() (TC, TW, TB, TC, TZ) { return _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWBCW() (TC, TW, TB, TC, TW) { return _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWBCA() (TC, TW, TB, TC, TA) { return _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWBCB() (TC, TW, TB, TC, TB) { return _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWBCC() (TC, TW, TB, TC, TC) { return _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWCXX() (TC, TW, TC, TX, TX) { return _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWCXY() (TC, TW, TC, TX, TY) { return _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWCXZ() (TC, TW, TC, TX, TZ) { return _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWCXW() (TC, TW, TC, TX, TW) { return _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWCXA() (TC, TW, TC, TX, TA) { return _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWCXB() (TC, TW, TC, TX, TB) { return _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWCXC() (TC, TW, TC, TX, TC) { return _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWCYX() (TC, TW, TC, TY, TX) { return _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWCYY() (TC, TW, TC, TY, TY) { return _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWCYZ() (TC, TW, TC, TY, TZ) { return _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWCYW() (TC, TW, TC, TY, TW) { return _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWCYA() (TC, TW, TC, TY, TA) { return _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWCYB() (TC, TW, TC, TY, TB) { return _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWCYC() (TC, TW, TC, TY, TC) { return _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWCZX() (TC, TW, TC, TZ, TX) { return _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWCZY() (TC, TW, TC, TZ, TY) { return _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWCZZ() (TC, TW, TC, TZ, TZ) { return _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWCZW() (TC, TW, TC, TZ, TW) { return _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWCZA() (TC, TW, TC, TZ, TA) { return _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWCZB() (TC, TW, TC, TZ, TB) { return _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWCZC() (TC, TW, TC, TZ, TC) { return _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWCWX() (TC, TW, TC, TW, TX) { return _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWCWY() (TC, TW, TC, TW, TY) { return _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWCWZ() (TC, TW, TC, TW, TZ) { return _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWCWW() (TC, TW, TC, TW, TW) { return _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWCWA() (TC, TW, TC, TW, TA) { return _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWCWB() (TC, TW, TC, TW, TB) { return _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWCWC() (TC, TW, TC, TW, TC) { return _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWCAX() (TC, TW, TC, TA, TX) { return _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWCAY() (TC, TW, TC, TA, TY) { return _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWCAZ() (TC, TW, TC, TA, TZ) { return _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWCAW() (TC, TW, TC, TA, TW) { return _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWCAA() (TC, TW, TC, TA, TA) { return _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWCAB() (TC, TW, TC, TA, TB) { return _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWCAC() (TC, TW, TC, TA, TC) { return _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWCBX() (TC, TW, TC, TB, TX) { return _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWCBY() (TC, TW, TC, TB, TY) { return _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWCBZ() (TC, TW, TC, TB, TZ) { return _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWCBW() (TC, TW, TC, TB, TW) { return _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWCBA() (TC, TW, TC, TB, TA) { return _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWCBB() (TC, TW, TC, TB, TB) { return _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWCBC() (TC, TW, TC, TB, TC) { return _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWCCX() (TC, TW, TC, TC, TX) { return _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWCCY() (TC, TW, TC, TC, TY) { return _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWCCZ() (TC, TW, TC, TC, TZ) { return _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWCCW() (TC, TW, TC, TC, TW) { return _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWCCA() (TC, TW, TC, TC, TA) { return _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWCCB() (TC, TW, TC, TC, TB) { return _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CWCCC() (TC, TW, TC, TC, TC) { return _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAXXX() (TC, TA, TX, TX, TX) { return _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAXXY() (TC, TA, TX, TX, TY) { return _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAXXZ() (TC, TA, TX, TX, TZ) { return _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAXXW() (TC, TA, TX, TX, TW) { return _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAXXA() (TC, TA, TX, TX, TA) { return _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAXXB() (TC, TA, TX, TX, TB) { return _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAXXC() (TC, TA, TX, TX, TC) { return _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAXYX() (TC, TA, TX, TY, TX) { return _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAXYY() (TC, TA, TX, TY, TY) { return _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAXYZ() (TC, TA, TX, TY, TZ) { return _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAXYW() (TC, TA, TX, TY, TW) { return _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAXYA() (TC, TA, TX, TY, TA) { return _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAXYB() (TC, TA, TX, TY, TB) { return _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAXYC() (TC, TA, TX, TY, TC) { return _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAXZX() (TC, TA, TX, TZ, TX) { return _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAXZY() (TC, TA, TX, TZ, TY) { return _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAXZZ() (TC, TA, TX, TZ, TZ) { return _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAXZW() (TC, TA, TX, TZ, TW) { return _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAXZA() (TC, TA, TX, TZ, TA) { return _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAXZB() (TC, TA, TX, TZ, TB) { return _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAXZC() (TC, TA, TX, TZ, TC) { return _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAXWX() (TC, TA, TX, TW, TX) { return _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAXWY() (TC, TA, TX, TW, TY) { return _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAXWZ() (TC, TA, TX, TW, TZ) { return _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAXWW() (TC, TA, TX, TW, TW) { return _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAXWA() (TC, TA, TX, TW, TA) { return _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAXWB() (TC, TA, TX, TW, TB) { return _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAXWC() (TC, TA, TX, TW, TC) { return _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAXAX() (TC, TA, TX, TA, TX) { return _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAXAY() (TC, TA, TX, TA, TY) { return _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAXAZ() (TC, TA, TX, TA, TZ) { return _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAXAW() (TC, TA, TX, TA, TW) { return _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAXAA() (TC, TA, TX, TA, TA) { return _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAXAB() (TC, TA, TX, TA, TB) { return _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAXAC() (TC, TA, TX, TA, TC) { return _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAXBX() (TC, TA, TX, TB, TX) { return _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAXBY() (TC, TA, TX, TB, TY) { return _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAXBZ() (TC, TA, TX, TB, TZ) { return _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAXBW() (TC, TA, TX, TB, TW) { return _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAXBA() (TC, TA, TX, TB, TA) { return _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAXBB() (TC, TA, TX, TB, TB) { return _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAXBC() (TC, TA, TX, TB, TC) { return _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAXCX() (TC, TA, TX, TC, TX) { return _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAXCY() (TC, TA, TX, TC, TY) { return _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAXCZ() (TC, TA, TX, TC, TZ) { return _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAXCW() (TC, TA, TX, TC, TW) { return _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAXCA() (TC, TA, TX, TC, TA) { return _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAXCB() (TC, TA, TX, TC, TB) { return _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAXCC() (TC, TA, TX, TC, TC) { return _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAYXX() (TC, TA, TY, TX, TX) { return _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAYXY() (TC, TA, TY, TX, TY) { return _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAYXZ() (TC, TA, TY, TX, TZ) { return _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAYXW() (TC, TA, TY, TX, TW) { return _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAYXA() (TC, TA, TY, TX, TA) { return _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAYXB() (TC, TA, TY, TX, TB) { return _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAYXC() (TC, TA, TY, TX, TC) { return _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAYYX() (TC, TA, TY, TY, TX) { return _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAYYY() (TC, TA, TY, TY, TY) { return _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAYYZ() (TC, TA, TY, TY, TZ) { return _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAYYW() (TC, TA, TY, TY, TW) { return _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAYYA() (TC, TA, TY, TY, TA) { return _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAYYB() (TC, TA, TY, TY, TB) { return _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAYYC() (TC, TA, TY, TY, TC) { return _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAYZX() (TC, TA, TY, TZ, TX) { return _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAYZY() (TC, TA, TY, TZ, TY) { return _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAYZZ() (TC, TA, TY, TZ, TZ) { return _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAYZW() (TC, TA, TY, TZ, TW) { return _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAYZA() (TC, TA, TY, TZ, TA) { return _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAYZB() (TC, TA, TY, TZ, TB) { return _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAYZC() (TC, TA, TY, TZ, TC) { return _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAYWX() (TC, TA, TY, TW, TX) { return _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAYWY() (TC, TA, TY, TW, TY) { return _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAYWZ() (TC, TA, TY, TW, TZ) { return _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAYWW() (TC, TA, TY, TW, TW) { return _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAYWA() (TC, TA, TY, TW, TA) { return _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAYWB() (TC, TA, TY, TW, TB) { return _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAYWC() (TC, TA, TY, TW, TC) { return _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAYAX() (TC, TA, TY, TA, TX) { return _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAYAY() (TC, TA, TY, TA, TY) { return _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAYAZ() (TC, TA, TY, TA, TZ) { return _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAYAW() (TC, TA, TY, TA, TW) { return _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAYAA() (TC, TA, TY, TA, TA) { return _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAYAB() (TC, TA, TY, TA, TB) { return _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAYAC() (TC, TA, TY, TA, TC) { return _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAYBX() (TC, TA, TY, TB, TX) { return _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAYBY() (TC, TA, TY, TB, TY) { return _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAYBZ() (TC, TA, TY, TB, TZ) { return _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAYBW() (TC, TA, TY, TB, TW) { return _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAYBA() (TC, TA, TY, TB, TA) { return _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAYBB() (TC, TA, TY, TB, TB) { return _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAYBC() (TC, TA, TY, TB, TC) { return _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAYCX() (TC, TA, TY, TC, TX) { return _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAYCY() (TC, TA, TY, TC, TY) { return _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAYCZ() (TC, TA, TY, TC, TZ) { return _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAYCW() (TC, TA, TY, TC, TW) { return _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAYCA() (TC, TA, TY, TC, TA) { return _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAYCB() (TC, TA, TY, TC, TB) { return _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAYCC() (TC, TA, TY, TC, TC) { return _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAZXX() (TC, TA, TZ, TX, TX) { return _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAZXY() (TC, TA, TZ, TX, TY) { return _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAZXZ() (TC, TA, TZ, TX, TZ) { return _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAZXW() (TC, TA, TZ, TX, TW) { return _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAZXA() (TC, TA, TZ, TX, TA) { return _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAZXB() (TC, TA, TZ, TX, TB) { return _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAZXC() (TC, TA, TZ, TX, TC) { return _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAZYX() (TC, TA, TZ, TY, TX) { return _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAZYY() (TC, TA, TZ, TY, TY) { return _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAZYZ() (TC, TA, TZ, TY, TZ) { return _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAZYW() (TC, TA, TZ, TY, TW) { return _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAZYA() (TC, TA, TZ, TY, TA) { return _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAZYB() (TC, TA, TZ, TY, TB) { return _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAZYC() (TC, TA, TZ, TY, TC) { return _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAZZX() (TC, TA, TZ, TZ, TX) { return _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAZZY() (TC, TA, TZ, TZ, TY) { return _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAZZZ() (TC, TA, TZ, TZ, TZ) { return _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAZZW() (TC, TA, TZ, TZ, TW) { return _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAZZA() (TC, TA, TZ, TZ, TA) { return _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAZZB() (TC, TA, TZ, TZ, TB) { return _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAZZC() (TC, TA, TZ, TZ, TC) { return _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAZWX() (TC, TA, TZ, TW, TX) { return _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAZWY() (TC, TA, TZ, TW, TY) { return _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAZWZ() (TC, TA, TZ, TW, TZ) { return _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAZWW() (TC, TA, TZ, TW, TW) { return _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAZWA() (TC, TA, TZ, TW, TA) { return _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAZWB() (TC, TA, TZ, TW, TB) { return _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAZWC() (TC, TA, TZ, TW, TC) { return _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAZAX() (TC, TA, TZ, TA, TX) { return _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAZAY() (TC, TA, TZ, TA, TY) { return _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAZAZ() (TC, TA, TZ, TA, TZ) { return _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAZAW() (TC, TA, TZ, TA, TW) { return _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAZAA() (TC, TA, TZ, TA, TA) { return _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAZAB() (TC, TA, TZ, TA, TB) { return _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAZAC() (TC, TA, TZ, TA, TC) { return _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAZBX() (TC, TA, TZ, TB, TX) { return _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAZBY() (TC, TA, TZ, TB, TY) { return _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAZBZ() (TC, TA, TZ, TB, TZ) { return _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAZBW() (TC, TA, TZ, TB, TW) { return _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAZBA() (TC, TA, TZ, TB, TA) { return _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAZBB() (TC, TA, TZ, TB, TB) { return _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAZBC() (TC, TA, TZ, TB, TC) { return _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAZCX() (TC, TA, TZ, TC, TX) { return _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAZCY() (TC, TA, TZ, TC, TY) { return _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAZCZ() (TC, TA, TZ, TC, TZ) { return _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAZCW() (TC, TA, TZ, TC, TW) { return _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAZCA() (TC, TA, TZ, TC, TA) { return _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAZCB() (TC, TA, TZ, TC, TB) { return _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAZCC() (TC, TA, TZ, TC, TC) { return _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAWXX() (TC, TA, TW, TX, TX) { return _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAWXY() (TC, TA, TW, TX, TY) { return _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAWXZ() (TC, TA, TW, TX, TZ) { return _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAWXW() (TC, TA, TW, TX, TW) { return _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAWXA() (TC, TA, TW, TX, TA) { return _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAWXB() (TC, TA, TW, TX, TB) { return _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAWXC() (TC, TA, TW, TX, TC) { return _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAWYX() (TC, TA, TW, TY, TX) { return _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAWYY() (TC, TA, TW, TY, TY) { return _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAWYZ() (TC, TA, TW, TY, TZ) { return _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAWYW() (TC, TA, TW, TY, TW) { return _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAWYA() (TC, TA, TW, TY, TA) { return _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAWYB() (TC, TA, TW, TY, TB) { return _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAWYC() (TC, TA, TW, TY, TC) { return _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAWZX() (TC, TA, TW, TZ, TX) { return _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAWZY() (TC, TA, TW, TZ, TY) { return _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAWZZ() (TC, TA, TW, TZ, TZ) { return _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAWZW() (TC, TA, TW, TZ, TW) { return _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAWZA() (TC, TA, TW, TZ, TA) { return _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAWZB() (TC, TA, TW, TZ, TB) { return _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAWZC() (TC, TA, TW, TZ, TC) { return _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAWWX() (TC, TA, TW, TW, TX) { return _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAWWY() (TC, TA, TW, TW, TY) { return _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAWWZ() (TC, TA, TW, TW, TZ) { return _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAWWW() (TC, TA, TW, TW, TW) { return _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAWWA() (TC, TA, TW, TW, TA) { return _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAWWB() (TC, TA, TW, TW, TB) { return _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAWWC() (TC, TA, TW, TW, TC) { return _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAWAX() (TC, TA, TW, TA, TX) { return _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAWAY() (TC, TA, TW, TA, TY) { return _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAWAZ() (TC, TA, TW, TA, TZ) { return _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAWAW() (TC, TA, TW, TA, TW) { return _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAWAA() (TC, TA, TW, TA, TA) { return _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAWAB() (TC, TA, TW, TA, TB) { return _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAWAC() (TC, TA, TW, TA, TC) { return _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAWBX() (TC, TA, TW, TB, TX) { return _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAWBY() (TC, TA, TW, TB, TY) { return _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAWBZ() (TC, TA, TW, TB, TZ) { return _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAWBW() (TC, TA, TW, TB, TW) { return _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAWBA() (TC, TA, TW, TB, TA) { return _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAWBB() (TC, TA, TW, TB, TB) { return _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAWBC() (TC, TA, TW, TB, TC) { return _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAWCX() (TC, TA, TW, TC, TX) { return _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAWCY() (TC, TA, TW, TC, TY) { return _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAWCZ() (TC, TA, TW, TC, TZ) { return _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAWCW() (TC, TA, TW, TC, TW) { return _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAWCA() (TC, TA, TW, TC, TA) { return _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAWCB() (TC, TA, TW, TC, TB) { return _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAWCC() (TC, TA, TW, TC, TC) { return _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAAXX() (TC, TA, TA, TX, TX) { return _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAAXY() (TC, TA, TA, TX, TY) { return _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAAXZ() (TC, TA, TA, TX, TZ) { return _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAAXW() (TC, TA, TA, TX, TW) { return _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAAXA() (TC, TA, TA, TX, TA) { return _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAAXB() (TC, TA, TA, TX, TB) { return _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAAXC() (TC, TA, TA, TX, TC) { return _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAAYX() (TC, TA, TA, TY, TX) { return _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAAYY() (TC, TA, TA, TY, TY) { return _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAAYZ() (TC, TA, TA, TY, TZ) { return _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAAYW() (TC, TA, TA, TY, TW) { return _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAAYA() (TC, TA, TA, TY, TA) { return _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAAYB() (TC, TA, TA, TY, TB) { return _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAAYC() (TC, TA, TA, TY, TC) { return _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAAZX() (TC, TA, TA, TZ, TX) { return _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAAZY() (TC, TA, TA, TZ, TY) { return _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAAZZ() (TC, TA, TA, TZ, TZ) { return _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAAZW() (TC, TA, TA, TZ, TW) { return _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAAZA() (TC, TA, TA, TZ, TA) { return _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAAZB() (TC, TA, TA, TZ, TB) { return _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAAZC() (TC, TA, TA, TZ, TC) { return _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAAWX() (TC, TA, TA, TW, TX) { return _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAAWY() (TC, TA, TA, TW, TY) { return _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAAWZ() (TC, TA, TA, TW, TZ) { return _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAAWW() (TC, TA, TA, TW, TW) { return _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAAWA() (TC, TA, TA, TW, TA) { return _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAAWB() (TC, TA, TA, TW, TB) { return _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAAWC() (TC, TA, TA, TW, TC) { return _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAAAX() (TC, TA, TA, TA, TX) { return _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAAAY() (TC, TA, TA, TA, TY) { return _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAAAZ() (TC, TA, TA, TA, TZ) { return _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAAAW() (TC, TA, TA, TA, TW) { return _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAAAA() (TC, TA, TA, TA, TA) { return _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAAAB() (TC, TA, TA, TA, TB) { return _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAAAC() (TC, TA, TA, TA, TC) { return _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAABX() (TC, TA, TA, TB, TX) { return _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAABY() (TC, TA, TA, TB, TY) { return _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAABZ() (TC, TA, TA, TB, TZ) { return _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAABW() (TC, TA, TA, TB, TW) { return _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAABA() (TC, TA, TA, TB, TA) { return _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAABB() (TC, TA, TA, TB, TB) { return _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAABC() (TC, TA, TA, TB, TC) { return _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAACX() (TC, TA, TA, TC, TX) { return _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAACY() (TC, TA, TA, TC, TY) { return _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAACZ() (TC, TA, TA, TC, TZ) { return _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAACW() (TC, TA, TA, TC, TW) { return _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAACA() (TC, TA, TA, TC, TA) { return _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAACB() (TC, TA, TA, TC, TB) { return _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CAACC() (TC, TA, TA, TC, TC) { return _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CABXX() (TC, TA, TB, TX, TX) { return _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CABXY() (TC, TA, TB, TX, TY) { return _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CABXZ() (TC, TA, TB, TX, TZ) { return _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CABXW() (TC, TA, TB, TX, TW) { return _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CABXA() (TC, TA, TB, TX, TA) { return _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CABXB() (TC, TA, TB, TX, TB) { return _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CABXC() (TC, TA, TB, TX, TC) { return _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CABYX() (TC, TA, TB, TY, TX) { return _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CABYY() (TC, TA, TB, TY, TY) { return _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CABYZ() (TC, TA, TB, TY, TZ) { return _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CABYW() (TC, TA, TB, TY, TW) { return _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CABYA() (TC, TA, TB, TY, TA) { return _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CABYB() (TC, TA, TB, TY, TB) { return _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CABYC() (TC, TA, TB, TY, TC) { return _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CABZX() (TC, TA, TB, TZ, TX) { return _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CABZY() (TC, TA, TB, TZ, TY) { return _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CABZZ() (TC, TA, TB, TZ, TZ) { return _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CABZW() (TC, TA, TB, TZ, TW) { return _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CABZA() (TC, TA, TB, TZ, TA) { return _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CABZB() (TC, TA, TB, TZ, TB) { return _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CABZC() (TC, TA, TB, TZ, TC) { return _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CABWX() (TC, TA, TB, TW, TX) { return _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CABWY() (TC, TA, TB, TW, TY) { return _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CABWZ() (TC, TA, TB, TW, TZ) { return _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CABWW() (TC, TA, TB, TW, TW) { return _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CABWA() (TC, TA, TB, TW, TA) { return _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CABWB() (TC, TA, TB, TW, TB) { return _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CABWC() (TC, TA, TB, TW, TC) { return _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CABAX() (TC, TA, TB, TA, TX) { return _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CABAY() (TC, TA, TB, TA, TY) { return _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CABAZ() (TC, TA, TB, TA, TZ) { return _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CABAW() (TC, TA, TB, TA, TW) { return _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CABAA() (TC, TA, TB, TA, TA) { return _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CABAB() (TC, TA, TB, TA, TB) { return _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CABAC() (TC, TA, TB, TA, TC) { return _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CABBX() (TC, TA, TB, TB, TX) { return _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CABBY() (TC, TA, TB, TB, TY) { return _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CABBZ() (TC, TA, TB, TB, TZ) { return _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CABBW() (TC, TA, TB, TB, TW) { return _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CABBA() (TC, TA, TB, TB, TA) { return _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CABBB() (TC, TA, TB, TB, TB) { return _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CABBC() (TC, TA, TB, TB, TC) { return _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CABCX() (TC, TA, TB, TC, TX) { return _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CABCY() (TC, TA, TB, TC, TY) { return _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CABCZ() (TC, TA, TB, TC, TZ) { return _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CABCW() (TC, TA, TB, TC, TW) { return _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CABCA() (TC, TA, TB, TC, TA) { return _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CABCB() (TC, TA, TB, TC, TB) { return _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CABCC() (TC, TA, TB, TC, TC) { return _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CACXX() (TC, TA, TC, TX, TX) { return _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CACXY() (TC, TA, TC, TX, TY) { return _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CACXZ() (TC, TA, TC, TX, TZ) { return _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CACXW() (TC, TA, TC, TX, TW) { return _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CACXA() (TC, TA, TC, TX, TA) { return _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CACXB() (TC, TA, TC, TX, TB) { return _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CACXC() (TC, TA, TC, TX, TC) { return _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CACYX() (TC, TA, TC, TY, TX) { return _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CACYY() (TC, TA, TC, TY, TY) { return _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CACYZ() (TC, TA, TC, TY, TZ) { return _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CACYW() (TC, TA, TC, TY, TW) { return _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CACYA() (TC, TA, TC, TY, TA) { return _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CACYB() (TC, TA, TC, TY, TB) { return _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CACYC() (TC, TA, TC, TY, TC) { return _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CACZX() (TC, TA, TC, TZ, TX) { return _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CACZY() (TC, TA, TC, TZ, TY) { return _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CACZZ() (TC, TA, TC, TZ, TZ) { return _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CACZW() (TC, TA, TC, TZ, TW) { return _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CACZA() (TC, TA, TC, TZ, TA) { return _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CACZB() (TC, TA, TC, TZ, TB) { return _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CACZC() (TC, TA, TC, TZ, TC) { return _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CACWX() (TC, TA, TC, TW, TX) { return _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CACWY() (TC, TA, TC, TW, TY) { return _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CACWZ() (TC, TA, TC, TW, TZ) { return _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CACWW() (TC, TA, TC, TW, TW) { return _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CACWA() (TC, TA, TC, TW, TA) { return _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CACWB() (TC, TA, TC, TW, TB) { return _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CACWC() (TC, TA, TC, TW, TC) { return _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CACAX() (TC, TA, TC, TA, TX) { return _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CACAY() (TC, TA, TC, TA, TY) { return _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CACAZ() (TC, TA, TC, TA, TZ) { return _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CACAW() (TC, TA, TC, TA, TW) { return _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CACAA() (TC, TA, TC, TA, TA) { return _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CACAB() (TC, TA, TC, TA, TB) { return _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CACAC() (TC, TA, TC, TA, TC) { return _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CACBX() (TC, TA, TC, TB, TX) { return _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CACBY() (TC, TA, TC, TB, TY) { return _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CACBZ() (TC, TA, TC, TB, TZ) { return _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CACBW() (TC, TA, TC, TB, TW) { return _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CACBA() (TC, TA, TC, TB, TA) { return _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CACBB() (TC, TA, TC, TB, TB) { return _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CACBC() (TC, TA, TC, TB, TC) { return _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CACCX() (TC, TA, TC, TC, TX) { return _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CACCY() (TC, TA, TC, TC, TY) { return _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CACCZ() (TC, TA, TC, TC, TZ) { return _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CACCW() (TC, TA, TC, TC, TW) { return _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CACCA() (TC, TA, TC, TC, TA) { return _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CACCB() (TC, TA, TC, TC, TB) { return _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CACCC() (TC, TA, TC, TC, TC) { return _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBXXX() (TC, TB, TX, TX, TX) { return _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBXXY() (TC, TB, TX, TX, TY) { return _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBXXZ() (TC, TB, TX, TX, TZ) { return _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBXXW() (TC, TB, TX, TX, TW) { return _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBXXA() (TC, TB, TX, TX, TA) { return _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBXXB() (TC, TB, TX, TX, TB) { return _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBXXC() (TC, TB, TX, TX, TC) { return _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBXYX() (TC, TB, TX, TY, TX) { return _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBXYY() (TC, TB, TX, TY, TY) { return _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBXYZ() (TC, TB, TX, TY, TZ) { return _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBXYW() (TC, TB, TX, TY, TW) { return _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBXYA() (TC, TB, TX, TY, TA) { return _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBXYB() (TC, TB, TX, TY, TB) { return _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBXYC() (TC, TB, TX, TY, TC) { return _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBXZX() (TC, TB, TX, TZ, TX) { return _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBXZY() (TC, TB, TX, TZ, TY) { return _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBXZZ() (TC, TB, TX, TZ, TZ) { return _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBXZW() (TC, TB, TX, TZ, TW) { return _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBXZA() (TC, TB, TX, TZ, TA) { return _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBXZB() (TC, TB, TX, TZ, TB) { return _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBXZC() (TC, TB, TX, TZ, TC) { return _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBXWX() (TC, TB, TX, TW, TX) { return _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBXWY() (TC, TB, TX, TW, TY) { return _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBXWZ() (TC, TB, TX, TW, TZ) { return _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBXWW() (TC, TB, TX, TW, TW) { return _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBXWA() (TC, TB, TX, TW, TA) { return _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBXWB() (TC, TB, TX, TW, TB) { return _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBXWC() (TC, TB, TX, TW, TC) { return _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBXAX() (TC, TB, TX, TA, TX) { return _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBXAY() (TC, TB, TX, TA, TY) { return _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBXAZ() (TC, TB, TX, TA, TZ) { return _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBXAW() (TC, TB, TX, TA, TW) { return _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBXAA() (TC, TB, TX, TA, TA) { return _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBXAB() (TC, TB, TX, TA, TB) { return _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBXAC() (TC, TB, TX, TA, TC) { return _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBXBX() (TC, TB, TX, TB, TX) { return _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBXBY() (TC, TB, TX, TB, TY) { return _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBXBZ() (TC, TB, TX, TB, TZ) { return _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBXBW() (TC, TB, TX, TB, TW) { return _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBXBA() (TC, TB, TX, TB, TA) { return _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBXBB() (TC, TB, TX, TB, TB) { return _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBXBC() (TC, TB, TX, TB, TC) { return _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBXCX() (TC, TB, TX, TC, TX) { return _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBXCY() (TC, TB, TX, TC, TY) { return _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBXCZ() (TC, TB, TX, TC, TZ) { return _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBXCW() (TC, TB, TX, TC, TW) { return _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBXCA() (TC, TB, TX, TC, TA) { return _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBXCB() (TC, TB, TX, TC, TB) { return _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBXCC() (TC, TB, TX, TC, TC) { return _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBYXX() (TC, TB, TY, TX, TX) { return _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBYXY() (TC, TB, TY, TX, TY) { return _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBYXZ() (TC, TB, TY, TX, TZ) { return _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBYXW() (TC, TB, TY, TX, TW) { return _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBYXA() (TC, TB, TY, TX, TA) { return _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBYXB() (TC, TB, TY, TX, TB) { return _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBYXC() (TC, TB, TY, TX, TC) { return _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBYYX() (TC, TB, TY, TY, TX) { return _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBYYY() (TC, TB, TY, TY, TY) { return _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBYYZ() (TC, TB, TY, TY, TZ) { return _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBYYW() (TC, TB, TY, TY, TW) { return _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBYYA() (TC, TB, TY, TY, TA) { return _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBYYB() (TC, TB, TY, TY, TB) { return _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBYYC() (TC, TB, TY, TY, TC) { return _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBYZX() (TC, TB, TY, TZ, TX) { return _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBYZY() (TC, TB, TY, TZ, TY) { return _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBYZZ() (TC, TB, TY, TZ, TZ) { return _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBYZW() (TC, TB, TY, TZ, TW) { return _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBYZA() (TC, TB, TY, TZ, TA) { return _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBYZB() (TC, TB, TY, TZ, TB) { return _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBYZC() (TC, TB, TY, TZ, TC) { return _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBYWX() (TC, TB, TY, TW, TX) { return _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBYWY() (TC, TB, TY, TW, TY) { return _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBYWZ() (TC, TB, TY, TW, TZ) { return _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBYWW() (TC, TB, TY, TW, TW) { return _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBYWA() (TC, TB, TY, TW, TA) { return _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBYWB() (TC, TB, TY, TW, TB) { return _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBYWC() (TC, TB, TY, TW, TC) { return _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBYAX() (TC, TB, TY, TA, TX) { return _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBYAY() (TC, TB, TY, TA, TY) { return _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBYAZ() (TC, TB, TY, TA, TZ) { return _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBYAW() (TC, TB, TY, TA, TW) { return _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBYAA() (TC, TB, TY, TA, TA) { return _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBYAB() (TC, TB, TY, TA, TB) { return _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBYAC() (TC, TB, TY, TA, TC) { return _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBYBX() (TC, TB, TY, TB, TX) { return _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBYBY() (TC, TB, TY, TB, TY) { return _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBYBZ() (TC, TB, TY, TB, TZ) { return _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBYBW() (TC, TB, TY, TB, TW) { return _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBYBA() (TC, TB, TY, TB, TA) { return _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBYBB() (TC, TB, TY, TB, TB) { return _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBYBC() (TC, TB, TY, TB, TC) { return _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBYCX() (TC, TB, TY, TC, TX) { return _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBYCY() (TC, TB, TY, TC, TY) { return _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBYCZ() (TC, TB, TY, TC, TZ) { return _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBYCW() (TC, TB, TY, TC, TW) { return _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBYCA() (TC, TB, TY, TC, TA) { return _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBYCB() (TC, TB, TY, TC, TB) { return _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBYCC() (TC, TB, TY, TC, TC) { return _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBZXX() (TC, TB, TZ, TX, TX) { return _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBZXY() (TC, TB, TZ, TX, TY) { return _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBZXZ() (TC, TB, TZ, TX, TZ) { return _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBZXW() (TC, TB, TZ, TX, TW) { return _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBZXA() (TC, TB, TZ, TX, TA) { return _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBZXB() (TC, TB, TZ, TX, TB) { return _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBZXC() (TC, TB, TZ, TX, TC) { return _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBZYX() (TC, TB, TZ, TY, TX) { return _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBZYY() (TC, TB, TZ, TY, TY) { return _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBZYZ() (TC, TB, TZ, TY, TZ) { return _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBZYW() (TC, TB, TZ, TY, TW) { return _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBZYA() (TC, TB, TZ, TY, TA) { return _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBZYB() (TC, TB, TZ, TY, TB) { return _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBZYC() (TC, TB, TZ, TY, TC) { return _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBZZX() (TC, TB, TZ, TZ, TX) { return _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBZZY() (TC, TB, TZ, TZ, TY) { return _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBZZZ() (TC, TB, TZ, TZ, TZ) { return _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBZZW() (TC, TB, TZ, TZ, TW) { return _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBZZA() (TC, TB, TZ, TZ, TA) { return _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBZZB() (TC, TB, TZ, TZ, TB) { return _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBZZC() (TC, TB, TZ, TZ, TC) { return _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBZWX() (TC, TB, TZ, TW, TX) { return _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBZWY() (TC, TB, TZ, TW, TY) { return _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBZWZ() (TC, TB, TZ, TW, TZ) { return _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBZWW() (TC, TB, TZ, TW, TW) { return _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBZWA() (TC, TB, TZ, TW, TA) { return _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBZWB() (TC, TB, TZ, TW, TB) { return _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBZWC() (TC, TB, TZ, TW, TC) { return _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBZAX() (TC, TB, TZ, TA, TX) { return _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBZAY() (TC, TB, TZ, TA, TY) { return _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBZAZ() (TC, TB, TZ, TA, TZ) { return _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBZAW() (TC, TB, TZ, TA, TW) { return _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBZAA() (TC, TB, TZ, TA, TA) { return _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBZAB() (TC, TB, TZ, TA, TB) { return _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBZAC() (TC, TB, TZ, TA, TC) { return _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBZBX() (TC, TB, TZ, TB, TX) { return _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBZBY() (TC, TB, TZ, TB, TY) { return _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBZBZ() (TC, TB, TZ, TB, TZ) { return _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBZBW() (TC, TB, TZ, TB, TW) { return _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBZBA() (TC, TB, TZ, TB, TA) { return _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBZBB() (TC, TB, TZ, TB, TB) { return _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBZBC() (TC, TB, TZ, TB, TC) { return _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBZCX() (TC, TB, TZ, TC, TX) { return _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBZCY() (TC, TB, TZ, TC, TY) { return _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBZCZ() (TC, TB, TZ, TC, TZ) { return _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBZCW() (TC, TB, TZ, TC, TW) { return _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBZCA() (TC, TB, TZ, TC, TA) { return _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBZCB() (TC, TB, TZ, TC, TB) { return _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBZCC() (TC, TB, TZ, TC, TC) { return _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBWXX() (TC, TB, TW, TX, TX) { return _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBWXY() (TC, TB, TW, TX, TY) { return _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBWXZ() (TC, TB, TW, TX, TZ) { return _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBWXW() (TC, TB, TW, TX, TW) { return _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBWXA() (TC, TB, TW, TX, TA) { return _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBWXB() (TC, TB, TW, TX, TB) { return _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBWXC() (TC, TB, TW, TX, TC) { return _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBWYX() (TC, TB, TW, TY, TX) { return _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBWYY() (TC, TB, TW, TY, TY) { return _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBWYZ() (TC, TB, TW, TY, TZ) { return _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBWYW() (TC, TB, TW, TY, TW) { return _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBWYA() (TC, TB, TW, TY, TA) { return _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBWYB() (TC, TB, TW, TY, TB) { return _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBWYC() (TC, TB, TW, TY, TC) { return _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBWZX() (TC, TB, TW, TZ, TX) { return _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBWZY() (TC, TB, TW, TZ, TY) { return _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBWZZ() (TC, TB, TW, TZ, TZ) { return _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBWZW() (TC, TB, TW, TZ, TW) { return _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBWZA() (TC, TB, TW, TZ, TA) { return _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBWZB() (TC, TB, TW, TZ, TB) { return _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBWZC() (TC, TB, TW, TZ, TC) { return _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBWWX() (TC, TB, TW, TW, TX) { return _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBWWY() (TC, TB, TW, TW, TY) { return _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBWWZ() (TC, TB, TW, TW, TZ) { return _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBWWW() (TC, TB, TW, TW, TW) { return _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBWWA() (TC, TB, TW, TW, TA) { return _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBWWB() (TC, TB, TW, TW, TB) { return _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBWWC() (TC, TB, TW, TW, TC) { return _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBWAX() (TC, TB, TW, TA, TX) { return _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBWAY() (TC, TB, TW, TA, TY) { return _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBWAZ() (TC, TB, TW, TA, TZ) { return _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBWAW() (TC, TB, TW, TA, TW) { return _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBWAA() (TC, TB, TW, TA, TA) { return _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBWAB() (TC, TB, TW, TA, TB) { return _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBWAC() (TC, TB, TW, TA, TC) { return _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBWBX() (TC, TB, TW, TB, TX) { return _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBWBY() (TC, TB, TW, TB, TY) { return _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBWBZ() (TC, TB, TW, TB, TZ) { return _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBWBW() (TC, TB, TW, TB, TW) { return _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBWBA() (TC, TB, TW, TB, TA) { return _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBWBB() (TC, TB, TW, TB, TB) { return _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBWBC() (TC, TB, TW, TB, TC) { return _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBWCX() (TC, TB, TW, TC, TX) { return _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBWCY() (TC, TB, TW, TC, TY) { return _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBWCZ() (TC, TB, TW, TC, TZ) { return _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBWCW() (TC, TB, TW, TC, TW) { return _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBWCA() (TC, TB, TW, TC, TA) { return _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBWCB() (TC, TB, TW, TC, TB) { return _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBWCC() (TC, TB, TW, TC, TC) { return _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBAXX() (TC, TB, TA, TX, TX) { return _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBAXY() (TC, TB, TA, TX, TY) { return _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBAXZ() (TC, TB, TA, TX, TZ) { return _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBAXW() (TC, TB, TA, TX, TW) { return _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBAXA() (TC, TB, TA, TX, TA) { return _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBAXB() (TC, TB, TA, TX, TB) { return _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBAXC() (TC, TB, TA, TX, TC) { return _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBAYX() (TC, TB, TA, TY, TX) { return _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBAYY() (TC, TB, TA, TY, TY) { return _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBAYZ() (TC, TB, TA, TY, TZ) { return _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBAYW() (TC, TB, TA, TY, TW) { return _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBAYA() (TC, TB, TA, TY, TA) { return _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBAYB() (TC, TB, TA, TY, TB) { return _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBAYC() (TC, TB, TA, TY, TC) { return _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBAZX() (TC, TB, TA, TZ, TX) { return _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBAZY() (TC, TB, TA, TZ, TY) { return _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBAZZ() (TC, TB, TA, TZ, TZ) { return _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBAZW() (TC, TB, TA, TZ, TW) { return _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBAZA() (TC, TB, TA, TZ, TA) { return _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBAZB() (TC, TB, TA, TZ, TB) { return _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBAZC() (TC, TB, TA, TZ, TC) { return _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBAWX() (TC, TB, TA, TW, TX) { return _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBAWY() (TC, TB, TA, TW, TY) { return _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBAWZ() (TC, TB, TA, TW, TZ) { return _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBAWW() (TC, TB, TA, TW, TW) { return _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBAWA() (TC, TB, TA, TW, TA) { return _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBAWB() (TC, TB, TA, TW, TB) { return _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBAWC() (TC, TB, TA, TW, TC) { return _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBAAX() (TC, TB, TA, TA, TX) { return _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBAAY() (TC, TB, TA, TA, TY) { return _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBAAZ() (TC, TB, TA, TA, TZ) { return _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBAAW() (TC, TB, TA, TA, TW) { return _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBAAA() (TC, TB, TA, TA, TA) { return _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBAAB() (TC, TB, TA, TA, TB) { return _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBAAC() (TC, TB, TA, TA, TC) { return _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBABX() (TC, TB, TA, TB, TX) { return _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBABY() (TC, TB, TA, TB, TY) { return _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBABZ() (TC, TB, TA, TB, TZ) { return _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBABW() (TC, TB, TA, TB, TW) { return _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBABA() (TC, TB, TA, TB, TA) { return _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBABB() (TC, TB, TA, TB, TB) { return _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBABC() (TC, TB, TA, TB, TC) { return _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBACX() (TC, TB, TA, TC, TX) { return _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBACY() (TC, TB, TA, TC, TY) { return _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBACZ() (TC, TB, TA, TC, TZ) { return _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBACW() (TC, TB, TA, TC, TW) { return _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBACA() (TC, TB, TA, TC, TA) { return _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBACB() (TC, TB, TA, TC, TB) { return _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBACC() (TC, TB, TA, TC, TC) { return _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBBXX() (TC, TB, TB, TX, TX) { return _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBBXY() (TC, TB, TB, TX, TY) { return _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBBXZ() (TC, TB, TB, TX, TZ) { return _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBBXW() (TC, TB, TB, TX, TW) { return _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBBXA() (TC, TB, TB, TX, TA) { return _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBBXB() (TC, TB, TB, TX, TB) { return _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBBXC() (TC, TB, TB, TX, TC) { return _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBBYX() (TC, TB, TB, TY, TX) { return _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBBYY() (TC, TB, TB, TY, TY) { return _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBBYZ() (TC, TB, TB, TY, TZ) { return _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBBYW() (TC, TB, TB, TY, TW) { return _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBBYA() (TC, TB, TB, TY, TA) { return _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBBYB() (TC, TB, TB, TY, TB) { return _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBBYC() (TC, TB, TB, TY, TC) { return _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBBZX() (TC, TB, TB, TZ, TX) { return _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBBZY() (TC, TB, TB, TZ, TY) { return _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBBZZ() (TC, TB, TB, TZ, TZ) { return _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBBZW() (TC, TB, TB, TZ, TW) { return _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBBZA() (TC, TB, TB, TZ, TA) { return _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBBZB() (TC, TB, TB, TZ, TB) { return _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBBZC() (TC, TB, TB, TZ, TC) { return _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBBWX() (TC, TB, TB, TW, TX) { return _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBBWY() (TC, TB, TB, TW, TY) { return _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBBWZ() (TC, TB, TB, TW, TZ) { return _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBBWW() (TC, TB, TB, TW, TW) { return _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBBWA() (TC, TB, TB, TW, TA) { return _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBBWB() (TC, TB, TB, TW, TB) { return _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBBWC() (TC, TB, TB, TW, TC) { return _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBBAX() (TC, TB, TB, TA, TX) { return _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBBAY() (TC, TB, TB, TA, TY) { return _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBBAZ() (TC, TB, TB, TA, TZ) { return _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBBAW() (TC, TB, TB, TA, TW) { return _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBBAA() (TC, TB, TB, TA, TA) { return _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBBAB() (TC, TB, TB, TA, TB) { return _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBBAC() (TC, TB, TB, TA, TC) { return _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBBBX() (TC, TB, TB, TB, TX) { return _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBBBY() (TC, TB, TB, TB, TY) { return _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBBBZ() (TC, TB, TB, TB, TZ) { return _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBBBW() (TC, TB, TB, TB, TW) { return _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBBBA() (TC, TB, TB, TB, TA) { return _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBBBB() (TC, TB, TB, TB, TB) { return _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBBBC() (TC, TB, TB, TB, TC) { return _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBBCX() (TC, TB, TB, TC, TX) { return _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBBCY() (TC, TB, TB, TC, TY) { return _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBBCZ() (TC, TB, TB, TC, TZ) { return _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBBCW() (TC, TB, TB, TC, TW) { return _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBBCA() (TC, TB, TB, TC, TA) { return _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBBCB() (TC, TB, TB, TC, TB) { return _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBBCC() (TC, TB, TB, TC, TC) { return _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBCXX() (TC, TB, TC, TX, TX) { return _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBCXY() (TC, TB, TC, TX, TY) { return _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBCXZ() (TC, TB, TC, TX, TZ) { return _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBCXW() (TC, TB, TC, TX, TW) { return _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBCXA() (TC, TB, TC, TX, TA) { return _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBCXB() (TC, TB, TC, TX, TB) { return _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBCXC() (TC, TB, TC, TX, TC) { return _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBCYX() (TC, TB, TC, TY, TX) { return _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBCYY() (TC, TB, TC, TY, TY) { return _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBCYZ() (TC, TB, TC, TY, TZ) { return _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBCYW() (TC, TB, TC, TY, TW) { return _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBCYA() (TC, TB, TC, TY, TA) { return _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBCYB() (TC, TB, TC, TY, TB) { return _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBCYC() (TC, TB, TC, TY, TC) { return _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBCZX() (TC, TB, TC, TZ, TX) { return _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBCZY() (TC, TB, TC, TZ, TY) { return _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBCZZ() (TC, TB, TC, TZ, TZ) { return _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBCZW() (TC, TB, TC, TZ, TW) { return _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBCZA() (TC, TB, TC, TZ, TA) { return _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBCZB() (TC, TB, TC, TZ, TB) { return _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBCZC() (TC, TB, TC, TZ, TC) { return _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBCWX() (TC, TB, TC, TW, TX) { return _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBCWY() (TC, TB, TC, TW, TY) { return _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBCWZ() (TC, TB, TC, TW, TZ) { return _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBCWW() (TC, TB, TC, TW, TW) { return _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBCWA() (TC, TB, TC, TW, TA) { return _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBCWB() (TC, TB, TC, TW, TB) { return _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBCWC() (TC, TB, TC, TW, TC) { return _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBCAX() (TC, TB, TC, TA, TX) { return _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBCAY() (TC, TB, TC, TA, TY) { return _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBCAZ() (TC, TB, TC, TA, TZ) { return _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBCAW() (TC, TB, TC, TA, TW) { return _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBCAA() (TC, TB, TC, TA, TA) { return _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBCAB() (TC, TB, TC, TA, TB) { return _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBCAC() (TC, TB, TC, TA, TC) { return _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBCBX() (TC, TB, TC, TB, TX) { return _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBCBY() (TC, TB, TC, TB, TY) { return _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBCBZ() (TC, TB, TC, TB, TZ) { return _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBCBW() (TC, TB, TC, TB, TW) { return _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBCBA() (TC, TB, TC, TB, TA) { return _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBCBB() (TC, TB, TC, TB, TB) { return _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBCBC() (TC, TB, TC, TB, TC) { return _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBCCX() (TC, TB, TC, TC, TX) { return _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBCCY() (TC, TB, TC, TC, TY) { return _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBCCZ() (TC, TB, TC, TC, TZ) { return _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBCCW() (TC, TB, TC, TC, TW) { return _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBCCA() (TC, TB, TC, TC, TA) { return _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBCCB() (TC, TB, TC, TC, TB) { return _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CBCCC() (TC, TB, TC, TC, TC) { return _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCXXX() (TC, TC, TX, TX, TX) { return _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCXXY() (TC, TC, TX, TX, TY) { return _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCXXZ() (TC, TC, TX, TX, TZ) { return _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCXXW() (TC, TC, TX, TX, TW) { return _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCXXA() (TC, TC, TX, TX, TA) { return _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCXXB() (TC, TC, TX, TX, TB) { return _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCXXC() (TC, TC, TX, TX, TC) { return _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCXYX() (TC, TC, TX, TY, TX) { return _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCXYY() (TC, TC, TX, TY, TY) { return _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCXYZ() (TC, TC, TX, TY, TZ) { return _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCXYW() (TC, TC, TX, TY, TW) { return _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCXYA() (TC, TC, TX, TY, TA) { return _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCXYB() (TC, TC, TX, TY, TB) { return _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCXYC() (TC, TC, TX, TY, TC) { return _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCXZX() (TC, TC, TX, TZ, TX) { return _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCXZY() (TC, TC, TX, TZ, TY) { return _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCXZZ() (TC, TC, TX, TZ, TZ) { return _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCXZW() (TC, TC, TX, TZ, TW) { return _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCXZA() (TC, TC, TX, TZ, TA) { return _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCXZB() (TC, TC, TX, TZ, TB) { return _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCXZC() (TC, TC, TX, TZ, TC) { return _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCXWX() (TC, TC, TX, TW, TX) { return _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCXWY() (TC, TC, TX, TW, TY) { return _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCXWZ() (TC, TC, TX, TW, TZ) { return _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCXWW() (TC, TC, TX, TW, TW) { return _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCXWA() (TC, TC, TX, TW, TA) { return _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCXWB() (TC, TC, TX, TW, TB) { return _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCXWC() (TC, TC, TX, TW, TC) { return _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCXAX() (TC, TC, TX, TA, TX) { return _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCXAY() (TC, TC, TX, TA, TY) { return _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCXAZ() (TC, TC, TX, TA, TZ) { return _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCXAW() (TC, TC, TX, TA, TW) { return _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCXAA() (TC, TC, TX, TA, TA) { return _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCXAB() (TC, TC, TX, TA, TB) { return _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCXAC() (TC, TC, TX, TA, TC) { return _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCXBX() (TC, TC, TX, TB, TX) { return _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCXBY() (TC, TC, TX, TB, TY) { return _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCXBZ() (TC, TC, TX, TB, TZ) { return _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCXBW() (TC, TC, TX, TB, TW) { return _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCXBA() (TC, TC, TX, TB, TA) { return _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCXBB() (TC, TC, TX, TB, TB) { return _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCXBC() (TC, TC, TX, TB, TC) { return _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCXCX() (TC, TC, TX, TC, TX) { return _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCXCY() (TC, TC, TX, TC, TY) { return _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCXCZ() (TC, TC, TX, TC, TZ) { return _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCXCW() (TC, TC, TX, TC, TW) { return _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCXCA() (TC, TC, TX, TC, TA) { return _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCXCB() (TC, TC, TX, TC, TB) { return _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCXCC() (TC, TC, TX, TC, TC) { return _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCYXX() (TC, TC, TY, TX, TX) { return _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCYXY() (TC, TC, TY, TX, TY) { return _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCYXZ() (TC, TC, TY, TX, TZ) { return _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCYXW() (TC, TC, TY, TX, TW) { return _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCYXA() (TC, TC, TY, TX, TA) { return _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCYXB() (TC, TC, TY, TX, TB) { return _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCYXC() (TC, TC, TY, TX, TC) { return _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCYYX() (TC, TC, TY, TY, TX) { return _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCYYY() (TC, TC, TY, TY, TY) { return _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCYYZ() (TC, TC, TY, TY, TZ) { return _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCYYW() (TC, TC, TY, TY, TW) { return _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCYYA() (TC, TC, TY, TY, TA) { return _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCYYB() (TC, TC, TY, TY, TB) { return _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCYYC() (TC, TC, TY, TY, TC) { return _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCYZX() (TC, TC, TY, TZ, TX) { return _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCYZY() (TC, TC, TY, TZ, TY) { return _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCYZZ() (TC, TC, TY, TZ, TZ) { return _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCYZW() (TC, TC, TY, TZ, TW) { return _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCYZA() (TC, TC, TY, TZ, TA) { return _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCYZB() (TC, TC, TY, TZ, TB) { return _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCYZC() (TC, TC, TY, TZ, TC) { return _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCYWX() (TC, TC, TY, TW, TX) { return _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCYWY() (TC, TC, TY, TW, TY) { return _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCYWZ() (TC, TC, TY, TW, TZ) { return _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCYWW() (TC, TC, TY, TW, TW) { return _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCYWA() (TC, TC, TY, TW, TA) { return _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCYWB() (TC, TC, TY, TW, TB) { return _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCYWC() (TC, TC, TY, TW, TC) { return _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCYAX() (TC, TC, TY, TA, TX) { return _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCYAY() (TC, TC, TY, TA, TY) { return _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCYAZ() (TC, TC, TY, TA, TZ) { return _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCYAW() (TC, TC, TY, TA, TW) { return _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCYAA() (TC, TC, TY, TA, TA) { return _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCYAB() (TC, TC, TY, TA, TB) { return _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCYAC() (TC, TC, TY, TA, TC) { return _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCYBX() (TC, TC, TY, TB, TX) { return _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCYBY() (TC, TC, TY, TB, TY) { return _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCYBZ() (TC, TC, TY, TB, TZ) { return _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCYBW() (TC, TC, TY, TB, TW) { return _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCYBA() (TC, TC, TY, TB, TA) { return _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCYBB() (TC, TC, TY, TB, TB) { return _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCYBC() (TC, TC, TY, TB, TC) { return _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCYCX() (TC, TC, TY, TC, TX) { return _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCYCY() (TC, TC, TY, TC, TY) { return _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCYCZ() (TC, TC, TY, TC, TZ) { return _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCYCW() (TC, TC, TY, TC, TW) { return _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCYCA() (TC, TC, TY, TC, TA) { return _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCYCB() (TC, TC, TY, TC, TB) { return _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCYCC() (TC, TC, TY, TC, TC) { return _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCZXX() (TC, TC, TZ, TX, TX) { return _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCZXY() (TC, TC, TZ, TX, TY) { return _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCZXZ() (TC, TC, TZ, TX, TZ) { return _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCZXW() (TC, TC, TZ, TX, TW) { return _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCZXA() (TC, TC, TZ, TX, TA) { return _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCZXB() (TC, TC, TZ, TX, TB) { return _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCZXC() (TC, TC, TZ, TX, TC) { return _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCZYX() (TC, TC, TZ, TY, TX) { return _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCZYY() (TC, TC, TZ, TY, TY) { return _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCZYZ() (TC, TC, TZ, TY, TZ) { return _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCZYW() (TC, TC, TZ, TY, TW) { return _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCZYA() (TC, TC, TZ, TY, TA) { return _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCZYB() (TC, TC, TZ, TY, TB) { return _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCZYC() (TC, TC, TZ, TY, TC) { return _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCZZX() (TC, TC, TZ, TZ, TX) { return _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCZZY() (TC, TC, TZ, TZ, TY) { return _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCZZZ() (TC, TC, TZ, TZ, TZ) { return _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCZZW() (TC, TC, TZ, TZ, TW) { return _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCZZA() (TC, TC, TZ, TZ, TA) { return _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCZZB() (TC, TC, TZ, TZ, TB) { return _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCZZC() (TC, TC, TZ, TZ, TC) { return _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCZWX() (TC, TC, TZ, TW, TX) { return _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCZWY() (TC, TC, TZ, TW, TY) { return _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCZWZ() (TC, TC, TZ, TW, TZ) { return _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCZWW() (TC, TC, TZ, TW, TW) { return _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCZWA() (TC, TC, TZ, TW, TA) { return _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCZWB() (TC, TC, TZ, TW, TB) { return _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCZWC() (TC, TC, TZ, TW, TC) { return _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCZAX() (TC, TC, TZ, TA, TX) { return _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCZAY() (TC, TC, TZ, TA, TY) { return _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCZAZ() (TC, TC, TZ, TA, TZ) { return _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCZAW() (TC, TC, TZ, TA, TW) { return _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCZAA() (TC, TC, TZ, TA, TA) { return _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCZAB() (TC, TC, TZ, TA, TB) { return _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCZAC() (TC, TC, TZ, TA, TC) { return _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCZBX() (TC, TC, TZ, TB, TX) { return _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCZBY() (TC, TC, TZ, TB, TY) { return _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCZBZ() (TC, TC, TZ, TB, TZ) { return _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCZBW() (TC, TC, TZ, TB, TW) { return _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCZBA() (TC, TC, TZ, TB, TA) { return _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCZBB() (TC, TC, TZ, TB, TB) { return _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCZBC() (TC, TC, TZ, TB, TC) { return _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCZCX() (TC, TC, TZ, TC, TX) { return _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCZCY() (TC, TC, TZ, TC, TY) { return _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCZCZ() (TC, TC, TZ, TC, TZ) { return _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCZCW() (TC, TC, TZ, TC, TW) { return _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCZCA() (TC, TC, TZ, TC, TA) { return _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCZCB() (TC, TC, TZ, TC, TB) { return _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCZCC() (TC, TC, TZ, TC, TC) { return _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCWXX() (TC, TC, TW, TX, TX) { return _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCWXY() (TC, TC, TW, TX, TY) { return _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCWXZ() (TC, TC, TW, TX, TZ) { return _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCWXW() (TC, TC, TW, TX, TW) { return _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCWXA() (TC, TC, TW, TX, TA) { return _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCWXB() (TC, TC, TW, TX, TB) { return _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCWXC() (TC, TC, TW, TX, TC) { return _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCWYX() (TC, TC, TW, TY, TX) { return _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCWYY() (TC, TC, TW, TY, TY) { return _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCWYZ() (TC, TC, TW, TY, TZ) { return _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCWYW() (TC, TC, TW, TY, TW) { return _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCWYA() (TC, TC, TW, TY, TA) { return _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCWYB() (TC, TC, TW, TY, TB) { return _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCWYC() (TC, TC, TW, TY, TC) { return _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCWZX() (TC, TC, TW, TZ, TX) { return _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCWZY() (TC, TC, TW, TZ, TY) { return _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCWZZ() (TC, TC, TW, TZ, TZ) { return _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCWZW() (TC, TC, TW, TZ, TW) { return _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCWZA() (TC, TC, TW, TZ, TA) { return _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCWZB() (TC, TC, TW, TZ, TB) { return _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCWZC() (TC, TC, TW, TZ, TC) { return _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCWWX() (TC, TC, TW, TW, TX) { return _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCWWY() (TC, TC, TW, TW, TY) { return _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCWWZ() (TC, TC, TW, TW, TZ) { return _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCWWW() (TC, TC, TW, TW, TW) { return _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCWWA() (TC, TC, TW, TW, TA) { return _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCWWB() (TC, TC, TW, TW, TB) { return _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCWWC() (TC, TC, TW, TW, TC) { return _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCWAX() (TC, TC, TW, TA, TX) { return _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCWAY() (TC, TC, TW, TA, TY) { return _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCWAZ() (TC, TC, TW, TA, TZ) { return _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCWAW() (TC, TC, TW, TA, TW) { return _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCWAA() (TC, TC, TW, TA, TA) { return _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCWAB() (TC, TC, TW, TA, TB) { return _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCWAC() (TC, TC, TW, TA, TC) { return _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCWBX() (TC, TC, TW, TB, TX) { return _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCWBY() (TC, TC, TW, TB, TY) { return _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCWBZ() (TC, TC, TW, TB, TZ) { return _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCWBW() (TC, TC, TW, TB, TW) { return _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCWBA() (TC, TC, TW, TB, TA) { return _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCWBB() (TC, TC, TW, TB, TB) { return _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCWBC() (TC, TC, TW, TB, TC) { return _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCWCX() (TC, TC, TW, TC, TX) { return _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCWCY() (TC, TC, TW, TC, TY) { return _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCWCZ() (TC, TC, TW, TC, TZ) { return _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCWCW() (TC, TC, TW, TC, TW) { return _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCWCA() (TC, TC, TW, TC, TA) { return _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCWCB() (TC, TC, TW, TC, TB) { return _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCWCC() (TC, TC, TW, TC, TC) { return _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCAXX() (TC, TC, TA, TX, TX) { return _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCAXY() (TC, TC, TA, TX, TY) { return _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCAXZ() (TC, TC, TA, TX, TZ) { return _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCAXW() (TC, TC, TA, TX, TW) { return _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCAXA() (TC, TC, TA, TX, TA) { return _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCAXB() (TC, TC, TA, TX, TB) { return _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCAXC() (TC, TC, TA, TX, TC) { return _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCAYX() (TC, TC, TA, TY, TX) { return _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCAYY() (TC, TC, TA, TY, TY) { return _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCAYZ() (TC, TC, TA, TY, TZ) { return _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCAYW() (TC, TC, TA, TY, TW) { return _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCAYA() (TC, TC, TA, TY, TA) { return _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCAYB() (TC, TC, TA, TY, TB) { return _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCAYC() (TC, TC, TA, TY, TC) { return _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCAZX() (TC, TC, TA, TZ, TX) { return _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCAZY() (TC, TC, TA, TZ, TY) { return _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCAZZ() (TC, TC, TA, TZ, TZ) { return _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCAZW() (TC, TC, TA, TZ, TW) { return _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCAZA() (TC, TC, TA, TZ, TA) { return _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCAZB() (TC, TC, TA, TZ, TB) { return _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCAZC() (TC, TC, TA, TZ, TC) { return _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCAWX() (TC, TC, TA, TW, TX) { return _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCAWY() (TC, TC, TA, TW, TY) { return _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCAWZ() (TC, TC, TA, TW, TZ) { return _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCAWW() (TC, TC, TA, TW, TW) { return _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCAWA() (TC, TC, TA, TW, TA) { return _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCAWB() (TC, TC, TA, TW, TB) { return _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCAWC() (TC, TC, TA, TW, TC) { return _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCAAX() (TC, TC, TA, TA, TX) { return _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCAAY() (TC, TC, TA, TA, TY) { return _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCAAZ() (TC, TC, TA, TA, TZ) { return _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCAAW() (TC, TC, TA, TA, TW) { return _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCAAA() (TC, TC, TA, TA, TA) { return _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCAAB() (TC, TC, TA, TA, TB) { return _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCAAC() (TC, TC, TA, TA, TC) { return _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCABX() (TC, TC, TA, TB, TX) { return _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCABY() (TC, TC, TA, TB, TY) { return _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCABZ() (TC, TC, TA, TB, TZ) { return _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCABW() (TC, TC, TA, TB, TW) { return _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCABA() (TC, TC, TA, TB, TA) { return _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCABB() (TC, TC, TA, TB, TB) { return _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCABC() (TC, TC, TA, TB, TC) { return _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCACX() (TC, TC, TA, TC, TX) { return _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCACY() (TC, TC, TA, TC, TY) { return _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCACZ() (TC, TC, TA, TC, TZ) { return _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCACW() (TC, TC, TA, TC, TW) { return _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCACA() (TC, TC, TA, TC, TA) { return _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCACB() (TC, TC, TA, TC, TB) { return _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCACC() (TC, TC, TA, TC, TC) { return _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCBXX() (TC, TC, TB, TX, TX) { return _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCBXY() (TC, TC, TB, TX, TY) { return _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCBXZ() (TC, TC, TB, TX, TZ) { return _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCBXW() (TC, TC, TB, TX, TW) { return _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCBXA() (TC, TC, TB, TX, TA) { return _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCBXB() (TC, TC, TB, TX, TB) { return _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCBXC() (TC, TC, TB, TX, TC) { return _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCBYX() (TC, TC, TB, TY, TX) { return _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCBYY() (TC, TC, TB, TY, TY) { return _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCBYZ() (TC, TC, TB, TY, TZ) { return _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCBYW() (TC, TC, TB, TY, TW) { return _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCBYA() (TC, TC, TB, TY, TA) { return _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCBYB() (TC, TC, TB, TY, TB) { return _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCBYC() (TC, TC, TB, TY, TC) { return _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCBZX() (TC, TC, TB, TZ, TX) { return _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCBZY() (TC, TC, TB, TZ, TY) { return _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCBZZ() (TC, TC, TB, TZ, TZ) { return _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCBZW() (TC, TC, TB, TZ, TW) { return _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCBZA() (TC, TC, TB, TZ, TA) { return _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCBZB() (TC, TC, TB, TZ, TB) { return _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCBZC() (TC, TC, TB, TZ, TC) { return _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCBWX() (TC, TC, TB, TW, TX) { return _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCBWY() (TC, TC, TB, TW, TY) { return _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCBWZ() (TC, TC, TB, TW, TZ) { return _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCBWW() (TC, TC, TB, TW, TW) { return _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCBWA() (TC, TC, TB, TW, TA) { return _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCBWB() (TC, TC, TB, TW, TB) { return _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCBWC() (TC, TC, TB, TW, TC) { return _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCBAX() (TC, TC, TB, TA, TX) { return _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCBAY() (TC, TC, TB, TA, TY) { return _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCBAZ() (TC, TC, TB, TA, TZ) { return _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCBAW() (TC, TC, TB, TA, TW) { return _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCBAA() (TC, TC, TB, TA, TA) { return _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCBAB() (TC, TC, TB, TA, TB) { return _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCBAC() (TC, TC, TB, TA, TC) { return _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCBBX() (TC, TC, TB, TB, TX) { return _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCBBY() (TC, TC, TB, TB, TY) { return _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCBBZ() (TC, TC, TB, TB, TZ) { return _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCBBW() (TC, TC, TB, TB, TW) { return _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCBBA() (TC, TC, TB, TB, TA) { return _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCBBB() (TC, TC, TB, TB, TB) { return _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCBBC() (TC, TC, TB, TB, TC) { return _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCBCX() (TC, TC, TB, TC, TX) { return _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCBCY() (TC, TC, TB, TC, TY) { return _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCBCZ() (TC, TC, TB, TC, TZ) { return _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCBCW() (TC, TC, TB, TC, TW) { return _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCBCA() (TC, TC, TB, TC, TA) { return _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCBCB() (TC, TC, TB, TC, TB) { return _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCBCC() (TC, TC, TB, TC, TC) { return _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCCXX() (TC, TC, TC, TX, TX) { return _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCCXY() (TC, TC, TC, TX, TY) { return _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCCXZ() (TC, TC, TC, TX, TZ) { return _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCCXW() (TC, TC, TC, TX, TW) { return _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCCXA() (TC, TC, TC, TX, TA) { return _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCCXB() (TC, TC, TC, TX, TB) { return _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCCXC() (TC, TC, TC, TX, TC) { return _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCCYX() (TC, TC, TC, TY, TX) { return _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCCYY() (TC, TC, TC, TY, TY) { return _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCCYZ() (TC, TC, TC, TY, TZ) { return _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCCYW() (TC, TC, TC, TY, TW) { return _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCCYA() (TC, TC, TC, TY, TA) { return _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCCYB() (TC, TC, TC, TY, TB) { return _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCCYC() (TC, TC, TC, TY, TC) { return _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCCZX() (TC, TC, TC, TZ, TX) { return _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCCZY() (TC, TC, TC, TZ, TY) { return _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCCZZ() (TC, TC, TC, TZ, TZ) { return _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCCZW() (TC, TC, TC, TZ, TW) { return _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCCZA() (TC, TC, TC, TZ, TA) { return _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCCZB() (TC, TC, TC, TZ, TB) { return _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCCZC() (TC, TC, TC, TZ, TC) { return _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCCWX() (TC, TC, TC, TW, TX) { return _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCCWY() (TC, TC, TC, TW, TY) { return _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCCWZ() (TC, TC, TC, TW, TZ) { return _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCCWW() (TC, TC, TC, TW, TW) { return _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCCWA() (TC, TC, TC, TW, TA) { return _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCCWB() (TC, TC, TC, TW, TB) { return _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCCWC() (TC, TC, TC, TW, TC) { return _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCCAX() (TC, TC, TC, TA, TX) { return _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCCAY() (TC, TC, TC, TA, TY) { return _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCCAZ() (TC, TC, TC, TA, TZ) { return _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCCAW() (TC, TC, TC, TA, TW) { return _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCCAA() (TC, TC, TC, TA, TA) { return _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCCAB() (TC, TC, TC, TA, TB) { return _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCCAC() (TC, TC, TC, TA, TC) { return _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCCBX() (TC, TC, TC, TB, TX) { return _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCCBY() (TC, TC, TC, TB, TY) { return _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCCBZ() (TC, TC, TC, TB, TZ) { return _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCCBW() (TC, TC, TC, TB, TW) { return _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCCBA() (TC, TC, TC, TB, TA) { return _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCCBB() (TC, TC, TC, TB, TB) { return _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCCBC() (TC, TC, TC, TB, TC) { return _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value(), _v.C.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCCCX() (TC, TC, TC, TC, TX) { return _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.X.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCCCY() (TC, TC, TC, TC, TY) { return _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.Y.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCCCZ() (TC, TC, TC, TC, TZ) { return _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.Z.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCCCW() (TC, TC, TC, TC, TW) { return _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.W.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCCCA() (TC, TC, TC, TC, TA) { return _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.A.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCCCB() (TC, TC, TC, TC, TB) { return _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.B.Value() }
func (_v XYZWABCTyped[TX, TY, TZ, TW, TA, TB, TC]) CCCCC() (TC, TC, TC, TC, TC) { return _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value(), _v.C.Value() }
